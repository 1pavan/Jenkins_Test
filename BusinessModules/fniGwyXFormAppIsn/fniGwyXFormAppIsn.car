<?xml version="1.0" encoding="UTF-8" ?>
<cartridge xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="5.2.1" name="fniGwyXFormAppIsn" type="Cartridge">
	<version>1.0</version>
	<private>
		<summary>
			<service name="fniGwyXFormAppIsnConfig" version="1.0" type="Internal Message">
			</service>
			<service name="NameKeytable" version="1.0" type="Batch Message">
			</service>
			<service name="fniGwyXFormAppIsnFlow" version="1.0" type="Message Flow">
			</service>
			<service name="fniGwyXFormAppIsnInternaltoSwiftblock4" version="1.0" type="Message Flow">
			</service>
			<service name="pModuleStr" version="1.0" type="Internal Message">
			</service>
			<function name="strstr"/>
			<function name="secAddorGetElement"/>
			<function name="BNYM_EndOfTag"/>
			<function name="BNYM_EndOfLine"/>
			<function name="BNYM_ParseMultiLineFormat"/>
			<function name="BNYM_ParseMultiLineFormat"/>
			<function name="BNYM_SerializeMultiLineFormat"/>
			<function name="BNYM_PrepareLine"/>
			<function name="BNYM_GetEmptyStrIfAllSpaces"/>
			<function name="ParseSwiftGeneric"/>
			<function name="ParseSwiftGeneric"/>
			<function name="SerializeSwiftGeneric"/>
			<function name="SerializeSwiftGeneric"/>
			<function name="Get_NoOfLines"/>
			<function name="Get_sending_Bank"/>
			<function name="Get_Sending_TID"/>
			<function name="Get_Tag_Description"/>
			<function name="serialiseMultiLineValue"/>
			<function name="Get_BIC"/>
			<function name="BNYM_GetSenderDetails"/>
			<function name="BNYM_GetBICCode"/>
			<function name="getMsTypeDescription"/>
			<function name="BNYM_EndOfTag_WithRecLen"/>
			<function name="BNYM_EndOfLine_WithRecLen"/>
			<function name="BNYM_ParseMultiLineFormat_WithRecLen"/>
			<function name="BNYM_ParseMultiLineFormat_WithRecLen"/>
			<function name="BNYM_SerializeMultiLineFormat_WithRecLen"/>
			<function name="BNYM_PrepareLine_WithRecLen"/>
			<function name="BNYM_CreditDebit_Length"/>
			<function name="BNYM_Slash1_Length"/>
			<function name="BNYM_PartyIdentifier_Length"/>
			<function name="BNYM_SerializeFields"/>
			<function name="IsSwiftSequenceEmpty"/>
			<function name="IsSwiftSequenceEmpty"/>
			<function name="IsSwiftSequenceEmpty"/>
			<function name="IsSwiftSequenceEmpty"/>
			<function name="IsSwiftSequenceEmpty"/>
			<function name="IsSwiftSequenceEmpty"/>
			<function name="IsSwiftSequenceEmpty"/>
			<function name="IsSwiftSequenceEmpty"/>
			<function name="IsSwiftSequenceEmpty"/>
			<function name="IsSwiftSequenceEmpty"/>
			<function name="IsSwiftSequenceEmpty"/>
			<function name="IsSwiftSequenceEmpty"/>
			<function name="IsSwiftSequenceEmpty"/>
			<function name="IsSwiftSequenceEmpty"/>
			<function name="IsSwiftSequenceEmpty"/>
			<function name="IsSwiftSequenceEmpty"/>
			<function name="IsSwiftSequenceEmpty"/>
			<function name="IsSwiftSequenceEmpty"/>
			<function name="IsSwiftSequenceEmpty"/>
			<function name="IsSwiftSequenceEmpty"/>
			<function name="IsSwiftSequenceEmpty"/>
			<function name="IsSwiftSequenceEmpty"/>
			<function name="IsSwiftSequenceEmpty"/>
			<function name="IsSwiftSequenceEmpty"/>
			<function name="IsSwiftSequenceEmpty"/>
			<function name="IsSwiftSequenceEmpty"/>
			<function name="IsSwiftSequenceEmpty"/>
			<function name="IsSwiftSequenceEmpty"/>
			<function name="IsSwiftSequenceEmpty"/>
			<function name="IsSwiftSequenceEmpty"/>
			<function name="IsSwiftSequenceEmpty"/>
			<function name="IsSwiftSequenceEmpty"/>
			<function name="Swift_Replace_SplChars_onExcep"/>
			<function name="Swift_Replace_SplChars_onExcep_bk"/>
			<function name="replaceInvalidChars_Tag20and21"/>
			<function name="replace_ColonOrHyphenAtStart"/>
			<function name="replaceInvalidChars"/>
			<function name="getReplaceChar"/>
			<function name="set_ExceptionCode"/>
			<function name="constructMTn98Msg"/>
			<function name="setTag20Value"/>
			<function name="SwiftTagProcessing"/>
			<function name="set_ExceptionCodeList"/>
			<function name="Get_Header"/>
			<function name="Get_Trailer"/>
			<function name="ParseOutputDate"/>
			<function name="ParseMonth"/>
			<function name="ParseOutputTime"/>
			<function name="Get_Block3_Header"/>
			<function name="SerializeMultiLines"/>
			<function name="messageFormat"/>
			<function name="getCorrelationData"/>
			<function name="getAsntrnPA"/>
			<function name="posSeek"/>
			<function name="getAsncidFromPA"/>
			<function name="setOFACState"/>
			<function name="getMtstrn"/>
			<function name="getOutputMoudleIndex"/>
			<function name="initBMDef"/>
			<function name="getNewBic8"/>
			<function name="findEndBlock4"/>
			<function name="replaceBic"/>
			<function name="setupTEO"/>
			<function name="checkOutSrc"/>
			<function name="createHeader"/>
			<function name="bmProcess"/>
			<function name="bmProcessConvertBIC"/>
			<function name="addSBlock"/>
			<function name="switchToIBR"/>
			<function name="setupNameKey"/>
			<function name="transformInternalToSwift"/>
		</summary>
	</private>
	<references type="References">
		<reference>
			<type>Cartridge</type>
			<relative-path>..\CommonFunctions.car</relative-path>
			<absolute-path>C:\Users\sys\Desktop\EMX_Source\EMX_Source\BusinessModules\CommonFunctions.car</absolute-path>
		</reference>
		<reference>
			<type>Cartridge</type>
			<relative-path>..\..\Transformation_Flows\BNYInternal\BNYToSwift.car</relative-path>
			<absolute-path>C:\Users\sys\Desktop\EMX_Source\EMX_Source\Transformation_Flows\BNYInternal\BNYToSwift.car</absolute-path>
		</reference>
		<reference>
			<type>Cartridge</type>
			<relative-path>..\..\Transformation_Flows\BNYInternal\BNYToSwiftFunctions.car</relative-path>
			<absolute-path>C:\Users\sys\Desktop\EMX_Source\EMX_Source\Transformation_Flows\BNYInternal\BNYToSwiftFunctions.car</absolute-path>
		</reference>
		<reference>
			<type>Cartridge</type>
			<relative-path>..\..\Transformation_Flows\flow\Transformation Flows.car</relative-path>
			<absolute-path>C:\Users\sys\Desktop\EMX_Source\EMX_Source\Transformation_Flows\flow\Transformation Flows.car</absolute-path>
		</reference>
		<reference>
			<type>Cartridge</type>
			<relative-path>..\..\Transformation_Flows\Messages\MT1-2_2015.car</relative-path>
			<absolute-path>C:\Users\sys\Desktop\EMX_Source\EMX_Source\Transformation_Flows\Messages\MT1-2_2015.car</absolute-path>
		</reference>
		<reference>
			<type>Cartridge</type>
			<relative-path>..\..\Transformation_Flows\Messages\MT1-2_2016.car</relative-path>
			<absolute-path>C:\Users\sys\Desktop\EMX_Source\EMX_Source\Transformation_Flows\Messages\MT1-2_2016.car</absolute-path>
		</reference>
		<reference>
			<type>Cartridge</type>
			<relative-path>..\..\Transformation_Flows\Messages\MT3-4_2015.car</relative-path>
			<absolute-path>C:\Users\sys\Desktop\EMX_Source\EMX_Source\Transformation_Flows\Messages\MT3-4_2015.car</absolute-path>
		</reference>
		<reference>
			<type>Cartridge</type>
			<relative-path>..\..\Transformation_Flows\Messages\MT3-4_2016.car</relative-path>
			<absolute-path>C:\Users\sys\Desktop\EMX_Source\EMX_Source\Transformation_Flows\Messages\MT3-4_2016.car</absolute-path>
		</reference>
		<reference>
			<type>Cartridge</type>
			<relative-path>..\..\Transformation_Flows\Messages\MT5_2015.car</relative-path>
			<absolute-path>C:\Users\sys\Desktop\EMX_Source\EMX_Source\Transformation_Flows\Messages\MT5_2015.car</absolute-path>
		</reference>
		<reference>
			<type>Cartridge</type>
			<relative-path>..\..\Transformation_Flows\Messages\MT5_2016.car</relative-path>
			<absolute-path>C:\Users\sys\Desktop\EMX_Source\EMX_Source\Transformation_Flows\Messages\MT5_2016.car</absolute-path>
		</reference>
		<reference>
			<type>Cartridge</type>
			<relative-path>..\..\Transformation_Flows\Messages\MT6-7_2015.car</relative-path>
			<absolute-path>C:\Users\sys\Desktop\EMX_Source\EMX_Source\Transformation_Flows\Messages\MT6-7_2015.car</absolute-path>
		</reference>
		<reference>
			<type>Cartridge</type>
			<relative-path>..\..\Transformation_Flows\Messages\MT6-7_2016.car</relative-path>
			<absolute-path>C:\Users\sys\Desktop\EMX_Source\EMX_Source\Transformation_Flows\Messages\MT6-7_2016.car</absolute-path>
		</reference>
		<reference>
			<type>Cartridge</type>
			<relative-path>..\..\Transformation_Flows\Messages\MT8-9_2015.car</relative-path>
			<absolute-path>C:\Users\sys\Desktop\EMX_Source\EMX_Source\Transformation_Flows\Messages\MT8-9_2015.car</absolute-path>
		</reference>
		<reference>
			<type>Cartridge</type>
			<relative-path>..\..\Transformation_Flows\Messages\MT8-9_2016.car</relative-path>
			<absolute-path>C:\Users\sys\Desktop\EMX_Source\EMX_Source\Transformation_Flows\Messages\MT8-9_2016.car</absolute-path>
		</reference>
	</references>
	<internalmessage name="fniGwyXFormAppIsnConfig" type="InternalMessage">
		<version>1.0</version>
		<normalizedformat>
			<xpath-namespaces>
				<namespace value="http://www.w3.org/2005/xpath-functions" prefix="fn"/>
				<namespace value="http://www.w3.org/2001/XMLSchema" prefix="xs"/>
			</xpath-namespaces>
			<fields>
				<field xsi:type="InternalMessageFieldType">
					<name>BusinessModuleName</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>-1</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>ApplicationId</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>-1</length>
				</field>
				<field xsi:type="InternalMessageSectionType">
					<name>AsnPrefixList</name>
					<type>Section</type>
					<minoccurs>0</minoccurs>
					<maxoccurs>-1</maxoccurs>
					<fields>
						<field xsi:type="InternalMessageSectionType">
							<name>AsnPrefix</name>
							<type>Section</type>
							<minoccurs>0</minoccurs>
							<maxoccurs>-1</maxoccurs>
							<fields>
								<field xsi:type="InternalMessageFieldType">
									<name>fldval</name>
									<type>String</type>
									<notnull>false</notnull>
									<length>-1</length>
									<platforminfo>
										<platform name="XML">
											<property name="xml-name" value="fldval"/>
											<property name="namespace" value=""/>
											<property name="XMLFieldType" value="value"/>
										</platform>
									</platforminfo>
								</field>
							</fields>
						</field>
					</fields>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>AsnPrefix</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>-1</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>ConvertBic8</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>-1</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>DefaultSvcSvr</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>-1</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>EditCheckBySwift</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>-1</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>PassErrMsgToSwf</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>-1</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>AnnualFormat</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>-1</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>PassArea</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>-1</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>NumberOfOnDemandMQs</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>-1</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>ProcessGapCheck</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>-1</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>SeqNumberStartPos</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>-1</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>SeqNumberLength</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>-1</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>MaximumSequenceNumber</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>-1</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>MaximumGap</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>-1</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>CreateHeaderBlock</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>-1</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>FormatOfBlock3</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>-1</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>ReplaceInvalidChar</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>-1</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>GapCheckBySvc</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>-1</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>TransformInternalFmt</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>-1</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>SupportCIBC</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>-1</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>MainApplicationId</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>-1</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>ReserveAddress</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>-1</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>TransformSwiftToSwift</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>-1</length>
				</field>
				<field xsi:type="InternalMessageSectionType">
					<name>GTMTrnPrefixList</name>
					<type>Section</type>
					<minoccurs>0</minoccurs>
					<maxoccurs>-1</maxoccurs>
					<fields>
						<field xsi:type="InternalMessageFieldType">
							<name>GTMTrnPrefix</name>
							<type>String</type>
							<notnull>false</notnull>
							<length>-1</length>
						</field>
					</fields>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>MessageFormat</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>-1</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>SupportOutSourcing</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>-1</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>OutSrcList</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>-1</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>SupportNameKey</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>-1</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>SupportTEO</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>-1</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>AssignLT</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>-1</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>CorrelationID</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>-1</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>Block4Only</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>-1</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>CheckErrStatusInPassarea</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>-1</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>SwitchToIBR</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>-1</length>
				</field>
				<field xsi:type="InternalMessageSectionType">
					<name>SwiftIBRDefList</name>
					<type>Section</type>
					<minoccurs>0</minoccurs>
					<maxoccurs>1</maxoccurs>
					<fields>
						<field xsi:type="InternalMessageSectionType">
							<name>SwiftIBRDef</name>
							<type>Section</type>
							<minoccurs>0</minoccurs>
							<maxoccurs>-1</maxoccurs>
							<fields>
								<field xsi:type="InternalMessageFieldType">
									<name>MTType</name>
									<type>String</type>
									<notnull>false</notnull>
									<length>-1</length>
								</field>
								<field xsi:type="InternalMessageSectionType">
									<name>BicDefList</name>
									<type>Section</type>
									<minoccurs>0</minoccurs>
									<maxoccurs>-1</maxoccurs>
									<fields>
										<field xsi:type="InternalMessageSectionType">
											<name>BicDef</name>
											<type>Section</type>
											<minoccurs>0</minoccurs>
											<maxoccurs>-1</maxoccurs>
											<fields>
												<field xsi:type="InternalMessageFieldType">
													<name>RcvBic8</name>
													<type>String</type>
													<notnull>false</notnull>
													<length>-1</length>
												</field>
												<field xsi:type="InternalMessageFieldType">
													<name>RcvSubBranch</name>
													<type>String</type>
													<notnull>false</notnull>
													<length>-1</length>
												</field>
												<field xsi:type="InternalMessageFieldType">
													<name>DesApp</name>
													<type>String</type>
													<notnull>false</notnull>
													<length>-1</length>
												</field>
												<field xsi:type="InternalMessageFieldType">
													<name>DesDirection</name>
													<type>String</type>
													<notnull>false</notnull>
													<length>-1</length>
												</field>
											</fields>
										</field>
									</fields>
								</field>
							</fields>
						</field>
					</fields>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>ReceiveRepairedMsg</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>-1</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>ValidRcvBIC8</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>-1</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>SupportGPII</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>-1</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>CreateTAG108</name>
					<type>String</type>
					<notnull>true</notnull>
					<length>-1</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>NumberOfMessagesToDrain</name>
					<type>String</type>
					<notnull>true</notnull>
					<length>-1</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>KeepSwfHeaderInfo</name>
					<type>String</type>
					<notnull>true</notnull>
					<length>-1</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>AlertEmailList</name>
					<type>String</type>
					<notnull>true</notnull>
					<length>-1</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>AlertEmailAddress</name>
					<type>String</type>
					<notnull>true</notnull>
					<length>-1</length>
				</field>
			</fields>
		</normalizedformat>
		<validationrules name="Default" type="ValidationRules">
		</validationrules>
		<elementproperties>
			<propertymap>
				<property name="codegen.java.properties">
					<value>
						<propertymap type="com.tplus.transform.design.PropertiesDef">
							<property name="Java Package Name" value="com.transform.internal.%e"/>
							<property name="Jar Name" value="%c.jar"/>
							<property name="Manifest Entries" value="transformrt.jar"/>
							<property name="Data Source" value=""/>
						</propertymap>
					</value>
				</property>
			</propertymap>
		</elementproperties>
	</internalmessage>
	<externalmessage xsi:type="XMLFormat" type="XMLFormat" version="5.2.1" rulename="NameKeytable" formattype="XMLFormat" >
		<standard>XML</standard>
		<version>1.0</version>
		<xmlfields>
			<xml-options>
				<dtd><![CDATA[fniNameKeyTable.dtd]]></dtd>
				<batch>true</batch>
				<root-tag>FniNameKeyTable</root-tag>
				<record-tag>FniNameKeyTable</record-tag>
				<ignore-fixed-attributes>false</ignore-fixed-attributes>
				<ignore-fixed-elements>false</ignore-fixed-elements>
				<validate>false</validate>
				<validate-with-schema>false</validate-with-schema>
				<namespace-aware>false</namespace-aware>
				<enable-external-entities>false</enable-external-entities>
				<allow-type-substitution>ALWAYS</allow-type-substitution>
				<model-flattener-options>
					<flatten-choice>false</flatten-choice>
					<flatten-optional-group>false</flatten-optional-group>
					<flatten-named-group>false</flatten-named-group>
				</model-flattener-options>
			</xml-options>
			<entity-references>
				<entity-reference>fniNameKeyTable.dtd</entity-reference>
			</entity-references>
			<doc-type-decl>&lt;!DOCTYPE {0} SYSTEM "{1}"&gt;</doc-type-decl>
			<xml-attributes>
				<xml-attribute name="version" value="1.0"/>
				<xml-attribute name="encoding" value="UTF-8"/>
			</xml-attributes>
			<xpath-namespaces>
				<namespace value="http://www.w3.org/2005/xpath-functions" prefix="fn"/>
				<namespace value="http://www.w3.org/2001/XMLSchema" prefix="xs"/>
				<namespace value="java:com.tplus.transform.runtime.swift.SwiftXPathFunctions" prefix="swift"/>
			</xpath-namespaces>
			<headerfields>
				<model>sequence</model>
			</headerfields>
			<datafields>
				<model>sequence</model>
				<field xsi:type="XMLSectionType">
					<name>NameKeyDefList</name>
					<datatype>Section</datatype>
					<minoccurs>1</minoccurs>
					<maxoccurs>1</maxoccurs>
					<node-type>element</node-type>
					<fields>
						<model>sequence</model>
						<field xsi:type="XMLSectionType">
							<name>NameKeyDef</name>
							<datatype>Section</datatype>
							<minoccurs>1</minoccurs>
							<maxoccurs>-1</maxoccurs>
							<node-type>element</node-type>
							<fields>
								<model>sequence</model>
								<field xsi:type="XMLSectionType">
									<name>NameKeyDefGroup1</name>
									<datatype>Section</datatype>
									<minoccurs>0</minoccurs>
									<maxoccurs>-1</maxoccurs>
									<node-type>group</node-type>
									<fields>
										<model>choice</model>
										<field xsi:type="XMLFieldType">
											<name>NameKey</name>
											<datatype>String</datatype>
											<required>false</required>
											<xmltype>string</xmltype>
											<node-type>element</node-type>
										</field>
										<field xsi:type="XMLSectionType">
											<name>RowDefList</name>
											<datatype>Section</datatype>
											<minoccurs>0</minoccurs>
											<maxoccurs>1</maxoccurs>
											<node-type>element</node-type>
											<fields>
												<model>sequence</model>
												<field xsi:type="XMLSectionType">
													<name>RowDef</name>
													<datatype>Section</datatype>
													<minoccurs>1</minoccurs>
													<maxoccurs>-1</maxoccurs>
													<node-type>element</node-type>
													<fields>
														<model>sequence</model>
														<field xsi:type="XMLSectionType">
															<name>RowDefGroup1</name>
															<datatype>Section</datatype>
															<minoccurs>0</minoccurs>
															<maxoccurs>-1</maxoccurs>
															<node-type>group</node-type>
															<fields>
																<model>choice</model>
																<field xsi:type="XMLFieldType">
																	<name>CustomerCode</name>
																	<datatype>String</datatype>
																	<required>false</required>
																	<xmltype>string</xmltype>
																	<node-type>element</node-type>
																</field>
																<field xsi:type="XMLFieldType">
																	<name>MTType</name>
																	<datatype>String</datatype>
																	<required>false</required>
																	<xmltype>string</xmltype>
																	<node-type>element</node-type>
																</field>
																<field xsi:type="XMLFieldType">
																	<name>NameKeyAsn</name>
																	<datatype>String</datatype>
																	<required>false</required>
																	<xmltype>string</xmltype>
																	<node-type>element</node-type>
																</field>
																<field xsi:type="XMLFieldType">
																	<name>NameKeyTrn</name>
																	<datatype>String</datatype>
																	<required>false</required>
																	<xmltype>string</xmltype>
																	<node-type>element</node-type>
																</field>
																<field xsi:type="XMLFieldType">
																	<name>OutputQueue</name>
																	<datatype>String</datatype>
																	<required>false</required>
																	<xmltype>string</xmltype>
																	<node-type>element</node-type>
																</field>
															</fields>
														</field>
													</fields>
												</field>
											</fields>
										</field>
									</fields>
								</field>
							</fields>
						</field>
					</fields>
				</field>
			</datafields>
			<trailerfields>
				<model>sequence</model>
			</trailerfields>
		</xmlfields>
		<validationrules name="Default">
			<hdrvalidationrules>
				<fieldvalidations>
				</fieldvalidations>
			</hdrvalidationrules>
			<datavalidationrules>
				<fieldvalidations>
				</fieldvalidations>
			</datavalidationrules>
			<tlrvalidationrules>
				<fieldvalidations>
				</fieldvalidations>
			</tlrvalidationrules>
		</validationrules>
		<elementproperties>
			<propertymap>
				<property name="codegen.java.properties">
					<value>
						<propertymap type="com.tplus.transform.design.PropertiesDef">
							<property name="Java Package Name" value="com.transform.external.%e"/>
							<property name="Jar Name" value="%c.jar"/>
							<property name="Manifest Entries" value="transformrt.jar xmlrt.jar"/>
							<property name="Data Source" value=""/>
						</propertymap>
					</value>
				</property>
			</propertymap>
		</elementproperties>
	</externalmessage>
	<messageflow name="fniGwyXFormAppIsnFlow" type="MessageFlow">
		<version>1.0</version>
		<transaction>NotRequired</transaction>
		<variables>
			<xpath-namespaces>
				<namespace value="http://www.w3.org/2005/xpath-functions" prefix="fn"/>
				<namespace value="http://www.w3.org/2001/XMLSchema" prefix="xs"/>
				<namespace value="java:com.tplus.transform.runtime.swift.SwiftXPathFunctions" prefix="swift"/>
			</xpath-namespaces>
			<fields>
				<field>
					<name>rawIn</name>
					<type>RawMessage</type>
					<notnull>true</notnull>
					<variabletype>INPUT</variabletype>
				</field>
				<field>
					<name>namekeyTableInput</name>
					<type>RawMessage</type>
					<notnull>true</notnull>
					<variabletype>INPUT</variabletype>
				</field>
				<field>
					<name>fniGwyXFormAppIsnConfig</name>
					<type>DataObject</type>
					<minoccurs>1</minoccurs>
					<maxoccurs>1</maxoccurs>
					<variabletype>INPUT</variabletype>
					<message>fniGwyXFormAppIsnConfig</message>
					<fields>
					</fields>
				</field>
				<field>
					<name>pGwyStr</name>
					<type>DataObject</type>
					<minoccurs>0</minoccurs>
					<maxoccurs>1</maxoccurs>
					<variabletype>LOCAL</variabletype>
					<message>pGwyStr</message>
					<fields>
					</fields>
				</field>
				<field>
					<name>PGWYSTR</name>
					<type>DataObject</type>
					<minoccurs>0</minoccurs>
					<maxoccurs>1</maxoccurs>
					<variabletype>LOCAL</variabletype>
					<message>pGwyStr</message>
					<fields>
					</fields>
				</field>
				<field>
					<name>pModuleStrObj</name>
					<type>DataObject</type>
					<minoccurs>0</minoccurs>
					<maxoccurs>1</maxoccurs>
					<variabletype>LOCAL</variabletype>
					<message>pModuleStr</message>
					<fields>
					</fields>
				</field>
				<field>
					<name>pGwyStrObj</name>
					<type>DataObject</type>
					<minoccurs>0</minoccurs>
					<maxoccurs>1</maxoccurs>
					<variabletype>LOCAL</variabletype>
					<message>pGwyStr</message>
					<fields>
					</fields>
				</field>
				<field>
					<name>namekeyTable</name>
					<type>Section</type>
					<minoccurs>0</minoccurs>
					<maxoccurs>-1</maxoccurs>
					<variabletype>LOCAL</variabletype>
					<message>NameKeytable</message>
					<fields>
					</fields>
				</field>
				<field>
					<name>isnException</name>
					<type>DataObject</type>
					<minoccurs>0</minoccurs>
					<maxoccurs>1</maxoccurs>
					<variabletype>LOCAL</variabletype>
					<message>TransformException</message>
					<fields>
					</fields>
				</field>
				<field>
					<name>rawOutSend</name>
					<type>RawMessage</type>
					<notnull>false</notnull>
					<variabletype>LOCAL</variabletype>
				</field>
				<field>
					<name>ediBinaryOut</name>
					<type>Binary</type>
					<notnull>true</notnull>
					<variabletype>LOCAL</variabletype>
				</field>
				<field>
					<name>binaryIn</name>
					<type>Binary</type>
					<notnull>true</notnull>
					<variabletype>LOCAL</variabletype>
				</field>
				<field>
					<name>binaryOut</name>
					<type>String</type>
					<notnull>true</notnull>
					<length>-1</length>
					<variabletype>LOCAL</variabletype>
				</field>
				<field>
					<name>swiftIn</name>
					<type>RawMessage</type>
					<notnull>false</notnull>
					<variabletype>LOCAL</variabletype>
				</field>
				<field>
					<name>rawInTxt</name>
					<type>String</type>
					<notnull>true</notnull>
					<length>-1</length>
					<variabletype>LOCAL</variabletype>
				</field>
				<field>
					<name>swiftOut</name>
					<type>RawMessage</type>
					<notnull>false</notnull>
					<variabletype>LOCAL</variabletype>
				</field>
				<field>
					<name>rawOut</name>
					<type>RawMessage</type>
					<notnull>false</notnull>
					<variabletype>OUTPUT</variabletype>
				</field>
				<field>
					<name>isnExceptionOutput</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>-1</length>
					<variabletype>OUTPUT</variabletype>
				</field>
				<field>
					<name>status</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>-1</length>
					<variabletype>OUTPUT</variabletype>
				</field>
			</fields>
		</variables>
		<additional-properties>
			<property name="main-flow" value="false"/>
		</additional-properties>
		<flowelement name="Start1" uid="dab9c09b-2b60-41f3-8abe-72a3d3998dde" type="Start" xsi:type="Start" >
			<label>Start</label>
			<description><![CDATA[]]></description>
			<visual>
				<position x="406" y="26"/>
			</visual>
		</flowelement>
		<flowelement name="Stop1" uid="4c032c8f-e315-44e8-b036-6ba89822f02f" type="Stop" xsi:type="Stop" >
			<label>Stop</label>
			<description><![CDATA[]]></description>
			<visual>
				<position x="440" y="787"/>
			</visual>
		</flowelement>
		<flowelement name="Create1" uid="8b099898-b724-48d6-9a2d-a774804d23af" type="Create" xsi:type="Create" >
			<label>%a %n</label>
			<description><![CDATA[]]></description>
			<out>pModuleStrObj</out>
			<message>pModuleStr</message>
			<visual>
				<position x="406" y="77"/>
			</visual>
		</flowelement>
		<flowelement name="Create2" uid="949c06d5-1d1b-4933-bc35-8c263f2a263a" type="Create" xsi:type="Create" >
			<label>%a %n</label>
			<description><![CDATA[]]></description>
			<out>pGwyStrObj</out>
			<message>pGwyStr</message>
			<visual>
				<position x="405" y="140"/>
			</visual>
		</flowelement>
		<flowelement name="Custom1" uid="92c638ab-be98-4459-ab60-f75a4578a806" type="Custom" xsi:type="Custom" >
			<label>Transformation</label>
			<description><![CDATA[]]></description>
			<code><![CDATA[rawInTxt = rawIn.toText();
def block4datapos;
def crpos = rawInTxt.FindFirst("\r");
def lfpos = rawInTxt.FindFirst("\n");
if(crpos != -1 && lfpos != -1) {
    block4datapos = lfpos.ToInt() + ToInt(1);
}
else if(crpos == -1 && lfpos != -1) {
    block4datapos = lfpos.ToInt() + ToInt(1);
}
else {
    block4datapos = PASSAREALEN - 1;
}
rawOut = bmProcess(namekeyTable,pGwyStrObj,pModuleStrObj,fniGwyXFormAppIsnConfig, rawInTxt).ToRawMessage();
if(rawOut.IsNotNull()) {
    if(rawOut.toText() == "{H:{TYP:SWF}}") {
        isnExceptionOutput = "Input Should not be empty";
        status = "Failure";
    }
}
if(rawOut.IsNull()) {
    isnExceptionOutput = "Input Should not be empty";
    status = "Failure";
}
def block4data = Mid(rawIn, block4datapos, Length(rawIn) - block4datapos);
swiftIn = block4data.ToRawMessage();
binaryIn = swiftIn.ToBinary();
]]></code>
			<visual>
				<position x="402" y="271"/>
			</visual>
		</flowelement>
		<flowelement name="If1" uid="b80ea18a-a83c-4e51-b305-7d8f80aa83d1" type="If" xsi:type="If" >
			<label>TransformInternalFmtCheck</label>
			<description><![CDATA[]]></description>
			<condition><![CDATA[fniGwyXFormAppIsnConfig.TransformInternalFmt=="Yes"]]></condition>
			<visual>
				<position x="401" y="356"/>
			</visual>
		</flowelement>
		<flowelement name="Invoke2" uid="691eb440-b5ec-4d2d-8571-dcd742f30b9c" type="Invoke" xsi:type="Invoke" >
			<label>%a %n</label>
			<description><![CDATA[]]></description>
			<name>fniGwyXFormAppIsnInternaltoSwiftblock4</name>
			<cascade-exceptions>false</cascade-exceptions>
			<input>
				<field>
					<name>swiftIn</name>
					<type>Binary</type>
					<value><![CDATA[binaryIn]]></value>
					<notnull>true</notnull>
				</field>
				<field>
					<name>fniGwyXFormAppIsnConfig</name>
					<type>DataObject</type>
					<value><![CDATA[fniGwyXFormAppIsnConfig]]></value>
					<notnull>true</notnull>
				</field>
				<field>
					<name>rawin</name>
					<type>RawMessage</type>
					<value><![CDATA[rawOut]]></value>
					<notnull>true</notnull>
				</field>
			</input>
			<output>
				<field>
					<name>swiftOut</name>
					<type>RawMessage</type>
					<value><![CDATA[rawOut]]></value>
					<notnull>true</notnull>
				</field>
			</output>
			<visual>
				<position x="279" y="445"/>
			</visual>
		</flowelement>
		<flowelement name="If2" uid="aee0a1d4-d89b-4952-9307-3af073255a8b" type="If" xsi:type="If" >
			<label>ApplicationIdEDICheck</label>
			<description><![CDATA[]]></description>
			<condition><![CDATA[fniGwyXFormAppIsnConfig.ApplicationId == "EDI"]]></condition>
			<visual>
				<position x="523" y="536"/>
			</visual>
		</flowelement>
		<flowelement name="Invoke1" uid="6efda14b-cc1a-4c69-a97b-f29cec84e232" type="Invoke" xsi:type="Invoke" >
			<label>%a %n</label>
			<description><![CDATA[]]></description>
			<name>SwiftToSwiftBlock4NV</name>
			<cascade-exceptions>false</cascade-exceptions>
			<input>
				<field>
					<name>rawIn</name>
					<type>Binary</type>
					<value><![CDATA[binaryIn]]></value>
					<notnull>true</notnull>
				</field>
				<field>
					<name>SRYear</name>
					<type>String</type>
					<value><![CDATA[fniGwyXFormAppIsnConfig.AnnualFormat]]></value>
					<notnull>true</notnull>
				</field>
				<field>
					<name>validationFlag</name>
					<type>Boolean</type>
					<value><![CDATA[true]]></value>
					<notnull>true</notnull>
				</field>
				<field>
					<name>serverName</name>
					<type>String</type>
					<value><![CDATA[fniGwyXFormAppIsnConfig.DefaultSvcSvr]]></value>
					<notnull>true</notnull>
				</field>
			</input>
			<output>
				<field>
					<name>status</name>
					<type>Boolean</type>
					<notnull>true</notnull>
				</field>
				<field>
					<name>rawMsgOut</name>
					<type>Binary</type>
					<value><![CDATA[ediBinaryOut]]></value>
					<notnull>true</notnull>
				</field>
				<field>
					<name>exText</name>
					<type>String</type>
					<notnull>true</notnull>
				</field>
				<field>
					<name>exCode</name>
					<type>String</type>
					<notnull>true</notnull>
				</field>
			</output>
			<visual>
				<position x="535" y="649"/>
			</visual>
		</flowelement>
		<flowelement name="Custom3" uid="341027b2-4293-4321-928a-8fd745ba35ae" type="Custom" xsi:type="Custom" >
			<label>Block4SwifttoSwift</label>
			<description><![CDATA[]]></description>
			<code><![CDATA[if(rawOut.IsNotNull()) {
    def block4startpos = rawOut.FindFirst("{4:");
    def headerpos = FindFirst(rawOut, "{4:") + 5;
    def header = Mid(rawOut, 0, headerpos);
    def trailertag = "-}{5:}";
    def trailer = RightStr(rawOut.toText(), "-}{5:}");
    rawOut.SetNull();
    if(isnExceptionOutput.IsNull()) {
        rawOut = Concat(header.toText(), ediBinaryOut.toText(), trailertag, trailer.toText()).ToRawMessage();
    }
}
]]></code>
			<visual>
				<position x="534" y="726"/>
			</visual>
		</flowelement>
		<flowelement name="Parse2" uid="149fc839-948f-4934-a4cd-1103fe895d0e" type="Parse" xsi:type="Parse" >
			<label>%a %n</label>
			<description><![CDATA[]]></description>
			<in>namekeyTableInput</in>
			<out>namekeyTable</out>
			<message>NameKeytable</message>
			<cascade-exceptions>false</cascade-exceptions>
			<visual>
				<position x="401" y="209"/>
			</visual>
		</flowelement>
		<flowelement name="Custom4" uid="bd8e357d-c693-4947-b673-b7dd7ec075ae" type="Custom" xsi:type="Custom" >
			<label>setExceptionVariable</label>
			<description><![CDATA[]]></description>
			<code><![CDATA[isnExceptionOutput = isnException.toText();
status = "FAILURE";
]]></code>
			<visual>
				<position x="784" y="532"/>
			</visual>
		</flowelement>
		<flowelement name="Custom5" uid="7083a921-c044-471b-937a-c97f3ada0163" type="Custom" xsi:type="Custom" >
			<label>rawOutNull?</label>
			<description><![CDATA[]]></description>
			<code><![CDATA[if(rawOut.Length() == 0) {
    isnExceptionOutput = "Input Should not be empty";
    status = "Failure";
}
if(rawOut.IsNotNull()) {
    if(rawOut.toText() == "{H:{TYP:SWF}}") {
        isnExceptionOutput = "Input Should not be empty";
        status = "Failure";
        rawOut.SetNull();
    }
}
]]></code>
			<visual>
				<position x="526" y="439"/>
			</visual>
		</flowelement>
		<link type="Default" xsi:type="Default">
			<outputport uid="dab9c09b-2b60-41f3-8abe-72a3d3998dde" portindex="0"/>
			<inputport uid="8b099898-b724-48d6-9a2d-a774804d23af" portindex="0"/>
			<edge-type>DIRECT</edge-type>
		</link>
		<link type="Default" xsi:type="Default">
			<outputport uid="8b099898-b724-48d6-9a2d-a774804d23af" portindex="1"/>
			<inputport uid="949c06d5-1d1b-4933-bc35-8c263f2a263a" portindex="0"/>
			<edge-type>DIRECT</edge-type>
		</link>
		<link type="Default" xsi:type="Default">
			<outputport uid="92c638ab-be98-4459-ab60-f75a4578a806" portindex="1"/>
			<inputport uid="b80ea18a-a83c-4e51-b305-7d8f80aa83d1" portindex="0"/>
			<edge-type>DIRECT</edge-type>
		</link>
		<link type="Default" xsi:type="Default">
			<outputport uid="b80ea18a-a83c-4e51-b305-7d8f80aa83d1" portindex="1"/>
			<inputport uid="691eb440-b5ec-4d2d-8571-dcd742f30b9c" portindex="0"/>
			<edge-type>ELBOW</edge-type>
		</link>
		<link type="Default" xsi:type="Default">
			<outputport uid="6efda14b-cc1a-4c69-a97b-f29cec84e232" portindex="1"/>
			<inputport uid="341027b2-4293-4321-928a-8fd745ba35ae" portindex="0"/>
			<edge-type>DIRECT</edge-type>
		</link>
		<link type="Default" xsi:type="Default">
			<outputport uid="149fc839-948f-4934-a4cd-1103fe895d0e" portindex="1"/>
			<inputport uid="92c638ab-be98-4459-ab60-f75a4578a806" portindex="0"/>
			<edge-type>DIRECT</edge-type>
		</link>
		<link type="Exception" xsi:type="Exception">
			<message>TransformException</message>
			<out>isnException</out>
			<cascade-exceptions>true</cascade-exceptions>
			<runtime-exceptions>true</runtime-exceptions>
			<outputport uid="149fc839-948f-4934-a4cd-1103fe895d0e" portindex="2"/>
			<inputport uid="bd8e357d-c693-4947-b673-b7dd7ec075ae" portindex="0"/>
			<edge-type>ELBOW</edge-type>
		</link>
		<link type="Default" xsi:type="Default">
			<outputport uid="949c06d5-1d1b-4933-bc35-8c263f2a263a" portindex="1"/>
			<inputport uid="149fc839-948f-4934-a4cd-1103fe895d0e" portindex="0"/>
			<edge-type>DIRECT</edge-type>
		</link>
		<link type="Exception" xsi:type="Exception">
			<message>TransformException</message>
			<out>isnException</out>
			<cascade-exceptions>true</cascade-exceptions>
			<runtime-exceptions>true</runtime-exceptions>
			<outputport uid="92c638ab-be98-4459-ab60-f75a4578a806" portindex="2"/>
			<inputport uid="bd8e357d-c693-4947-b673-b7dd7ec075ae" portindex="0"/>
			<edge-type>ELBOW</edge-type>
		</link>
		<link type="Exception" xsi:type="Exception">
			<message>TransformException</message>
			<out>isnException</out>
			<cascade-exceptions>true</cascade-exceptions>
			<runtime-exceptions>true</runtime-exceptions>
			<outputport uid="691eb440-b5ec-4d2d-8571-dcd742f30b9c" portindex="2"/>
			<inputport uid="bd8e357d-c693-4947-b673-b7dd7ec075ae" portindex="0"/>
			<edge-type>ELBOW</edge-type>
		</link>
		<link type="Exception" xsi:type="Exception">
			<message>TransformException</message>
			<out>isnException</out>
			<cascade-exceptions>true</cascade-exceptions>
			<runtime-exceptions>true</runtime-exceptions>
			<outputport uid="6efda14b-cc1a-4c69-a97b-f29cec84e232" portindex="2"/>
			<inputport uid="bd8e357d-c693-4947-b673-b7dd7ec075ae" portindex="0"/>
			<edge-type>ELBOW</edge-type>
		</link>
		<link type="Default" xsi:type="Default">
			<outputport uid="aee0a1d4-d89b-4952-9307-3af073255a8b" portindex="1"/>
			<inputport uid="6efda14b-cc1a-4c69-a97b-f29cec84e232" portindex="0"/>
			<edge-type>ELBOW</edge-type>
		</link>
		<link type="Default" xsi:type="Default">
			<outputport uid="b80ea18a-a83c-4e51-b305-7d8f80aa83d1" portindex="2"/>
			<inputport uid="7083a921-c044-471b-937a-c97f3ada0163" portindex="0"/>
			<edge-type>ELBOW</edge-type>
		</link>
		<link type="Default" xsi:type="Default">
			<outputport uid="7083a921-c044-471b-937a-c97f3ada0163" portindex="1"/>
			<inputport uid="aee0a1d4-d89b-4952-9307-3af073255a8b" portindex="0"/>
			<edge-type>DIRECT</edge-type>
		</link>
		<link type="Default" xsi:type="Default">
			<outputport uid="691eb440-b5ec-4d2d-8571-dcd742f30b9c" portindex="1"/>
			<inputport uid="4c032c8f-e315-44e8-b036-6ba89822f02f" portindex="0"/>
			<edge-type>DIRECT</edge-type>
		</link>
		<link type="Default" xsi:type="Default">
			<outputport uid="aee0a1d4-d89b-4952-9307-3af073255a8b" portindex="2"/>
			<inputport uid="4c032c8f-e315-44e8-b036-6ba89822f02f" portindex="0"/>
			<edge-type>ELBOW</edge-type>
		</link>
		<link type="Default" xsi:type="Default">
			<outputport uid="341027b2-4293-4321-928a-8fd745ba35ae" portindex="1"/>
			<inputport uid="4c032c8f-e315-44e8-b036-6ba89822f02f" portindex="0"/>
			<edge-type>DIRECT</edge-type>
		</link>
		<link type="Default" xsi:type="Default">
			<outputport uid="bd8e357d-c693-4947-b673-b7dd7ec075ae" portindex="1"/>
			<inputport uid="4c032c8f-e315-44e8-b036-6ba89822f02f" portindex="0"/>
			<edge-type>DIRECT</edge-type>
		</link>
		<visual>
			<bounds x="239" y="13" width="608" height="788"/>
		</visual>
		<elementproperties>
			<propertymap>
				<property name="codegen.java.properties">
					<value>
						<propertymap type="com.tplus.transform.design.PropertiesDef">
							<property name="Java Package Name" value="com.transform.flow.%e"/>
							<property name="Jar Name" value="%c.jar"/>
							<property name="Manifest Entries" value="transformrt.jar"/>
							<property name="Data Source" value=""/>
							<property name="Generate MDB" value="false"/>
						</propertymap>
					</value>
				</property>
			</propertymap>
		</elementproperties>
	</messageflow>
	<messageflow name="fniGwyXFormAppIsnInternaltoSwiftblock4" type="MessageFlow">
		<version>1.0</version>
		<transaction>NotRequired</transaction>
		<variables>
			<xpath-namespaces>
				<namespace value="http://www.w3.org/2005/xpath-functions" prefix="fn"/>
				<namespace value="http://www.w3.org/2001/XMLSchema" prefix="xs"/>
				<namespace value="java:com.tplus.transform.runtime.swift.SwiftXPathFunctions" prefix="swift"/>
			</xpath-namespaces>
			<fields>
				<field>
					<name>swiftIn</name>
					<type>Binary</type>
					<notnull>true</notnull>
					<variabletype>INPUT</variabletype>
				</field>
				<field>
					<name>fniGwyXFormAppIsnConfig</name>
					<type>DataObject</type>
					<minoccurs>1</minoccurs>
					<maxoccurs>1</maxoccurs>
					<variabletype>INPUT</variabletype>
					<message>fniGwyXFormAppIsnConfig</message>
					<fields>
					</fields>
				</field>
				<field>
					<name>rawin</name>
					<type>RawMessage</type>
					<notnull>true</notnull>
					<variabletype>INPUT</variabletype>
				</field>
				<field>
					<name>swiftblock4Out</name>
					<type>Binary</type>
					<notnull>true</notnull>
					<variabletype>LOCAL</variabletype>
				</field>
				<field>
					<name>swiftOut</name>
					<type>RawMessage</type>
					<notnull>true</notnull>
					<variabletype>OUTPUT</variabletype>
				</field>
			</fields>
		</variables>
		<additional-properties>
			<property name="main-flow" value="false"/>
		</additional-properties>
		<flowelement name="Stop1" uid="19bd8997-48e5-4d29-b960-1a761de5a5b1" type="Stop" xsi:type="Stop" >
			<label>Stop</label>
			<description><![CDATA[]]></description>
			<visual>
				<position x="419" y="314"/>
			</visual>
		</flowelement>
		<flowelement name="Start1" uid="4ab6df4d-e0e6-41a3-a680-ca518a03a367" type="Start" xsi:type="Start" >
			<label>Start</label>
			<description><![CDATA[]]></description>
			<visual>
				<position x="418" y="54"/>
			</visual>
		</flowelement>
		<flowelement name="Invoke1" uid="cf00cd3a-225f-4d72-86dc-85f647fcd057" type="Invoke" xsi:type="Invoke" >
			<label>%a %n</label>
			<description><![CDATA[]]></description>
			<name>BNYInternalToSwiftBlock4</name>
			<cascade-exceptions>false</cascade-exceptions>
			<input>
				<field>
					<name>rawMsgInput</name>
					<type>Binary</type>
					<value><![CDATA[swiftIn]]></value>
					<notnull>true</notnull>
				</field>
				<field>
					<name>SRYear</name>
					<type>String</type>
					<value><![CDATA[fniGwyXFormAppIsnConfig.AnnualFormat]]></value>
					<notnull>true</notnull>
				</field>
				<field>
					<name>validationFlag</name>
					<type>Boolean</type>
					<value><![CDATA[true]]></value>
					<notnull>true</notnull>
				</field>
				<field>
					<name>serverName</name>
					<type>String</type>
					<value><![CDATA[fniGwyXFormAppIsnConfig.DefaultSvcSvr]]></value>
					<notnull>true</notnull>
				</field>
			</input>
			<output>
				<field>
					<name>status</name>
					<type>Boolean</type>
					<notnull>true</notnull>
				</field>
				<field>
					<name>rawMsgOut</name>
					<type>Binary</type>
					<value><![CDATA[swiftblock4Out]]></value>
					<notnull>true</notnull>
				</field>
				<field>
					<name>exText</name>
					<type>String</type>
					<notnull>true</notnull>
				</field>
				<field>
					<name>exCode</name>
					<type>String</type>
					<notnull>true</notnull>
				</field>
			</output>
			<visual>
				<position x="414" y="138"/>
			</visual>
		</flowelement>
		<flowelement name="Custom3" uid="f44057e4-64e7-4045-a5c4-8a73b5ee935f" type="Custom" xsi:type="Custom" >
			<label>Block4InternaltoSwift</label>
			<description><![CDATA[]]></description>
			<code><![CDATA[def block4startpos = rawin.FindFirst("{4:");
def headerpos = FindFirst(rawin, "{4:") + 5;
def header = Mid(rawin, 0, headerpos);
def trailerpos = FindFirst(rawin, "-}{5:");
def trailer = Mid(rawin, trailerpos, (rawin.Length() - trailerpos));
swiftOut = Concat(header.toText(), swiftblock4Out.toText(), trailer.toText()).ToRawMessage();

]]></code>
			<visual>
				<position x="415" y="235"/>
			</visual>
		</flowelement>
		<link type="Default" xsi:type="Default">
			<outputport uid="4ab6df4d-e0e6-41a3-a680-ca518a03a367" portindex="0"/>
			<inputport uid="cf00cd3a-225f-4d72-86dc-85f647fcd057" portindex="0"/>
			<edge-type>DIRECT</edge-type>
		</link>
		<link type="Default" xsi:type="Default">
			<outputport uid="cf00cd3a-225f-4d72-86dc-85f647fcd057" portindex="1"/>
			<inputport uid="f44057e4-64e7-4045-a5c4-8a73b5ee935f" portindex="0"/>
			<edge-type>DIRECT</edge-type>
		</link>
		<link type="Default" xsi:type="Default">
			<outputport uid="f44057e4-64e7-4045-a5c4-8a73b5ee935f" portindex="1"/>
			<inputport uid="19bd8997-48e5-4d29-b960-1a761de5a5b1" portindex="0"/>
			<edge-type>DIRECT</edge-type>
		</link>
		<visual>
			<bounds x="356" y="41" width="123" height="287"/>
		</visual>
		<elementproperties>
			<propertymap>
				<property name="codegen.java.properties">
					<value>
						<propertymap type="com.tplus.transform.design.PropertiesDef">
							<property name="Java Package Name" value="com.transform.flow.%e"/>
							<property name="Jar Name" value="%c.jar"/>
							<property name="Manifest Entries" value="transformrt.jar"/>
							<property name="Data Source" value=""/>
							<property name="Generate MDB" value="false"/>
						</propertymap>
					</value>
				</property>
			</propertymap>
		</elementproperties>
	</messageflow>
	<folder name="Function Definitions" type="FunctionDefFolder">
		<FormulaFunctionDef name="messageFormat" type="FormulaFunctionDef">
			<description></description>
			<Category>User Defined</Category>
			<parameterfields>
				<parameterfield>
					<name>fniGwyXFormAppIsnConfig</name>
					<type>DataObject</type>
					<message>fniGwyXFormAppIsnConfig</message>
					<minoccurs>0</minoccurs>
					<maxoccurs>1</maxoccurs>
				</parameterfield>
				<parameterfield>
					<name>input</name>
					<type>String</type>
				</parameterfield>
			</parameterfields>
			<ReturnType>String</ReturnType>
			<Code><![CDATA[if(fniGwyXFormAppIsnConfig.MessageFormat == "Normal") {
    return "INORMALFORMAT";
}
else if(fniGwyXFormAppIsnConfig.MessageFormat == "Standard") {
    return "ISTDFORMAT";
}
else
    return "";
]]></Code>
			<function-type>Formula</function-type>
		</FormulaFunctionDef>
		<FormulaFunctionDef name="getCorrelationData" type="FormulaFunctionDef">
			<description></description>
			<Category>User Defined</Category>
			<parameterfields>
				<parameterfield>
					<name>fniGwyXFormAppIsnConfig</name>
					<type>DataObject</type>
					<message>fniGwyXFormAppIsnConfig</message>
					<minoccurs>0</minoccurs>
					<maxoccurs>1</maxoccurs>
				</parameterfield>
				<parameterfield>
					<name>input</name>
					<type>String</type>
				</parameterfield>
			</parameterfields>
			<ReturnType>String</ReturnType>
			<Code><![CDATA[def corrStartPt;
def pMetaDatal;
def corrStartPtcontent;
def corrEndPt;
def closebraces = "}";
def messageformat = messageFormat(fniGwyXFormAppIsnConfig,input);
def pMetaData;
if(messageformat == "ISTDFORMAT") {
    pMetaData = strstr(input, METADATA);
    if(pMetaData != null) {
        corrStartPt = strstr(pMetaData, CORRID);
        if(corrStartPt != null) {
            corrEndPt = strstr(corrStartPt, "}");
            if(corrEndPt.IsNotNull()) {
                corrStartPtcontent = RightStr(corrStartPt, CORRID).LeftStr("}");
            }
           
        }
        
    }
   
}

if(Val(corrStartPtcontent).Length() == 0) {
    corrStartPtcontent = fniGwyXFormAppIsnConfig.ApplicationId + 
                           FormatDate(Now(), "MMddyyyyHHmmssSSS");
}
return corrStartPtcontent;
]]></Code>
			<function-type>Formula</function-type>
		</FormulaFunctionDef>
		<FormulaFunctionDef name="getAsntrnPA" type="FormulaFunctionDef">
			<description></description>
			<Category>User Defined</Category>
			<parameterfields>
				<parameterfield>
					<name>input</name>
					<type>String</type>
				</parameterfield>
			</parameterfields>
			<ReturnType>String</ReturnType>
			<Code><![CDATA[return posSeek(input, ORGTRNPOS, ORGTRNSEQLEN);]]></Code>
			<function-type>Formula</function-type>
		</FormulaFunctionDef>
		<FormulaFunctionDef name="posSeek" type="FormulaFunctionDef">
			<description></description>
			<Category>User Defined</Category>
			<parameterfields>
				<parameterfield>
					<name>input</name>
					<type>String</type>
				</parameterfield>
				<parameterfield>
					<name>pos</name>
					<type>Integer</type>
				</parameterfield>
				<parameterfield>
					<name>len</name>
					<type>Integer</type>
				</parameterfield>
			</parameterfields>
			<ReturnType>String</ReturnType>
			<Code><![CDATA[def resval = Mid(input, pos, len).Trim();
if(resval.Length() > 0)
    return resval;
else
    return null;
]]></Code>
			<function-type>Formula</function-type>
		</FormulaFunctionDef>
		<FormulaFunctionDef name="getAsncidFromPA" type="FormulaFunctionDef">
			<description></description>
			<Category>User Defined</Category>
			<parameterfields>
				<parameterfield>
					<name>input</name>
					<type>String</type>
				</parameterfield>
			</parameterfields>
			<ReturnType>String</ReturnType>
			<Code><![CDATA[def resval = Mid(input, NAMEKEYCIDINDPOS, 1);
if(resval.Trim().Length() > 0) {
    if(resval == "N") {
        if(Mid(input, NAMEKEYPOS, Length("NOTONCIF")) == "NOTONCIF") {
            return Mid(input, NAMEKEYPOS, NAMEKEYLEN);
        }
        else
            return null;
    }
    else if(resval == "C") {
        return Mid(input, NAMEKEYPOS, CIDLEN);
    }
    else
        return null;
}
else
    return null;
]]></Code>
			<function-type>Formula</function-type>
		</FormulaFunctionDef>
		<FormulaFunctionDef name="setOFACState" type="FormulaFunctionDef">
			<description></description>
			<Category>User Defined</Category>
			<parameterfields>
				<parameterfield>
					<name>input</name>
					<type>String</type>
				</parameterfield>
				<parameterfield>
					<name>fniGwyXFormAppIsnConfig</name>
					<type>DataObject</type>
					<message>fniGwyXFormAppIsnConfig</message>
					<minoccurs>0</minoccurs>
					<maxoccurs>1</maxoccurs>
				</parameterfield>
			</parameterfields>
			<ReturnType>Boolean</ReturnType>
			<Code><![CDATA[def checkOFAC = false;
def ofacPt;
def resval = strstr(input, METADATA);
if(Val(fniGwyXFormAppIsnConfig.MessageFormat) == "Standard") {
    if(resval.IsNotNull()) {
        ofacPt = strstr(resval, OFACIND);
    }
    if(Val(ofacPt).Length() > 0 && At(ofacPt, Length(OFACIND)) == 'Y') {
        checkOFAC = false;
    }
}
return checkOFAC;
]]></Code>
			<function-type>Formula</function-type>
		</FormulaFunctionDef>
		<FormulaFunctionDef name="getMtstrn" type="FormulaFunctionDef">
			<description></description>
			<Category>User Defined</Category>
			<parameterfields>
				<parameterfield>
					<name>input</name>
					<type>String</type>
				</parameterfield>
			</parameterfields>
			<ReturnType>String</ReturnType>
			<Code><![CDATA[def findMTSTRN=findfirst(input,"MTSTRN:");
def resval;
if(findMTSTRN!=-1)
{
resval=rightstr(input,"MTSTRN:").leftstr("\r\n");
return resval;
}
else
return null;
]]></Code>
			<function-type>Formula</function-type>
		</FormulaFunctionDef>
		<FormulaFunctionDef name="getOutputMoudleIndex" type="FormulaFunctionDef">
			<description></description>
			<Category>User Defined</Category>
			<parameterfields>
				<parameterfield>
					<name>PGWYSTR</name>
					<type>DataObject</type>
					<message>pGwyStr</message>
					<minoccurs>0</minoccurs>
					<maxoccurs>1</maxoccurs>
				</parameterfield>
				<parameterfield>
					<name>fniGwyXFormAppIsnConfig</name>
					<type>DataObject</type>
					<message>fniGwyXFormAppIsnConfig</message>
					<minoccurs>0</minoccurs>
					<maxoccurs>1</maxoccurs>
				</parameterfield>
				<parameterfield>
					<name>input</name>
					<type>String</type>
					<required>false</required>
				</parameterfield>
			</parameterfields>
			<ReturnType>Integer</ReturnType>
			<ReturnOptional>true</ReturnOptional>
			<Code><![CDATA[Info("APPISN getOutputMoudleIndex");
Info("started");
def asnprefixlist = fniGwyXFormAppIsnConfig.GetStrings("AsnPrefixList.AsnPrefix.fldval");
def asnprefix = Mid(input, ASNPOS, ASNPREFIXLEN);
if(In(asnprefix, asnprefixlist)) {
    Set(PGWYSTR.outputMessage, input);
    return asnprefixlist.Length();
}
else
    return asnprefixlist.Length();
]]></Code>
			<function-type>Formula</function-type>
		</FormulaFunctionDef>
		<FormulaFunctionDef name="initBMDef" type="FormulaFunctionDef">
			<description></description>
			<Category>User Defined</Category>
			<parameterfields>
				<parameterfield>
					<name>pModuleStr</name>
					<type>DataObject</type>
					<message>pModuleStr</message>
					<minoccurs>0</minoccurs>
					<maxoccurs>1</maxoccurs>
				</parameterfield>
			</parameterfields>
			<ReturnType>Void</ReturnType>
			<Code><![CDATA[pModuleStr.correlationData = "";
pModuleStr.src = "";
pModuleStr.appId = "";
pModuleStr.asnPrefix = "";
pModuleStr.errMsg = "";
pModuleStr.errCode = "";
pModuleStr.gtmAckMsg = "";
pModuleStr.desApp = "";
pModuleStr.rcvBic12 = "";
pModuleStr.block2Tid = "";
pModuleStr.nameKey = "";
pModuleStr.cid = "";
pModuleStr.nameKeyFromPA = "";
pModuleStr.cidFromPA = "";
pModuleStr.orgMTType = "";
pModuleStr.orgTrn = "";
pModuleStr.trnPA = "";
pModuleStr.recvAdd1 = "";
pModuleStr.recvAdd2 = "";
pModuleStr.recvAdd3 = "";
pModuleStr.recvAdd4 = "";
pModuleStr.chrgAdd1 = "";
pModuleStr.chrgAdd2 = "";
pModuleStr.chrgAdd3 = "";
pModuleStr.chrgAdd4 = "";
pModuleStr.origAsn = "";
pModuleStr.timeCompleted = "";
pModuleStr.origDept = "";
pModuleStr.charAcct = "";
pModuleStr.acctNum = "";
pModuleStr.msgId = "";
pModuleStr.nameKeyOutputQueue = "";
pModuleStr.checksum = false;
pModuleStr.useSat = false;
pModuleStr.numberOfIsnBic8s = 0;
pModuleStr.firstTime = true;
pModuleStr.priority = "";
pModuleStr.annualFormat = "";
pModuleStr.lTermIndex = -1;
pModuleStr.maximumGap = 0;
pModuleStr.maximumNumberOfGaps = 0;
pModuleStr.maximumSequenceNumber = 99999;
pModuleStr.numberOfPriorityDef = 0;
pModuleStr.numberOfLTerms = 0;
pModuleStr.numberOfBic8 = 0;
pModuleStr.prodBic8fileName = "";
pModuleStr.bi8ExceptionfileName = "";
pModuleStr.numberOfBic8CvtStr = 0;
pModuleStr.numberOfBic8Excep = 0;
pModuleStr.convertBic8 = false;
pModuleStr.numberOfIsnMTType = 0;
pModuleStr.processGapCheck = 0;
pModuleStr.getGapTable = false;
pModuleStr.passAreaLength = 1200;
pModuleStr.seqNumberLength = "5";
pModuleStr.seqNumberStartPos = "5";
pModuleStr.defaultSvcPort = NOSVC;
pModuleStr.defaultSvcSvr = "";
pModuleStr.editCheckBySwift = true;
pModuleStr.processIBR = true;
pModuleStr.messageFormat = INORMALFORMAT;
pModuleStr.editSvcFailed = false;
pModuleStr.passErrMsgToSwf = false;
pModuleStr.useWebSvc = false;
pModuleStr.svcHandler = "";
pModuleStr.svcTFMHandler = "";
pModuleStr.svcGapCheckHandler = "";
pModuleStr.svcGTMAckHandler = "";
pModuleStr.svcCIFHandler = "";
pModuleStr.desAppPerMsg = "";
pModuleStr.metadfataBuff = "";
pModuleStr.desDirectionPerMsg = "";
pModuleStr.rcvRepMsg = false;
pModuleStr.numberofAppLTerms = 0;
pModuleStr.putGapTable = false;
pModuleStr.forwardPassArea = false;
pModuleStr.asn = "";
pModuleStr.processPassArea = false;
pModuleStr.currentPassAreaIndex = 0;
pModuleStr.numberOfOnDemandMQs = 0;
pModuleStr.createHeaderBlock = false;
pModuleStr.block3Type = IBLOCK3NONE;
pModuleStr.senderBic8 = "";
pModuleStr.validRcvBic8 = "";
pModuleStr.drainMessage = false;
pModuleStr.addPDE = false;
pModuleStr.replaceInvalidChar = false;
pModuleStr.numberOfAlertEmails = 0;
pModuleStr.alertEmailFileName = "";
pModuleStr.invalidPassArea = false;
pModuleStr.numberOfAsnPrefix = 0;
pModuleStr.numberOfTrnPrefix = 0;
pModuleStr.transformInternalFmt = false;
pModuleStr.transformInternalFmtLocal = false;
pModuleStr.failToTransform = false;
pModuleStr.checkOFAC = false;
pModuleStr.mainAppId = "";
pModuleStr.gtmAck = false;
pModuleStr.firstGTMAck = false;
pModuleStr.sendGTMAck = false;
pModuleStr.failToGetGTM = false;
pModuleStr.supportTEO = false;
pModuleStr.handleTEO = false;
pModuleStr.ibrOnly = false;
pModuleStr.supportNameKey = false;
pModuleStr.numberOfNameKeys = 0;
pModuleStr.handleNameKey = false;
pModuleStr.numberOfOutSrc = 0;
pModuleStr.supportOutSrc = false;
pModuleStr.assignLT = true;
pModuleStr.transformSwiftToSwift = false;
pModuleStr.createTag108 = true;
pModuleStr.switchToIBR = false;
pModuleStr.use1AsIBRFlag = true;
pModuleStr.numberOfSwiftIBRStr = 0;
pModuleStr.setSwitchToIBR = false;
pModuleStr.cusIndId = "";
pModuleStr.cifLookup = false;
pModuleStr.trnPrefix = "";
pModuleStr.ourSrcCode = "";
pModuleStr.handleCIBC = false;
pModuleStr.handleOutSrc = false;
pModuleStr.supportCIBC = false;
pModuleStr.keepSwfHeaderInfo = false;
pModuleStr.registerCIFSvc = false;
pModuleStr.block4Only = false;
pModuleStr.numberOfSupportOutSrc = 0;
pModuleStr.noValidation = false;
pModuleStr.checkErrStatusInPassarea = false;
pModuleStr.handleErrInPassarea = false;
pModuleStr.expectedSeq = 0;
pModuleStr.bContinue = true;
pModuleStr.gapCheckBySvc = false;
pModuleStr.numberOfMessagesToDrain = 0;
pModuleStr.countOfMsgDrain = 0;
pModuleStr.reserveAddress = false;
pModuleStr.isFirstMessage = true;
pModuleStr.supportGPII = false;
]]></Code>
			<function-type>Formula</function-type>
		</FormulaFunctionDef>
		<FormulaFunctionDef name="getNewBic8" type="FormulaFunctionDef">
			<description></description>
			<Category>User Defined</Category>
			<parameterfields>
				<parameterfield>
					<name>input</name>
					<type>String</type>
				</parameterfield>
				<parameterfield>
					<name>srcBic8</name>
					<type>String</type>
				</parameterfield>
				<parameterfield>
					<name>boolvalue</name>
					<type>Boolean</type>
				</parameterfield>
			</parameterfields>
			<ReturnType>String</ReturnType>
			<Code><![CDATA[if(boolvalue)
{
def retBic8;
Set(retBic8, srcBic8);
retBic8 = left(retBic8,length(retBic8)-1) + '0';
return retBic8;
}
]]></Code>
			<function-type>Formula</function-type>
		</FormulaFunctionDef>
		<FormulaFunctionDef name="findEndBlock4" type="FormulaFunctionDef">
			<description></description>
			<Category>User Defined</Category>
			<parameterfields>
				<parameterfield>
					<name>pBlock4</name>
					<type>String</type>
				</parameterfield>
			</parameterfields>
			<ReturnType>String</ReturnType>
			<Code><![CDATA[return null;]]></Code>
			<function-type>Formula</function-type>
		</FormulaFunctionDef>
		<FormulaFunctionDef name="replaceBic" type="FormulaFunctionDef">
			<description></description>
			<Category>User Defined</Category>
			<parameterfields>
				<parameterfield>
					<name>bicToFind</name>
					<type>String</type>
				</parameterfield>
				<parameterfield>
					<name>originialBicList</name>
					<type>StringList</type>
				</parameterfield>
				<parameterfield>
					<name>replacebicList</name>
					<type>StringList</type>
				</parameterfield>
			</parameterfields>
			<ReturnType>String</ReturnType>
			<Code><![CDATA[def resbic;

if(bicToFind.IsNotNull() && In(bicToFind, OrigBicList)) {
    for(def i = 0; i < OrigBicList.Length(); ++i) {
        if(OrigBicList[i] == bicToFind) {
          
            resbic = replaceBicList[i];
        }
    }
}
else {
    resbic = bicToFind.Replace(bicToFind.Length() - 1, '0');
}

return resbic;
]]></Code>
			<function-type>Formula</function-type>
		</FormulaFunctionDef>
		<FormulaFunctionDef name="setupTEO" type="FormulaFunctionDef">
			<description></description>
			<Category>User Defined</Category>
			<parameterfields>
				<parameterfield>
					<name>PGWYSTR</name>
					<type>DataObject</type>
					<message>pGwyStr</message>
					<minoccurs>0</minoccurs>
					<maxoccurs>1</maxoccurs>
				</parameterfield>
				<parameterfield>
					<name>pModuleStr</name>
					<type>DataObject</type>
					<message>pModuleStr</message>
					<minoccurs>0</minoccurs>
					<maxoccurs>1</maxoccurs>
				</parameterfield>
				<parameterfield>
					<name>fniGwyXFormAppIsnConfig</name>
					<type>DataObject</type>
					<message>fniGwyXFormAppIsnConfig</message>
					<minoccurs>0</minoccurs>
					<maxoccurs>1</maxoccurs>
				</parameterfield>
				<parameterfield>
					<name>input</name>
					<type>String</type>
					<required>false</required>
				</parameterfield>
			</parameterfields>
			<ReturnType>Boolean</ReturnType>
			<Code><![CDATA[pModuleStr.ibrOnly=false;
if((CharAt(input,SRFLAGPOS)=='M') || (CharAt(input,FSINDPOS)=='E')){
pModuleStr.ibrOnly=true;
}
return pModuleStr.ibrOnly;]]></Code>
			<function-type>Formula</function-type>
		</FormulaFunctionDef>
		<FormulaFunctionDef name="checkOutSrc" type="FormulaFunctionDef">
			<description></description>
			<Category>User Defined</Category>
			<parameterfields>
				<parameterfield>
					<name>PGWYSTR</name>
					<type>DataObject</type>
					<message>pGwyStr</message>
					<minoccurs>0</minoccurs>
					<maxoccurs>1</maxoccurs>
				</parameterfield>
				<parameterfield>
					<name>pModuleStr</name>
					<type>DataObject</type>
					<message>pModuleStr</message>
					<minoccurs>0</minoccurs>
					<maxoccurs>1</maxoccurs>
				</parameterfield>
				<parameterfield>
					<name>fniGwyXFormAppIsnConfig</name>
					<type>DataObject</type>
					<message>fniGwyXFormAppIsnConfig</message>
					<minoccurs>0</minoccurs>
					<maxoccurs>1</maxoccurs>
				</parameterfield>
				<parameterfield>
					<name>input</name>
					<type>String</type>
					<required>false</required>
				</parameterfield>
			</parameterfields>
			<ReturnType>Boolean</ReturnType>
			<Code><![CDATA[def pt;
def pMetaData;
pModuleStr.handleOutSrc = false;
if(fniGwyXFormAppIsnConfig.MessageFormat == "Standard") {
    pMetaData = strstr(PGWYSTR.inputMessage, METADATA);
    if(pMetaData.IsNotNull()) {
        pt = strstr(pMetaData, OUTSRC);
        if(pt.IsNotNull()) {
            Set(pModuleStr.ourSrcCode, Mid(pt, STDOUTSRCCODEPOS, 3));
            if(Compare(pModuleStr.ourSrcCode, "004") != 0) {
                Set(pModuleStr.ourSrcCode, "003");
            }
            Set(pModuleStr.POUTSRCSTR[0].outSrcCode, pModuleStr.ourSrcCode);
            def checkOutSrcTable = true;
            if(checkOutSrcTable) {
                if(pModuleStr.POUTSRCSTR.Length() > 0) {
                    pModuleStr.handleOutSrc = true;
                }
                else {
                    pModuleStr.handleOutSrc = false;
                }
            }
        }
    }
}
else {
    def checkOutSrcTable = true;
    if(checkOutSrcTable) {
        if(pModuleStr.POUTSRCSTR.Length() > 0) {
            pModuleStr.handleOutSrc = true;
        }
        else {
            pModuleStr.handleOutSrc = false;
        }
    }
}
return pModuleStr.handleOutSrc;
]]></Code>
			<function-type>Formula</function-type>
		</FormulaFunctionDef>
		<FormulaFunctionDef name="createHeader" type="FormulaFunctionDef">
			<description></description>
			<Category>User Defined</Category>
			<parameterfields>
				<parameterfield>
					<name>PGWYSTR</name>
					<type>DataObject</type>
					<message>pGwyStr</message>
					<minoccurs>0</minoccurs>
					<maxoccurs>1</maxoccurs>
				</parameterfield>
				<parameterfield>
					<name>pModuleStr</name>
					<type>DataObject</type>
					<message>pModuleStr</message>
					<minoccurs>0</minoccurs>
					<maxoccurs>1</maxoccurs>
				</parameterfield>
				<parameterfield>
					<name>fniGwyXFormAppIsnConfig</name>
					<type>DataObject</type>
					<message>fniGwyXFormAppIsnConfig</message>
					<minoccurs>0</minoccurs>
					<maxoccurs>1</maxoccurs>
				</parameterfield>
				<parameterfield>
					<name>input</name>
					<type>String</type>
				</parameterfield>
			</parameterfields>
			<ReturnType>Void</ReturnType>
			<ReturnOptional>true</ReturnOptional>
			<Code><![CDATA[def header = "";
def isBlank;
def subBranch;
def tBic12;
def rcvBic12;
def strBlock4;
def sortresult;
def pBlock3;
def allBlock3Buf;
def block3Buf;
def pt;
def pBlock2;
def pt1;
def tmpBuf;
def pBlock4;
def inputMessage;
def pBlock2Content;
def pBlock1;
def val;
if(checkOutSrc(PGWYSTR ,pModuleStr, fniGwyXFormAppIsnConfig,input)) {
    header = "{1:F01";
    header = Concat(header, "IRVTUS3N");
    header = Concat(header, "AXXX0000000000");
    header = Concat(header, "{2:I");
    if(input.Length() > (MTTYPEPOS + MTTYPELEN)) {
        header = Concat(header, Mid(input, MTTYPEPOS, MTTYPELEN));
    }
    if(fniGwyXFormAppIsnConfig.ValidRcvBIC8 == "001") {
        header = Concat(header, "IRVTUS3N");
        rcvBic12 = "AXXX";
    }
    else {
    }
    header = Concat(header, "XXXXN}");
    header = Concat(header, "{3:{113:OBNY}{108:");
    if(input.Length() > SWFADDRESSPOS + SWFADDRESSLEN) {
        header = Concat(header, Trim(Mid(input, SWFADDRESSPOS, SWFADDRESSLEN)));
    }
    header = Concat(header, "}}");
    if(fniGwyXFormAppIsnConfig.TransformInternalFmt == "Yes" || 
         fniGwyXFormAppIsnConfig.TransformInternalFmt == "Local") {
        strBlock4 = "{4:\r\n";
        strBlock4 = strBlock4 + Mid(input, PASSAREALEN, ToInt(Length(input) - PASSAREALEN));
        if(strBlock4.Length() >= 2) {
            if(strBlock4.EndsWith("\r\n")) {
                strBlock4 = Concat(strBlock4, "-}{5:}");
            }
            else {
                strBlock4 = Concat(strBlock4, "\r\n-}{5:}");
            }
        }
        else {
            strBlock4 = Concat(strBlock4, "\r\n-}{5:}");
        }
        if(input.Length() >= PASSAREALEN) {
            Set(PGWYSTR.inputMessage, Concat(PGWYSTR.inputMessage, header));
            Set(PGWYSTR.inputMessage, Concat(PGWYSTR.inputMessage, strBlock4));
        }
    }
    else {
        pBlock4 = strstr(Mid(input, PASSAREALEN), "{4:");
        strBlock4 = pBlock4;
        if(input.Length() >= PASSAREALEN) {
            Set(PGWYSTR.inputMessage, Concat(PGWYSTR.inputMessage, header));
            Set(PGWYSTR.inputMessage, Concat(PGWYSTR.inputMessage, strBlock4));
        }
    }
    return;
}
if(fniGwyXFormAppIsnConfig.KeepSwfHeaderInfo == "Yes") {
    if(FindFirst(input, "{1:") != -1) {
        pBlock1 = "{1:" + RightStr(input, "{1:");
    }
    if(FindFirst(input, "{2:") != -1) {
        pBlock2 = "{2:" + RightStr(input, "{2:");
    }
}
header = "{1:F01";
header = Concat(header, "IRVTUS3N");
header = Concat(header, "A");
if(fniGwyXFormAppIsnConfig.KeepSwfHeaderInfo == "Yes") {
    subBranch = Mid(pBlock1, (B1BIC8POS + BIC8LEN + 1), SBCHLEN);
}
else {
    subBranch = Mid(input, HB1SBCHPOS, SBCHLEN);
    isBlank = true;
    if(subBranch.Trim().Length() > 0) {
        isBlank = false;
    }
    if(isBlank) {
        subBranch = "XXX";
    }
}
header = Concat(header, subBranch);
header = Concat(header, "0000000000}");
if(fniGwyXFormAppIsnConfig.KeepSwfHeaderInfo == "Yes") {
    pBlock2Content = Substring(pBlock2, 0, FindFirst(pBlock2, "}")) + "}";
    header = Concat(header, pBlock2Content);
}
else {
    header = Concat(header, "{2:I");
    if(fniGwyXFormAppIsnConfig.CheckErrStatusInPassarea == "Yes") {
        pModuleStr.handleErrInPassarea = false;
        pModuleStr.failToTransform = false;
        if(Compare(Mid(input, ERRSTATUSPOS, (input.Length() - ERRSTATUSPOS)), CASFMTERR) != 0) {
            def mtType;
            pModuleStr.handleErrInPassarea = true;
            pModuleStr.failToTransform = true;
            mtType = Mid(input, MTTYPEPOS, MTTYPELEN);
            mtType = Insert(mtType, 1, "98");
            header = Concat(header, mtType, MTTYPELEN);
        }
        else {
            header = Concat(header, Mid(input, MTTYPEPOS, MTTYPELEN));
        }
    }
    else {
        header = Concat(header, Mid(input, MTTYPEPOS, MTTYPELEN));
    }
    subBranch = Mid(input, (HB2SBCHPOS), SBCHLEN);
    if(pModuleStr.ibrOnly) {
        header = Concat(header, "IRVTUS3N");
        header = Concat(header, "X");
        isBlank = true;
        if(input.Length() > (HB2SBCHPOS + SBCHLEN)) {
            subBranch = Mid(input, HB2SBCHPOS, SBCHLEN);
        }
        if(subBranch.Trim().Length() >= 1) {
            header = Concat(header, subBranch);
        }
        else {
            header = Concat(header, "XXX");
        }
    }
    else {
        if(input.Length() > (HB2BIC8POS + BIC8LEN)) {
            Set(tBic12, Mid(input, HB2BIC8POS, BIC8LEN));
        }
       
        Set(tBic12, tBic12 + 'X');
        if(input.Length() > (HB2SBCHPOS + SBCHLEN)) {
            subBranch = Mid(input, HB2SBCHPOS, SBCHLEN);
        }
        tBic12 = Concat(tBic12, subBranch.Trim());
        if(Or(Equal(Mid(input, CUSTINDPOS, 1), "S") || Equal(Mid(input, CUSTINDPOS, 1), "Y"))) {
            isBlank = true;
            if(subBranch.Trim().Length() > 0) {
                isBlank = false;
            }
            if(isBlank) {
                tBic12 = Concat(tBic12, "XXX");
            }
        }
        else {
           
            isBlank = false;
            if(tBic12.Length() < BIC12LEN) {
                isBlank = true;
            }
            if(isBlank) {
                if(Compare(rcvBic12, "XXXXXXXXXXXX") != 0) {
                    Set(tBic12, rcvBic12);
                }
                else {
                    isBlank = true;
                    if(subBranch.Trim().Length() > 1) {
                        isBlank = false;
                    }
                    if(isBlank) {
                        tBic12 = Concat(tBic12, "XXX");
                    }
                }
            }
        }
        header = Concat(header, tBic12);
    }
    def block2 = FindFirst(header, "{2:");
    def priobic = Mid(header, block2 + B2ILTPOS,4);
    setcontextproperty("priobic",priobic);
    header = Concat(header, "N}");
}
if(Val(fniGwyXFormAppIsnConfig.FormatOfBlock3) == "Block3Type1") { 
   if(fniGwyXFormAppIsnConfig.CreateTAG108.IsNull() || fniGwyXFormAppIsnConfig.CreateTAG108 != 
                                                          "Yes")
    {
                                                        
        header = Concat(header, "{3:{108:");
        header = Concat(header, Mid(input, TAG108TYP1POS, TAG108LEN));
        header = Concat(header, "}}");
    }
}
else if((Val(fniGwyXFormAppIsnConfig.FormatOfBlock3) == "Block3Type2") || 
          (Val(fniGwyXFormAppIsnConfig.FormatOfBlock3) == "Block3Type3")) {
          
   
    def hasBlock3 = false;
    if(FindFirst(input, BLOCK3) != -1) {

        pBlock3 = BLOCK3 + RightStr(input, BLOCK3);
    }
    if(fniGwyXFormAppIsnConfig.FormatOfBlock3 == "Block3Type3") {
        pt = null;
        if(pBlock3 != null) {
      
            pt = "{113:GTM" + RightStr(pBlock3, "{113:GTM");
        }
    }
    
    if(pBlock3 != null) {
     
        def chkpt1081;
        if(FindFirst(pBlock3, "{108:") != -1) {
        
            chkpt1081 = RightStr(pBlock3, "{108:");
            pt = "{108:" + chkpt1081;
        }
        if(chkpt1081 == null) {
         
            block3Buf = Mid(input, B3T108POS, TAG108LEN);
            block3Buf = block3Buf.Trim();
            if(block3Buf.IsNotNull() && block3Buf.Length() > 0) {
                if(hasBlock3) {
               
                    allBlock3Buf = Concat(allBlock3Buf, "{108:");
                    hasBlock3 = true;
                }
                else {
              
                    allBlock3Buf = Concat(allBlock3Buf, "{3:{108:");
                    hasBlock3 = true;
                }
       
                allBlock3Buf = Concat(allBlock3Buf, block3Buf);
                allBlock3Buf = Concat(allBlock3Buf, "}");
            }
            else {
              
                block3Buf = Concat(block3Buf, Mid(input, TAG108TYP1POS, TAG108LEN));
                block3Buf = block3Buf.Trim();
                if(block3Buf.IsNotNull() && block3Buf.Length() > 0) {
                    if(hasBlock3) {
                        allBlock3Buf = Concat(allBlock3Buf, "{108:");
                      
                        hasBlock3 = true;
                    }
                    else {
                        allBlock3Buf = Concat(allBlock3Buf, "{3:{108:");
                        hasBlock3 = true;
                    
                    }
                    allBlock3Buf = Concat(allBlock3Buf, block3Buf);
                    allBlock3Buf = Concat(allBlock3Buf, "}");
                }
            }
        }
    }
    
    if(pBlock3 != null) {
        pBlock4 = "{4:" + RightStr(input, "{4:");
        if(!hasBlock3) {
            allBlock3Buf = Concat(allBlock3Buf, "{3:");
        }
        allBlock3Buf = Concat(allBlock3Buf, Length(BLOCK3));
        hasBlock3 = true;
    }
    def chkpt1082;
    if(FindFirst(allBlock3Buf, "{108:") != -1) {
        chkpt1082 = RightStr(allBlock3Buf, "{108:");
        pt = "{108:" + chkpt1082;
    }
    if(chkpt1082 == null) {
 
       if(fniGwyXFormAppIsnConfig.CreateTAG108.IsNull() || 
             Val(fniGwyXFormAppIsnConfig.CreateTAG108) != "No")
        {
           
            Set(block3Buf, Mid(input, B3T108POS, TAG108LEN));
            block3Buf = block3Buf.Trim();
            
            
            if(block3Buf.IsNotNull() && block3Buf.Length() > 0) {
                if(hasBlock3) {
                    allBlock3Buf = Concat(allBlock3Buf, "{108:");
                    hasBlock3 = true;
                }
                else {
                    allBlock3Buf = Concat(allBlock3Buf, "{3:{108:");
                    hasBlock3 = true;
                }
                allBlock3Buf = Concat(allBlock3Buf, block3Buf);
                allBlock3Buf = Concat(allBlock3Buf, "}");
               
            }
            else {
                Set(block3Buf, Mid(input, TAG108TYP1POS, TAG108LEN));
                if(block3Buf.IsNotNull() && block3Buf.Length() > 0) {
                    if(hasBlock3) {
                        allBlock3Buf = Concat(allBlock3Buf, "{108:");
                        hasBlock3 = true;
                    }
                    else {
                        allBlock3Buf = Concat(allBlock3Buf, "{3:{108:");
                        hasBlock3 = true;
                    }
                    allBlock3Buf = Concat(allBlock3Buf, block3Buf);
                    allBlock3Buf = Concat(allBlock3Buf, "}");
                   
                }
            }
        }
    }
    def chkpt103;
    if(FindFirst(allBlock3Buf, "{103:") != -1) {
        chkpt103 = RightStr(allBlock3Buf, "{103:");
        pt = "{103:" + RightStr(allBlock3Buf, "{103:");
    }
    if(chkpt103 == null) {
     
        Set(block3Buf, Mid(input, B3T103POS, TAG103LEN));
        block3Buf = block3Buf.Trim();
        if(block3Buf.IsNotNull() && block3Buf.Length() > 0) {
     
            if(allBlock3Buf.IsNull()) {
     
                    Set(allBlock3Buf,concat(allBlock3Buf,"{3:{103:"));
                    Set(allBlock3Buf,concat(allBlock3Buf,block3Buf));
                    Set(allBlock3Buf,concat(allBlock3Buf,"}"));
          }
            else {
                pt1 = allBlock3Buf.Mid(2, 1);
                Set(tmpBuf, pt1);
                
            
             Set(allBlock3Buf,concat(allBlock3Buf,"{103:")) ;
             Set(allBlock3Buf,concat(allBlock3Buf,block3Buf)) ;
             Set(allBlock3Buf,concat(allBlock3Buf,"}")) ;
             Set(allBlock3Buf,concat(allBlock3Buf,tmpBuf)) ;
             
            }
            
            hasBlock3 = true;
        }
    }
    def chkpt113;
    if(FindFirst(allBlock3Buf, "{113:") != -1) {
        chkpt113 = RightStr(allBlock3Buf, "{113:");
        pt = "{113:" + RightStr(allBlock3Buf, "{113:");
    }
    if(chkpt113 == null) {
        Set(block3Buf, Mid(input, B3T113POS, TAG113LEN));
        
        
        isBlank = true;
      
        if(block3Buf.Trim().Length() > 1) {
            isBlank = false;
        }
        
        
        if(!isBlank) {
            if(hasBlock3) {
                pt1 = "{108:" + RightStr(allBlock3Buf, "{108:");
                if(pt1 != null) {
                    Set(tmpBuf, pt1);
                    Set(allBlock3Buf,leftstr(allBlock3Buf,pt1));
                    Set(allBlock3Buf,concat(allBlock3Buf,"{113:"));
                    Set(allBlock3Buf,concat(allBlock3Buf,block3Buf));
                    Set(allBlock3Buf,concat(allBlock3Buf,"}"));
                    Set(allBlock3Buf,concat(allBlock3Buf,tmpBuf));                
                 }
                else {
                   Set(allBlock3Buf,concat(allBlock3Buf,"{113:"));
                    Set(allBlock3Buf,concat(allBlock3Buf,block3Buf));
                    Set(allBlock3Buf,concat(allBlock3Buf,"}"));
                
                }
                hasBlock3 = true;
            }
            else {
     
                   Set(allBlock3Buf,concat(allBlock3Buf,"{113:"));
                    Set(allBlock3Buf,concat(allBlock3Buf,block3Buf));
                    Set(allBlock3Buf,concat(allBlock3Buf,"}"));
                     hasBlock3 = true;
            }
        }
    }
    def chkpt119;
    if(FindFirst(allBlock3Buf, "{119:") != -1) {
        chkpt119 = RightStr(allBlock3Buf, "{119:");
        pt = "{119:" + RightStr(allBlock3Buf, "{119:");
    }
    if(chkpt119 == null) {
        Set(block3Buf, Mid(input, B3T119POS, TAG119LEN));
        block3Buf = block3Buf.Trim();
        if(block3Buf.IsNotNull() && block3Buf.Length() > 0) {
            if(hasBlock3) {
                allBlock3Buf = Concat(allBlock3Buf, "{119:");
                hasBlock3 = true;
            }
            else {
                allBlock3Buf = Concat(allBlock3Buf, "{3:{119:");
                hasBlock3 = true;
            }
            allBlock3Buf = Concat(allBlock3Buf, block3Buf).Concat(allBlock3Buf, "}");
        }
    }
       def pMetaData ;
	   def pMetaDataEnd;
		if (fniGwyXFormAppIsnConfig.SupportGPII=="Yes") {
			pMetaData = strstr(PGWYSTR.inputMessage,METADATA);
			if (isnotnull(pMetaData)) {
				pMetaDataEnd = strstr(pMetaData,"}}");
			}
		}
    
     if (hasBlock3) {
			if (pModuleStr.metadfataBuff.length()==0) {
				header = concat(header, allBlock3Buf);
				header = concat(header,"}");
				
			}
			else {
				allBlock3Buf = concat(allBlock3Buf,pModuleStr.metadfataBuff);
				header = concat(header, allBlock3Buf);
				
			}
		}
		else {
			if (pModuleStr.metadfataBuff.length()==0) {
				allBlock3Buf = concat(allBlock3Buf,pModuleStr.metadfataBuff);
				header = concat(header, allBlock3Buf);
			}
		}
   
   
}
if(fniGwyXFormAppIsnConfig.TransformInternalFmt == "Yes" || 
     fniGwyXFormAppIsnConfig.TransformInternalFmt == "Local") {
    strBlock4 = "{4:\r\n";
    strBlock4 = strBlock4 + Mid(input, ToInt(PASSAREALEN) - 1, Length(input) - ToInt(PASSAREALEN));
    if(Mid(input, PASSAREALEN, Length(input) - PASSAREALEN).Length() > 2) {
        if(strBlock4.EndsWith("\r\n")) {
            strBlock4 = Concat(strBlock4, "-}{5:}");
        }
        else {
            strBlock4 = Concat(strBlock4, "\r\n-}{5:}");
        }
        Set(inputMessage, header);
        inputMessage = Concat(inputMessage, strBlock4);
        PGWYSTR.inputMessage = inputMessage;
    }
}
else if(Val(fniGwyXFormAppIsnConfig.Block4Only) == "Yes") {
   
    pBlock4 = "{4:" + RightStr(input, "{4:");
    Set(strBlock4, pBlock4);
    if(FindFirst(pBlock4, "-}") != -1) {
        Set(inputMessage, header);
        inputMessage = Concat(inputMessage, strBlock4);
        PGWYSTR.inputMessage = inputMessage;
    }
    else {
        
        Set(inputMessage, header);
        inputMessage = Concat(inputMessage, strBlock4);
        PGWYSTR.inputMessage = inputMessage;
    }
}
else {
   
    pBlock4 = Substring(input, 1200);
    Set(strBlock4, "{4:\r\n");
    if(FindFirst(pBlock4, "-}") != -1) {
        Set(inputMessage, header);
        inputMessage = Concat(inputMessage, strBlock4);
        PGWYSTR.inputMessage = inputMessage;
    }
    else {
       
        Set(inputMessage, header);
        inputMessage = Concat(inputMessage, strBlock4);
        PGWYSTR.inputMessage = inputMessage;
    }
    inputMessage = Concat(inputMessage, "-}{5:}");
    PGWYSTR.inputMessage = inputMessage;
}
pt = RightStr(input, "{113:GTM");

]]></Code>
			<function-type>Formula</function-type>
		</FormulaFunctionDef>
		<FormulaFunctionDef name="bmProcess" type="FormulaFunctionDef">
			<description></description>
			<Category>User Defined</Category>
			<parameterfields>
				<parameterfield>
					<name>namekeyTable</name>
					<type>Section</type>
					<message>NameKeytable</message>
					<minoccurs>0</minoccurs>
					<maxoccurs>-1</maxoccurs>
				</parameterfield>
				<parameterfield>
					<name>pGwyStr</name>
					<type>DataObject</type>
					<message>pGwyStr</message>
					<minoccurs>0</minoccurs>
					<maxoccurs>1</maxoccurs>
				</parameterfield>
				<parameterfield>
					<name>pModuleStr</name>
					<type>DataObject</type>
					<message>pModuleStr</message>
					<minoccurs>0</minoccurs>
					<maxoccurs>1</maxoccurs>
				</parameterfield>
				<parameterfield>
					<name>fniGwyXFormAppIsnConfig</name>
					<type>DataObject</type>
					<message>fniGwyXFormAppIsnConfig</message>
					<minoccurs>0</minoccurs>
					<maxoccurs>1</maxoccurs>
				</parameterfield>
				<parameterfield>
					<name>input</name>
					<type>String</type>
				</parameterfield>
			</parameterfields>
			<ReturnType>String</ReturnType>
			<Code><![CDATA[initBMDEF(pModuleStr);
def header = "{H:{TYP:SWF}}";
def msgStart;
def sendIBRToSwift;
def srcBic8;
def pBlock2;
def pBlock3;
def pTag103;
def gpaOrFin;
def cPriority;
def desBic11;
def pBlock4;
def noBlock4;
def pBlock5;
def pBlock4End;
pGwyStr.inputMessage = input;
if(fniGwyXFormAppIsnConfig.TransformInternalFmt == "Yes") {
    pModuleStr.failToTransform = true;
}
else{
pModuleStr.failToTransform = false;
}

if((fniGwyXFormAppIsnConfig.ApplicationId == "MSO"||fniGwyXFormAppIsnConfig.ApplicationId == "MPO")&&isnull(fniGwyXFormAppIsnConfig.MainApplicationId)) {
       Set(pGwyStr.outputMessage, pGwyStr.inputMessage);
         return pGwyStr.outputMessage;
    }
    
 if (fniGwyXFormAppIsnConfig.PassArea=="Yes") {
		pModuleStr.cusIndId = pGwyStr.inputMessage.mid(CUSTINDPOS,1);
	
	}   
	
if (fniGwyXFormAppIsnConfig.TransformInternalFmt == "Yes") {
		transformInternalToSwift(pGwyStr,pModuleStr,fniGwyXFormAppIsnConfig);
		}		
	

if ((fniGwyXFormAppIsnConfig.PassArea=="Yes") && (length(pModuleStr.rcvBic12)==0)) {
		if ((pModuleStr.cusIndId == "b") || (pModuleStr.cusIndId == "B") || (pModuleStr.cusIndId != " ")) {
			if (!pModuleStr.registerCIFSvc) {
				
				
				pModuleStr.registerCIFSvc = true;
			}
			if (pGwyStr.inputMessage.mid(NMKYCIDINDPOS,1) == "C") {
				Set(pModuleStr.cid,pGwyStr.inputMessage.mid(NAMEKEYPOS, CIDLEN));
			}
			else {
				Set(pModuleStr.nameKey,pGwyStr.inputMessage.mid(NAMEKEYPOS,NAMEKEYLEN));
			}
		}
	}		

if (fniGwyXFormAppIsnConfig.SupportNameKey=="Yes") {
		setupNameKey(namekeyTable,pGwyStr,pModuleStr,fniGwyXFormAppIsnConfig,input);
}

if(fniGwyXFormAppIsnConfig.CreateHeaderBlock == "Yes") {
    createHeader(pGwyStr,pModuleStr, fniGwyXFormAppIsnConfig,input);
}
else if (fniGwyXFormAppIsnConfig.SwitchToIBR=="Yes") {
		switchToIBR(pGwyStr,pModuleStr,fniGwyXFormAppIsnConfig,input);
	}

if(pModuleStr.failToTransform) {
    Set(pGwyStr.outputMessage, header);
    
    pGwyStr.outputMessage = Concat(pGwyStr.outputMessage, pGwyStr.inputMessage);
    def addSBlockoutput = addSBlock(pModuleStr,fniGwyXFormAppIsnConfig,input);
    pGwyStr.outputMessage = Concat(pGwyStr.outputMessage, addSBlockoutput);
    if (Val(fniGwyXFormAppIsnConfig.ConvertBic8)=="Yes"){
    def outputMessage = strstr(pGwyStr.outputMessage, BLOCK1);
    def outputMessage1 = strstr(pGwyStr.outputMessage, "{2:");
    def block2pos = FindFirst(pGwyStr.outputMessage, "{2:");

    def block1pos = FindFirst(pGwyStr.outputMessage, "{1:");

    def resbic = bmProcessConvertBIC(outputMessage,B1BIC8POS);

    pGwyStr.outputMessage = Replace(pGwyStr.outputMessage, (block1pos.ToInt() + B1BIC8POS.ToInt()), 
                                    BIC8LEN, resbic);
    pGwyStr.outputMessage = Replace(pGwyStr.outputMessage, (block2pos.ToInt() + B2ILTPOS.ToInt()), 
                                    BIC8LEN, 
                                    bmProcessConvertBIC(outputMessage1, 
                                                         B2ILTPOS));
                                                                                                               }
    return pGwyStr.outputMessage;
}

msgStart = strstr(pGwyStr.inputMessage, BLOCK1);
if(msgStart == null) {
    pGwyStr.gwInstruction = 1;
    Set(pGwyStr.outputMessage, header);
    Set(pGwyStr.outputMessage, Concat(pGwyStr.outputMessage, pGwyStr.inputMessage));
   
    Set(pModuleStr.priority, "L");
    
    def addSBlockOutput = addSBlock(pModuleStr,fniGwyXFormAppIsnConfig,pGwyStr.outputMessage);
    return pGwyStr.outputMessage;
}
gpaOrFin = Mid(msgStart, 3, 3);
def retbic;
Set(srcBic8, Mid(msgStart, B1BIC8POS, BIC8LEN));
if(Val(fniGwyXFormAppIsnConfig.ConvertBic8) == "Yes") {
    def block1bic = Mid(msgStart, B1BIC8POS, BIC8LEN);
    def resbic = replaceBic(block1bic, OrigBicList, replaceBicList);

    msgStart = Replace(msgStart, B1BIC8POS, BIC8LEN, resbic);
}

Set(srcBic8, retbic);

pBlock2 = strstr(pGwyStr.inputMessage, "{2:");
if(pBlock2 == null) {
    pGwyStr.gwInstruction = 1;
    Set(pGwyStr.outputMessage, header);
    Set(pGwyStr.outputMessage, pGwyStr.inputMessage);
    Set(pModuleStr.priority, "L");
    def addSBlockOutput = addSBlock(pModuleStr,fniGwyXFormAppIsnConfig,pGwyStr.outputMessage);
    return pGwyStr.outputMessage;
}
pBlock3 = strstr(pGwyStr.inputMessage, "{3:");
if(pBlock3 != null) {
    pTag103 = strstr(pBlock3, "{103:");
    if(pTag103 != null) {
        sendIBRToSwift = true;
    }
}
cPriority = Mid(pBlock2, PRIORITYPOS, 1);
def block2find = FindFirst(msgStart, "{2:");
if(fniGwyXFormAppIsnConfig.ConvertBic8 == "Yes") {
   def tr = toint(block2find) + toint(B2ILTPOS);
   def block2bic = Mid(msgStart,tr , BIC8LEN);
   def resbic = replaceBic(block2bic, OrigBicList, replaceBicList);
   msgStart = Replace(msgStart, block2find+B2ILTPOS, BIC8LEN, resbic);
   retbic = getNewBic8(pBlock2, desBic11, true);
  
}

pBlock4 = strstr(msgStart, "{4:");
if(pBlock4 == null) {
    noBlock4 = true;
}
pBlock5 = strstr(msgStart, "{5:");
if(pBlock5 == null) {
    if(!noBlock4) {
        if(!Equal(gpaOrFin, "F01")) {
            pBlock4End = strstr(pBlock4, "-}");
            if(pBlock4End == null) {
                pBlock4End = findEndBlock4(pBlock4);
            }
            else {
                pBlock4End = pBlock4End + 2;
            }
        }
        else {
            pBlock4End = findEndBlock4(pBlock4);
        }
    }
    else {
        pBlock4End = strstr(pBlock2, "}");
        pBlock4End = pBlock4End + 1;
    }
}
pGwyStr.outputMessage = header;
if(FindFirst(pBlock4, "-}") != -1) {
    pGwyStr.outputMessage = Concat(pGwyStr.outputMessage, msgStart.LeftStr("-}")) + "-}";
}
else if(Val(msgStart).Length() > 0) {
      pGwyStr.outputMessage = Concat(pGwyStr.outputMessage, msgStart);
}
if(pBlock5 != null) {

}
else {
    pGwyStr.outputMessage = Concat(pGwyStr.outputMessage, "{5:");
    Set(pGwyStr.outputMessage, Concat(pGwyStr.outputMessage, sEnd));
    pGwyStr.outputMessage = Concat(pGwyStr.outputMessage, addSBlock(pModuleStr,fniGwyXFormAppIsnConfig,input));
}

return pGwyStr.outputMessage;
]]></Code>
			<function-type>Formula</function-type>
		</FormulaFunctionDef>
		<FormulaFunctionDef name="bmProcessConvertBIC" type="FormulaFunctionDef">
			<description></description>
			<Category>User Defined</Category>
			<parameterfields>
				<parameterfield>
					<name>outputMessage</name>
					<type>String</type>
					<required>false</required>
				</parameterfield>
				<parameterfield>
					<name>BICPos</name>
					<type>Integer</type>
					<required>false</required>
				</parameterfield>
			</parameterfields>
			<ReturnType>String</ReturnType>
			<Code><![CDATA[def resbic;
def block1bic;
block1bic = Mid(outputMessage, BICPos, BIC8LEN);
resbic = replaceBic(block1bic, OrigBicList, replaceBicList);
return resbic;
]]></Code>
			<function-type>Formula</function-type>
		</FormulaFunctionDef>
		<FormulaFunctionDef name="addSBlock" type="FormulaFunctionDef">
			<description></description>
			<Category>User Defined</Category>
			<parameterfields>
				<parameterfield>
					<name>pModuleStr</name>
					<type>DataObject</type>
					<message>pModuleStr</message>
					<minoccurs>0</minoccurs>
					<maxoccurs>1</maxoccurs>
				</parameterfield>
				<parameterfield>
					<name>fniGwyXFormAppIsnConfig</name>
					<type>DataObject</type>
					<message>fniGwyXFormAppIsnConfig</message>
					<minoccurs>0</minoccurs>
					<maxoccurs>1</maxoccurs>
				</parameterfield>
				<parameterfield>
					<name>input</name>
					<type>String</type>
				</parameterfield>
			</parameterfields>
			<ReturnType>String</ReturnType>
			<Code><![CDATA[
def outputmessage;

Set(outputmessage, sBlock);
Set(outputmessage, Concat(outputmessage, sMsgtrace));
Set(outputmessage, Concat(outputmessage, getCorrelationData(fniGwyXFormAppIsnConfig,input)));
Set(outputmessage, Concat(outputmessage, sEnd));
if(fniGwyXFormAppIsnConfig.ApplicationId.IsNotNull() || 
     fniGwyXFormAppIsnConfig.MainApplicationId.IsNotNull()) {
    Set(outputmessage, Concat(outputmessage, sAppId));
    if(fniGwyXFormAppIsnConfig.MainApplicationId.IsNotNull())
        Set(outputmessage, Concat(outputmessage, fniGwyXFormAppIsnConfig.MainApplicationId));
    else if(fniGwyXFormAppIsnConfig.ApplicationId.IsNotNull())
        Set(outputmessage, Concat(outputmessage, fniGwyXFormAppIsnConfig.ApplicationId));

    Set(outputmessage, Concat(outputmessage, sEnd));
}
Set(outputmessage, Concat(outputmessage, sPrio));
def block2 = FindFirst(input, "{2:");
if(block2 != -1) {
def bic11 = Mid(input, block2 + B2ILTPOS, BIC11LEN);
    bic11 = Replace(bic11, BIC8LEN - 1, '0');
    if(In(bic11, BICList)) {
        Set(outputmessage, Concat(outputmessage, "I"));
    }
    else
        Set(outputmessage, Concat(outputmessage, "H"));
}
else if(fniGwyXFormAppIsnConfig.MainApplicationId=="FTS")
{
def code;


if(getcontextproperty("priobic").length()>0)
{
 code = getcontextproperty("priobic");
}

else{
code = mid(input,HB2BIC8POS,4);

}

def flag = false;
foreach(def bic in BICList){
if(bic.startswith(code))
{
flag=true;
break;
}
}
if(flag)
{
Set(outputmessage, Concat(outputmessage, "I"));
}

else{
Set(outputmessage, Concat(outputmessage, "H"));

}
}

else{
Set(outputmessage, Concat(outputmessage, "H"));
}

Set(outputmessage, Concat(outputmessage, sEnd));
if(fniGwyXFormAppIsnConfig.PassArea == "Yes") {
    Set(outputmessage, Concat(outputmessage, sASN));
    Set(outputmessage, Concat(outputmessage,  posSeek(input, ASNPOS, ASN_LEN)));
    Set(outputmessage, Concat(outputmessage, sEnd));
    

if(posSeek(input, ORGASNPOS, ORIGASNLEN).trim().length()>0){
   Set(outputmessage, Concat(outputmessage, sORIGASN));
    Set(outputmessage, Concat(outputmessage, posSeek(input, ORGASNPOS, ORIGASNLEN)));
    Set(outputmessage, Concat(outputmessage, sEnd));
    }
   
if(posSeek(input, TIMECOMPLETEDPOS, ORIGASNLEN).trim().length()>0){  
    
    Set(outputmessage, Concat(outputmessage, sTIMECMPLT));
    Set(outputmessage, Concat(outputmessage, posSeek(input, TIMECOMPLETEDPOS, ORIGASNLEN)));
    Set(outputmessage, Concat(outputmessage, sEnd));
   }
   
if(posSeek(input, MSGIDPOS, MSGIDLEN).trim().length()>0){     
    Set(outputmessage, Concat(outputmessage, sMSGID));
    Set(outputmessage, Concat(outputmessage, posSeek(input, MSGIDPOS, MSGIDLEN)));
    Set(outputmessage, Concat(outputmessage, sEnd));
   } 
    
    
if(posSeek(input, ORIGDEPTPOS, ORIGDEPTLEN).trim().length()>0){   
    Set(outputmessage, Concat(outputmessage, sORIGDEPT));
    Set(outputmessage, Concat(outputmessage, posSeek(input, ORIGDEPTPOS, ORIGDEPTLEN))+" ");
    Set(outputmessage, Concat(outputmessage, sEnd));
    }
    
   
  
if(posSeek(input, CHRGACCTPOS, CHRGACCTLEN).trim().length()>0){
    Set(outputmessage, Concat(outputmessage, sCHRGACCT));
    Set(outputmessage, Concat(outputmessage,posSeek(input, CHRGACCTPOS, CHRGACCTLEN)));
    Set(outputmessage, Concat(outputmessage, sEnd));

    }
 
if(posSeek(input, ACCTNUMPOS, ACCTNUMLEN).trim().length()>0){       
    Set(outputmessage, Concat(outputmessage, sACCNUM));
    Set(outputmessage, Concat(outputmessage, posSeek(input, ACCTNUMPOS, ACCTNUMLEN)));
    Set(outputmessage, Concat(outputmessage, sEnd));
    }
    
if(posseek(input,ORGTRNPOS,ORGTRNSEQLEN).trim().length()>0){      
    Set(outputmessage, Concat(outputmessage, sTRNPA));
    Set(outputmessage, Concat(outputmessage, posseek(input,ORGTRNPOS,ORGTRNSEQLEN)));
    Set(outputmessage, Concat(outputmessage, sEnd));
    }


if(isnotnull(fniGwyXFormAppIsnConfig.ReserveAddress))
{
if(posSeek(input,RECVADDPOS,ADDRESSLEN).trim().length()>0){ 
    Set(outputmessage, Concat(outputmessage, sRECVADD1));
    Set(outputmessage, Concat(outputmessage, posSeek(input,RECVADDPOS,ADDRESSLEN)));
    Set(outputmessage, Concat(outputmessage, sEnd));
    }

if(posSeek(input, (RECVADDPOS + ADDRESSLEN), ADDRESSLEN).trim().length()>0){         
    Set(outputmessage, Concat(outputmessage, sRECVADD2));
    Set(outputmessage, Concat(outputmessage, posSeek(input, (RECVADDPOS + ADDRESSLEN), ADDRESSLEN)));
    Set(outputmessage, Concat(outputmessage, sEnd));
    }
    
if(posSeek(input, (RECVADDPOS + 2*ADDRESSLEN), ADDRESSLEN).trim().length()>0){    
    Set(outputmessage, Concat(outputmessage, sRECVADD3));
    Set(outputmessage, Concat(outputmessage, posSeek(input, (RECVADDPOS + 2*ADDRESSLEN), ADDRESSLEN)));
    Set(outputmessage, Concat(outputmessage, sEnd));
    }
    
if(posSeek(input, (RECVADDPOS + 3*ADDRESSLEN), ADDRESSLEN).trim().length()>0){       
    Set(outputmessage, Concat(outputmessage, sRECVADD4));
    Set(outputmessage, Concat(outputmessage, posSeek(input, (RECVADDPOS + 3*ADDRESSLEN), ADDRESSLEN)));
    Set(outputmessage, Concat(outputmessage, sEnd));
    }
   
if(posSeek(input,RECVADDPOS,ADDRESSLEN).trim().length()>0){     
    Set(outputmessage, Concat(outputmessage, sCHRGADD1));
    Set(outputmessage, Concat(outputmessage,  posSeek(input,RECVADDPOS,ADDRESSLEN)));
    Set(outputmessage, Concat(outputmessage, sEnd));
    }
    
if(posSeek(input,RECVADDPOS,ADDRESSLEN).trim().length()>0){         
    Set(outputmessage, Concat(outputmessage, sCHRGADD2));
    Set(outputmessage, Concat(outputmessage,  posSeek(input,RECVADDPOS,ADDRESSLEN)));
    Set(outputmessage, Concat(outputmessage, sEnd));
    }
 
if(posSeek(input,RECVADDPOS,ADDRESSLEN).trim().length()>0){           
    Set(outputmessage, Concat(outputmessage, sCHRGADD3));
    Set(outputmessage, Concat(outputmessage, posSeek(input,RECVADDPOS,ADDRESSLEN)));
    Set(outputmessage, Concat(outputmessage, sEnd));
    }

if( posSeek(input,RECVADDPOS,ADDRESSLEN).trim().length()>0){      
    Set(outputmessage, Concat(outputmessage, sCHRGADD4));
    Set(outputmessage, Concat(outputmessage, posSeek(input,RECVADDPOS,ADDRESSLEN)));
    Set(outputmessage, Concat(outputmessage, sEnd));
    }
    
}    
    
if(posseek(input,NAMEKEYPOS,NAMEKEYLEN).trim().length()>0){
    Set(outputmessage, Concat(outputmessage, sNAMEKEY));
    Set(outputmessage, Concat(outputmessage, posseek(input,NAMEKEYPOS,NAMEKEYLEN)));
    Set(outputmessage, Concat(outputmessage, sEnd));
   }
   }
if(setOFACState(input, fniGwyXFormAppIsnConfig)) {
    Set(outputmessage, Concat(outputmessage, sCKOFAC));
    Set(outputmessage, Concat(outputmessage, "Y"));
    Set(outputmessage, Concat(outputmessage, sEnd));
}
else {
    Set(outputmessage, Concat(outputmessage, sCKOFAC));
    Set(outputmessage, Concat(outputmessage, "N"));
    Set(outputmessage, Concat(outputmessage, sEnd));
}
if(fniGwyXFormAppIsnConfig.ReceiveRepairedMsg == "Yes") {
    if(FindFirst(input, "{MTSTRN:") != -1) {
        Set(outputmessage, Concat(outputmessage, sOrgMTSTrn));
        Set(outputmessage, Concat(outputmessage, getMtstrn(input)));
        Set(outputmessage, Concat(outputmessage, sEnd));
    }
}
if(fniGwyXFormAppIsnConfig.SupportTEO == "Yes") {
    Set(outputmessage, Concat(outputmessage, sBNYTRN));
    Set(outputmessage, Concat(outputmessage, posSeek(input,BNYTRNPOS,BNYTRNLEN)));
    Set(outputmessage, Concat(outputmessage, sEnd));
    Set(outputmessage, Concat(outputmessage, sCUSTID));
    Set(outputmessage, Concat(outputmessage, posSeek(input,CUSTIDPOS,CUSTIDLEN)));
    Set(outputmessage, Concat(outputmessage, sEnd));
    Set(outputmessage, Concat(outputmessage, sRCVADD1));
    Set(outputmessage, Concat(outputmessage, posSeek(input,RCVADD1POS,RCVADD1LEN)));
    Set(outputmessage, Concat(outputmessage, sEnd));
    Set(outputmessage, Concat(outputmessage, sRCVADD2));
    Set(outputmessage, Concat(outputmessage, posSeek(input,RCVADD2POS,RCVADD2LEN)));
    Set(outputmessage, Concat(outputmessage, sEnd));
    Set(outputmessage, Concat(outputmessage, sDESAPP));
    Set(outputmessage, Concat(outputmessage, "TEO"));
    Set(outputmessage, Concat(outputmessage, sEnd));
}

if (pModuleStr.setSwitchToIBR) {
		Set(outputmessage, Concat(outputmessage,sSOURCEAPP));
		Set(outputmessage, Concat(outputmessage,fniGwyXFormAppIsnConfig.ApplicationId));
		Set(outputmessage, Concat(outputmessage,sEnd));
		Set(outputmessage, Concat(outputmessage,sOrgRcvBIC));
		Set(outputmessage, Concat(outputmessage,pModuleStr.rcvBic12));
		Set(outputmessage, Concat(outputmessage,sEnd));
		
		
		if (length(pModuleStr.desAppPerMsg)>0) {
			Set(outputmessage, Concat(outputmessage,sDESAPP));
			Set(outputmessage, Concat(outputmessage,pModuleStr.desAppPerMsg));
          Set(outputmessage, Concat(outputmessage,sEnd));
		}
		if (length(pModuleStr.desDirectionPerMsg)>0) {
			Set(outputmessage, Concat(outputmessage,sDESDIR));
		    Set(outputmessage, Concat(outputmessage,pModuleStr.desDirectionPerMsg));
            Set(outputmessage, Concat(outputmessage,sEnd));
		}
	}
	
	if(pModuleStr.handleCIBC) {	
        Set(outputmessage, Concat(outputmessage, sDESAPP));
        Set(outputmessage, Concat(outputmessage, "CIBC"));
        Set(outputmessage, Concat(outputmessage, sEnd));
        Set(outputmessage, Concat(outputmessage, sOrgRcvBIC));
        Set(outputmessage, Concat(outputmessage, pModuleStr.rcvBic12));
        Set(outputmessage, Concat(outputmessage, sEnd));
    }
	
	
	if (pModuleStr.handleNameKey) {
		Set(outputmessage, Concat(outputmessage,sOrgRcvBIC));
		Set(outputmessage, Concat(outputmessage,pModuleStr.rcvBic12));
		Set(outputmessage, Concat(outputmessage,sEnd));
		Set(outputmessage, Concat(outputmessage,sDESOUTPUTQ));
		Set(outputmessage, Concat(outputmessage,pModuleStr.nameKeyOutputQueue));
		Set(outputmessage, Concat(outputmessage,sEnd));
		
	}
	



Set(outputmessage, Concat(outputmessage, sEnd));

return outputmessage;
]]></Code>
			<function-type>Formula</function-type>
		</FormulaFunctionDef>
		<FormulaFunctionDef name="switchToIBR" type="FormulaFunctionDef">
			<description></description>
			<Category>User Defined</Category>
			<parameterfields>
				<parameterfield>
					<name>PGWYSTR</name>
					<type>DataObject</type>
					<message>pGwyStr</message>
					<minoccurs>0</minoccurs>
					<maxoccurs>1</maxoccurs>
				</parameterfield>
				<parameterfield>
					<name>pModuleStr</name>
					<type>DataObject</type>
					<message>pModuleStr</message>
					<minoccurs>0</minoccurs>
					<maxoccurs>1</maxoccurs>
				</parameterfield>
				<parameterfield>
					<name>fniGwyXFormAppIsnConfig</name>
					<type>DataObject</type>
					<message>fniGwyXFormAppIsnConfig</message>
					<minoccurs>0</minoccurs>
					<maxoccurs>1</maxoccurs>
				</parameterfield>
				<parameterfield>
					<name>input</name>
					<type>String</type>
				</parameterfield>
			</parameterfields>
			<ReturnType>Void</ReturnType>
			<Code><![CDATA[def pBlock2;
def sndBic8Name;
def sndSubBranch;
pModuleStr.setSwitchToIBR = false;
if(pModuleStr.numberOfSwiftIBRStr == 0) {
    Set(pModuleStr.rcvBic12, Mid(input, B1BIC8POS, BIC12LEN));
    
    input = Replace(input,pModuleStr.rcvBic12 , "IRVTUS3NAXXX");
    
    Set(PGWYSTR.inputMessage,input);
    
    pBlock2 = strstr(input, "{2:");
    if(pBlock2.IsNotNull()) {
    
        pBlock2 = Replace(pBlock2, Mid(pBlock2, B2ILTPOS, BIC8LEN), "IRVTUS3N");
       
    }
    pModuleStr.setSwitchToIBR = true;
}

	
		
 	

]]></Code>
			<function-type>Formula</function-type>
		</FormulaFunctionDef>
		<FormulaFunctionDef name="setupNameKey" type="FormulaFunctionDef">
			<description></description>
			<Category>User Defined</Category>
			<parameterfields>
				<parameterfield>
					<name>namekeytables</name>
					<type>Section</type>
					<message>NameKeytable</message>
					<minoccurs>0</minoccurs>
					<maxoccurs>-1</maxoccurs>
				</parameterfield>
				<parameterfield>
					<name>pGwyStr</name>
					<type>DataObject</type>
					<message>pGwyStr</message>
					<minoccurs>0</minoccurs>
					<maxoccurs>1</maxoccurs>
				</parameterfield>
				<parameterfield>
					<name>pModuleStr</name>
					<type>DataObject</type>
					<message>pModuleStr</message>
					<minoccurs>0</minoccurs>
					<maxoccurs>1</maxoccurs>
				</parameterfield>
				<parameterfield>
					<name>fniGwyXFormAppIsnConfig</name>
					<type>DataObject</type>
					<message>fniGwyXFormAppIsnConfig</message>
					<minoccurs>0</minoccurs>
					<maxoccurs>1</maxoccurs>
				</parameterfield>
				<parameterfield>
					<name>input</name>
					<type>String</type>
				</parameterfield>
			</parameterfields>
			<ReturnType>Void</ReturnType>
			<Code><![CDATA[pModuleStr.handleNameKey = false;
pModuleStr.ibrOnly = false;
def nameKeyTrn;
def mtType;
def pNameKeyStr;
def Outputqueue;
def nklookup = false;
def rowdefsize;
def rowdefgroupsize;
def namekey = input.toText().Mid(NAMEKEYPOS, NAMEKEYLEN);
for(def i = 0; i < namekeytables[0].Data.NameKeyDefList[0].NameKeyDef.$size; ++i) {
    if(namekeytables[0].Data.NameKeyDefList[0].NameKeyDef[i].NameKeyDefGroup1[0].NameKey.IsNotNull()) {
        def nameKey = namekeytables[0].Data.NameKeyDefList[0].NameKeyDef[i].NameKeyDefGroup1[0].NameKey;
        if(nameKey.Equal(namekey)) {
            rowdefsize = namekeytables[0].Data.NameKeyDefList[0].NameKeyDef[i].NameKeyDefGroup1[1].RowDefList[0].RowDef.$size;
            rowdefgroupsize = namekeytables[0].Data.NameKeyDefList[0].NameKeyDef[i].NameKeyDefGroup1[1].RowDefList[0].RowDef[rowdefsize - 
                                                                                                                               1].RowDefGroup1.$size;
            Outputqueue = namekeytables[0].Data.NameKeyDefList[0].NameKeyDef[i].NameKeyDefGroup1[1].RowDefList[0].RowDef[rowdefsize - 
                                                                                                                           1].RowDefGroup1[rowdefgroupsize - 
                                                                                                                                             1].OutputQueue;
            break;
        }
    }
}
if(Outputqueue.Length() > 0) {
    Set(pModuleStr.nameKeyOutputQueue, Outputqueue);
    if(pModuleStr.messageFormat == ISTDFORMAT) {
        Set(nameKeyTrn, pModuleStr.trnPrefix);
    }
    else {
        Set(nameKeyTrn, Mid(input, ORGTRNPOS, ORGTRNLEN));
    }
    if(pModuleStr.messageFormat == ISTDFORMAT) {
        Set(mtType, pModuleStr.mtType);
    }
    else {
        Set(mtType, Mid(input, MTTYPEPOS, MTTYPELEN));
    }
    for(def j = 0; j < namekeytables[0].Data.NameKeyDefList[0].NameKeyDef.$size; ++j) {
        rowdefsize = namekeytables[0].Data.NameKeyDefList[0].NameKeyDef[j].NameKeyDefGroup1[1].RowDefList[0].RowDef.$size;
        rowdefgroupsize = namekeytables[0].Data.NameKeyDefList[0].NameKeyDef[j].NameKeyDefGroup1[1].RowDefList[0].RowDef[rowdefsize - 
                                                                                                                           1].RowDefGroup1.$size;
        def matchTrn = false;
        if(namekeytables[0].Data.NameKeyDefList[0].NameKeyDef[j].NameKeyDefGroup1[1].RowDefList[0].RowDef[rowdefsize - 
                                                                                                            1].RowDefGroup1[rowdefgroupsize - 
                                                                                                                              1].NameKeyTrn.IsNull()) {
            matchTrn = true;
        }
        else {
            if(CompareIgnoreCase(namekeytables[0].Data.NameKeyDefList[0].NameKeyDef[j].NameKeyDefGroup1[1].RowDefList[0].RowDef[rowdefsize - 
                                                                                                                                  1].RowDefGroup1[rowdefgroupsize - 
                                                                                                                                                    1].NameKeyTrn, 
                                 nameKeyTrn) != 0) {
                matchTrn = true;
            }
        }
        if(matchTrn) {
            if((namekeytables[0].Data.NameKeyDefList[0].NameKeyDef[j].NameKeyDefGroup1[1].RowDefList[0].RowDef[rowdefsize - 
                                                                                                                 1].RowDefGroup1[rowdefgroupsize - 
                                                                                                                                   1].MTType.IsNull())) {
                pModuleStr.handleNameKey = true;
                pModuleStr.ibrOnly = true;
                break;
            }
            else if(CompareIgnoreCase(namekeytables[0].Data.NameKeyDefList[0].NameKeyDef[j].NameKeyDefGroup1[1].RowDefList[0].RowDef[rowdefsize - 
                                                                                                                                       1].RowDefGroup1[rowdefgroupsize - 
                                                                                                                                                         1].MTType, mtType) != 0) {
                pModuleStr.handleNameKey = true;
                pModuleStr.ibrOnly = true;
                break;
            }
        }
    }
}
if(pModuleStr.handleNameKey) {
    if(pModuleStr.messageFormat == ISTDFORMAT) {
        def pBlock2 = strstr(input, "{2:");
        Set(pModuleStr.rcvBic12, Mid(pBlock2, B2ILTPOS, BIC12LEN));
    }
    else if((pModuleStr.cusIndId != "b") && (pModuleStr.cusIndId != "B") && 
              (Length(pModuleStr.cusIndId) > 0)) {
        Set(pModuleStr.rcvBic12, Mid(input, SWFADDRESSPOS, BIC8LEN));
        Set(pModuleStr.rcvBic12, Concat(pModuleStr.rcvBic12, 'X'));
        Set(pModuleStr.rcvBic12, 
            Concat(pModuleStr.rcvBic12, Mid(input, SWFADDRESSPOS + BIC8LEN, BRANCHLEN)));
    }
    def findBlank = false;
    if(Length(Mid(pModuleStr.rcvBic12, 0, BIC8LEN).Trim()) != 8) {
        findBlank = true;
    }
    if(findBlank) {
        Set(pModuleStr.rcvBic12, "XXXXXXXXXXXX");
    }
    findBlank = false;
    if(Length(Mid(pModuleStr.rcvBic12, BIC8LEN + 1, BIC12LEN).Trim()) != 3) {
        findBlank = true;
    }
    if(findBlank) {
        Set(pModuleStr.rcvBic12, Mid(pModuleStr.rcvBic12, 0, BIC8LEN + 1));
        Set(pModuleStr.rcvBic12, Concat(pModuleStr.rcvBic12, "XXX"));
    }
}
]]></Code>
			<function-type>Formula</function-type>
		</FormulaFunctionDef>
		<FormulaFunctionDef name="transformInternalToSwift" type="FormulaFunctionDef">
			<description></description>
			<Category>User Defined</Category>
			<parameterfields>
				<parameterfield>
					<name>pGwyStr</name>
					<type>DataObject</type>
					<message>pGwyStr</message>
					<minoccurs>1</minoccurs>
					<maxoccurs>1</maxoccurs>
				</parameterfield>
				<parameterfield>
					<name>pModuleStr</name>
					<type>DataObject</type>
					<message>pModuleStr</message>
					<minoccurs>1</minoccurs>
					<maxoccurs>1</maxoccurs>
				</parameterfield>
				<parameterfield>
					<name>fniGwyXFormAppIsnConfig</name>
					<type>DataObject</type>
					<message>fniGwyXFormAppIsnConfig</message>
					<minoccurs>1</minoccurs>
					<maxoccurs>1</maxoccurs>
				</parameterfield>
			</parameterfields>
			<ReturnType>Void</ReturnType>
			<Code><![CDATA[def pMetaData;
def pMetaData1;
def pMetaDataEnd;

if (pModuleStr.handleNameKey) {
		pModuleStr.cusIndId = totext(pGwyStr.inputMessage[CUSTINDPOS]);
	pGwyStr.inputMessage=pGwyStr.inputMessage.replace(pModuleStr.cusIndId,'Y');
	}


if(fniGwyXFormAppIsnConfig.SupportGPII=="Yes") {
		pMetaData = strstr(pGwyStr.inputMessage,METADATA);
		if (pMetaData.isnotnull()) {
			pMetaDataEnd = strstr(pMetaData,"}}");
			if (pMetaDataEnd.isnotnull()) {
				pMetaData = mid(pMetaData,length(METADATA));
				pModuleStr.metadfataBuff=pMetaData.trim();
				
			}
		}
	}
]]></Code>
			<function-type>Formula</function-type>
		</FormulaFunctionDef>
		<elementproperties>
			<propertymap>
			</propertymap>
		</elementproperties>
	</folder>
	<resources type="Resources">
		<Locales active="">
		</Locales>
		<resourcefields>
			<resourcefield>
				<name>MAXCORRDATALEN</name>
				<type>Integer</type>
				<value><![CDATA[512]]></value>
			</resourcefield>
			<resourcefield>
				<name>outqueue</name>
				<type>String</type>
				<value><![CDATA[empty]]></value>
			</resourcefield>
			<resourcefield>
				<name>APPHOST</name>
				<type>String</type>
				<value><![CDATA[ApplicationHost]]></value>
			</resourcefield>
			<resourcefield>
				<name>MTSSOURCE</name>
				<type>String</type>
				<value><![CDATA[MTSSource]]></value>
			</resourcefield>
			<resourcefield>
				<name>MTSHIGHSOURCE</name>
				<type>String</type>
				<value><![CDATA[MTSHighSource]]></value>
			</resourcefield>
			<resourcefield>
				<name>MTSMEDIUMSOURCE</name>
				<type>String</type>
				<value><![CDATA[MTSMediumSource]]></value>
			</resourcefield>
			<resourcefield>
				<name>MTSLOWSOURCE</name>
				<type>String</type>
				<value><![CDATA[MTSLowSource]]></value>
			</resourcefield>
			<resourcefield>
				<name>MTSIBRSOURCE</name>
				<type>String</type>
				<value><![CDATA[MTSIBRSource]]></value>
			</resourcefield>
			<resourcefield>
				<name>MTSIBRHSOURCE</name>
				<type>String</type>
				<value><![CDATA[MTSIBRHSource]]></value>
			</resourcefield>
			<resourcefield>
				<name>MTSIBRMSOURCE</name>
				<type>String</type>
				<value><![CDATA[MTSIBRMSource]]></value>
			</resourcefield>
			<resourcefield>
				<name>MTSERRSOURCE</name>
				<type>String</type>
				<value><![CDATA[MTSErrSource]]></value>
			</resourcefield>
			<resourcefield>
				<name>CHECKSUM</name>
				<type>String</type>
				<value><![CDATA[Checksum]]></value>
			</resourcefield>
			<resourcefield>
				<name>USESAT</name>
				<type>String</type>
				<value><![CDATA[UseSat]]></value>
			</resourcefield>
			<resourcefield>
				<name>CHANGESEQ</name>
				<type>String</type>
				<value><![CDATA[ChangeSequenceNumber]]></value>
			</resourcefield>
			<resourcefield>
				<name>IBRBIC8NAME</name>
				<type>String</type>
				<value><![CDATA[IBRBIC8Name]]></value>
			</resourcefield>
			<resourcefield>
				<name>IBRBIC8LIST</name>
				<type>String</type>
				<value><![CDATA[IBRBIC8NameList]]></value>
			</resourcefield>
			<resourcefield>
				<name>HANDLEBLOCK3FORIBR</name>
				<type>String</type>
				<value><![CDATA[HandleBlock3ForIBR]]></value>
			</resourcefield>
			<resourcefield>
				<name>NOIBRFORSAMEBIC</name>
				<type>String</type>
				<value><![CDATA[NoIBRForSameBIC]]></value>
			</resourcefield>
			<resourcefield>
				<name>BIC8NAME</name>
				<type>String</type>
				<value><![CDATA[BIC8Name]]></value>
			</resourcefield>
			<resourcefield>
				<name>LTERMDEFLIST</name>
				<type>String</type>
				<value><![CDATA[LTermDefList]]></value>
			</resourcefield>
			<resourcefield>
				<name>LTERMDEF</name>
				<type>String</type>
				<value><![CDATA[LTermDef]]></value>
			</resourcefield>
			<resourcefield>
				<name>LTERMNAME</name>
				<type>String</type>
				<value><![CDATA[LTermName]]></value>
			</resourcefield>
			<resourcefield>
				<name>APPLICATIONID</name>
				<type>String</type>
				<value><![CDATA[Application ID:]]></value>
			</resourcefield>
			<resourcefield>
				<name>IBRSEQFILENAME</name>
				<type>String</type>
				<value><![CDATA[IBRSeqFileName]]></value>
			</resourcefield>
			<resourcefield>
				<name>DEFAULTERRORCODE</name>
				<type>String</type>
				<value><![CDATA[ERR]]></value>
			</resourcefield>
			<resourcefield>
				<name>SVCSERVERLIST</name>
				<type>String</type>
				<value><![CDATA[SvcServerList]]></value>
			</resourcefield>
			<resourcefield>
				<name>SVCSERVERDEF</name>
				<type>String</type>
				<value><![CDATA[SvcServerDef]]></value>
			</resourcefield>
			<resourcefield>
				<name>HOSTNAME</name>
				<type>String</type>
				<value><![CDATA[HostName]]></value>
			</resourcefield>
			<resourcefield>
				<name>PORT</name>
				<type>String</type>
				<value><![CDATA[Port]]></value>
			</resourcefield>
			<resourcefield>
				<name>SERVER</name>
				<type>String</type>
				<value><![CDATA[Server]]></value>
			</resourcefield>
			<resourcefield>
				<name>DEFAULTSVCPORT</name>
				<type>String</type>
				<value><![CDATA[DefaultSvcPort]]></value>
			</resourcefield>
			<resourcefield>
				<name>DEFAULTSVCSVR</name>
				<type>String</type>
				<value><![CDATA[DefaultSvcSvr]]></value>
			</resourcefield>
			<resourcefield>
				<name>EDITSUCCESS</name>
				<type>String</type>
				<value><![CDATA[SUCCESS]]></value>
			</resourcefield>
			<resourcefield>
				<name>EDITCHECKBYSWIFT</name>
				<type>String</type>
				<value><![CDATA[EditCheckBySwift]]></value>
			</resourcefield>
			<resourcefield>
				<name>PASSERRMSGTOSWF</name>
				<type>String</type>
				<value><![CDATA[PassErrMsgToSwf]]></value>
			</resourcefield>
			<resourcefield>
				<name>ERRCODE</name>
				<type>String</type>
				<value><![CDATA[ERRCODE]]></value>
			</resourcefield>
			<resourcefield>
				<name>VLERROR</name>
				<type>String</type>
				<value><![CDATA[VLERROR]]></value>
			</resourcefield>
			<resourcefield>
				<name>PROCESSIBR</name>
				<type>String</type>
				<value><![CDATA[ProcessIBR]]></value>
			</resourcefield>
			<resourcefield>
				<name>ALERTEMAILLIST</name>
				<type>String</type>
				<value><![CDATA[AlertEmailList]]></value>
			</resourcefield>
			<resourcefield>
				<name>ALERTEMAILADDRESS</name>
				<type>String</type>
				<value><![CDATA[AlertEmailAddress]]></value>
			</resourcefield>
			<resourcefield>
				<name>TRANSFORINTERNALFMT</name>
				<type>String</type>
				<value><![CDATA[TransformInternalFmt]]></value>
			</resourcefield>
			<resourcefield>
				<name>TRANSFORSWIFTTOSWIFT</name>
				<type>String</type>
				<value><![CDATA[TransformSwiftToSwift]]></value>
			</resourcefield>
			<resourcefield>
				<name>NoVALIDATION</name>
				<type>String</type>
				<value><![CDATA[NoValidation]]></value>
			</resourcefield>
			<resourcefield>
				<name>RESERVEADDRESS</name>
				<type>String</type>
				<value><![CDATA[ReserveAddress]]></value>
			</resourcefield>
			<resourcefield>
				<name>MAX_ALERTEMAILS</name>
				<type>Integer</type>
				<value><![CDATA[20]]></value>
			</resourcefield>
			<resourcefield>
				<name>EMAILADDRESSLEN</name>
				<type>Integer</type>
				<value><![CDATA[128]]></value>
			</resourcefield>
			<resourcefield>
				<name>CORRELATION_DATA</name>
				<type>String</type>
				<value><![CDATA[Correlation-Data: ]]></value>
			</resourcefield>
			<resourcefield>
				<name>PRIORITY_DATA</name>
				<type>String</type>
				<value><![CDATA[Priority: ]]></value>
			</resourcefield>
			<resourcefield>
				<name>HIGH</name>
				<type>String</type>
				<value><![CDATA[High]]></value>
			</resourcefield>
			<resourcefield>
				<name>MEDIUM</name>
				<type>String</type>
				<value><![CDATA[Medium]]></value>
			</resourcefield>
			<resourcefield>
				<name>LOW</name>
				<type>String</type>
				<value><![CDATA[Low]]></value>
			</resourcefield>
			<resourcefield>
				<name>MSGRTRBLOCK1</name>
				<type>String</type>
				<value><![CDATA[[{1:]]></value>
			</resourcefield>
			<resourcefield>
				<name>APPID</name>
				<type>String</type>
				<value><![CDATA[ApplicationId]]></value>
			</resourcefield>
			<resourcefield>
				<name>MAINAPPID</name>
				<type>String</type>
				<value><![CDATA[MainApplicationId]]></value>
			</resourcefield>
			<resourcefield>
				<name>MERVA</name>
				<type>Integer</type>
				<value><![CDATA[1]]></value>
			</resourcefield>
			<resourcefield>
				<name>MSGRTR</name>
				<type>Integer</type>
				<value><![CDATA[2]]></value>
			</resourcefield>
			<resourcefield>
				<name>BLOCK1</name>
				<type>String</type>
				<value><![CDATA[{1:]]></value>
			</resourcefield>
			<resourcefield>
				<name>BLOCK2</name>
				<type>String</type>
				<value><![CDATA[{2:]]></value>
			</resourcefield>
			<resourcefield>
				<name>DATABEG</name>
				<type>String</type>
				<value><![CDATA[?DATA]]></value>
			</resourcefield>
			<resourcefield>
				<name>TAG97</name>
				<type>String</type>
				<value><![CDATA[:97A:]]></value>
			</resourcefield>
			<resourcefield>
				<name>TAG25</name>
				<type>String</type>
				<value><![CDATA[:25:]]></value>
			</resourcefield>
			<resourcefield>
				<name>OWNBIC8POSITIN</name>
				<type>Integer</type>
				<value><![CDATA[6]]></value>
			</resourcefield>
			<resourcefield>
				<name>CORRBIC8POSITIN</name>
				<type>Integer</type>
				<value><![CDATA[7]]></value>
			</resourcefield>
			<resourcefield>
				<name>GPAORFINLEN</name>
				<type>Integer</type>
				<value><![CDATA[3]]></value>
			</resourcefield>
			<resourcefield>
				<name>APPIDLEN</name>
				<type>Integer</type>
				<value><![CDATA[3]]></value>
			</resourcefield>
			<resourcefield>
				<name>PRIORITYPOS</name>
				<type>Integer</type>
				<value><![CDATA[19]]></value>
			</resourcefield>
			<resourcefield>
				<name>BIC8LEN</name>
				<type>Integer</type>
				<value><![CDATA[8]]></value>
			</resourcefield>
			<resourcefield>
				<name>BIC11LEN</name>
				<type>Integer</type>
				<value><![CDATA[11]]></value>
			</resourcefield>
			<resourcefield>
				<name>B2ILTPOS</name>
				<type>Integer</type>
				<value><![CDATA[7]]></value>
			</resourcefield>
			<resourcefield>
				<name>B2IMTPOS</name>
				<type>Integer</type>
				<value><![CDATA[4]]></value>
			</resourcefield>
			<resourcefield>
				<name>LTERMLEN</name>
				<type>Integer</type>
				<value><![CDATA[9]]></value>
			</resourcefield>
			<resourcefield>
				<name>TIDLEN</name>
				<type>Integer</type>
				<value><![CDATA[1]]></value>
			</resourcefield>
			<resourcefield>
				<name>TIDPOS</name>
				<type>Integer</type>
				<value><![CDATA[15]]></value>
			</resourcefield>
			<resourcefield>
				<name>BIC8POS</name>
				<type>Integer</type>
				<value><![CDATA[13]]></value>
			</resourcefield>
			<resourcefield>
				<name>B1BIC8POS</name>
				<type>Integer</type>
				<value><![CDATA[6]]></value>
			</resourcefield>
			<resourcefield>
				<name>B2BIC8POS</name>
				<type>Integer</type>
				<value><![CDATA[14]]></value>
			</resourcefield>
			<resourcefield>
				<name>B2BRANCHPOS</name>
				<type>Integer</type>
				<value><![CDATA[23]]></value>
			</resourcefield>
			<resourcefield>
				<name>B1SEQNUMPOS</name>
				<type>Integer</type>
				<value><![CDATA[22]]></value>
			</resourcefield>
			<resourcefield>
				<name>SEQNUMBELEN</name>
				<type>Integer</type>
				<value><![CDATA[6]]></value>
			</resourcefield>
			<resourcefield>
				<name>MAXMTLTERMLIST</name>
				<type>Integer</type>
				<value><![CDATA[128]]></value>
			</resourcefield>
			<resourcefield>
				<name>BRANCHLEN</name>
				<type>Integer</type>
				<value><![CDATA[3]]></value>
			</resourcefield>
			<resourcefield>
				<name>FIELDLEN</name>
				<type>Integer</type>
				<value><![CDATA[256]]></value>
			</resourcefield>
			<resourcefield>
				<name>MAX_MTTYPE</name>
				<type>Integer</type>
				<value><![CDATA[256]]></value>
			</resourcefield>
			<resourcefield>
				<name>SVCSVR_LEN</name>
				<type>Integer</type>
				<value><![CDATA[256]]></value>
			</resourcefield>
			<resourcefield>
				<name>MAX_APPLTERMS</name>
				<type>Integer</type>
				<value><![CDATA[5]]></value>
			</resourcefield>
			<resourcefield>
				<name>BIC12LEN</name>
				<type>Integer</type>
				<value><![CDATA[12]]></value>
			</resourcefield>
			<resourcefield>
				<name>B2MTTYPEPOS</name>
				<type>Integer</type>
				<value><![CDATA[4]]></value>
			</resourcefield>
			<resourcefield>
				<name>PRIORITYHIGH</name>
				<type>Integer</type>
				<value><![CDATA[1]]></value>
			</resourcefield>
			<resourcefield>
				<name>PRIORITYMEDIUM</name>
				<type>Integer</type>
				<value><![CDATA[2]]></value>
			</resourcefield>
			<resourcefield>
				<name>PRIORITYLOW</name>
				<type>Integer</type>
				<value><![CDATA[3]]></value>
			</resourcefield>
			<resourcefield>
				<name>HOSTNAMELEN</name>
				<type>Integer</type>
				<value><![CDATA[32]]></value>
			</resourcefield>
			<resourcefield>
				<name>MAX_SVCSERVER</name>
				<type>Integer</type>
				<value><![CDATA[16]]></value>
			</resourcefield>
			<resourcefield>
				<name>NOSVC</name>
				<type>Integer</type>
				<value><![CDATA[-1]]></value>
			</resourcefield>
			<resourcefield>
				<name>MAX_EDIT_LENGTH</name>
				<type>Integer</type>
				<value><![CDATA[20000]]></value>
			</resourcefield>
			<resourcefield>
				<name>MAX_SVC_BUF</name>
				<type>Integer</type>
				<value><![CDATA[20000]]></value>
			</resourcefield>
			<resourcefield>
				<name>FORMAT_LEN</name>
				<type>Integer</type>
				<value><![CDATA[4]]></value>
			</resourcefield>
			<resourcefield>
				<name>SVCHANDLER_LEN</name>
				<type>Integer</type>
				<value><![CDATA[8]]></value>
			</resourcefield>
			<resourcefield>
				<name>MTSRSPLEN</name>
				<type>Integer</type>
				<value><![CDATA[10]]></value>
			</resourcefield>
			<resourcefield>
				<name>MTSTRNLEN</name>
				<type>Integer</type>
				<value><![CDATA[16]]></value>
			</resourcefield>
			<resourcefield>
				<name>MRVRSPOK</name>
				<type>String</type>
				<value><![CDATA[Yes]]></value>
			</resourcefield>
			<resourcefield>
				<name>MRVRSPDEL</name>
				<type>String</type>
				<value><![CDATA[DEL]]></value>
			</resourcefield>
			<resourcefield>
				<name>MRVRSPERR</name>
				<type>String</type>
				<value><![CDATA[ERR]]></value>
			</resourcefield>
			<resourcefield>
				<name>MRVRSPNEW</name>
				<type>String</type>
				<value><![CDATA[NEW]]></value>
			</resourcefield>
			<resourcefield>
				<name>NEWGAP</name>
				<type>Integer</type>
				<value><![CDATA[-2]]></value>
			</resourcefield>
			<resourcefield>
				<name>DUPLICATED</name>
				<type>Integer</type>
				<value><![CDATA[-1]]></value>
			</resourcefield>
			<resourcefield>
				<name>MAXIMUMGAP</name>
				<type>String</type>
				<value><![CDATA[MaximumGap]]></value>
			</resourcefield>
			<resourcefield>
				<name>MAXIMUMNUMBEROFGAPS</name>
				<type>String</type>
				<value><![CDATA[MaximumNumberOfGaps]]></value>
			</resourcefield>
			<resourcefield>
				<name>MAXIMUMSEQNUMBER</name>
				<type>String</type>
				<value><![CDATA[MaximumSequenceNumber]]></value>
			</resourcefield>
			<resourcefield>
				<name>EXCEEDMAXIMUMGAP</name>
				<type>String</type>
				<value><![CDATA[Sequence gap exceeds the maximum gap limit]]></value>
			</resourcefield>
			<resourcefield>
				<name>DUPLICATEDMESSAGE</name>
				<type>String</type>
				<value><![CDATA[FNI ISN gateway is down -- received duplicate message]]></value>
			</resourcefield>
			<resourcefield>
				<name>EXCEEDMAXIMUMNUMGAP</name>
				<type>String</type>
				<value><![CDATA[The number of sequence gaps exceeds the maximum limit]]></value>
			</resourcefield>
			<resourcefield>
				<name>PASSAREALENGTH</name>
				<type>String</type>
				<value><![CDATA[PassAreaLength]]></value>
			</resourcefield>
			<resourcefield>
				<name>SEQNUMBERLENGTH</name>
				<type>String</type>
				<value><![CDATA[SeqNumberLength]]></value>
			</resourcefield>
			<resourcefield>
				<name>SEQNUMBERSTARTPOS</name>
				<type>String</type>
				<value><![CDATA[SeqNumberStartPos]]></value>
			</resourcefield>
			<resourcefield>
				<name>EDITSVCFAIL</name>
				<type>String</type>
				<value><![CDATA[{ERRCODE:40002}{ERRMSG:The service of Swift edit check is down.}]]></value>
			</resourcefield>
			<resourcefield>
				<name>EDITCHKFAIL</name>
				<type>String</type>
				<value><![CDATA[{ERRCODE:40001}{ERRMSG:Swift edit check failed.}]]></value>
			</resourcefield>
			<resourcefield>
				<name>PRIORITYDEFLIST</name>
				<type>String</type>
				<value><![CDATA[PriorityDefList]]></value>
			</resourcefield>
			<resourcefield>
				<name>PRIORITYDEF</name>
				<type>String</type>
				<value><![CDATA[PriorityDef]]></value>
			</resourcefield>
			<resourcefield>
				<name>PRIORITY</name>
				<type>String</type>
				<value><![CDATA[Priority]]></value>
			</resourcefield>
			<resourcefield>
				<name>MTTYPE</name>
				<type>String</type>
				<value><![CDATA[MTType]]></value>
			</resourcefield>
			<resourcefield>
				<name>SUPPORTEDMTTYPELIST</name>
				<type>String</type>
				<value><![CDATA[SupportedMTTypeList]]></value>
			</resourcefield>
			<resourcefield>
				<name>PROCESSGAPCHECK</name>
				<type>String</type>
				<value><![CDATA[ProcessGapCheck]]></value>
			</resourcefield>
			<resourcefield>
				<name>RCVREPMSG</name>
				<type>String</type>
				<value><![CDATA[ReceiveRepairedMsg]]></value>
			</resourcefield>
			<resourcefield>
				<name>EDITCHECK</name>
				<type>String</type>
				<value><![CDATA[EditCheck]]></value>
			</resourcefield>
			<resourcefield>
				<name>EDITCHECKOP</name>
				<type>String</type>
				<value><![CDATA[editCheckOp]]></value>
			</resourcefield>
			<resourcefield>
				<name>TRANSFORMOP</name>
				<type>String</type>
				<value><![CDATA[transformOp]]></value>
			</resourcefield>
			<resourcefield>
				<name>TRANSFORM</name>
				<type>String</type>
				<value><![CDATA[Transform]]></value>
			</resourcefield>
			<resourcefield>
				<name>GENGTMACK</name>
				<type>String</type>
				<value><![CDATA[FniAckGtm]]></value>
			</resourcefield>
			<resourcefield>
				<name>GENGTMACKOP</name>
				<type>String</type>
				<value><![CDATA[gtmAckOp]]></value>
			</resourcefield>
			<resourcefield>
				<name>RECEIVED</name>
				<type>String</type>
				<value><![CDATA[Received]]></value>
			</resourcefield>
			<resourcefield>
				<name>BNYPA1200TYPE1TOSWIFT</name>
				<type>String</type>
				<value><![CDATA[BNYPA1200Type1ToSwift]]></value>
			</resourcefield>
			<resourcefield>
				<name>BNYINTERNALTOSWIFTBLOCK4</name>
				<type>String</type>
				<value><![CDATA[BNYInternalToSwiftBlock4]]></value>
			</resourcefield>
			<resourcefield>
				<name>SWIFTTOSWIFTBLOCK4</name>
				<type>String</type>
				<value><![CDATA[SwiftToSwiftBlock4]]></value>
			</resourcefield>
			<resourcefield>
				<name>SWIFTTOSWIFTBLOCK4NV</name>
				<type>String</type>
				<value><![CDATA[SwiftToSwiftBlock4NV]]></value>
			</resourcefield>
			<resourcefield>
				<name>USEMATADATA</name>
				<type>String</type>
				<value><![CDATA[UseMetaData]]></value>
			</resourcefield>
			<resourcefield>
				<name>USEBLOCK1SEQNUM</name>
				<type>String</type>
				<value><![CDATA[UseBlock1SeqNum]]></value>
			</resourcefield>
			<resourcefield>
				<name>INOGAPCHECK</name>
				<type>Integer</type>
				<value><![CDATA[0]]></value>
			</resourcefield>
			<resourcefield>
				<name>IUSE1200PASSAREA</name>
				<type>Integer</type>
				<value><![CDATA[1]]></value>
			</resourcefield>
			<resourcefield>
				<name>IUSEMATADATA</name>
				<type>Integer</type>
				<value><![CDATA[2]]></value>
			</resourcefield>
			<resourcefield>
				<name>IUSEBLOCK1SEQNUM</name>
				<type>Integer</type>
				<value><![CDATA[3]]></value>
			</resourcefield>
			<resourcefield>
				<name>MISSINGBLOCK1</name>
				<type>String</type>
				<value><![CDATA[{ERRCODE:30001}{ERRMSG:Missing Block 1}]]></value>
			</resourcefield>
			<resourcefield>
				<name>MISSINGBLOCK2</name>
				<type>String</type>
				<value><![CDATA[{ERRCODE:30002}{ERRMSG:Missing Block 2}]]></value>
			</resourcefield>
			<resourcefield>
				<name>INVALIDLT</name>
				<type>String</type>
				<value><![CDATA[{ERRCODE:30003}{ERRMSG:Invalid Logical Terminal}]]></value>
			</resourcefield>
			<resourcefield>
				<name>INVALIDMTTYPE</name>
				<type>String</type>
				<value><![CDATA[{ERRCODE:30004}{ERRMSG:Invalid MT Type}]]></value>
			</resourcefield>
			<resourcefield>
				<name>INVALIDPASSAREA</name>
				<type>String</type>
				<value><![CDATA[{ERRCODE:30005}{ERRMSG:Invalid Pass Area}]]></value>
			</resourcefield>
			<resourcefield>
				<name>TRANSFORMERR</name>
				<type>String</type>
				<value><![CDATA[{ERRCODE:30006}{ERRMSG:Failed to Transform Internal Format to Swift Format}]]></value>
			</resourcefield>
			<resourcefield>
				<name>GETGTMERR</name>
				<type>String</type>
				<value><![CDATA[{ERRCODE:30007}{ERRMSG:Failed to Get GTM ACK}]]></value>
			</resourcefield>
			<resourcefield>
				<name>TRANSFORMERRSWIFT</name>
				<type>String</type>
				<value><![CDATA[{ERRCODE:30008}{ERRMSG:Failed to Transform Swift Format to Swift Format}]]></value>
			</resourcefield>
			<resourcefield>
				<name>BADSWFADDRESS</name>
				<type>String</type>
				<value><![CDATA[{ERRCODE:30009}{ERRMSG:Failed to Find Swift Address From CIF Database}]]></value>
			</resourcefield>
			<resourcefield>
				<name>STOSERRCODE</name>
				<type>String</type>
				<value><![CDATA[{ERRCODE:30009}{ERRMSG:]]></value>
			</resourcefield>
			<resourcefield>
				<name>OUTSRCERRCODE</name>
				<type>String</type>
				<value><![CDATA[{ERRCODE:30010}{ERRMSG:Invalid Outsoucing code: ]]></value>
			</resourcefield>
			<resourcefield>
				<name>INVALIDBIC</name>
				<type>String</type>
				<value><![CDATA[{ERRCODE:30011}{ERRMSG:Invalid BIC: ]]></value>
			</resourcefield>
			<resourcefield>
				<name>MISSINGBLOCK1ERRCODE</name>
				<type>String</type>
				<value><![CDATA[2001]]></value>
			</resourcefield>
			<resourcefield>
				<name>MISSINGBLOCK2ERRCODE</name>
				<type>String</type>
				<value><![CDATA[2002]]></value>
			</resourcefield>
			<resourcefield>
				<name>INVALIDLTERRCODE</name>
				<type>String</type>
				<value><![CDATA[2003]]></value>
			</resourcefield>
			<resourcefield>
				<name>INVALIDMTTYPEERRCODE</name>
				<type>String</type>
				<value><![CDATA[2004]]></value>
			</resourcefield>
			<resourcefield>
				<name>MESSAGEFORMAT</name>
				<type>String</type>
				<value><![CDATA[MessageFormat]]></value>
			</resourcefield>
			<resourcefield>
				<name>NORMALFORMAT</name>
				<type>String</type>
				<value><![CDATA[Normal]]></value>
			</resourcefield>
			<resourcefield>
				<name>STDFORMAT</name>
				<type>String</type>
				<value><![CDATA[Standard]]></value>
			</resourcefield>
			<resourcefield>
				<name>INORMALFORMAT</name>
				<type>Integer</type>
				<value><![CDATA[1]]></value>
			</resourcefield>
			<resourcefield>
				<name>ISTDFORMAT</name>
				<type>Integer</type>
				<value><![CDATA[2]]></value>
			</resourcefield>
			<resourcefield>
				<name>BLOCK3</name>
				<type>String</type>
				<value><![CDATA[{3:]]></value>
			</resourcefield>
			<resourcefield>
				<name>TAG108</name>
				<type>String</type>
				<value><![CDATA[{108:]]></value>
			</resourcefield>
			<resourcefield>
				<name>MERVABLOCK1</name>
				<type>String</type>
				<value><![CDATA[{1:]]></value>
			</resourcefield>
			<resourcefield>
				<name>ANNUALFORMAT</name>
				<type>String</type>
				<value><![CDATA[AnnualFormat]]></value>
			</resourcefield>
			<resourcefield>
				<name>USEWEBSVC</name>
				<type>String</type>
				<value><![CDATA[UseWebSvc]]></value>
			</resourcefield>
			<resourcefield>
				<name>METADATA</name>
				<type>String</type>
				<value><![CDATA[{METADATA:]]></value>
			</resourcefield>
			<resourcefield>
				<name>CORRID</name>
				<type>String</type>
				<value><![CDATA[{CORRID:]]></value>
			</resourcefield>
			<resourcefield>
				<name>APPDEFLIST</name>
				<type>String</type>
				<value><![CDATA[AppDefList]]></value>
			</resourcefield>
			<resourcefield>
				<name>APPDEF</name>
				<type>String</type>
				<value><![CDATA[AppDef]]></value>
			</resourcefield>
			<resourcefield>
				<name>APPNAME</name>
				<type>String</type>
				<value><![CDATA[ApplicationName]]></value>
			</resourcefield>
			<resourcefield>
				<name>APPLTERMLIST</name>
				<type>String</type>
				<value><![CDATA[AppLTermList]]></value>
			</resourcefield>
			<resourcefield>
				<name>APPLTERM</name>
				<type>String</type>
				<value><![CDATA[AppLTerm]]></value>
			</resourcefield>
			<resourcefield>
				<name>PASSAREA</name>
				<type>String</type>
				<value><![CDATA[PassArea]]></value>
			</resourcefield>
			<resourcefield>
				<name>PASSAREALEN</name>
				<type>Integer</type>
				<value><![CDATA[1200]]></value>
			</resourcefield>
			<resourcefield>
				<name>PASSAREALENSTR</name>
				<type>String</type>
				<value><![CDATA[1200]]></value>
			</resourcefield>
			<resourcefield>
				<name>NUMBEROFONDEMANDMQS</name>
				<type>String</type>
				<value><![CDATA[NumberOfOnDemandMQs]]></value>
			</resourcefield>
			<resourcefield>
				<name>CREATEHEADERBLOCK</name>
				<type>String</type>
				<value><![CDATA[CreateHeaderBlock]]></value>
			</resourcefield>
			<resourcefield>
				<name>DRAINMESSAGE</name>
				<type>String</type>
				<value><![CDATA[DrainMessage]]></value>
			</resourcefield>
			<resourcefield>
				<name>SUPPORTTEO</name>
				<type>String</type>
				<value><![CDATA[SupportTEO]]></value>
			</resourcefield>
			<resourcefield>
				<name>TEO</name>
				<type>String</type>
				<value><![CDATA[TEO]]></value>
			</resourcefield>
			<resourcefield>
				<name>BNYTRN</name>
				<type>String</type>
				<value><![CDATA[BNYTRN]]></value>
			</resourcefield>
			<resourcefield>
				<name>CUSTID</name>
				<type>String</type>
				<value><![CDATA[CUSTID]]></value>
			</resourcefield>
			<resourcefield>
				<name>RCVADD1</name>
				<type>String</type>
				<value><![CDATA[RCVADD1]]></value>
			</resourcefield>
			<resourcefield>
				<name>RCVADD2</name>
				<type>String</type>
				<value><![CDATA[RCVADD2]]></value>
			</resourcefield>
			<resourcefield>
				<name>BNYTRNPOS</name>
				<type>Integer</type>
				<value><![CDATA[13]]></value>
			</resourcefield>
			<resourcefield>
				<name>BNYTRNLEN</name>
				<type>Integer</type>
				<value><![CDATA[16]]></value>
			</resourcefield>
			<resourcefield>
				<name>CUSTIDPOS</name>
				<type>Integer</type>
				<value><![CDATA[966]]></value>
			</resourcefield>
			<resourcefield>
				<name>CUSTIDLEN</name>
				<type>Integer</type>
				<value><![CDATA[5]]></value>
			</resourcefield>
			<resourcefield>
				<name>RCVADD1POS</name>
				<type>Integer</type>
				<value><![CDATA[292]]></value>
			</resourcefield>
			<resourcefield>
				<name>RCVADD1LEN</name>
				<type>Integer</type>
				<value><![CDATA[35]]></value>
			</resourcefield>
			<resourcefield>
				<name>RCVADD2POS</name>
				<type>Integer</type>
				<value><![CDATA[327]]></value>
			</resourcefield>
			<resourcefield>
				<name>RCVADD2LEN</name>
				<type>Integer</type>
				<value><![CDATA[35]]></value>
			</resourcefield>
			<resourcefield>
				<name>SRFLAGPOS</name>
				<type>Integer</type>
				<value><![CDATA[1066]]></value>
			</resourcefield>
			<resourcefield>
				<name>SRFLAGLEN</name>
				<type>Integer</type>
				<value><![CDATA[1]]></value>
			</resourcefield>
			<resourcefield>
				<name>FSINDPOS</name>
				<type>Integer</type>
				<value><![CDATA[949]]></value>
			</resourcefield>
			<resourcefield>
				<name>FSINDLEN</name>
				<type>Integer</type>
				<value><![CDATA[1]]></value>
			</resourcefield>
			<resourcefield>
				<name>RECVADDPOS</name>
				<type>Integer</type>
				<value><![CDATA[292]]></value>
			</resourcefield>
			<resourcefield>
				<name>CHRGADDPOS</name>
				<type>Integer</type>
				<value><![CDATA[553]]></value>
			</resourcefield>
			<resourcefield>
				<name>ADDRESSLEN</name>
				<type>Integer</type>
				<value><![CDATA[35]]></value>
			</resourcefield>
			<resourcefield>
				<name>MSGIDPOS</name>
				<type>Integer</type>
				<value><![CDATA[243]]></value>
			</resourcefield>
			<resourcefield>
				<name>MSGIDLEN</name>
				<type>Integer</type>
				<value><![CDATA[7]]></value>
			</resourcefield>
			<resourcefield>
				<name>ASN_LEN</name>
				<type>Integer</type>
				<value><![CDATA[9]]></value>
			</resourcefield>
			<resourcefield>
				<name>ASNNUM_LEN</name>
				<type>Integer</type>
				<value><![CDATA[5]]></value>
			</resourcefield>
			<resourcefield>
				<name>ASNNUMPOS</name>
				<type>Integer</type>
				<value><![CDATA[8]]></value>
			</resourcefield>
			<resourcefield>
				<name>ASNPOS</name>
				<type>Integer</type>
				<value><![CDATA[4]]></value>
			</resourcefield>
			<resourcefield>
				<name>MTSTRN</name>
				<type>String</type>
				<value><![CDATA[MTSTRN: ]]></value>
			</resourcefield>
			<resourcefield>
				<name>APPREP</name>
				<type>String</type>
				<value><![CDATA[APP: ]]></value>
			</resourcefield>
			<resourcefield>
				<name>MRVRESP</name>
				<type>String</type>
				<value><![CDATA[MRV-RESP:]]></value>
			</resourcefield>
			<resourcefield>
				<name>MRVDE</name>
				<type>String</type>
				<value><![CDATA[MRV-DE:]]></value>
			</resourcefield>
			<resourcefield>
				<name>MRVTRAC</name>
				<type>String</type>
				<value><![CDATA[MRV-TRACE:]]></value>
			</resourcefield>
			<resourcefield>
				<name>APPDE</name>
				<type>String</type>
				<value><![CDATA[APPL:]]></value>
			</resourcefield>
			<resourcefield>
				<name>MRVCORRID</name>
				<type>String</type>
				<value><![CDATA[CORR-ID: ]]></value>
			</resourcefield>
			<resourcefield>
				<name>HB2BIC8POS</name>
				<type>Integer</type>
				<value><![CDATA[953]]></value>
			</resourcefield>
			<resourcefield>
				<name>HB2SBCHPOS</name>
				<type>Integer</type>
				<value><![CDATA[961]]></value>
			</resourcefield>
			<resourcefield>
				<name>SBCHLEN</name>
				<type>Integer</type>
				<value><![CDATA[3]]></value>
			</resourcefield>
			<resourcefield>
				<name>MTTYPEPOS</name>
				<type>Integer</type>
				<value><![CDATA[950]]></value>
			</resourcefield>
			<resourcefield>
				<name>MTTYPELEN</name>
				<type>Integer</type>
				<value><![CDATA[3]]></value>
			</resourcefield>
			<resourcefield>
				<name>SESSSEQLEN</name>
				<type>Integer</type>
				<value><![CDATA[11]]></value>
			</resourcefield>
			<resourcefield>
				<name>IBLK2LEN</name>
				<type>Integer</type>
				<value><![CDATA[4]]></value>
			</resourcefield>
			<resourcefield>
				<name>HB1SBCHPOS</name>
				<type>Integer</type>
				<value><![CDATA[1175]]></value>
			</resourcefield>
			<resourcefield>
				<name>REJECTPOS</name>
				<type>Integer</type>
				<value><![CDATA[863]]></value>
			</resourcefield>
			<resourcefield>
				<name>ORGASNPOS</name>
				<type>Integer</type>
				<value><![CDATA[30]]></value>
			</resourcefield>
			<resourcefield>
				<name>ORGASNLEN</name>
				<type>Integer</type>
				<value><![CDATA[3]]></value>
			</resourcefield>
			<resourcefield>
				<name>CUSTINDPOS</name>
				<type>Integer</type>
				<value><![CDATA[432]]></value>
			</resourcefield>
			<resourcefield>
				<name>ORGTRNPOS</name>
				<type>Integer</type>
				<value><![CDATA[13]]></value>
			</resourcefield>
			<resourcefield>
				<name>ORGTRNLEN</name>
				<type>Integer</type>
				<value><![CDATA[3]]></value>
			</resourcefield>
			<resourcefield>
				<name>ORGTRNSEQLEN</name>
				<type>Integer</type>
				<value><![CDATA[16]]></value>
			</resourcefield>
			<resourcefield>
				<name>NMKYCIDINDPOS</name>
				<type>Integer</type>
				<value><![CDATA[44]]></value>
			</resourcefield>
			<resourcefield>
				<name>ORIGASNLEN</name>
				<type>Integer</type>
				<value><![CDATA[10]]></value>
			</resourcefield>
			<resourcefield>
				<name>TIMECOMPLETEDPOS</name>
				<type>Integer</type>
				<value><![CDATA[1088]]></value>
			</resourcefield>
			<resourcefield>
				<name>TIMECOMPLETEDLEN</name>
				<type>Integer</type>
				<value><![CDATA[14]]></value>
			</resourcefield>
			<resourcefield>
				<name>ACCTNUMPOS</name>
				<type>Integer</type>
				<value><![CDATA[104]]></value>
			</resourcefield>
			<resourcefield>
				<name>ACCTNUMLEN</name>
				<type>Integer</type>
				<value><![CDATA[10]]></value>
			</resourcefield>
			<resourcefield>
				<name>ORIGDEPTPOS</name>
				<type>Integer</type>
				<value><![CDATA[77]]></value>
			</resourcefield>
			<resourcefield>
				<name>ORIGDEPTLEN</name>
				<type>Integer</type>
				<value><![CDATA[20]]></value>
			</resourcefield>
			<resourcefield>
				<name>CHRGACCTPOS</name>
				<type>Integer</type>
				<value><![CDATA[693]]></value>
			</resourcefield>
			<resourcefield>
				<name>CHRGACCTLEN</name>
				<type>Integer</type>
				<value><![CDATA[10]]></value>
			</resourcefield>
			<resourcefield>
				<name>B3T103POS</name>
				<type>Integer</type>
				<value><![CDATA[212]]></value>
			</resourcefield>
			<resourcefield>
				<name>B3T113POS</name>
				<type>Integer</type>
				<value><![CDATA[215]]></value>
			</resourcefield>
			<resourcefield>
				<name>B3T108POS</name>
				<type>Integer</type>
				<value><![CDATA[219]]></value>
			</resourcefield>
			<resourcefield>
				<name>B3T119POS</name>
				<type>Integer</type>
				<value><![CDATA[235]]></value>
			</resourcefield>
			<resourcefield>
				<name>TAG103LEN</name>
				<type>Integer</type>
				<value><![CDATA[3]]></value>
			</resourcefield>
			<resourcefield>
				<name>TAG113LEN</name>
				<type>Integer</type>
				<value><![CDATA[4]]></value>
			</resourcefield>
			<resourcefield>
				<name>TAG108LEN</name>
				<type>Integer</type>
				<value><![CDATA[16]]></value>
			</resourcefield>
			<resourcefield>
				<name>TAG119LEN</name>
				<type>Integer</type>
				<value><![CDATA[8]]></value>
			</resourcefield>
			<resourcefield>
				<name>TAG108TYP1POS</name>
				<type>Integer</type>
				<value><![CDATA[13]]></value>
			</resourcefield>
			<resourcefield>
				<name>TAG108TYP2POS</name>
				<type>Integer</type>
				<value><![CDATA[13]]></value>
			</resourcefield>
			<resourcefield>
				<name>TAG108TYP2LEN</name>
				<type>Integer</type>
				<value><![CDATA[13]]></value>
			</resourcefield>
			<resourcefield>
				<name>FORMATBLOCK3</name>
				<type>String</type>
				<value><![CDATA[FormatOfBlock3]]></value>
			</resourcefield>
			<resourcefield>
				<name>BLOCK3TYPE1</name>
				<type>String</type>
				<value><![CDATA[Block3Type1]]></value>
			</resourcefield>
			<resourcefield>
				<name>BLOCK3TYPE2</name>
				<type>String</type>
				<value><![CDATA[Block3Type2]]></value>
			</resourcefield>
			<resourcefield>
				<name>BLOCK3TYPE3</name>
				<type>String</type>
				<value><![CDATA[Block3Type3]]></value>
			</resourcefield>
			<resourcefield>
				<name>SENDERBIC</name>
				<type>String</type>
				<value><![CDATA[SenderBiC8]]></value>
			</resourcefield>
			<resourcefield>
				<name>VALIDRCVBIC8</name>
				<type>String</type>
				<value><![CDATA[ValidRcvBIC8]]></value>
			</resourcefield>
			<resourcefield>
				<name>IBLOCK3NONE</name>
				<type>Integer</type>
				<value><![CDATA[0]]></value>
			</resourcefield>
			<resourcefield>
				<name>IBLOCK3TYPE1</name>
				<type>Integer</type>
				<value><![CDATA[1]]></value>
			</resourcefield>
			<resourcefield>
				<name>IBLOCK3TYPE2</name>
				<type>Integer</type>
				<value><![CDATA[2]]></value>
			</resourcefield>
			<resourcefield>
				<name>IBLOCK3TYPE3</name>
				<type>Integer</type>
				<value><![CDATA[3]]></value>
			</resourcefield>
			<resourcefield>
				<name>DONOTDRAINMSG</name>
				<type>Integer</type>
				<value><![CDATA[0]]></value>
			</resourcefield>
			<resourcefield>
				<name>DRAINDUPLICATEDMSG</name>
				<type>Integer</type>
				<value><![CDATA[1]]></value>
			</resourcefield>
			<resourcefield>
				<name>DRAINLARGERMSG</name>
				<type>Integer</type>
				<value><![CDATA[2]]></value>
			</resourcefield>
			<resourcefield>
				<name>NOTDRAINMSG</name>
				<type>String</type>
				<value><![CDATA[No]]></value>
			</resourcefield>
			<resourcefield>
				<name>LESSTHANEXPSEQ</name>
				<type>String</type>
				<value><![CDATA[LessThanExpectedSeq]]></value>
			</resourcefield>
			<resourcefield>
				<name>LARGERTHANEXPSEQ</name>
				<type>String</type>
				<value><![CDATA[GreaterThanExpectedSeq]]></value>
			</resourcefield>
			<resourcefield>
				<name>ADDPDE</name>
				<type>String</type>
				<value><![CDATA[AddPDE]]></value>
			</resourcefield>
			<resourcefield>
				<name>REPLACEINVALIDCHAR</name>
				<type>String</type>
				<value><![CDATA[ReplaceInvalidChar]]></value>
			</resourcefield>
			<resourcefield>
				<name>ASNPREFIXLEN</name>
				<type>Integer</type>
				<value><![CDATA[4]]></value>
			</resourcefield>
			<resourcefield>
				<name>ASNPREFIXLIST</name>
				<type>String</type>
				<value><![CDATA[AsnPrefixList]]></value>
			</resourcefield>
			<resourcefield>
				<name>ASNPREFIX</name>
				<type>String</type>
				<value><![CDATA[AsnPrefix]]></value>
			</resourcefield>
			<resourcefield>
				<name>MAX_ASNPREFIX</name>
				<type>Integer</type>
				<value><![CDATA[16]]></value>
			</resourcefield>
			<resourcefield>
				<name>TRNPREFIXLEN</name>
				<type>Integer</type>
				<value><![CDATA[3]]></value>
			</resourcefield>
			<resourcefield>
				<name>MAX_TRNPREFIX</name>
				<type>Integer</type>
				<value><![CDATA[64]]></value>
			</resourcefield>
			<resourcefield>
				<name>GTMTRNPREFIXLIST</name>
				<type>String</type>
				<value><![CDATA[GTMTrnPrefixList]]></value>
			</resourcefield>
			<resourcefield>
				<name>GTMTRNPREFIX</name>
				<type>String</type>
				<value><![CDATA[GTMTrnPrefix]]></value>
			</resourcefield>
			<resourcefield>
				<name>FMTSUCCESS</name>
				<type>String</type>
				<value><![CDATA[SUCCESS:]]></value>
			</resourcefield>
			<resourcefield>
				<name>FMTFAILURE</name>
				<type>String</type>
				<value><![CDATA[FAILURE:]]></value>
			</resourcefield>
			<resourcefield>
				<name>OFACIND</name>
				<type>String</type>
				<value><![CDATA[{OFAC:]]></value>
			</resourcefield>
			<resourcefield>
				<name>TRANSFORMSKIPLEN</name>
				<type>Integer</type>
				<value><![CDATA[38]]></value>
			</resourcefield>
			<resourcefield>
				<name>CIDLEN</name>
				<type>Integer</type>
				<value><![CDATA[10]]></value>
			</resourcefield>
			<resourcefield>
				<name>SUPPORTNAMEKEY</name>
				<type>String</type>
				<value><![CDATA[SupportNameKey]]></value>
			</resourcefield>
			<resourcefield>
				<name>NAMEKEYPOS</name>
				<type>Integer</type>
				<value><![CDATA[45]]></value>
			</resourcefield>
			<resourcefield>
				<name>NAMEKEYCIDINDPOS</name>
				<type>Integer</type>
				<value><![CDATA[44]]></value>
			</resourcefield>
			<resourcefield>
				<name>NAMEKEYLEN</name>
				<type>Integer</type>
				<value><![CDATA[15]]></value>
			</resourcefield>
			<resourcefield>
				<name>NAMEKEY</name>
				<type>String</type>
				<value><![CDATA[NameKey]]></value>
			</resourcefield>
			<resourcefield>
				<name>NAMEKEYASNLEN</name>
				<type>Integer</type>
				<value><![CDATA[3]]></value>
			</resourcefield>
			<resourcefield>
				<name>NAMEKEYASN</name>
				<type>String</type>
				<value><![CDATA[NameKeyAsn]]></value>
			</resourcefield>
			<resourcefield>
				<name>NAMEKEYTRNLEN</name>
				<type>Integer</type>
				<value><![CDATA[3]]></value>
			</resourcefield>
			<resourcefield>
				<name>NAMEKEYTRN</name>
				<type>String</type>
				<value><![CDATA[NameKeyTrn]]></value>
			</resourcefield>
			<resourcefield>
				<name>CUSTCODELEN</name>
				<type>Integer</type>
				<value><![CDATA[1]]></value>
			</resourcefield>
			<resourcefield>
				<name>CUSTCODE</name>
				<type>String</type>
				<value><![CDATA[CustomerCode]]></value>
			</resourcefield>
			<resourcefield>
				<name>OUTPUTQUELEN</name>
				<type>Integer</type>
				<value><![CDATA[32]]></value>
			</resourcefield>
			<resourcefield>
				<name>OUTPUTQUE</name>
				<type>String</type>
				<value><![CDATA[OutputQueue]]></value>
			</resourcefield>
			<resourcefield>
				<name>DESAPPLEN</name>
				<type>Integer</type>
				<value><![CDATA[3]]></value>
			</resourcefield>
			<resourcefield>
				<name>DESDIRLEN</name>
				<type>Integer</type>
				<value><![CDATA[1]]></value>
			</resourcefield>
			<resourcefield>
				<name>DESAPP</name>
				<type>String</type>
				<value><![CDATA[DesApp]]></value>
			</resourcefield>
			<resourcefield>
				<name>NAMEKEYDEFLIST</name>
				<type>String</type>
				<value><![CDATA[NameKeyDefList]]></value>
			</resourcefield>
			<resourcefield>
				<name>NAMEKEYDEF</name>
				<type>String</type>
				<value><![CDATA[NameKeyDef]]></value>
			</resourcefield>
			<resourcefield>
				<name>MAX_NAMEKEYS</name>
				<type>Integer</type>
				<value><![CDATA[512]]></value>
			</resourcefield>
			<resourcefield>
				<name>ROWDEFLIST</name>
				<type>String</type>
				<value><![CDATA[RowDefList]]></value>
			</resourcefield>
			<resourcefield>
				<name>ROWDEF</name>
				<type>String</type>
				<value><![CDATA[RowDef]]></value>
			</resourcefield>
			<resourcefield>
				<name>MAX_ROWS</name>
				<type>Integer</type>
				<value><![CDATA[32]]></value>
			</resourcefield>
			<resourcefield>
				<name>OUTSRCCODE</name>
				<type>String</type>
				<value><![CDATA[OutSourceCode]]></value>
			</resourcefield>
			<resourcefield>
				<name>OUTSRCCODELEN</name>
				<type>Integer</type>
				<value><![CDATA[3]]></value>
			</resourcefield>
			<resourcefield>
				<name>OUTSRCRCVBIC</name>
				<type>String</type>
				<value><![CDATA[OutSourceRcvBIC]]></value>
			</resourcefield>
			<resourcefield>
				<name>OUTSRCRCVBICLEN</name>
				<type>Integer</type>
				<value><![CDATA[8]]></value>
			</resourcefield>
			<resourcefield>
				<name>SENDINGBANKPOS</name>
				<type>Integer</type>
				<value><![CDATA[1172]]></value>
			</resourcefield>
			<resourcefield>
				<name>SENDINGBANKLEN</name>
				<type>Integer</type>
				<value><![CDATA[6]]></value>
			</resourcefield>
			<resourcefield>
				<name>OUTSRCCODEPOS</name>
				<type>Integer</type>
				<value><![CDATA[1175]]></value>
			</resourcefield>
			<resourcefield>
				<name>SWFADDRESSPOS</name>
				<type>Integer</type>
				<value><![CDATA[953]]></value>
			</resourcefield>
			<resourcefield>
				<name>SWFADDRESSLEN</name>
				<type>Integer</type>
				<value><![CDATA[11]]></value>
			</resourcefield>
			<resourcefield>
				<name>SUPPORTOUTSRC</name>
				<type>String</type>
				<value><![CDATA[SupportOutSourcing]]></value>
			</resourcefield>
			<resourcefield>
				<name>OUTSRCDEFLIST</name>
				<type>String</type>
				<value><![CDATA[OutSrcDefList]]></value>
			</resourcefield>
			<resourcefield>
				<name>OUTSRCDEF</name>
				<type>String</type>
				<value><![CDATA[OutSrcDef]]></value>
			</resourcefield>
			<resourcefield>
				<name>MAX_OUTSRC</name>
				<type>Integer</type>
				<value><![CDATA[32]]></value>
			</resourcefield>
			<resourcefield>
				<name>ASSIGNLT</name>
				<type>String</type>
				<value><![CDATA[AssignLT]]></value>
			</resourcefield>
			<resourcefield>
				<name>CREATETAG108</name>
				<type>String</type>
				<value><![CDATA[CreateTAG108]]></value>
			</resourcefield>
			<resourcefield>
				<name>SWITCHTOIBR</name>
				<type>String</type>
				<value><![CDATA[SwitchToIBR]]></value>
			</resourcefield>
			<resourcefield>
				<name>USE1ASIBRFLAG</name>
				<type>String</type>
				<value><![CDATA[Use1AsIBRFlag]]></value>
			</resourcefield>
			<resourcefield>
				<name>BLOCK2TID</name>
				<type>String</type>
				<value><![CDATA[Block2Tid]]></value>
			</resourcefield>
			<resourcefield>
				<name>SWITCHIBRDEFLIST</name>
				<type>String</type>
				<value><![CDATA[SwiftIBRDefList]]></value>
			</resourcefield>
			<resourcefield>
				<name>SWITCHIBRDEF</name>
				<type>String</type>
				<value><![CDATA[SwiftIBRDef]]></value>
			</resourcefield>
			<resourcefield>
				<name>SNDBIC8</name>
				<type>String</type>
				<value><![CDATA[SndBic8]]></value>
			</resourcefield>
			<resourcefield>
				<name>SNDSUBBRANCH</name>
				<type>String</type>
				<value><![CDATA[SndSubBranch]]></value>
			</resourcefield>
			<resourcefield>
				<name>RCVBIC8</name>
				<type>String</type>
				<value><![CDATA[RcvBic8]]></value>
			</resourcefield>
			<resourcefield>
				<name>RCVSUBBRANCH</name>
				<type>String</type>
				<value><![CDATA[RcvSubBranch]]></value>
			</resourcefield>
			<resourcefield>
				<name>DESDIRECTION</name>
				<type>String</type>
				<value><![CDATA[DesDirection]]></value>
			</resourcefield>
			<resourcefield>
				<name>BICDEFLIST</name>
				<type>String</type>
				<value><![CDATA[BicDefList]]></value>
			</resourcefield>
			<resourcefield>
				<name>BICDEF</name>
				<type>String</type>
				<value><![CDATA[BicDef]]></value>
			</resourcefield>
			<resourcefield>
				<name>MAX_SWITCHIBRSTR</name>
				<type>Integer</type>
				<value><![CDATA[64]]></value>
			</resourcefield>
			<resourcefield>
				<name>MAX_SWITCHIBRBICDEF</name>
				<type>Integer</type>
				<value><![CDATA[64]]></value>
			</resourcefield>
			<resourcefield>
				<name>EDIMGOUT</name>
				<type>String</type>
				<value><![CDATA[EDIMGOUT]]></value>
			</resourcefield>
			<resourcefield>
				<name>MNAMEKEY</name>
				<type>String</type>
				<value><![CDATA[{NAMEKEY:]]></value>
			</resourcefield>
			<resourcefield>
				<name>MASNPREFIX</name>
				<type>String</type>
				<value><![CDATA[{ASNPREFIX:]]></value>
			</resourcefield>
			<resourcefield>
				<name>CID</name>
				<type>String</type>
				<value><![CDATA[{CID:]]></value>
			</resourcefield>
			<resourcefield>
				<name>CIFLOOKUP</name>
				<type>String</type>
				<value><![CDATA[{CIFLOOKUP:]]></value>
			</resourcefield>
			<resourcefield>
				<name>OUTSRC</name>
				<type>String</type>
				<value><![CDATA[{OUTSRC:]]></value>
			</resourcefield>
			<resourcefield>
				<name>OUTSRCLEN</name>
				<type>Integer</type>
				<value><![CDATA[6]]></value>
			</resourcefield>
			<resourcefield>
				<name>STDOUTSRCCODEPOS</name>
				<type>Integer</type>
				<value><![CDATA[3]]></value>
			</resourcefield>
			<resourcefield>
				<name>CIFINFO</name>
				<type>String</type>
				<value><![CDATA[CIFInfo]]></value>
			</resourcefield>
			<resourcefield>
				<name>CIFFETCH</name>
				<type>String</type>
				<value><![CDATA[CIFFetch]]></value>
			</resourcefield>
			<resourcefield>
				<name>SUPPORTCIBC</name>
				<type>String</type>
				<value><![CDATA[SupportCIBC]]></value>
			</resourcefield>
			<resourcefield>
				<name>SRCREFPOS</name>
				<type>Integer</type>
				<value><![CDATA[30]]></value>
			</resourcefield>
			<resourcefield>
				<name>SRCREFLEN</name>
				<type>Integer</type>
				<value><![CDATA[18]]></value>
			</resourcefield>
			<resourcefield>
				<name>TOTIMESTAMPPOS</name>
				<type>Integer</type>
				<value><![CDATA[48]]></value>
			</resourcefield>
			<resourcefield>
				<name>TOTIMESTAMPLEN</name>
				<type>Integer</type>
				<value><![CDATA[7]]></value>
			</resourcefield>
			<resourcefield>
				<name>TOADDRPOS</name>
				<type>Integer</type>
				<value><![CDATA[55]]></value>
			</resourcefield>
			<resourcefield>
				<name>TOADDRLEN</name>
				<type>Integer</type>
				<value><![CDATA[12]]></value>
			</resourcefield>
			<resourcefield>
				<name>TOSEQPOS</name>
				<type>Integer</type>
				<value><![CDATA[67]]></value>
			</resourcefield>
			<resourcefield>
				<name>TOSEQLEN</name>
				<type>Integer</type>
				<value><![CDATA[5]]></value>
			</resourcefield>
			<resourcefield>
				<name>FROMTIMESTAMPPOS</name>
				<type>Integer</type>
				<value><![CDATA[74]]></value>
			</resourcefield>
			<resourcefield>
				<name>FROMTIMESTAMPLEN</name>
				<type>Integer</type>
				<value><![CDATA[7]]></value>
			</resourcefield>
			<resourcefield>
				<name>FROMADDRPOS</name>
				<type>Integer</type>
				<value><![CDATA[81]]></value>
			</resourcefield>
			<resourcefield>
				<name>FROMADDRLEN</name>
				<type>Integer</type>
				<value><![CDATA[12]]></value>
			</resourcefield>
			<resourcefield>
				<name>FROMSEQPOS</name>
				<type>Integer</type>
				<value><![CDATA[93]]></value>
			</resourcefield>
			<resourcefield>
				<name>FROMSEQLEN</name>
				<type>Integer</type>
				<value><![CDATA[5]]></value>
			</resourcefield>
			<resourcefield>
				<name>CIBCMTTYPEPOS</name>
				<type>Integer</type>
				<value><![CDATA[100]]></value>
			</resourcefield>
			<resourcefield>
				<name>CIBCMTTYPELEN</name>
				<type>Integer</type>
				<value><![CDATA[3]]></value>
			</resourcefield>
			<resourcefield>
				<name>MSGTEXTPOS</name>
				<type>Integer</type>
				<value><![CDATA[108]]></value>
			</resourcefield>
			<resourcefield>
				<name>MSGEND</name>
				<type>String</type>
				<value><![CDATA[-]]></value>
			</resourcefield>
			<resourcefield>
				<name>MSGENDPDE</name>
				<type>String</type>
				<value><![CDATA[-PDE]]></value>
			</resourcefield>
			<resourcefield>
				<name>MSGENDAPDE</name>
				<type>String</type>
				<value><![CDATA[<03><00>]]></value>
			</resourcefield>
			<resourcefield>
				<name>KEEPSWFHEADERINFO</name>
				<type>String</type>
				<value><![CDATA[KeepSwfHeaderInfo]]></value>
			</resourcefield>
			<resourcefield>
				<name>MAX_CIF_LENGTH</name>
				<type>Integer</type>
				<value><![CDATA[256]]></value>
			</resourcefield>
			<resourcefield>
				<name>CORRELATIONID</name>
				<type>String</type>
				<value><![CDATA[CorrelationID]]></value>
			</resourcefield>
			<resourcefield>
				<name>USEASN</name>
				<type>String</type>
				<value><![CDATA[UseAsn]]></value>
			</resourcefield>
			<resourcefield>
				<name>CHECKERRSTATUS</name>
				<type>String</type>
				<value><![CDATA[CheckErrStatusInPassarea]]></value>
			</resourcefield>
			<resourcefield>
				<name>ICORRNORMAL</name>
				<type>Integer</type>
				<value><![CDATA[1]]></value>
			</resourcefield>
			<resourcefield>
				<name>ICORRSTANDARD</name>
				<type>Integer</type>
				<value><![CDATA[2]]></value>
			</resourcefield>
			<resourcefield>
				<name>ICORRUSEASN</name>
				<type>Integer</type>
				<value><![CDATA[3]]></value>
			</resourcefield>
			<resourcefield>
				<name>BLOCK4ONLY</name>
				<type>String</type>
				<value><![CDATA[Block4Only]]></value>
			</resourcefield>
			<resourcefield>
				<name>OUTSRCLIST</name>
				<type>String</type>
				<value><![CDATA[OutSrcList]]></value>
			</resourcefield>
			<resourcefield>
				<name>MAX_OUTSRCLIST</name>
				<type>Integer</type>
				<value><![CDATA[16]]></value>
			</resourcefield>
			<resourcefield>
				<name>PDE</name>
				<type>String</type>
				<value><![CDATA[PDE/]]></value>
			</resourcefield>
			<resourcefield>
				<name>PDELEN</name>
				<type>Integer</type>
				<value><![CDATA[4]]></value>
			</resourcefield>
			<resourcefield>
				<name>ERRSTATUSPOS</name>
				<type>Integer</type>
				<value><![CDATA[877]]></value>
			</resourcefield>
			<resourcefield>
				<name>CASFMTERR</name>
				<type>String</type>
				<value><![CDATA[FMT FAILURE]]></value>
			</resourcefield>
			<resourcefield>
				<name>GAPCHECK</name>
				<type>String</type>
				<value><![CDATA[GapCheck]]></value>
			</resourcefield>
			<resourcefield>
				<name>FETCHOP</name>
				<type>String</type>
				<value><![CDATA[fetchOp]]></value>
			</resourcefield>
			<resourcefield>
				<name>SAVEOP</name>
				<type>String</type>
				<value><![CDATA[saveOp]]></value>
			</resourcefield>
			<resourcefield>
				<name>CHECKOP</name>
				<type>String</type>
				<value><![CDATA[checkOp]]></value>
			</resourcefield>
			<resourcefield>
				<name>GAPCHECKBYSVC</name>
				<type>String</type>
				<value><![CDATA[GapCheckBySvc]]></value>
			</resourcefield>
			<resourcefield>
				<name>STOP</name>
				<type>String</type>
				<value><![CDATA[STOP]]></value>
			</resourcefield>
			<resourcefield>
				<name>NUMOFMSG</name>
				<type>String</type>
				<value><![CDATA[NumberOfMessagesToDrain]]></value>
			</resourcefield>
			<resourcefield>
				<name>SUPPORTGPII</name>
				<type>String</type>
				<value><![CDATA[SupportGPII]]></value>
			</resourcefield>
			<resourcefield>
				<name>METADATABUFLEN</name>
				<type>Integer</type>
				<value><![CDATA[1024]]></value>
			</resourcefield>
			<resourcefield>
				<name>header</name>
				<type>String</type>
				<value><![CDATA[{H:{TYP:SWF}}]]></value>
			</resourcefield>
			<resourcefield>
				<name>sBlock</name>
				<type>String</type>
				<value><![CDATA[{S:]]></value>
			</resourcefield>
			<resourcefield>
				<name>sSource</name>
				<type>String</type>
				<value><![CDATA[{SRC:]]></value>
			</resourcefield>
			<resourcefield>
				<name>sMsgtrace</name>
				<type>String</type>
				<value><![CDATA[{MSGTRACE:]]></value>
			</resourcefield>
			<resourcefield>
				<name>sEnd</name>
				<type>String</type>
				<value><![CDATA[}]]></value>
			</resourcefield>
			<resourcefield>
				<name>sAppId</name>
				<type>String</type>
				<value><![CDATA[{APP:]]></value>
			</resourcefield>
			<resourcefield>
				<name>sPrio</name>
				<type>String</type>
				<value><![CDATA[{PRIO:]]></value>
			</resourcefield>
			<resourcefield>
				<name>sEndEnd</name>
				<type>String</type>
				<value><![CDATA[}]]></value>
			</resourcefield>
			<resourcefield>
				<name>sErrMsg</name>
				<type>String</type>
				<value><![CDATA[{ERRMSG:]]></value>
			</resourcefield>
			<resourcefield>
				<name>sErrCode</name>
				<type>String</type>
				<value><![CDATA[{ERRCODE:]]></value>
			</resourcefield>
			<resourcefield>
				<name>sOrgMTSTrn</name>
				<type>String</type>
				<value><![CDATA[{ORGMTSTRN:]]></value>
			</resourcefield>
			<resourcefield>
				<name>sDte</name>
				<type>String</type>
				<value><![CDATA[{DTE:]]></value>
			</resourcefield>
			<resourcefield>
				<name>sMrvTrc</name>
				<type>String</type>
				<value><![CDATA[{MRVTRC:]]></value>
			</resourcefield>
			<resourcefield>
				<name>sASN</name>
				<type>String</type>
				<value><![CDATA[{ASN:]]></value>
			</resourcefield>
			<resourcefield>
				<name>sORIGASN</name>
				<type>String</type>
				<value><![CDATA[{ORIGASN:]]></value>
			</resourcefield>
			<resourcefield>
				<name>sTIMECMPLT</name>
				<type>String</type>
				<value><![CDATA[{TIMECMPLT:]]></value>
			</resourcefield>
			<resourcefield>
				<name>sCKOFAC</name>
				<type>String</type>
				<value><![CDATA[{CKOFAC:]]></value>
			</resourcefield>
			<resourcefield>
				<name>sBNYTRN</name>
				<type>String</type>
				<value><![CDATA[{BNYTRN:]]></value>
			</resourcefield>
			<resourcefield>
				<name>sCUSTID</name>
				<type>String</type>
				<value><![CDATA[{CUSTID:]]></value>
			</resourcefield>
			<resourcefield>
				<name>sRCVADD1</name>
				<type>String</type>
				<value><![CDATA[{RCVADD1:]]></value>
			</resourcefield>
			<resourcefield>
				<name>sRCVADD2</name>
				<type>String</type>
				<value><![CDATA[{RCVADD2:]]></value>
			</resourcefield>
			<resourcefield>
				<name>sDESAPP</name>
				<type>String</type>
				<value><![CDATA[{DESAPP:]]></value>
			</resourcefield>
			<resourcefield>
				<name>sOrgRcvBIC</name>
				<type>String</type>
				<value><![CDATA[{ORGRCVBIC:]]></value>
			</resourcefield>
			<resourcefield>
				<name>sSOURCEAPP</name>
				<type>String</type>
				<value><![CDATA[{SOURCEAPP:]]></value>
			</resourcefield>
			<resourcefield>
				<name>sDESOUTPUTQ</name>
				<type>String</type>
				<value><![CDATA[{DESOUTPUTQ:]]></value>
			</resourcefield>
			<resourcefield>
				<name>sDESDIR</name>
				<type>String</type>
				<value><![CDATA[{DESDIRECTION:]]></value>
			</resourcefield>
			<resourcefield>
				<name>sMTTYPE</name>
				<type>String</type>
				<value><![CDATA[{MTTYPE:]]></value>
			</resourcefield>
			<resourcefield>
				<name>sTRN</name>
				<type>String</type>
				<value><![CDATA[{TRN:]]></value>
			</resourcefield>
			<resourcefield>
				<name>sCID</name>
				<type>String</type>
				<value><![CDATA[{CID:]]></value>
			</resourcefield>
			<resourcefield>
				<name>sNAMEKEY</name>
				<type>String</type>
				<value><![CDATA[{NAMEKEY:]]></value>
			</resourcefield>
			<resourcefield>
				<name>sACCNUM</name>
				<type>String</type>
				<value><![CDATA[{ACCNUM:]]></value>
			</resourcefield>
			<resourcefield>
				<name>sTRNPA</name>
				<type>String</type>
				<value><![CDATA[{TRNPA:]]></value>
			</resourcefield>
			<resourcefield>
				<name>sORIGDEPT</name>
				<type>String</type>
				<value><![CDATA[{ORIGDEPT:]]></value>
			</resourcefield>
			<resourcefield>
				<name>sCHRGACCT</name>
				<type>String</type>
				<value><![CDATA[{CHRGACCT:]]></value>
			</resourcefield>
			<resourcefield>
				<name>sRECVADD1</name>
				<type>String</type>
				<value><![CDATA[{RECVADD1:]]></value>
			</resourcefield>
			<resourcefield>
				<name>sRECVADD2</name>
				<type>String</type>
				<value><![CDATA[{RECVADD2:]]></value>
			</resourcefield>
			<resourcefield>
				<name>sRECVADD3</name>
				<type>String</type>
				<value><![CDATA[{RECVADD3:]]></value>
			</resourcefield>
			<resourcefield>
				<name>sRECVADD4</name>
				<type>String</type>
				<value><![CDATA[{RECVADD4:]]></value>
			</resourcefield>
			<resourcefield>
				<name>sCHRGADD1</name>
				<type>String</type>
				<value><![CDATA[{CHRGADD1:]]></value>
			</resourcefield>
			<resourcefield>
				<name>sCHRGADD2</name>
				<type>String</type>
				<value><![CDATA[{CHRGADD2:]]></value>
			</resourcefield>
			<resourcefield>
				<name>sCHRGADD3</name>
				<type>String</type>
				<value><![CDATA[{CHRGADD3:]]></value>
			</resourcefield>
			<resourcefield>
				<name>sCHRGADD4</name>
				<type>String</type>
				<value><![CDATA[{CHRGADD4:]]></value>
			</resourcefield>
			<resourcefield>
				<name>sMSGID</name>
				<type>String</type>
				<value><![CDATA[{MSGID:]]></value>
			</resourcefield>
			<resourcefield>
				<name>sOUTSRCCODE</name>
				<type>String</type>
				<value><![CDATA[{OUTSRCCODE:]]></value>
			</resourcefield>
			<resourcefield>
				<name>SUCCESS</name>
				<type>Integer</type>
				<value><![CDATA[00]]></value>
			</resourcefield>
			<resourcefield>
				<name>BSMERR</name>
				<type>String</type>
				<description><![CDATA[This is defined in the file "fniCommSysLog.h"]]></description>
				<value><![CDATA[BSM_Error]]></value>
			</resourcefield>
			<resourcefield>
				<name>BICList</name>
				<type>String</type>
				<list>true</list>
				<valuevalue>
			</resourcefield>
			<resourcefield>
				<name>OrigBicList</name>
				<type>String</type>
				<list>true</list>
				<value><![CDATA[BKENGB2L,BOTKGB2L,BOTKHKHH,BOTKJPJT,CLLECHZZ,CLSBGB4C,CLSBGB5C,CLSBUS33,COBADEFF,CRESBSNS,CRESDE55,CRESITMM,CRLYFRPP,CSFBGB2L,CSHKHKHH,CSPBSGSG,DEUTDEFF,DEUTPLPX,EBAPFRPP,EBASBEBB,HKICHKHH,IRVTJPJX,MARKDEFF,OMGOUS33,PSSTFRPP,SICVFRPP,SOGEFRPP,STRAZAJJ,SWHQBEBB,SWHQJPJT,SWTRBEBB,SWTRGB2L,UBSWGB2L,STANALTA,CITCANCC,BNANAOLA,NABAATWW,SBGSAT2S,RSBKAUSR,ANZBAU2S,NABZAZ2A,CBBSBA2A,FCIBBBB2,HBKABE22,BNBGBGSA,BNPABHBC,BNTBBMHS,DEUTBRSP,BBOTBWGA,ROYCCAT3,BCANCAW2,NOVRCHBH,LOYDCHGG,UBSWCHZH,BCECCLRR,BEACCMCP,SMITCNSU,SMBCCN2H,HASPDEHH,HYVEDEMM,SWBSDESS,SPKRDE33,WELADE8L,SYBKDK22,BCRDDOSA,BALGDZAP,HABAEE2X,CBEGEGCA,BNPAESMS,RBFJFJFA,NWBKGBCE,AIBKGB2X,BAGHGHA2,LOYDGIGI,BAGUGTGB,ABNAHKAA,HSVPHR2B,BUHEHTPP,MANEHU2B,IRCEIEDD,FIRBILIT,EIHBIRTH,CBJOJOA2,CHASJPJT,CBKEKENA,CBKUKWKT,CBCELKLA,CBLELSMA,CBVILT2X,BNPALULS,LACBLV2A,CBLJLYLY,BKAMMAMA,NBRMMK2A,BOMMMUPA,BKTRMXMC,CBKNNANA,SWHQNLNL,DNBANOKX,PHCBPHMA,SBPPPKKR,BSCHPRSX,BNPAQAQQ,CITIROBX,NBSRRSBD,BNPASARB,BSDNSDKJ,NDEASEGG,ESSESESM,ABNASG2A,TOLRSI2B,BSLESLFA,BCAOSNDP,CENRSVSS,SWAZSZMA,BOTHTHBP,SENBTM22,CBTTTTPR,CITITW2P,TANZTZTA,GRBKUA2X,UGBAUGKB,SWHQUSUS,BCVEVECB,SHBKVNVN,SARBZAJP,REBZZWHA,BNPAAEAD,STANALTB,INGBANCP,BNANAOLD,GIBAATWW,HAABAT22,RSBKAUYZ,NATAAU3A,NABZAZ2B,CBBSBA2B,CBABBBBG,ABNABE2A,BNBGBGSB,BMAGBHBA,BBDABMHP,LUKBCH22,BCECCLRS,COMMCNSH,CHASCN2G,KOMBCZPP,WELADEDD,HSHNDEHH,DKNBDKKA,BCRDDOSP,CBEGEGCB,DCRIFRSA,DCRIFRTA,RBOSGBCE,NWBKGB3E,BAGHGHA3,GBOSHR2K,MANEHUHH,POALILIT,RBOSIMD2,BPVIIT3T,BCITIT4A,CBJOJOA3,ECCBKNSK,BOKRKRSP,CBCELKLB,HANDLULL,LACBLV2B,BLICMCMC,BOMMMUPB,CSFBMXMF,MBBEMYKA,CBKNNANB,FVLBNL22,NBHKNOKK,BPPRPRSB,TRFDROBA,VTBRRUM2,ESSESESS,HSBCSKBB,CBTTTTP5,TANZTZTB,OCBCVNVX,TRGTXEPM,SARBZAJ2,BAZAZMLA,REBZZWHB,DIFCAEAB,WPACAUSR,WPACAU2F,NATAAU3F,NABZAZ2C,HAABBA2B,BNBGBGSD,BMAGBHBB,LOMLBMHA,BOFMCAM3,CIBCCATT,CPAACA23,CHASCHGX,CRESCHZZ,BPLSCH22,SMBCCNSU,WELADEDL,ACTSDEMM,WELADE3B,DKNBDKKB,SPFBFIHH,BHVTFRPP,BOFAGB2U,BKENGB33,NBHRHR2D,ISRAILIR,RBOSIMDD,BPALIT3L,ANSLJESH,ITAUKYKT,CBCELKLS,MONTMCMC,BARCMUMU,BBSNNOKA,PKBLPLPL,CGDIPTPL,NBORROBP,VSTKRUM2,WPACSGSL,UBSWTWTP,HSBCVNVH,GBSEZAJ2,BAZAZMLB,ABKKAEAA,CITCANCU,ANGOATWX,CTBAAUSR,NATAAU3R,NOSCBSNT,ROYCCAT2,CPAACA22,KOEXCNBJ,ABNACNSN,WELADEDN,FMBKDEMM,WELADE3D,ABNADKKS,LHVBEE22,ESSEFIHX,CCFRFRSP,BOFIGB2B,DRESHUHB,AIBKIE2E,ISRAILIA,BITAITRR,SMITJPJT,UBSWKRSE,ITAUKYKC,NOMAMUMU,CIBBMYKA,BBSNNOKB,PHCBPHMB,HYVEPLP2,OMICPTPL,NBORROBS,SABRRUM3,SWHQUSUB,USBKUS5I,CRESAEAF,GIRCANCC,OEKOATWW,RSBKAUYY,WPACAU2S,ANZBAU3R,BMAGBHBM,BCECCLRF,KOEXCNBD,PBOCCNSF,WELADEDR,WELADE3E,DKNBDKK3,MRBAEGCB,BBVAESMM,BNPAFRPP,BOFIGB22,DEFLIE2X,XTAEILIC,BPALIT34,RBOSJESH,DEUTKYKX,HSBCMYKA,ABNANL2A,PHCBPHMD,BBRUPTPL,INGBROBP,SWTRSGSG,SCBLTWTX,BARCUS3M,COCUZWHA,ABNAAEAA,GIBAATWG,SWHQBEBA,BAVOBSNS,BOFMCAM2,BNPACNS8,WELADE3M,NDEADKK2,BOFSGB2L,BARCGB33,CRFIIT3P,BKCHKRSE,KBCFKYKX,PARBLULA,RHBBMYKA,ESSENOKX,INGBROBU,UBSWRUMM,GEBASGSA,OCBCTHBK,OCBCTWTP,SWHQUSUC,BOFAUS6P,NBOEZAJ2,DEUTAEAA,RSBKAUYX,CBBHBSNR,BBRUCHGT,BNPACNBJ,DBSSCNSU,WELADE3L,ESSEDKKK,BOFSGB2S,SWHQHKHH,AIBKIE2D,CIPBITM2,ICRAITRA,UNCRIT2T,BCITIT3C,OCBCMYKL,WPACNZ2W,IBLSPTPP,RIKSSESB,DEUTSGSR,CBKCUS4S,IVESZAJ2,CHASAU2X,BNDCCAMM,AGRICHGX,KBZGCH22,ESSECNSH,WELADE3S,CHASESM3,BARCIE2D,BCITITMM,UNCRIT2B,CHASKRSE,WELAKYKX,NBHKNOKA,CBRFRUM2,RIKSSESR,INGBATWW,CLIEBEBA,SOGECAMB,DEUTCHGG,WELADE3W,VPDKDKKK,SABNESMM,SELBIT22,OCBCKRSE,ROYCKYKT,MALALULB,NBHKNOKB,SPPKSESA,USBKUS4T,MACQAU2E,VGRDAU3M,CLIEBEBB,CBBABSNS,PICTCAM2,UBSWCATT,INSECHZZ,SCBLCNSX,MIDLESMX,IBSPIT2P,CITCKYKY,DRESLULB,DNBANOKC,AVPSNZ23,BRUNRUMM,RIKSSESS,BOFAUS6S,DEUTZAJX,CLIIBEBA,GENOCHZZ,BASECH23,IBKOCNSZ,BNPAESMZ,MLMBIE2D,IBSPIT2U,BNPARUMV,DNBASESS,RABOSGSB,CHASUSU9,BNPAUS3N,ABSAZAJ2,CLIIBEBB,ABNACHZ8,BKCHCNBS,OCBCCNSH,BNPAESMH,AGITIE22,MOTIITMM,IBSPIT2V,DEUTLULB,FTSBNL2R,RBNZNZ2S,VPCSSESS,CITISGSB,SWHQUSUW,SWHQBEBN,IBKOCNBQ,HVBKCNSB,BIKUDEFF,PARBESMH,INVDIE2D,CRFIIT2S,ESASNZ2A,SOGERUMM,SWHQUSUD,KOEXUS6L,LISAZAJB,MACQAU2I,DRESDEFF,SOGEESMM,BCITFRPP,HYVEIT22,CEDELULL,ESASNZ2B,DRESPLPW,STRAZAJ2,ABNAAU2B,BBRUESMX,CHASIE2D,IBSPIT2F,BYLALULB,ASBBNZ2A,ESSEPLPW,INGBSGSG,BRASUS3M,YMBKCNBD,METZDEFF,DEUTGB2L,HKMAHKHH,CITCIE2D,BPALIT2C,RBNZNZ22,ESSESESG,CNORUS3M,GBSEZAJ3,ABNAAU2E,IBKOCNBY,CCFRFRCR,BPALIT2M,DBSSJPJS,OCBCSGSG,SBZAZAJJ,RSBKAU2S,MLCMCHZH,DBSSCNBS,GENODEFF,SWHQHKHK,CITIJPJT,DGZFLULI,MGTCBEBE,CITCCATT,LAGIDE6S,SOGEFR2A,CMBEIE2M,PARBITMH,BATAIT2F,GENOLULL,RABONL2U,ABNAAU2I,CBSWCHZZ,BKENGB54,WELAIE2X,SOGEITMM,CHGKJPJZ,BLICSGSX,USBKUS6W,BSCHBEBR,NOSCBSNS,SWRECHZH,CBKOJPJS,SCBLSGSG,FBOCUS6L,DEUTAU2S,CITCBSNS,UBSWCHZ9,UBSWCNBJ,BKENGB42,DSLBLULB,CSEVZAJJ,RABOAU2B,LOYDGB2L,BKENGB43,FUJIHKHF,BPMOLULS,BNPABHBT,CCFRFRCC,LOYDGB22,UBBRLULX,FLORNL2A,SOGEAU2B,BNPABHBW,BCITITMX,UBSWJPJ9,PARBLULL,WELASGSE,SCBKUS6S,SHBKCNBJ,SASYHKHS,INGBITMM,ESSESGSG,TDOMAU2S,SMBCCNBJ,KOEXDEFA,HSBCHKHT,NBILITMM,MTBCJPJ2,INGBNL2S,BBSNNOKK,MASGSGSM,WFBIUS6T,BKCHAU2A,KWHKCNBS,CLFRFRCC,CITIFRPP,HSBCHKHI,BARCJPJ2,CITINL2A,MASGSGSA,BOFAUS6M,UBSWAU2S,PARBBEBZ,CHASCNBJ,RBOSGB2L,DEUTJPJ9,CRESAU2F,EBASBEBA,CHASCNBC,RBOSGB2M,EMIDITMM,YTBCJPJ2,FNETLULA,SVBKUS6X,EBASBEBC,CHASCNBD,CHASDEFB,RBOSGB2S,RBOSITMM,IKBDLULA,SWHQNLNW,NEDSZAJJ,OCBCAU2S,EBASBEBD,CIYUCNBA,COBADEFI,ROYCGB22,NWBKGB55,ABNAHKHH,LUMIUS3P,RBOSAU2S,EBASBEBE,BHFBLULA,ABNANL2W,BOFAUS6H,SARBZAJ3,EBASBEBF,MGTCCHZZ,BKTDDEFF,BKIDFRPP,CRLYJPJ9,SARBZAJ4,EBASBEBG,DEAMCHZH,SCIMLULL,ICBCUS6S,EBASBEBH,BARCDEFF,BARCJPJ9,OCBCUS6L,EBASBEBI,SWHQCHZH,HKMAHKHC,CHASLULA,ABNANL2R,MASGSGSG,EBASBEBJ,SWHQCHZW,UBSWHKH2,HSHNLULB,CITCNL2A,ABSAZAJ3,EBASBEBK,RBOSCHZX,MIDLFRCP,CBKOHKHH,BGLLLULL,PNBPUS3N,EBASBEBL,MIBSFRPX,CRESLULF,EBASBEBM,CCBPFRPP,EBASBEBN,BARCFRPB,STBCJPJ2,CITILUL2,BDFEFRPP,HSBCHKHP,BELALULL,SBOSUS3C,RBOSHKHX,CSAMLULF,SWHQBEBC,BLICHKHK,MHCBJPJ4,SBOSUS3F,SCBLHKHH,CHASJPJZ,ERPABEBA,MIDLFRPX,CHASJPJ9,SBOSUS3N,ERPABEBC,HGASHKHH,MLCOJPJX,SBOSUS3U,ERPABEBD,NOSCHKH2,ERPABEBE,CENAHKHR,ERPABEBF,BNPAJPJ2,DABAGB2B,ERPABEBG,RTGPDEFA,NSMBFRPP,MUGCLULL,UBSWSGSG,ERPABEBH,RTGPDEFB,AGRIFRPI,NDEAUS3N,ERPABEBI,RTGPDEFF,BDERUS3M,ERPABEBJ,SWTRHKHH,TCSBJPJ2,ICBKLULU,INDSUS3M,ERPABEBK,MHCBJPJ2,KBLXLULL,UBSWUS33,LASLUS44,ERPABEBL,CTSBGB22,MHCBJPJ3,CITCLULL,ERPABEBM,AEIBGB2X,ROTHGGSA,BNPAHKHP,MHCBJPJT,BDGLLULX,ERPABEBN,MLCOJPJD,FRIMLULL,PBNKDEFF,REARGGSX,UBSWHKHH,DIWAJPJT,POALLUL2,BARCUS33,NWBKGB2L,BARCFRPP,BBHCUS33,BOFSGB22,ROYCUS3X,MLIBGB2X,CSDCGGSX,COBALULU,ESSEDE5F,RBOSGGSX,COBALULX,BSDTUS33,MNBDUS4D,VPLULULL,PARBFRPM,HKICHKHA,DEUTJPJ7,UBSWSGSX,CCFRFRPP,BNPAUS4H,MSFFDEFP,HKICHKHB,BARCSGSG,SOGEFRPM,SWHQGB2L,BLTDSGSX,ECBFDEFF,BARCSGSW,CITIUS33,AEIBUS33,LOYDGB2U,SHBKHKHH,BSGPSGSG,KREDBEBB,CMCIFRPA,OCSPSGSG,GKCCBEBB,EUXCDEFZ,CMCIFRPB,CNORUS44,ACCOBEB2,UBSWDEFF,MHBKJPJT,CNORUS33,DEUTDE5F,BSUIFRPP,KBENGB22,GSICSGSF,CMCIFR2A,UBSWJPJT,AEFAUS4B,HSBCGB22,SLBSDEFP,YBTPUS33,XCMEUS4F,ESSEDEFF,PFSIUS4D,FTSBDEFF,EWBKHKHH,USBKUS44,DAKVDEFF,CMCIFR2N,HKICHKHC,RBOSSGSX,ZENBJPJ2,BRIPUS44,CCSOFR2B,BOTKJPJ2,RBOSSGSG,BDFEFR2T,RFLCGB2S,BNPAUS3M,DEFLGB22,LTCBUS3T,TDOMJPJ2,IRVTJPJT,SBNYUS33,EBAPFRPA,ESPCUS3N,INGBUS3N,BDFEFR2L,DUBUFR2N,SWHQUS3N,CMBRFR2C,CITIGB22,EBAPFRPS,ESSEFRPX,BCHIUS3M,CHASFRPB,TYNDGB22,CAZEHKHH,OCBCJPJT,EUXCDEFF,CEPAFRPP,CHASGB22,BKCHHKHH,MHCBJPJ5,NMRSJPJX,NMRSJPJL,CSFPDEFF,NSBLJPJ2,CITIHKHC,MHSCJPJ2,NOSCHKHH,RBOSJPJX,SIMLGB22,BOFAHKHU,NWSJJPJT,BKENGB24,BKENGB22,BKENGB23,OCBCHKHH,BNPAUS3C,NWBKGB3L,SWHQHKHW,EXTEUS3N,PNBPHKHS,SSCLUS3B,SBOSGB22,CTBAHKHK,TDOMGB2E,PERLGB22,NATCUS3C,CSTDGB3L,ABNAGB2P,NECINL2A,CIKBBEBB,FRBKNL2L,MLCOUS3B,PARBDEFH,SOGENL2A,MLCOUS3G,SOGEDEFF,CLYDGB2S,SNTRUS3A,SWLIBEBB,CMCIDEFF,LCHLGB22,SCRTNL2A,MGTCUS3G,ABNAGB22,ECCIBEBD,PARBFRPP,RGRBNL2R,ECCIBEBB,PARBFRPH,PNBPUS3M,ECCIBEBC,BNPAFRPH,PARBGB2L,RGVMNL2R,ISCCUS33,SABNGB22,EXTEUS3M,DRESBEBB,AGRIFRPP,BKCHGB22,ECLNBEBB,NORDFRPP,SMCOGB2P,ECLIBEBB,SLBSDEFX,ANTSGB2L,DNIBNL2G,SBOSUS3S,BBRUBEBB,KASANL2A,INGBDEFF,RBOSNL2A,BKTRUS33,SCBLDEFX,SBCOGB22,AASIUS3A,NBBEBEBB,ECLNNL2A,NACNUS3M,GEBABEBB,ISAEFRPP,COBABEBB,RBOSDEFF,BBRUNL2X,CIBCUS33,HLFXGB22,MICHUS33,NOSCGB2L,ODDOFRPP,LCHLGB2X,RBOSNL2R,ECLNFRPP,INGBFRPP,IIIGGB22,ALCAUS33,ABNAGB2A,CITIGB2A,SBOSUS3Q,RBOSFRPP,MLILGB2A,BBOGUS3M,RCBPFRPR,IGFMGB2L,LCHLGB2L,CFILGB22,LCHLGB2E,SBOSUS3M,UBSWGB24,CITIUS3A,BOFAUS3N,SCBLGB2G,MLILGB4L,PNBPUS3J,RBOSGB2R,UBSWUS3N,WELAGB2L,INCMUS3A,PNBPUS3C,CRSTGB22,HVBKUS3N,CNORGB2L,HSBCUS3M,MLIBGB2J,DEUTUS33,DEUTGB22,NWSCUS33,COUTGB22,MELNUS3P,DEFLGB23,FIDIGB22,VOCAGB4R,BNPAGB22,NEIMGB2L,BOFSGB2H,SIMLGB2L,INGBGB22,ISAMGB2S,BNDCGB2L,CAZEGB22,FIDIGB2L,SOGEGB22,CNORGB2X,ESSEGB2L,PNCCUS3C,SBOSUS3P,SBOSUS3T,AIBKUS3T,PRUIUS3F,BBHCUS3I,STNDGB2P,PNCCUS33,MACQGB2L,MISYGB2L,DETCUS33,CITIGB2P,MELNUS3C,CNORGB2Y,INVBUS33,PNBPGB2W,MELNGB2C,HASLGB22,BYLAGB2L,RTBSGB2L,MANTUS3A,RTBSGB22,CNFMGB2L,DIALGB22,BNDCUS33,LOYDUS3M,COLOUS33,BBVAUS3S,BOFCUS33,BOFSUS3N,BARCUS3B,ESSEUS33,INGBGB2S,MLIMGB2X,KOEXUS3N,NFSCUS33,AKBKGB22,CITIUS3P,MELNUS3W,EDUAUS3A,CTZIUS33,SUNDUS3M,SUNDUS3N,EVAEUS33,NOSCGB2E,FMTCUS3T,INGBUS3H,CITIGB2G,RBOSUS3C,VGRDUS33,WEBRUS33,ABBYGB2L,NEUBUS3N,CGAMUS3A,FIDQUS33,NFSCUS3F,CRESUS33,BKCHGB2U,MNBDUS3B,FIDQUS3P,PNBPUS3W,SLIIGB2L,ECCPGB2L,ECCPGB22,OCBCGB2L,HUNTUS3T,FMACUS3W,MTUSUS3J,CLSBUS3N,ECLNGB2L,INGBGB2L,SLHIUS3N,BOFAUS3M,SCBLUS33,CRLSUS3S,SCBLUS3M,HYVEGB2L,LCIMGB2L,CRESGB2X,NOMAGB2L,DTCCUS3N,ITAUUS3M,OCBCUS33,NBILGB2L,ABNAUS3W,NCMPGB2L,RBOSUS3S,RBOSUS3G,MHSCUS3N,FCNYUS33,WELAGB2X,SBOSGB2A,RBOSGB2W,NWBKGB2W,NGFPUS33,RBOSGB22,NDPIUS33,CODUGB22,COBAGB2X,BOFAUS3D,PGGTUS33,ROYCUS3M,GRNWUS3E,GRNWUS3A,BLKSUS33,SUNDUS3A,SWTRUS33,BOFAGB22,BOFSGB3E,BARCGB22,CITIGB2L,CLYDGBCH,CPBKGB22,DEUTGB3L,HANDGB22,MIDLGB22,CHASGB2L,RBOSGB55,ABBYGB3E,SCBLGB2L,SBOSGB2X,UBSWGB55,BARCGB2V,HSBCHKHH,
]]></value>
			</resourcefield>
			<resourcefield>
				<name>replaceBicList</name>
				<type>String</type>
				<list>true</list>
				<value><![CDATA[BKENGB20,BOTKGB20,BOTKHKH0,BOTKJPJ0,CLLECHZ0,CLSBGB40,CLSBGB50,CLSBUS30,COBADEF0,CRESBSN0,CRESDE50,CRESITM0,CRLYFRP0,CSFBGB20,CSHKHKH0,CSPBSGS0,DEUTDEF0,DEUTPLP0,EBAPFRP0,EBASBEB0,HKICHKH0,IRVTJPJ0,MARKDEF0,OMGOUS30,PSSTFRP0,SICVFRP0,SOGEFRP0,STRAZAJ0,SWHQBEB0,SWHQJPJ0,SWTRBEB0,SWTRGB20,UBSWGB20,ZYAAALT0,ZYAAANC0,ZYAAAOL0,ZYAAATW0,ZYAAAT20,ZYAAAUS0,ZYAAAU20,ZYAAAZ20,ZYAABA20,ZYAABBB0,ZYAABE20,ZYAABGS0,ZYAABHB0,ZYAABMH0,ZYAABRS0,ZYAABWG0,ZYAACAT0,ZYAACAW0,ZYAACHB0,ZYAACHG0,ZYAACHZ0,ZYAACLR0,ZYAACMC0,ZYAACNS0,ZYAACN20,ZYAADEH0,ZYAADEM0,ZYAADES0,ZYAADE30,ZYAADE80,ZYAADK20,ZYAADOS0,ZYAADZA0,ZYAAEE20,ZYAAEGC0,ZYAAESM0,ZYAAFJF0,ZYAAGBC0,ZYAAGB20,ZYAAGHA0,ZYAAGIG0,ZYAAGTG0,ZYAAHKA0,ZYAAHR20,ZYAAHTP0,ZYAAHU20,ZYAAIED0,ZYAAILI0,ZYAAIRT0,ZYAAJOA0,ZYAAJPJ0,ZYAAKEN0,ZYAAKWK0,ZYAALKL0,ZYAALSM0,ZYAALT20,ZYAALUL0,ZYAALV20,ZYAALYL0,ZYAAMAM0,ZYAAMK20,ZYAAMUP0,ZYAAMXM0,ZYAANAN0,ZYAANLN0,ZYAANOK0,ZYAAPHM0,ZYAAPKK0,ZYAAPRS0,ZYAAQAQ0,ZYAAROB0,ZYAARSB0,ZYAASAR0,ZYAASDK0,ZYAASEG0,ZYAASES0,ZYAASG20,ZYAASI20,ZYAASLF0,ZYAASND0,ZYAASVS0,ZYAASZM0,ZYAATHB0,ZYAATM20,ZYAATTP0,ZYAATW20,ZYAATZT0,ZYAAUA20,ZYAAUGK0,ZYAAUSU0,ZYAAVEC0,ZYAAVNV0,ZYAAZAJ0,ZYAAZWH0,ZYABAEA0,ZYABALT0,ZYABANC0,ZYABAOL0,ZYABATW0,ZYABAT20,ZYABAUY0,ZYABAU30,ZYABAZ20,ZYABBA20,ZYABBBB0,ZYABBE20,ZYABBGS0,ZYABBHB0,ZYABBMH0,ZYABCH20,ZYABCLR0,ZYABCNS0,ZYABCN20,ZYABCZP0,ZYABDED0,ZYABDEH0,ZYABDKK0,ZYABDOS0,ZYABEGC0,ZYABFRS0,ZYABFRT0,ZYABGBC0,ZYABGB30,ZYABGHA0,ZYABHR20,ZYABHUH0,ZYABILI0,ZYABIMD0,ZYABIT30,ZYABIT40,ZYABJOA0,ZYABKNS0,ZYABKRS0,ZYABLKL0,ZYABLUL0,ZYABLV20,ZYABMCM0,ZYABMUP0,ZYABMXM0,ZYABMYK0,ZYABNAN0,ZYABNL20,ZYABNOK0,ZYABPRS0,ZYABROB0,ZYABRUM0,ZYABSES0,ZYABSKB0,ZYABTTP0,ZYABTZT0,ZYABVNV0,ZYABXEP0,ZYABZAJ0,ZYABZML0,ZYABZWH0,ZYACAEA0,ZYACAUS0,ZYACAU20,ZYACAU30,ZYACAZ20,ZYACBA20,ZYACBGS0,ZYACBHB0,ZYACBMH0,ZYACCAM0,ZYACCAT0,ZYACCA20,ZYACCHG0,ZYACCHZ0,ZYACCH20,ZYACCNS0,ZYACDED0,ZYACDEM0,ZYACDE30,ZYACDKK0,ZYACFIH0,ZYACFRP0,ZYACGB20,ZYACGB30,ZYACHR20,ZYACILI0,ZYACIMD0,ZYACIT30,ZYACJES0,ZYACKYK0,ZYACLKL0,ZYACMCM0,ZYACMUM0,ZYACNOK0,ZYACPLP0,ZYACPTP0,ZYACROB0,ZYACRUM0,ZYACSGS0,ZYACTWT0,ZYACVNV0,ZYACZAJ0,ZYACZML0,ZYADAEA0,ZYADANC0,ZYADATW0,ZYADAUS0,ZYADAU30,ZYADBSN0,ZYADCAT0,ZYADCA20,ZYADCNB0,ZYADCNS0,ZYADDED0,ZYADDEM0,ZYADDE30,ZYADDKK0,ZYADEE20,ZYADFIH0,ZYADFRS0,ZYADGB20,ZYADHUH0,ZYADIE20,ZYADILI0,ZYADITR0,ZYADJPJ0,ZYADKRS0,ZYADKYK0,ZYADMUM0,ZYADMYK0,ZYADNOK0,ZYADPHM0,ZYADPLP0,ZYADPTP0,ZYADROB0,ZYADRUM0,ZYADUSU0,ZYADUS50,ZYAEAEA0,ZYAEANC0,ZYAEATW0,ZYAEAUY0,ZYAEAU20,ZYAEAU30,ZYAEBHB0,ZYAECLR0,ZYAECNB0,ZYAECNS0,ZYAEDED0,ZYAEDE30,ZYAEDKK0,ZYAEEGC0,ZYAEESM0,ZYAEFRP0,ZYAEGB20,ZYAEIE20,ZYAEILI0,ZYAEIT30,ZYAEJES0,ZYAEKYK0,ZYAEMYK0,ZYAENL20,ZYAEPHM0,ZYAEPTP0,ZYAEROB0,ZYAESGS0,ZYAETWT0,ZYAEUS30,ZYAEZWH0,ZYAFAEA0,ZYAFATW0,ZYAFBEB0,ZYAFBSN0,ZYAFCAM0,ZYAFCNS0,ZYAFDE30,ZYAFDKK0,ZYAFGB20,ZYAFGB30,ZYAFIT30,ZYAFKRS0,ZYAFKYK0,ZYAFLUL0,ZYAFMYK0,ZYAFNOK0,ZYAFROB0,ZYAFRUM0,ZYAFSGS0,ZYAFTHB0,ZYAFTWT0,ZYAFUSU0,ZYAFUS60,ZYAFZAJ0,ZYAGAEA0,ZYAGAUY0,ZYAGBSN0,ZYAGCHG0,ZYAGCNB0,ZYAGCNS0,ZYAGDE30,ZYAGDKK0,ZYAGGB20,ZYAGHKH0,ZYAGIE20,ZYAGITM0,ZYAGITR0,ZYAGIT20,ZYAGIT30,ZYAGMYK0,ZYAGNZ20,ZYAGPTP0,ZYAGSES0,ZYAGSGS0,ZYAGUS40,ZYAGZAJ0,ZYAHAU20,ZYAHCAM0,ZYAHCHG0,ZYAHCH20,ZYAHCNS0,ZYAHDE30,ZYAHESM0,ZYAHIE20,ZYAHITM0,ZYAHIT20,ZYAHKRS0,ZYAHKYK0,ZYAHNOK0,ZYAHRUM0,ZYAHSES0,ZYAIATW0,ZYAIBEB0,ZYAICAM0,ZYAICHG0,ZYAIDE30,ZYAIDKK0,ZYAIESM0,ZYAIIT20,ZYAIKRS0,ZYAIKYK0,ZYAILUL0,ZYAINOK0,ZYAISES0,ZYAIUS40,ZYAJAU20,ZYAJAU30,ZYAJBEB0,ZYAJBSN0,ZYAJCAM0,ZYAJCAT0,ZYAJCHZ0,ZYAJCNS0,ZYAJESM0,ZYAJIT20,ZYAJKYK0,ZYAJLUL0,ZYAJNOK0,ZYAJNZ20,ZYAJRUM0,ZYAJSES0,ZYAJUS60,ZYAJZAJ0,ZYAKBEB0,ZYAKCHZ0,ZYAKCH20,ZYAKCNS0,ZYAKESM0,ZYAKIE20,ZYAKIT20,ZYAKRUM0,ZYAKSES0,ZYAKSGS0,ZYAKUSU0,ZYAKUS30,ZYAKZAJ0,ZYALBEB0,ZYALCHZ0,ZYALCNB0,ZYALCNS0,ZYALESM0,ZYALIE20,ZYALITM0,ZYALIT20,ZYALLUL0,ZYALNL20,ZYALNZ20,ZYALSES0,ZYALSGS0,ZYALUSU0,ZYAMBEB0,ZYAMCNB0,ZYAMCNS0,ZYAMDEF0,ZYAMESM0,ZYAMIE20,ZYAMIT20,ZYAMNZ20,ZYAMRUM0,ZYAMUSU0,ZYAMUS60,ZYAMZAJ0,ZYANAU20,ZYANDEF0,ZYANESM0,ZYANFRP0,ZYANIT20,ZYANLUL0,ZYANNZ20,ZYANPLP0,ZYANZAJ0,ZYAOAU20,ZYAOESM0,ZYAOIE20,ZYAOIT20,ZYAOLUL0,ZYAONZ20,ZYAOPLP0,ZYAOSGS0,ZYAOUS30,ZYAPCNB0,ZYAPDEF0,DEUTGB30,ZYAPHKH0,ZYAPIE20,ZYAPIT20,ZYAPNZ20,ZYAPSES0,ZYAPUS30,ZYAPZAJ0,ZYAQAU20,ZYAQCNB0,ZYAQFRC0,ZYAQIT20,ZYAQJPJ0,ZYAQSGS0,ZYAQZAJ0,ZYARAU20,ZYARCHZ0,ZYARCNB0,ZYARDEF0,ZYARHKH0,ZYARJPJ0,ZYARLUL0,ZYASBEB0,ZYASCAT0,ZYASDE60,ZYASFR20,ZYASIE20,ZYASITM0,ZYASIT20,ZYASLUL0,ZYASNL20,ZYATAU20,ZYATCHZ0,ZYAVGB20,ZYATIE20,ZYATITM0,ZYATJPJ0,ZYATSGS0,ZYATUS60,ZYAUBEB0,ZYAUBSN0,ZYAUCHZ0,ZYAUJPJ0,ZYAUSGS0,ZYAUUS60,ZYAVAU20,ZYAVBSN0,ZYAVCHZ0,ZYAVCNB0,ZYAVGB40,ZYAVLUL0,ZYAVZAJ0,ZYAWAU20,LOYDGBK0,ZYAWGB40,ZYAWHKH0,ZYAWLUL0,ZYAXBHB0,ZYAXFRC0,ZYAXGB20,ZYAXLUL0,ZYAXNL20,ZYAYAU20,ZYAYBHB0,ZYAYITM0,ZYAYJPJ0,ZYAYLUL0,ZYAYSGS0,ZYAYUS60,ZYAZCNB0,ZYAZHKH0,ZYAZITM0,ZYAZSGS0,ZYBAAU20,ZYBACNB0,ZYBADEF0,ZYBAHKH0,ZYBAITM0,ZYBAJPJ0,ZYBANL20,ZYBANOK0,ZYBASGS0,ZYBAUS60,ZYBBAU20,ZYBBCNB0,ZYBBFRC0,ZYBBFRP0,ZYBBHKH0,ZYBBJPJ0,ZYBBNL20,ZYBBSGS0,ZYBBUS60,ZYBCAU20,ZYBCBEB0,ZYBCCNB0,ZYBCGB20,ZYBCJPJ0,ZYBDAU20,ZYBDBEB0,ZYBDCNB0,ZYBDGB20,ZYBDITM0,ZYBDJPJ0,ZYBDLUL0,ZYBDUS60,ZYBEBEB0,ZYBECNB0,ZYBEDEF0,ZYBEGB20,ZYBEITM0,ZYBELUL0,ZYBENLN0,ZYBEZAJ0,ZYBFAU20,ZYBFBEB0,ZYBFCNB0,ZYBFDEF0,ZYBFGB20,ZYBFGB50,ZYBFHKH0,ZYBFUS30,ZYBGAU20,ZYBGBEB0,ZYBGLUL0,ZYBGNL20,ZYBGUS60,ZYBGZAJ0,ZYBHBEB0,ZYBHCHZ0,ZYBHDEF0,ZYBHFRP0,ZYBHJPJ0,ZYBHZAJ0,ZYBIBEB0,ZYBICHZ0,ZYBILUL0,ZYBIUS60,ZYBJBEB0,ZYBJDEF0,ZYBJJPJ0,ZYBJUS60,ZYBKBEB0,ZYBKCHZ0,ZYBKHKH0,ZYBKLUL0,ZYBKNL20,ZYBKSGS0,ZYBLBEB0,ZYBLCHZ0,ZYBLHKH0,ZYBLLUL0,ZYBLNL20,ZYBLZAJ0,ZYBMBEB0,ZYBMCHZ0,ZYBMFRP0,ZYBMHKH0,ZYBMLUL0,ZYBMUS30,ZYBNBEB0,ZYBNFRP0,ZYBNLUL0,ZYBOBEB0,ZYBOFRP0,ZYBPBEB0,ZYBPFRP0,ZYBPJPJ0,ZYBPLUL0,ZYBQFRP0,ZYBQHKH0,ZYBRLUL0,ZYBRUS30,ZYBSHKH0,ZYBSLUL0,ZYBTBEB0,ZYBTHKH0,ZYBTJPJ0,ZYBTUS30,ZYBUHKH0,ZYBUJPJ0,ZYBVBEB0,ZYBVFRC0,ZYBVJPJ0,ZYBVUS30,ZYBWBEB0,ZYBWHKH0,ZYBWJPJ0,ZYBWUS30,ZYBXBEB0,ZYBXHKH0,ZYBYBEB0,ZYBYHKH0,ZYBZBEB0,ZYBZJPJ0,ZYOCGB20,ZYCABEB0,ZYCADEF0,ZYCAFRP0,ZYCALUL0,ZYCASGS0,ZYCBBEB0,ZYCBDEF0,ZYCBFRP0,ZYCBUS30,ZYCCBEB0,ZYCCDEF0,ZYCCUS30,ZYCDBEB0,ZYCDHKH0,ZYCDJPJ0,ZYCDLUL0,ZYCDUS30,ZYCEBEB0,ZYCEJPJ0,ZYCELUL0,ZYCEUS30,ZYCEUS40,ZYCFBEB0,ZYCFGB20,ZYCFJPJ0,ZYCFLUL0,ZYCGBEB0,ZYCGGB20,ZYCGGGS0,ZYCGHKH0,ZYCGJPJ0,ZYCGLUL0,ZYCHBEB0,ZYCHJPJ0,ZYCHLUL0,ZYCIDEF0,ZYCIGGS0,ZYCIHKH0,ZYCIJPJ0,ZYCILUL0,ZYCIUS30,ZYCJGB20,ZYCKFRP0,ZYCKUS30,ZYCLGB20,ZYCLUS30,ZYCMGB20,ZYCMGGS0,ZYCMLUL0,ZYCNDEF0,ZYCNGGS0,ZYCNLUL0,ZYCNUS30,ZYCNUS40,ZYCOLUL0,ZYCQFRP0,ZYCQHKH0,ZYCQJPJ0,ZYCQSGS0,ZYCRFRP0,ZYCRUS40,ZYCSDEF0,ZYCSHKH0,ZYCSSGS0,ZYCTFRP0,ZYCTGB20,ZYCTSGS0,ZYCUDEF0,ZYCUSGS0,ZYCUUS30,ZYCVUS30,ZYCWGB20,ZYCWHKH0,ZYCWSGS0,ZYCXBEB0,ZYCXFRP0,ZYCXSGS0,ZYCYBEB0,ZYCYDEF0,ZYCYFRP0,ZYCYUS40,ZYCZBEB0,ZYCZDEF0,ZYCZJPJ0,ZYCZUS30,ZYDADEF0,ZYDAFRP0,ZYDAGB20,ZYDASGS0,ZYDBFR20,ZYDBJPJ0,ZYDBUS40,ZYDCGB20,ZYDDDEF0,ZYDDUS30,ZYDDUS40,ZYDEDEF0,ZYDEUS40,ZYDFDEF0,ZYDFHKH0,ZYDFUS40,ZYDGDEF0,ZYDGFR20,ZYDGHKH0,ZYDGSGS0,ZYDHJPJ0,ZYDHUS40,ZYDIFR20,ZYDIJPJ0,ZYDISGS0,ZYDJFR20,ZYDJGB20,ZYDJUS30,ZYDKGB20,ZYDKUS30,ZYDLJPJ0,ZYDMJPJ0,ZYDNUS30,ZYDOFRP0,ZYDPUS30,ZYDQUS30,ZYDRFRP0,ZYDRFR20,ZYDRUS30,ZYDSFR20,ZYDTGB20,ZYDVFRP0,ZYDWFRP0,ZYDWUS30,ZYDYFRP0,ZYDYGB20,ZYDYHKH0,ZYDYJPJ0,ZYDZDEF0,ZYDZFRP0,ZYDZGB20,ZYDZHKH0,ZYDZJPJ0,ZYEAJPJ0,ZYEBJPJ0,ZYEDDEF0,ZYEDJPJ0,ZYEEHKH0,ZYEEJPJ0,ZYEFHKH0,ZYEFJPJ0,ZYEGGB20,ZYEGHKH0,ZYEGJPJ0,ZYEHGB20,ZYEIGB20,ZYEIGB30,ZYEJHKH0,ZYEJUS30,ZYEKGB30,ZYEKHKH0,ZYEKUS30,ZYELHKH0,ZYELUS30,ZYEMGB20,ZYENHKH0,ZYEOGB20,ZYEPGB20,ZYEPUS30,ZYEQGB30,ZYERGB20,ZYESNL20,ZYETBEB0,ZYETNL20,ZYETUS30,ZYEUDEF0,ZYEUNL20,ZYEUUS30,ZYEVDEF0,ZYEVGB20,ZYEVUS30,ZYEWBEB0,ZYEWDEF0,ZYEWGB20,ZYEWNL20,ZYEWUS30,ZYEXGB20,ZYEYBEB0,ZYEYFRP0,ZYEYNL20,ZYEZBEB0,ZYEZFRP0,ZYEZUS30,ZYFABEB0,ZYFAFRP0,ZYFAGB20,ZYFANL20,ZYFAUS30,ZYFBGB20,ZYFBUS30,ZYFCBEB0,ZYFDFRP0,ZYFDGB20,ZYFEBEB0,ZYFFFRP0,ZYFFGB20,ZYFGBEB0,ZYFGDEF0,ZYFGGB20,ZYFGNL20,ZYFGUS30,ZYFHBEB0,ZYFHNL20,ZYFIDEF0,ZYFINL20,ZYFIUS30,ZYFJDEF0,ZYFJGB20,ZYFJUS30,ZYFKBEB0,ZYFKNL20,ZYFKUS30,ZYFLBEB0,ZYFLFRP0,ZYFMBEB0,ZYFMDEF0,ZYFMNL20,ZYFMUS30,ZYFNGB20,ZYFNUS30,ZYFOGB20,ZYFPFRP0,ZYFQGB20,ZYFQNL20,ZYFRFRP0,ZYFSFRP0,ZYFSGB20,ZYFSUS30,ZYFTGB20,ZYFUGB20,ZYFUUS30,ZYFVFRP0,ZYFVGB20,ZYFVUS30,ZYFWFRP0,ZYFWGB20,ZYFYGB20,ZYGBGB20,ZYGCGB20,ZYGCUS30,ZYGDGB20,ZYGEUS30,ZYGKUS30,ZYGLGB20,ZYGLGB40,ZYGLUS30,ZYGMGB20,ZYGOUS30,ZYGPGB20,ZYGPUS30,ZYGQUS30,ZYGSGB20,ZYGSUS30,ZYGVGB20,ZYGVUS30,ZYGWGB20,ZYGWUS30,ZYGXGB20,ZYGXUS30,ZYGZGB20,ZYGZUS30,ZYHAGB20,ZYHBGB20,ZYHFGB40,BNPAGB20,ZYHJGB20,ZYHMGB20,ZYHPGB20,ZYHSGB20,ZYHVGB20,ZYHWGB20,ZYHXGB20,ZYIAGB20,ZYIBGB20,ZYIGGB20,ZYIHGB20,ZYIHUS30,ZYIKUS30,ZYILUS30,ZYIMUS30,ZYIQUS30,ZYIRUS30,ZYISGB20,ZYIUUS30,ZYIVGB20,ZYIWGB20,ZYIXUS30,ZYIYGB20,ZYIYUS30,ZYIZGB20,ZYIZUS30,ZYJCGB20,ZYJDGB20,ZYJEGB20,ZYJFGB20,ZYJGGB20,ZYJHUS30,ZYJIGB20,ZYJJGB20,ZYJKGB20,ZYJKUS30,ZYJLUS30,ZYJMUS30,ZYJNUS30,ZYJOUS30,ZYJRUS30,ZYJSUS30,ZYJUUS30,ZYJZGB20,ZYKAGB20,ZYKAUS30,ZYKBUS30,ZYKFGB20,ZYKFUS30,ZYKGUS30,ZYKHUS30,ZYKIUS30,ZYKKUS30,ZYKLUS30,ZYKOUS30,ZYKQGB20,ZYKQUS30,ZYKRUS30,ZYKSGB20,ZYKSUS30,ZYKTUS30,ZYKZUS30,ZYLAGB20,ZYLAUS30,ZYLBUS30,ZYLCUS30,ZYLHUS30,ZYLKUS30,ZYLLGB20,ZYLMUS30,ZYLNUS30,ZYLQUS30,ZYLRGB20,ZYLSGB20,ZYLVGB20,ZYLZGB20,ZYMBUS30,ZYMCUS30,ZYMDUS30,ZYMEUS30,ZYMKGB20,ZYMPGB20,ZYMRUS30,ZYMSUS30,ZYMTUS30,ZYMVUS30,ZYMWUS30,ZYMYGB20,ZYMZGB20,ZYNEGB20,ZYNJGB20,ZYNJUS30,ZYNKUS30,ZYNMUS30,ZYNNGB20,ZYNNUS30,ZYNOGB20,ZYNPUS30,ZYNQUS30,ZYNRUS30,ZYNSUS30,ZYNTGB20,ZYNUGB20,ZYNVGB20,ZYNWGB20,ZYNWUS30,ZYNXGB20,ZYNXUS30,ZYNYGB20,ZYNZGB20,ZYNZUS30,ZYOAUS30,ZYOBUS30,ZYOCUS30,ZYODUS30,ZYOEUS30,ZYOGUS30,ZYONUS30,BOFAGB20,BOFSGB30,BARCGB20,CITIGB20,CLYDGBCO,GPBKGB20,DEUTGB30,HANDGB20,MIDLGB20,CHASGB20,RBOSGB50,ABBYGB30,SCBLGB20,SBOSGB20,UBSWGB50,ZYQFGB20,HSBCHKH0
]]></value>
			</resourcefield>
		</resourcefields>
	</resources>
	<internalmessage name="pModuleStr" type="InternalMessage">
		<version>1.0</version>
		<normalizedformat>
			<xpath-namespaces>
				<namespace value="http://www.w3.org/2005/xpath-functions" prefix="fn"/>
				<namespace value="http://www.w3.org/2001/XMLSchema" prefix="xs"/>
				<namespace value="java:com.tplus.transform.runtime.swift.SwiftXPathFunctions" prefix="swift"/>
			</xpath-namespaces>
			<fields>
				<field xsi:type="InternalMessageFieldType">
					<name>correlationData</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>512</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>gapTableFileName</name>
					<type>String</type>
					<description><![CDATA[Length is defined in the file 'fniGwyCommDef.h']]></description>
					<notnull>false</notnull>
					<length>1024</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>fniCopyCSAReport</name>
					<type>String</type>
					<description><![CDATA[Length is defined in the file 'fniGwyCommDef.h']]></description>
					<notnull>false</notnull>
					<length>1024</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>src</name>
					<type>String</type>
					<description><![CDATA[Length is defined in the file 'fniGwyCommDef.h']]></description>
					<notnull>false</notnull>
					<length>4</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>appId</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>4</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>mainAppId</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>4</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>asnPrefix</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>5</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>errMsg</name>
					<type>String</type>
					<description><![CDATA[Length is defined in the file 'fniGwyCommDef.h']]></description>
					<notnull>false</notnull>
					<length>513</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>errCode</name>
					<type>String</type>
					<description><![CDATA[Length is defined in the file 'fniGwyCommDef.h']]></description>
					<notnull>false</notnull>
					<length>33</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>orgMtsTrn</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>36</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>mtsTrn</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>36</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>mrvRsp</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>30</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>gtmAckMsg</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>20000</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>desApp</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>4</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>ourSrcCode</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>7</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>block2Tid</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>2</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>desAppPerMsg</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>4</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>desDirectionPerMsg</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>2</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>nameKeyOutputQueue</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>33</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>rcvBic12</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>13</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>outSrcBic</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>9</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>nameKey</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>16</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>nameKeyFromPA</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>16</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>mtType</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>4</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>origAsn</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>11</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>timeCompleted</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>15</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>origDept</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>21</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>charAcct</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>11</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>acctNum</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>11</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>msgId</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>8</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>cusIndId</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>-1</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>cid</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>11</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>cidFromPA</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>11</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>orgMTType</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>4</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>trnPrefix</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>4</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>orgTrn</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>17</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>trnPA</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>17</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>recvAdd1</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>129</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>recvAdd2</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>129</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>recvAdd3</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>129</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>recvAdd4</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>129</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>chrgAdd1</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>129</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>chrgAdd2</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>129</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>chrgAdd3</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>129</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>chrgAdd4</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>129</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>metadfataBuff</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>1025</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>pGapTableStr</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>-1</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>checksum</name>
					<type>Boolean</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>useSat</name>
					<type>Boolean</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageSectionType">
					<name>PISNBIC8STR</name>
					<type>Section</type>
					<minoccurs>0</minoccurs>
					<maxoccurs>1</maxoccurs>
					<fields>
						<field xsi:type="InternalMessageFieldType">
							<name>bic8Name</name>
							<type>String</type>
							<notnull>false</notnull>
							<length>9</length>
						</field>
					</fields>
				</field>
				<field xsi:type="InternalMessageSectionType">
					<name>PPRIOITYSTR</name>
					<type>Section</type>
					<minoccurs>0</minoccurs>
					<maxoccurs>1</maxoccurs>
					<fields>
						<field xsi:type="InternalMessageFieldType">
							<name>mtType</name>
							<type>String</type>
							<description><![CDATA[Length is defined in the file 'fniGwyCommDef.h']]></description>
							<notnull>false</notnull>
							<length>4</length>
						</field>
						<field xsi:type="InternalMessageFieldType">
							<name>priority</name>
							<type>Integer</type>
							<notnull>false</notnull>
						</field>
					</fields>
				</field>
				<field xsi:type="InternalMessageSectionType">
					<name>PISNLTERMSTR</name>
					<type>Section</type>
					<minoccurs>0</minoccurs>
					<maxoccurs>1</maxoccurs>
					<fields>
						<field xsi:type="InternalMessageFieldType">
							<name>lTerm</name>
							<type>String</type>
							<notnull>false</notnull>
							<length>10</length>
						</field>
						<field xsi:type="InternalMessageFieldType">
							<name>lowSrc</name>
							<type>String</type>
							<notnull>false</notnull>
							<length>4</length>
						</field>
						<field xsi:type="InternalMessageFieldType">
							<name>mediumSrc</name>
							<type>String</type>
							<notnull>false</notnull>
							<length>4</length>
						</field>
						<field xsi:type="InternalMessageFieldType">
							<name>highSrc</name>
							<type>String</type>
							<notnull>false</notnull>
							<length>4</length>
						</field>
						<field xsi:type="InternalMessageFieldType">
							<name>ibrSrc</name>
							<type>String</type>
							<notnull>false</notnull>
							<length>4</length>
						</field>
						<field xsi:type="InternalMessageFieldType">
							<name>ibrHSrc</name>
							<type>String</type>
							<notnull>false</notnull>
							<length>4</length>
						</field>
						<field xsi:type="InternalMessageFieldType">
							<name>ibrMSrc</name>
							<type>String</type>
							<notnull>false</notnull>
							<length>4</length>
						</field>
						<field xsi:type="InternalMessageFieldType">
							<name>errSrc</name>
							<type>String</type>
							<notnull>false</notnull>
							<length>4</length>
						</field>
					</fields>
				</field>
				<field xsi:type="InternalMessageSectionType">
					<name>P_SELLTERMSTR</name>
					<type>Section</type>
					<minoccurs>0</minoccurs>
					<maxoccurs>1</maxoccurs>
					<fields>
						<field xsi:type="InternalMessageFieldType">
							<name>bic8Name</name>
							<type>String</type>
							<notnull>false</notnull>
							<length>9</length>
						</field>
						<field xsi:type="InternalMessageSectionType">
							<name>PMTLTERMSTR</name>
							<type>Section</type>
							<minoccurs>0</minoccurs>
							<maxoccurs>1</maxoccurs>
							<fields>
								<field xsi:type="InternalMessageFieldType">
									<name>mtType</name>
									<type>String</type>
									<notnull>false</notnull>
									<length>4</length>
								</field>
								<field xsi:type="InternalMessageSectionType">
									<name>LTERMNAMESTR</name>
									<type>Section</type>
									<minoccurs>0</minoccurs>
									<maxoccurs>1</maxoccurs>
									<fields>
										<field xsi:type="InternalMessageFieldType">
											<name>lTerm</name>
											<type>String</type>
											<notnull>false</notnull>
											<length>10</length>
										</field>
									</fields>
								</field>
								<field xsi:type="InternalMessageFieldType">
									<name>destBIC11</name>
									<type>String</type>
									<notnull>false</notnull>
									<length>12</length>
								</field>
								<field xsi:type="InternalMessageFieldType">
									<name>lastMtType</name>
									<type>String</type>
									<notnull>false</notnull>
									<length>4</length>
								</field>
								<field xsi:type="InternalMessageFieldType">
									<name>currentLTIdx</name>
									<type>Integer</type>
									<notnull>false</notnull>
								</field>
								<field xsi:type="InternalMessageFieldType">
									<name>numberOfLTerms</name>
									<type>Integer</type>
									<notnull>false</notnull>
								</field>
							</fields>
						</field>
						<field xsi:type="InternalMessageFieldType">
							<name>numberOfMTLTs</name>
							<type>Integer</type>
							<notnull>false</notnull>
						</field>
					</fields>
				</field>
				<field xsi:type="InternalMessageSectionType">
					<name>PMSGHEADERSTR</name>
					<type>Section</type>
					<minoccurs>0</minoccurs>
					<maxoccurs>1</maxoccurs>
					<fields>
						<field xsi:type="InternalMessageFieldType">
							<name>mtType</name>
							<type>String</type>
							<notnull>false</notnull>
							<length>4</length>
						</field>
						<field xsi:type="InternalMessageFieldType">
							<name>lastMtType</name>
							<type>String</type>
							<notnull>false</notnull>
							<length>4</length>
						</field>
						<field xsi:type="InternalMessageFieldType">
							<name>srcBic8Name</name>
							<type>String</type>
							<notnull>false</notnull>
							<length>9</length>
						</field>
						<field xsi:type="InternalMessageFieldType">
							<name>destBIC11</name>
							<type>String</type>
							<notnull>false</notnull>
							<length>12</length>
						</field>
						<field xsi:type="InternalMessageFieldType">
							<name>currentLTIdx</name>
							<type>Integer</type>
							<notnull>false</notnull>
						</field>
					</fields>
				</field>
				<field xsi:type="InternalMessageSectionType">
					<name>PALERTEMAILSTR</name>
					<type>Section</type>
					<minoccurs>0</minoccurs>
					<maxoccurs>1</maxoccurs>
					<fields>
						<field xsi:type="InternalMessageFieldType">
							<name>alertEmailAddress</name>
							<type>String</type>
							<notnull>false</notnull>
							<length>129</length>
						</field>
					</fields>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>numberOfAlertEmails</name>
					<type>Integer</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>numberOfBic8</name>
					<type>Integer</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>numberOfPriorityDef</name>
					<type>Integer</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>numberOfLTerms</name>
					<type>Integer</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>numberOfIsnBic8s</name>
					<type>Integer</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>numberOfOnDemandMQs</name>
					<type>Integer</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>firstTime</name>
					<type>Boolean</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>handleBlock3ForIBR</name>
					<type>Boolean</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>noIBRForSameBIC</name>
					<type>Boolean</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>ibrForSenderBic</name>
					<type>Boolean</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>priority</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>2</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>lTermIndex</name>
					<type>Integer</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>maximumGap</name>
					<type>Integer</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>maximumNumberOfGaps</name>
					<type>Integer</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>maximumSequenceNumber</name>
					<type>Integer</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>processGapCheck</name>
					<type>Integer</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>passAreaLength</name>
					<type>Integer</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>seqNumberLength</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>512</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>seqNumberStartPos</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>512</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>getGapTable</name>
					<type>Boolean</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>prodBic8fileName</name>
					<type>String</type>
					<description><![CDATA[Length is defined in the file 'fniGwyCommDef.h']]></description>
					<notnull>false</notnull>
					<length>1024</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>bi8ExceptionfileName</name>
					<type>String</type>
					<description><![CDATA[Length is defined in the file 'fniGwyCommDef.h']]></description>
					<notnull>false</notnull>
					<length>1024</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>alertEmailFileName</name>
					<type>String</type>
					<description><![CDATA[Length is defined in the file 'fniGwyCommDef.h']]></description>
					<notnull>false</notnull>
					<length>1024</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>annualFormat</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>5</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>numberOfBic8CvtStr</name>
					<type>Integer</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>numberOfBic8Excep</name>
					<type>Integer</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>numberOfIsnMTType</name>
					<type>Integer</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageSectionType">
					<name>PBIC8CVTSTR</name>
					<type>Section</type>
					<description><![CDATA[This section present in the file --> fniGwyBic8CvtStr.h]]></description>
					<minoccurs>0</minoccurs>
					<maxoccurs>1</maxoccurs>
					<fields>
						<field xsi:type="InternalMessageFieldType">
							<name>bic7</name>
							<type>String</type>
							<notnull>false</notnull>
							<length>8</length>
						</field>
						<field xsi:type="InternalMessageFieldType">
							<name>bic8Char</name>
							<type>String</type>
							<notnull>false</notnull>
							<length>-1</length>
						</field>
					</fields>
				</field>
				<field xsi:type="InternalMessageSectionType">
					<name>PBIC8ECPSTR</name>
					<type>Section</type>
					<description><![CDATA[This section present in the file --> fniGwyBic8CvtStr.h (This section was referred 2 times, 1.pPodBic8Excep 2.pTandtBic8Excep)]]></description>
					<minoccurs>0</minoccurs>
					<maxoccurs>-1</maxoccurs>
					<fields>
						<field xsi:type="InternalMessageFieldType">
							<name>prodBic8</name>
							<type>String</type>
							<notnull>false</notnull>
							<length>9</length>
						</field>
						<field xsi:type="InternalMessageFieldType">
							<name>tandtBic8</name>
							<type>String</type>
							<notnull>false</notnull>
							<length>9</length>
						</field>
					</fields>
				</field>
				<field xsi:type="InternalMessageSectionType">
					<name>PISNMTTYPESTR</name>
					<type>Section</type>
					<minoccurs>0</minoccurs>
					<maxoccurs>1</maxoccurs>
					<fields>
						<field xsi:type="InternalMessageFieldType">
							<name>mtType</name>
							<type>String</type>
							<notnull>false</notnull>
							<length>4</length>
						</field>
					</fields>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>convertBic8</name>
					<type>Boolean</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>pGapTable</name>
					<type>Integer</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>pSvcClient</name>
					<type>String</type>
					<description><![CDATA[Type is mentioned as void, so we created this field type as string.]]></description>
					<notnull>false</notnull>
					<length>-1</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>defaultSvcPort</name>
					<type>Integer</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>defaultSvcSvr</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>257</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>editCheckBySwift</name>
					<type>Boolean</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>processIBR</name>
					<type>Boolean</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>messageFormat</name>
					<type>Integer</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>editSvcFailed</name>
					<type>Boolean</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>passErrMsgToSwf</name>
					<type>Boolean</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>svcHandler</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>9</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>svcTFMHandler</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>9</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>svcGTMAckHandler</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>9</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>svcCIFHandler</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>9</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>svcGapCheckHandler</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>9</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>useWebSvc</name>
					<type>Boolean</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>rcvRepMsg</name>
					<type>Boolean</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>pMervaTrace</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>-1</length>
				</field>
				<field xsi:type="InternalMessageSectionType">
					<name>PSELLTERMSTR</name>
					<type>Section</type>
					<minoccurs>0</minoccurs>
					<maxoccurs>1</maxoccurs>
					<fields>
						<field xsi:type="InternalMessageFieldType">
							<name>bic8Name</name>
							<type>String</type>
							<notnull>false</notnull>
							<length>9</length>
						</field>
						<field xsi:type="InternalMessageSectionType">
							<name>PMTLTERMSTR</name>
							<type>Section</type>
							<minoccurs>0</minoccurs>
							<maxoccurs>1</maxoccurs>
							<fields>
								<field xsi:type="InternalMessageFieldType">
									<name>mtType</name>
									<type>String</type>
									<notnull>false</notnull>
									<length>4</length>
								</field>
								<field xsi:type="InternalMessageSectionType">
									<name>LTERMNAMESTR</name>
									<type>Section</type>
									<minoccurs>0</minoccurs>
									<maxoccurs>1</maxoccurs>
									<fields>
										<field xsi:type="InternalMessageFieldType">
											<name>lTerm</name>
											<type>String</type>
											<notnull>false</notnull>
											<length>10</length>
										</field>
									</fields>
								</field>
								<field xsi:type="InternalMessageFieldType">
									<name>destBIC11</name>
									<type>String</type>
									<notnull>false</notnull>
									<length>12</length>
								</field>
								<field xsi:type="InternalMessageFieldType">
									<name>lastMtType</name>
									<type>String</type>
									<notnull>false</notnull>
									<length>4</length>
								</field>
								<field xsi:type="InternalMessageFieldType">
									<name>currentLTIdx</name>
									<type>Integer</type>
									<notnull>false</notnull>
								</field>
								<field xsi:type="InternalMessageFieldType">
									<name>numberOfLTerms</name>
									<type>Integer</type>
									<notnull>false</notnull>
								</field>
							</fields>
						</field>
						<field xsi:type="InternalMessageFieldType">
							<name>numberOfMTLTs</name>
							<type>Integer</type>
							<notnull>false</notnull>
						</field>
					</fields>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>numberofAppLTerms</name>
					<type>Integer</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>putGapTable</name>
					<type>Boolean</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>forwardPassArea</name>
					<type>Boolean</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>processPassArea</name>
					<type>Boolean</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>asn</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>9</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>currentPassAreaIndex</name>
					<type>Integer</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>createHeaderBlock</name>
					<type>Boolean</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>block3Type</name>
					<type>Integer</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>senderBic8</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>9</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>validRcvBic8</name>
					<type>String</type>
					<notnull>false</notnull>
					<length>9</length>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>drainMessage</name>
					<type>Boolean</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>addPDE</name>
					<type>Boolean</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>replaceInvalidChar</name>
					<type>Boolean</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>invalidPassArea</name>
					<type>Boolean</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>numberOfAsnPrefix</name>
					<type>Integer</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageSectionType">
					<name>PASNPREFIXSTR</name>
					<type>Section</type>
					<minoccurs>0</minoccurs>
					<maxoccurs>1</maxoccurs>
					<fields>
						<field xsi:type="InternalMessageFieldType">
							<name>asnPrefix</name>
							<type>String</type>
							<notnull>false</notnull>
							<length>5</length>
						</field>
						<field xsi:type="InternalMessageFieldType">
							<name>outputModuleIndex</name>
							<type>Integer</type>
							<notnull>false</notnull>
						</field>
					</fields>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>numberOfTrnPrefix</name>
					<type>Integer</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageSectionType">
					<name>PTRNPREFIXSTR</name>
					<type>Section</type>
					<minoccurs>0</minoccurs>
					<maxoccurs>1</maxoccurs>
					<fields>
						<field xsi:type="InternalMessageFieldType">
							<name>trnPrefix</name>
							<type>String</type>
							<notnull>false</notnull>
							<length>4</length>
						</field>
					</fields>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>transformInternalFmt</name>
					<type>Boolean</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>transformInternalFmtLocal</name>
					<type>Boolean</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>failToTransform</name>
					<type>Boolean</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>checkOFAC</name>
					<type>Boolean</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>gtmAck</name>
					<type>Boolean</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>firstGTMAck</name>
					<type>Boolean</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>sendGTMAck</name>
					<type>Boolean</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>failToGetGTM</name>
					<type>Boolean</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>supportTEO</name>
					<type>Boolean</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>handleTEO</name>
					<type>Boolean</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>ibrOnly</name>
					<type>Boolean</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageSectionType">
					<name>PCITTEOSTR</name>
					<type>Section</type>
					<minoccurs>0</minoccurs>
					<maxoccurs>1</maxoccurs>
					<fields>
						<field xsi:type="InternalMessageFieldType">
							<name>bnyTRn</name>
							<type>String</type>
							<notnull>false</notnull>
							<length>17</length>
						</field>
						<field xsi:type="InternalMessageFieldType">
							<name>custId</name>
							<type>String</type>
							<notnull>false</notnull>
							<length>6</length>
						</field>
						<field xsi:type="InternalMessageFieldType">
							<name>rcvAdd1</name>
							<type>String</type>
							<notnull>false</notnull>
							<length>36</length>
						</field>
						<field xsi:type="InternalMessageFieldType">
							<name>rcvAdd2</name>
							<type>String</type>
							<notnull>false</notnull>
							<length>36</length>
						</field>
					</fields>
				</field>
				<field xsi:type="InternalMessageSectionType">
					<name>PNAMEKEYSTR</name>
					<type>Section</type>
					<minoccurs>0</minoccurs>
					<maxoccurs>1</maxoccurs>
					<fields>
						<field xsi:type="InternalMessageFieldType">
							<name>nameKey</name>
							<type>String</type>
							<notnull>false</notnull>
							<length>16</length>
						</field>
						<field xsi:type="InternalMessageFieldType">
							<name>numberOfRows</name>
							<type>Integer</type>
							<notnull>false</notnull>
						</field>
						<field xsi:type="InternalMessageSectionType">
							<name>PNAMEKEYROWSTR</name>
							<type>Section</type>
							<minoccurs>0</minoccurs>
							<maxoccurs>1</maxoccurs>
							<fields>
								<field xsi:type="InternalMessageFieldType">
									<name>mtType</name>
									<type>String</type>
									<notnull>false</notnull>
									<length>4</length>
								</field>
								<field xsi:type="InternalMessageFieldType">
									<name>nameKeyAsn</name>
									<type>String</type>
									<notnull>false</notnull>
									<length>4</length>
								</field>
								<field xsi:type="InternalMessageFieldType">
									<name>customerCode</name>
									<type>String</type>
									<notnull>false</notnull>
									<length>2</length>
								</field>
								<field xsi:type="InternalMessageFieldType">
									<name>outputQueue</name>
									<type>String</type>
									<notnull>false</notnull>
									<length>33</length>
								</field>
								<field xsi:type="InternalMessageFieldType">
									<name>nameKeyTrn</name>
									<type>String</type>
									<notnull>false</notnull>
									<length>4</length>
								</field>
							</fields>
						</field>
					</fields>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>supportNameKey</name>
					<type>Boolean</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>numberOfNameKeys</name>
					<type>Integer</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>handleNameKey</name>
					<type>Boolean</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageSectionType">
					<name>POUTSRCSTR</name>
					<type>Section</type>
					<minoccurs>0</minoccurs>
					<maxoccurs>1</maxoccurs>
					<fields>
						<field xsi:type="InternalMessageFieldType">
							<name>outSrcCode</name>
							<type>String</type>
							<notnull>false</notnull>
							<length>4</length>
						</field>
						<field xsi:type="InternalMessageFieldType">
							<name>outSrcBic</name>
							<type>String</type>
							<notnull>false</notnull>
							<length>9</length>
						</field>
					</fields>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>numberOfOutSrc</name>
					<type>Integer</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>supportOutSrc</name>
					<type>Boolean</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>assignLT</name>
					<type>Boolean</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>transformSwiftToSwift</name>
					<type>Boolean</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>createTag108</name>
					<type>Boolean</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>switchToIBR</name>
					<type>Boolean</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>use1AsIBRFlag</name>
					<type>Boolean</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageSectionType">
					<name>PSWITCHIBRSTR</name>
					<type>Section</type>
					<minoccurs>0</minoccurs>
					<maxoccurs>1</maxoccurs>
					<fields>
						<field xsi:type="InternalMessageFieldType">
							<name>mtType</name>
							<type>String</type>
							<notnull>false</notnull>
							<length>4</length>
						</field>
						<field xsi:type="InternalMessageFieldType">
							<name>numberOfBic11Str</name>
							<type>Integer</type>
							<notnull>false</notnull>
						</field>
						<field xsi:type="InternalMessageSectionType">
							<name>PBIC11STR</name>
							<type>Section</type>
							<minoccurs>0</minoccurs>
							<maxoccurs>1</maxoccurs>
							<fields>
								<field xsi:type="InternalMessageFieldType">
									<name>sndBic8Name</name>
									<type>String</type>
									<notnull>false</notnull>
									<length>9</length>
								</field>
								<field xsi:type="InternalMessageFieldType">
									<name>sndSubBranch</name>
									<type>String</type>
									<notnull>false</notnull>
									<length>4</length>
								</field>
								<field xsi:type="InternalMessageFieldType">
									<name>desBic8Name</name>
									<type>String</type>
									<notnull>false</notnull>
									<length>9</length>
								</field>
								<field xsi:type="InternalMessageFieldType">
									<name>desSubBranch</name>
									<type>String</type>
									<notnull>false</notnull>
									<length>4</length>
								</field>
								<field xsi:type="InternalMessageFieldType">
									<name>desApp</name>
									<type>String</type>
									<notnull>false</notnull>
									<length>4</length>
								</field>
								<field xsi:type="InternalMessageFieldType">
									<name>desDirection</name>
									<type>String</type>
									<notnull>false</notnull>
									<length>2</length>
								</field>
							</fields>
						</field>
					</fields>
				</field>
				<field xsi:type="InternalMessageSectionType">
					<name>PSUPPORTOUTSRCSTR</name>
					<type>Section</type>
					<minoccurs>0</minoccurs>
					<maxoccurs>1</maxoccurs>
					<fields>
						<field xsi:type="InternalMessageFieldType">
							<name>outSrcCode</name>
							<type>String</type>
							<notnull>false</notnull>
							<length>4</length>
						</field>
					</fields>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>numberOfSupportOutSrc</name>
					<type>Integer</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>numberOfSwiftIBRStr</name>
					<type>Integer</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>setSwitchToIBR</name>
					<type>Boolean</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>cifLookup</name>
					<type>Boolean</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>handleCIBC</name>
					<type>Boolean</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>handleOutSrc</name>
					<type>Boolean</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>supportCIBC</name>
					<type>Boolean</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>keepSwfHeaderInfo</name>
					<type>Boolean</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>registerCIFSvc</name>
					<type>Boolean</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>correlationId</name>
					<type>Integer</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>block4Only</name>
					<type>Boolean</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>noValidation</name>
					<type>Boolean</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>checkErrStatusInPassarea</name>
					<type>Boolean</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>handleErrInPassarea</name>
					<type>Boolean</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>expectedSeq</name>
					<type>Integer</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>bContinue</name>
					<type>Boolean</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>gapCheckBySvc</name>
					<type>Boolean</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>numberOfMessagesToDrain</name>
					<type>Integer</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>countOfMsgDrain</name>
					<type>Integer</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>reserveAddress</name>
					<type>Boolean</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>isFirstMessage</name>
					<type>Boolean</type>
					<notnull>false</notnull>
				</field>
				<field xsi:type="InternalMessageFieldType">
					<name>supportGPII</name>
					<type>Boolean</type>
					<notnull>false</notnull>
				</field>
			</fields>
		</normalizedformat>
		<validationrules name="Default" type="ValidationRules">
		</validationrules>
		<elementproperties>
			<propertymap>
				<property name="codegen.java.properties">
					<value>
						<propertymap type="com.tplus.transform.design.PropertiesDef">
							<property name="Java Package Name" value="com.transform.internal.%e"/>
							<property name="Jar Name" value="%c.jar"/>
							<property name="Manifest Entries" value="transformrt.jar"/>
							<property name="Data Source" value=""/>
						</propertymap>
					</value>
				</property>
			</propertymap>
		</elementproperties>
	</internalmessage>
	<elementproperties>
		<propertymap>
			<property name="DOCUMENT_PROPERTIES">
				<value>
					<propertymap>
						<property name="Creation Time" value="Wed Apr 12 11:04:53 IST 2017"/>
						<property name="Author" value="krishnan"/>
						<property name="Title" value="fniGwyXFormAppIsn"/>
						<property name="Client Id" value="venkat_hyd@volantetech.com"/>
						<property name="Last Author" value="sys"/>
						<property name="Last Save Time" value="Fri Dec 01 14:11:37 IST 2017"/>
						<property name="Designer Build" value="1629"/>
						<property name="Revision Number" value="1862"/>
					</propertymap>
				</value>
			</property>
			<property name="CARTRIDGE_INFO">
				<value>
					<propertymap type="com.tplus.transform.design.CartridgeInfo">
						<property name="GeneratedFiles">
							<value>
								<propertymap>
								</propertymap>
							</value>
						</property>
						<property name="cartridgefilename" value="C:\Users\sys\Desktop\EMX_Source\EMX_Source\BusinessModules\fniGwyXFormAppIsn\fniGwyXFormAppIsn.car"/>
					</propertymap>
				</value>
			</property>
			<property name="codegen.java.options">
				<value>
					<propertymap type="com.tplus.transform.design.codegen.java.JavaCodeGeneratorOptions">
						<property name="isJBoss" value="true"/>
						<property name="resource-references">
							<value>
								<propertylist>
								</propertylist>
							</value>
						</property>
						<property name="isWAR" value="false"/>
						<property name="isOSGI" value="true"/>
						<property name="isGenerateALSB" value="false"/>
						<property name="isEJB" value="true"/>
						<property name="osgi-options">
							<value>
								<propertymap>
									<property name="include-dependencies" value="false"/>
								</propertymap>
							</value>
						</property>
						<property name="isOrion" value="true"/>
						<property name="isWebSphere" value="true"/>
						<property name="isVolante" value="true"/>
						<property name="isRemote" value="true"/>
						<property name="isLocal" value="true"/>
						<property name="isWebLogic" value="true"/>
						<property name="isGeronimo" value="true"/>
						<property name="isGenerateJNDILinks" value="true"/>
						<property name="isWLEVS" value="false"/>
						<property name="ejb-jndi-prefix" value=""/>
						<property name="isGenerateEAR" value="false"/>
					</propertymap>
				</value>
			</property>
			<property name="codegen.java.properties">
				<value>
					<propertymap type="com.tplus.transform.design.PropertiesDef">
						<property name="Java Package Name" value="com.transform.cartridge.%c"/>
						<property name="Max Class Length" value="150"/>
					</propertymap>
				</value>
			</property>
			<property name="testsuites">
				<value>
					<propertylist>
						<value value="sample\testsuite.xml"/>
					</propertylist>
				</value>
			</property>
			<property name="WebServiceDefs">
				<value>
					<propertymap>
						<property name="webservices">
							<value>
								<propertylist>
								</propertylist>
							</value>
						</property>
					</propertymap>
				</value>
			</property>
			<property name="codegen.java.bindings">
				<value>
					<propertymap type="com.tplus.transform.design.codegen.DefaultLanguageMapping">
					</propertymap>
				</value>
			</property>
			<property name="codegen.java.general">
				<value>
					<propertymap>
						<property name="additionalClasspath" value=""/>
						<property name="debugInfo" value="false"/>
					</propertymap>
				</value>
			</property>
		</propertymap>
	</elementproperties>
	<workspace>
		<selected-element root="C:\Users\sys\Desktop\EMX_Source\EMX_Source\BusinessModules\fniGwyXFormAppIsn\fniGwyXFormAppIsn.car">fniGwyXFormAppIsn/fniGwyXFormAppIsnFlow</selected-element>
	</workspace>
</cartridge>

