<?xml version="1.0" encoding="UTF-8" ?>
<SwiftMessageFormat name="MT103STP">
	<standard>SWIFT</standard>
	<standard-name>MT103STP</standard-name>
	<standard-version>SRG 2017</standard-version>
	<standard-release-qualifier>20170227</standard-release-qualifier>
	<DescriptiveName><![CDATA[Single Customer Credit Transfer]]></DescriptiveName>
	<Category>Customer Payments &amp; Cheques</Category>
	<Description>This message type is sent by, or on behalf of, the financial institution of the ordering customer, directly or through (a) correspondent(s), to the financial institution of the beneficiary customer.

It is used to convey a funds transfer instruction in which the ordering customer or the beneficiary customer, or both, are non-financial institutions from the perspective of the Sender.

This message may only be used for clean payment instructions. It must not be used to advise the remitting bank of a payment for a clean, eg, cheque, collection, nor to provide the cover for a transaction whose completion was advised separately, eg, via an MT 400.</Description>
	<SwiftFields>
		<customizable>true</customizable>
		<modifiable>false</modifiable>
		<SwiftMessageType>User</SwiftMessageType>
		<max-length>10000</max-length>
		<HeaderAndTrailerType>SWIFT_INPUT_OUTPUT_HEADER</HeaderAndTrailerType>
		<Header>
		</Header>
		<Data>
			<Fields>
				<SwiftField Name="20">
					<SwiftFieldDef Name="20">
						<Generic>false</Generic>
						<Description><![CDATA[Reference]]></Description>
						<Option Name="">
							<Format><![CDATA[16x]]></Format>
							<Specification><![CDATA[(Sender's Reference)]]></Specification>
							<Description><![CDATA[Sender's Reference]]></Description>
						</Option>
					</SwiftFieldDef>
					<Repeating>false</Repeating>
					<Presence>M</Presence>
					<Options> </Options>
					<Validations>
						<SubField Name="Sender's_Reference">
							<Validation>
								<Options> </Options>
								<ErrorCode>T26</ErrorCode>
								<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive slashes '//' (Error code(s): T26).]]></Comment>
								<ValidationPattern xsi:type="T26" Type="T26">
									<Type>T26</Type>
								</ValidationPattern>
							</Validation>
						</SubField>
					</Validations>
				</SwiftField>
				<SwiftField Name="13C">
					<SwiftFieldDef Name="13">
						<Generic>false</Generic>
						<Description><![CDATA[Number Identification]]></Description>
						<Option Name="C">
							<Format><![CDATA[/8c/4!n1!x4!n]]></Format>
							<Specification><![CDATA[(Code)(Time indication)(Sign)(Time offset)]]></Specification>
							<Description><![CDATA[Time Indication]]></Description>
						</Option>
					</SwiftFieldDef>
					<Repeating>true</Repeating>
					<Presence>O</Presence>
					<Options>C</Options>
					<Validations>
						<SubField Name="Time_indication">
							<Validation>
								<Options>C</Options>
								<ErrorCode>T38</ErrorCode>
								<Comment><![CDATA[Time indication must be a valid time expressed as HHMM (Error code(s): T38).]]></Comment>
								<ValidationPattern xsi:type="DATE" Type="DATE">
									<Type>DATE</Type>
									<Format>HHmm</Format>
								</ValidationPattern>
							</Validation>
						</SubField>
						<SubField Name="Sign">
							<Validation>
								<Options>C</Options>
								<ErrorCode>T15</ErrorCode>
								<Comment><![CDATA[One of the following codes must be used in Sign (Error code(s): T15).]]></Comment>
								<ValidationPattern xsi:type="CODE" Type="CODE">
									<Type>CODE</Type>
									<Codes>
										<Code Name="+">
											<DetailedName>Plus</DetailedName>
											<Description>The + sign.</Description>
										</Code>
										<Code Name="-">
											<DetailedName>Minus</DetailedName>
											<Description>The - sign.</Description>
										</Code>
									</Codes>
								</ValidationPattern>
							</Validation>
						</SubField>
						<SubField Name="Time_offset">
							<Validation>
								<Options>C</Options>
								<ErrorCode>T16</ErrorCode>
								<Comment><![CDATA[Time offset is expressed as HHMM, where the hour component, ie, 'HH', must be in the range of 00 through 13,and the minute component, ie, 'MM' must be in the range of 00 through 59. Any 'HH' or 'MM' component outside of these range checks will be disallowed (Error code(s): T16).]]></Comment>
								<ValidationPattern xsi:type="Time_Offset" Type="Time Offset">
									<Type>Time Offset</Type>
								</ValidationPattern>
							</Validation>
						</SubField>
					</Validations>
				</SwiftField>
				<SwiftField Name="23B">
					<SwiftFieldDef Name="23">
						<Generic>false</Generic>
						<Description><![CDATA[Function of the Message]]></Description>
						<Option Name="B">
							<Format><![CDATA[4!c]]></Format>
							<Specification><![CDATA[(Type)]]></Specification>
							<Description><![CDATA[Bank Operation Code]]></Description>
						</Option>
					</SwiftFieldDef>
					<Repeating>false</Repeating>
					<Presence>M</Presence>
					<Options>B</Options>
					<Validations>
						<SubField Name="Type">
							<Validation>
								<Options>B</Options>
								<ErrorCode>T36</ErrorCode>
								<Comment><![CDATA[One of the following codes must be used (Error code(s): T36):]]></Comment>
								<ValidationPattern xsi:type="CODE" Type="CODE">
									<Type>CODE</Type>
									<Codes>
										<Code Name="CRED">
											<DetailedName>Normal credit transfer</DetailedName>
											<Description>This message contains a credit transfer where there is no SWIFT Service Level involved.</Description>
										</Code>
										<Code Name="CRTS">
											<DetailedName>Test message</DetailedName>
											<Description>This message contains a credit transfer for test purposes.</Description>
										</Code>
										<Code Name="SPAY">
											<DetailedName>SWIFTPay</DetailedName>
											<Description>This message contains a credit transfer to be processed according to the SWIFTPay Service Level.</Description>
										</Code>
										<Code Name="SPRI">
											<DetailedName>Priority</DetailedName>
											<Description>This message contains a credit transfer to be processed according to the Priority Service Level.</Description>
										</Code>
										<Code Name="SSTD">
											<DetailedName>Standard</DetailedName>
											<Description>This message contains a credit transfer to be processed according to the Standard Service Level.</Description>
										</Code>
									</Codes>
								</ValidationPattern>
							</Validation>
						</SubField>
					</Validations>
				</SwiftField>
				<SwiftField Name="23E">
					<SwiftFieldDef Name="23">
						<Generic>false</Generic>
						<Description><![CDATA[Function of the Message]]></Description>
						<Option Name="E">
							<Format><![CDATA[4!c[/30x]]]></Format>
							<Specification><![CDATA[(Instruction Code)(Additional Information)]]></Specification>
							<Description><![CDATA[Instruction Code]]></Description>
						</Option>
					</SwiftFieldDef>
					<Repeating>true</Repeating>
					<Presence>O</Presence>
					<Options>E</Options>
					<Validations>
						<SubField Name="Instruction_Code">
							<Validation>
								<Options>E</Options>
								<ErrorCode>T48</ErrorCode>
								<Comment><![CDATA[Instruction Code must contain one of the following codes (Error code(s): T48):]]></Comment>
								<ValidationPattern xsi:type="CODE" Type="CODE">
									<Type>CODE</Type>
									<Codes>
										<Code Name="SDVA">
											<DetailedName>Same Day Value</DetailedName>
											<Description>Payment must be executed with same day value to the beneficiary.</Description>
										</Code>
										<Code Name="INTC">
											<DetailedName>Intra-Company Payment</DetailedName>
											<Description>A payment between two companies belonging to the same group.</Description>
										</Code>
										<Code Name="REPA">
											<DetailedName>Related Payment</DetailedName>
											<Description>Payment has a related e-Payments reference.</Description>
										</Code>
										<Code Name="CORT">
											<DetailedName>Corporate Trade</DetailedName>
											<Description>Payment is made in settlement of a trade, eg, foreign exchange deal, securities transaction.</Description>
										</Code>
									</Codes>
								</ValidationPattern>
							</Validation>
						</SubField>
					</Validations>
				</SwiftField>
				<SwiftField Name="26T">
					<SwiftFieldDef Name="26">
						<Generic>false</Generic>
						<Option Name="T">
							<Format><![CDATA[3!c]]></Format>
							<Specification><![CDATA[(Type)]]></Specification>
							<Description><![CDATA[Transaction Type Code]]></Description>
						</Option>
					</SwiftFieldDef>
					<Repeating>false</Repeating>
					<Presence>O</Presence>
					<Options>T</Options>
				</SwiftField>
				<SwiftField Name="32A">
					<SwiftFieldDef Name="32">
						<Generic>false</Generic>
						<Option Name="A">
							<Format><![CDATA[6!n3!a15d]]></Format>
							<Specification><![CDATA[(Date) (Currency) (Amount)]]></Specification>
							<Description><![CDATA[Value Date/Currency/Interbank Settled Amount]]></Description>
						</Option>
					</SwiftFieldDef>
					<Repeating>false</Repeating>
					<Presence>M</Presence>
					<Options>A</Options>
					<Validations>
						<SubField Name="Date">
							<Validation>
								<Options>A</Options>
								<ErrorCode>T50</ErrorCode>
								<Comment><![CDATA[Date must be a valid date expressed as YYMMDD (Error code(s): T50).]]></Comment>
								<ValidationPattern xsi:type="DATE" Type="DATE">
									<Type>DATE</Type>
									<Format>yyMMdd</Format>
									<value-date>true</value-date>
								</ValidationPattern>
							</Validation>
						</SubField>
						<SubField Name="Currency">
							<Validation>
								<Options>A</Options>
								<ErrorCode>T52</ErrorCode>
								<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52).]]></Comment>
								<ValidationPattern xsi:type="Currency_Code" Type="Currency Code">
									<Type>Currency Code</Type>
								</ValidationPattern>
							</Validation>
						</SubField>
						<SubField Name="Amount">
							<Validation>
								<Options>A</Options>
								<ErrorCode>C03</ErrorCode>
								<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency (Error code(s): C03,T40,T43).]]></Comment>
								<ValidationPattern xsi:type="Decimal" Type="Decimal">
									<Type>Decimal</Type>
									<currency-field>Currency</currency-field>
								</ValidationPattern>
							</Validation>
						</SubField>
					</Validations>
				</SwiftField>
				<SwiftField Name="33B">
					<SwiftFieldDef Name="33">
						<Generic>false</Generic>
						<Option Name="B">
							<Format><![CDATA[3!a15d]]></Format>
							<Specification><![CDATA[(Currency) (Amount)]]></Specification>
							<Description><![CDATA[Currency/Instructed Amount]]></Description>
						</Option>
					</SwiftFieldDef>
					<Repeating>false</Repeating>
					<Presence>O</Presence>
					<Options>B</Options>
					<Validations>
						<SubField Name="Currency">
							<Validation>
								<Options>B</Options>
								<ErrorCode>T52</ErrorCode>
								<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52).]]></Comment>
								<ValidationPattern xsi:type="Currency_Code" Type="Currency Code">
									<Type>Currency Code</Type>
								</ValidationPattern>
							</Validation>
						</SubField>
						<SubField Name="Amount">
							<Validation>
								<Options>B</Options>
								<ErrorCode>C03</ErrorCode>
								<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency (Error code(s): C03,T40,T43).]]></Comment>
								<ValidationPattern xsi:type="Decimal" Type="Decimal">
									<Type>Decimal</Type>
									<currency-field>Currency</currency-field>
								</ValidationPattern>
							</Validation>
						</SubField>
					</Validations>
				</SwiftField>
				<SwiftField Name="36">
					<SwiftFieldDef Name="36">
						<Generic>false</Generic>
						<Description><![CDATA[Quantity of Financial Instrument]]></Description>
						<Option Name="">
							<Format><![CDATA[12d]]></Format>
							<Specification><![CDATA[(Rate)]]></Specification>
							<Description><![CDATA[Exchange Rate]]></Description>
						</Option>
					</SwiftFieldDef>
					<Repeating>false</Repeating>
					<Presence>O</Presence>
					<Options> </Options>
				</SwiftField>
				<SwiftField Name="50a">
					<SwiftFieldDef Name="50">
						<Generic>false</Generic>
						<Option Name="A">
							<Format><![CDATA[([/34xCRLF])(4!a2!a2!c[3!c])]]></Format>
							<Specification><![CDATA[(Account)(Identifier Code)]]></Specification>
							<Description><![CDATA[Ordering Customer]]></Description>
						</Option>
						<Option Name="F">
							<Format><![CDATA[35x(CRLF4*35x)]]></Format>
							<Specification><![CDATA[(Party Identifier)(Name & Address)]]></Specification>
							<Description><![CDATA[Ordering Customer]]></Description>
						</Option>
						<Option Name="K">
							<Format><![CDATA[([/34xCRLF])(4*35x)]]></Format>
							<Specification><![CDATA[(Account)(Name & Address)]]></Specification>
							<Description><![CDATA[Ordering Customer]]></Description>
						</Option>
					</SwiftFieldDef>
					<Repeating>false</Repeating>
					<Presence>M</Presence>
					<Options>A, K, F</Options>
					<Validations>
						<SubField Name="Identifier_Code">
							<Validation>
								<Options>A</Options>
								<ErrorCode>T27, T28, T29, T45</ErrorCode>
								<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
								<ValidationPattern xsi:type="BIC" Type="BIC">
									<Type>BIC</Type>
								</ValidationPattern>
							</Validation>
						</SubField>
					</Validations>
				</SwiftField>
				<SwiftField Name="52A">
					<SwiftFieldDef Name="52">
						<Generic>false</Generic>
						<Option Name="A">
							<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
							<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
							<Description><![CDATA[Ordering Institution]]></Description>
						</Option>
					</SwiftFieldDef>
					<Repeating>false</Repeating>
					<Presence>O</Presence>
					<Options>A</Options>
					<Validations>
						<SubField Name="Identifier_Code">
							<Validation>
								<Options>A</Options>
								<ErrorCode>T27, T28, T29, T45</ErrorCode>
								<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
								<ValidationPattern xsi:type="BIC" Type="BIC">
									<Type>BIC</Type>
								</ValidationPattern>
							</Validation>
							<Validation>
								<Options>A</Options>
								<ErrorCode>C05</ErrorCode>
								<Comment><![CDATA[Identifier Code must not be a BEI, ie must not be of subtype BEID, MCCO, TESP or TRCO (Error code(s): C05).]]></Comment>
								<ValidationPattern xsi:type="C05" Type="C05">
									<Type>C05</Type>
								</ValidationPattern>
							</Validation>
						</SubField>
						<SubField Name="CreditDebit">
							<Validation>
								<Options>A</Options>
								<ErrorCode>T51</ErrorCode>
								<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
								<ValidationPattern xsi:type="CODE" Type="CODE">
									<Type>CODE</Type>
									<Codes>
										<Code Name="C">
											<DetailedName>Credit</DetailedName>
										</Code>
										<Code Name="D">
											<DetailedName>Debit</DetailedName>
										</Code>
									</Codes>
								</ValidationPattern>
							</Validation>
						</SubField>
					</Validations>
				</SwiftField>
				<SwiftField Name="53a">
					<SwiftFieldDef Name="53">
						<Generic>false</Generic>
						<Option Name="A">
							<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
							<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
							<Description><![CDATA[Sender's Correspondent]]></Description>
						</Option>
						<Option Name="B">
							<Format><![CDATA[/1!a[/34x](CRLF35x) | /1!a[/34x] | [/34xCRLF]35x | /34x]]></Format>
							<Specification><![CDATA[(CreditDebit) (Party Identifier) (Location) | (CreditDebit)(Party Identifier) |(Party Identifier) (Location) | (Party Identifier)]]></Specification>
							<Description><![CDATA[Sender's Correspondent]]></Description>
						</Option>
					</SwiftFieldDef>
					<Repeating>false</Repeating>
					<Presence>O</Presence>
					<Options>A, B</Options>
					<Validations>
						<SubField Name="Identifier_Code">
							<Validation>
								<Options>A</Options>
								<ErrorCode>T27, T28, T29, T45</ErrorCode>
								<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
								<ValidationPattern xsi:type="BIC" Type="BIC">
									<Type>BIC</Type>
								</ValidationPattern>
							</Validation>
							<Validation>
								<Options>A</Options>
								<ErrorCode>C05</ErrorCode>
								<Comment><![CDATA[Identifier Code must not be a BEI, ie must not be of subtype BEID, MCCO, TESP or TRCO (Error code(s): C05).]]></Comment>
								<ValidationPattern xsi:type="C05" Type="C05">
									<Type>C05</Type>
								</ValidationPattern>
							</Validation>
						</SubField>
						<SubField Name="CreditDebit">
							<Validation>
								<Options>A, B</Options>
								<ErrorCode>T51</ErrorCode>
								<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
								<ValidationPattern xsi:type="CODE" Type="CODE">
									<Type>CODE</Type>
									<Codes>
										<Code Name="C">
											<DetailedName>Credit</DetailedName>
										</Code>
										<Code Name="D">
											<DetailedName>Debit</DetailedName>
										</Code>
									</Codes>
								</ValidationPattern>
							</Validation>
						</SubField>
					</Validations>
				</SwiftField>
				<SwiftField Name="54A">
					<SwiftFieldDef Name="54">
						<Generic>false</Generic>
						<Option Name="A">
							<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
							<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
							<Description><![CDATA[Receiver's Correspondent]]></Description>
						</Option>
					</SwiftFieldDef>
					<Repeating>false</Repeating>
					<Presence>O</Presence>
					<Options>A</Options>
					<Validations>
						<SubField Name="Identifier_Code">
							<Validation>
								<Options>A</Options>
								<ErrorCode>T27, T28, T29, T45</ErrorCode>
								<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
								<ValidationPattern xsi:type="BIC" Type="BIC">
									<Type>BIC</Type>
								</ValidationPattern>
							</Validation>
							<Validation>
								<Options>A</Options>
								<ErrorCode>C05</ErrorCode>
								<Comment><![CDATA[Identifier Code must not be a BEI, ie must not be of subtype BEID, MCCO, TESP or TRCO (Error code(s): C05).]]></Comment>
								<ValidationPattern xsi:type="C05" Type="C05">
									<Type>C05</Type>
								</ValidationPattern>
							</Validation>
						</SubField>
						<SubField Name="CreditDebit">
							<Validation>
								<Options>A</Options>
								<ErrorCode>T51</ErrorCode>
								<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
								<ValidationPattern xsi:type="CODE" Type="CODE">
									<Type>CODE</Type>
									<Codes>
										<Code Name="C">
											<DetailedName>Credit</DetailedName>
										</Code>
										<Code Name="D">
											<DetailedName>Debit</DetailedName>
										</Code>
									</Codes>
								</ValidationPattern>
							</Validation>
						</SubField>
					</Validations>
				</SwiftField>
				<SwiftField Name="55A">
					<SwiftFieldDef Name="55">
						<Generic>false</Generic>
						<Description><![CDATA[Third Reimbursement Institution]]></Description>
						<Option Name="A">
							<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
							<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
							<Description><![CDATA[Third Reimbursement Institution]]></Description>
						</Option>
					</SwiftFieldDef>
					<Repeating>false</Repeating>
					<Presence>O</Presence>
					<Options>A</Options>
					<Validations>
						<SubField Name="Identifier_Code">
							<Validation>
								<Options>A</Options>
								<ErrorCode>T27, T28, T29, T45</ErrorCode>
								<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
								<ValidationPattern xsi:type="BIC" Type="BIC">
									<Type>BIC</Type>
								</ValidationPattern>
							</Validation>
							<Validation>
								<Options>A</Options>
								<ErrorCode>C05</ErrorCode>
								<Comment><![CDATA[Identifier Code must not be a BEI, ie must not be of subtype BEID, MCCO, TESP or TRCO (Error code(s): C05).]]></Comment>
								<ValidationPattern xsi:type="C05" Type="C05">
									<Type>C05</Type>
								</ValidationPattern>
							</Validation>
						</SubField>
						<SubField Name="CreditDebit">
							<Validation>
								<Options>A</Options>
								<ErrorCode>T51</ErrorCode>
								<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
								<ValidationPattern xsi:type="CODE" Type="CODE">
									<Type>CODE</Type>
									<Codes>
										<Code Name="C">
											<DetailedName>Credit</DetailedName>
										</Code>
										<Code Name="D">
											<DetailedName>Debit</DetailedName>
										</Code>
									</Codes>
								</ValidationPattern>
							</Validation>
						</SubField>
					</Validations>
				</SwiftField>
				<SwiftField Name="56A">
					<SwiftFieldDef Name="56">
						<Generic>false</Generic>
						<Option Name="A">
							<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
							<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
							<Description><![CDATA[Intermediary Institution]]></Description>
						</Option>
					</SwiftFieldDef>
					<Repeating>false</Repeating>
					<Presence>O</Presence>
					<Options>A</Options>
					<Validations>
						<SubField Name="Identifier_Code">
							<Validation>
								<Options>A</Options>
								<ErrorCode>T27, T28, T29, T45</ErrorCode>
								<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
								<ValidationPattern xsi:type="BIC" Type="BIC">
									<Type>BIC</Type>
								</ValidationPattern>
							</Validation>
							<Validation>
								<Options>A</Options>
								<ErrorCode>C05</ErrorCode>
								<Comment><![CDATA[Identifier Code must not be a BEI, ie must not be of subtype BEID, MCCO, TESP or TRCO (Error code(s): C05).]]></Comment>
								<ValidationPattern xsi:type="C05" Type="C05">
									<Type>C05</Type>
								</ValidationPattern>
							</Validation>
						</SubField>
						<SubField Name="CreditDebit">
							<Validation>
								<Options>A</Options>
								<ErrorCode>T51</ErrorCode>
								<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
								<ValidationPattern xsi:type="CODE" Type="CODE">
									<Type>CODE</Type>
									<Codes>
										<Code Name="C">
											<DetailedName>Credit</DetailedName>
										</Code>
										<Code Name="D">
											<DetailedName>Debit</DetailedName>
										</Code>
									</Codes>
								</ValidationPattern>
							</Validation>
						</SubField>
					</Validations>
				</SwiftField>
				<SwiftField Name="57A">
					<SwiftFieldDef Name="57">
						<Generic>false</Generic>
						<Option Name="A">
							<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
							<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
							<Description><![CDATA[Account With Institution]]></Description>
						</Option>
					</SwiftFieldDef>
					<Repeating>false</Repeating>
					<Presence>O</Presence>
					<Options>A</Options>
					<Validations>
						<SubField Name="Identifier_Code">
							<Validation>
								<Options>A</Options>
								<ErrorCode>T27, T28, T29, T45</ErrorCode>
								<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
								<ValidationPattern xsi:type="BIC" Type="BIC">
									<Type>BIC</Type>
								</ValidationPattern>
							</Validation>
							<Validation>
								<Options>A</Options>
								<ErrorCode>C05</ErrorCode>
								<Comment><![CDATA[Identifier Code must not be a BEI, ie must not be of subtype BEID, MCCO, TESP or TRCO (Error code(s): C05).]]></Comment>
								<ValidationPattern xsi:type="C05" Type="C05">
									<Type>C05</Type>
								</ValidationPattern>
							</Validation>
						</SubField>
						<SubField Name="CreditDebit">
							<Validation>
								<Options>A</Options>
								<ErrorCode>T51</ErrorCode>
								<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
								<ValidationPattern xsi:type="CODE" Type="CODE">
									<Type>CODE</Type>
									<Codes>
										<Code Name="C">
											<DetailedName>Credit</DetailedName>
										</Code>
										<Code Name="D">
											<DetailedName>Debit</DetailedName>
										</Code>
									</Codes>
								</ValidationPattern>
							</Validation>
						</SubField>
					</Validations>
				</SwiftField>
				<SwiftField Name="59a">
					<SwiftFieldDef Name="59">
						<Generic>false</Generic>
						<Option Name="">
							<Format><![CDATA[[/34xCRLF]4*35x]]></Format>
							<Specification><![CDATA[(Account)(Name & Address)]]></Specification>
							<Description><![CDATA[Beneficiary Customer]]></Description>
						</Option>
						<Option Name="A">
							<Format><![CDATA[([/34xCRLF])(4!a2!a2!c[3!c])]]></Format>
							<Specification><![CDATA[(Account)(Identifier Code)]]></Specification>
							<Description><![CDATA[Beneficiary Customer]]></Description>
						</Option>
						<Option Name="F">
							<Format><![CDATA[[/34xCRLF]4*35x]]></Format>
							<Specification><![CDATA[(Account)(Name & Address Details)]]></Specification>
							<Description><![CDATA[Beneficiary Customer]]></Description>
						</Option>
					</SwiftFieldDef>
					<Repeating>false</Repeating>
					<Presence>M</Presence>
					<Options>A,  , F</Options>
					<Validations>
						<SubField Name="Identifier_Code">
							<Validation>
								<Options>A</Options>
								<ErrorCode>T27, T28, T29, T45</ErrorCode>
								<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
								<ValidationPattern xsi:type="BIC" Type="BIC">
									<Type>BIC</Type>
								</ValidationPattern>
							</Validation>
						</SubField>
					</Validations>
				</SwiftField>
				<SwiftField Name="70">
					<SwiftFieldDef Name="70">
						<Generic>false</Generic>
						<Description><![CDATA[Narrative]]></Description>
						<Option Name="">
							<Format><![CDATA[4*35x]]></Format>
							<Specification><![CDATA[(Narrative)]]></Specification>
							<Description><![CDATA[Remittance Information]]></Description>
						</Option>
					</SwiftFieldDef>
					<Repeating>false</Repeating>
					<Presence>O</Presence>
					<Options> </Options>
				</SwiftField>
				<SwiftField Name="71A">
					<SwiftFieldDef Name="71">
						<Generic>false</Generic>
						<Option Name="A">
							<Format><![CDATA[3!a]]></Format>
							<Specification><![CDATA[(Code)]]></Specification>
							<Description><![CDATA[Details of Charges]]></Description>
						</Option>
					</SwiftFieldDef>
					<Repeating>false</Repeating>
					<Presence>M</Presence>
					<Options>A</Options>
					<Validations>
						<SubField Name="Code">
							<Validation>
								<Options>A</Options>
								<ErrorCode>T08</ErrorCode>
								<Comment><![CDATA[One of the following codes must be used (Error code(s): T08):]]></Comment>
								<ValidationPattern xsi:type="CODE" Type="CODE">
									<Type>CODE</Type>
									<Codes>
										<Code Name="BEN">
											<DetailedName>Beneficiary</DetailedName>
											<Description>All transaction charges are to be borne by the beneficiary customer.</Description>
										</Code>
										<Code Name="OUR">
											<DetailedName>Our customer charged</DetailedName>
											<Description>All transaction charges are to be borne by the ordering customer.</Description>
										</Code>
										<Code Name="SHA">
											<DetailedName>Shared charges</DetailedName>
											<Description>All transaction charges other than the charges of the financial institution servicing the ordering customer account are borne by the beneficiary customer.</Description>
										</Code>
									</Codes>
								</ValidationPattern>
							</Validation>
						</SubField>
					</Validations>
				</SwiftField>
				<SwiftField Name="71F">
					<SwiftFieldDef Name="71">
						<Generic>false</Generic>
						<Option Name="F">
							<Format><![CDATA[3!a15d]]></Format>
							<Specification><![CDATA[(Currency) (Amount)]]></Specification>
							<Description><![CDATA[Sender's Charges]]></Description>
						</Option>
					</SwiftFieldDef>
					<Repeating>true</Repeating>
					<Presence>O</Presence>
					<Options>F</Options>
					<Validations>
						<SubField Name="Currency">
							<Validation>
								<Options>F</Options>
								<ErrorCode>T52</ErrorCode>
								<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52).]]></Comment>
								<ValidationPattern xsi:type="Currency_Code" Type="Currency Code">
									<Type>Currency Code</Type>
								</ValidationPattern>
							</Validation>
						</SubField>
						<SubField Name="Amount">
							<Validation>
								<Options>F</Options>
								<ErrorCode>C03</ErrorCode>
								<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency (Error code(s): C03).]]></Comment>
								<ValidationPattern xsi:type="Decimal" Type="Decimal">
									<Type>Decimal</Type>
									<currency-field>Currency</currency-field>
								</ValidationPattern>
							</Validation>
						</SubField>
					</Validations>
				</SwiftField>
				<SwiftField Name="71G">
					<SwiftFieldDef Name="71">
						<Generic>false</Generic>
						<Option Name="G">
							<Format><![CDATA[3!a15d]]></Format>
							<Specification><![CDATA[(Currency) (Amount)]]></Specification>
							<Description><![CDATA[Receiver's Charges]]></Description>
						</Option>
					</SwiftFieldDef>
					<Repeating>false</Repeating>
					<Presence>O</Presence>
					<Options>G</Options>
					<Validations>
						<SubField Name="Currency">
							<Validation>
								<Options>G</Options>
								<ErrorCode>T52</ErrorCode>
								<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52).]]></Comment>
								<ValidationPattern xsi:type="Currency_Code" Type="Currency Code">
									<Type>Currency Code</Type>
								</ValidationPattern>
							</Validation>
						</SubField>
						<SubField Name="Amount">
							<Validation>
								<Options>G</Options>
								<ErrorCode>C03</ErrorCode>
								<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency (Error code(s): C03).]]></Comment>
								<ValidationPattern xsi:type="Decimal" Type="Decimal">
									<Type>Decimal</Type>
									<currency-field>Currency</currency-field>
								</ValidationPattern>
							</Validation>
						</SubField>
					</Validations>
				</SwiftField>
				<SwiftField Name="72">
					<SwiftFieldDef Name="72">
						<Generic>false</Generic>
						<Option Name="">
							<Format><![CDATA[6*35x]]></Format>
							<Specification><![CDATA[(Narrative - Structured Format)]]></Specification>
							<Description><![CDATA[Sender to Receiver Information]]></Description>
						</Option>
					</SwiftFieldDef>
					<Repeating>false</Repeating>
					<Presence>O</Presence>
					<Options> </Options>
				</SwiftField>
				<SwiftField Name="77B">
					<SwiftFieldDef Name="77">
						<Generic>false</Generic>
						<Option Name="B">
							<Format><![CDATA[3*35x]]></Format>
							<Specification><![CDATA[(Narrative)]]></Specification>
							<Description><![CDATA[Regulatory Reporting]]></Description>
						</Option>
					</SwiftFieldDef>
					<Repeating>false</Repeating>
					<Presence>O</Presence>
					<Options>B</Options>
				</SwiftField>
			</Fields>
		</Data>
		<Trailer>
		</Trailer>
	</SwiftFields>
	<validationrules name="Default">
		<hdrvalidationrules>
			<fieldvalidations>
				<fieldvalidation>
					<name>U08</name>
					<formula><![CDATA[if($this.Header.GetFieldIndex("User_Header") != -1) {
    def userHeader = $this.Header.GetSection("User_Header");
    if(userHeader.$size == 0) {
        return false;
    }
    else
        if(userHeader[0].IsNull("Validation_Flag")) {
            return false;
        }
        else
            if(userHeader[0].GetString("Validation_Flag") != "STP") {
                return false;
            }


}
return true;
]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>U08</error-code>
					<actionmessage><![CDATA["Invalid syntax, format, code word in tag 119(Validation Flag), or field tag 119 is missing. Allowed value is STP."]]></actionmessage>
				</fieldvalidation>
	<fieldvalidation>
						<name>U12</name>
		<fieldname>User Header</fieldname>
		<formula><![CDATA[Iff(IsNotNull(User_Header.Service_Type_Identifier), 
    IsNotNull(User_Header.Unique_End_To_End_Transaction_Reference))]]></formula>
		<severity>error</severity>
		<cascade>true</cascade>
						<error-code>U12</error-code>
		<actionmessage><![CDATA["When populating an end-to-end reference, both fields 111 and 121 must be populated: a message that contains only one of these two fields will not be accepted by FIN."]]></actionmessage>
	</fieldvalidation>
					<fieldvalidation>
						<name>U03</name>
						<fieldname>User Header.Unique End-To-End Transaction Reference</fieldname>
						<formula><![CDATA[Matches("[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[a-b8-9]{1}[a-f0-9]{3}-[a-f0-9]{12}", $value)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U03</error-code>
						<actionmessage><![CDATA["Invalid format! Format must be 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx' where x is any hexadecimal character (lower case only) and y is one of 8, 9, a, or b."]]></actionmessage>
					</fieldvalidation>
			</fieldvalidations>
		</hdrvalidationrules>
		<datavalidationrules>
			<fieldvalidations>
				<fieldvalidation>
					<name>C1-1</name>
					<fieldname>33B.Currency</fieldname>
					<formula><![CDATA[If($value == F32A[0].Currency, 
   F36.$size == 0, 
   F36.$size > 0)]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>D75</error-code>
					<actionmessage><![CDATA["If field 33B is present and the currency code is different from the currency code in field 32A, field 36 must be present, otherwise field 36 is not allowed."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>C1-2</name>
					<fieldname>36</fieldname>
					<formula><![CDATA[F33B.$size > 0]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>D75</error-code>
					<actionmessage><![CDATA["If field 33B is present and the currency code is different from the currency code in field 32A, field 36 must be present, otherwise field 36 is not allowed."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>C2</name>
					<comment><![CDATA["If the country codes of the Sender's and the Receiver's BICs are within the following list: AD, AT, BE, BG, BV, CH, CY, CZ, DE, DK, EE, ES, FI, FR, GB, GF, GI, GP, GR, HU, IE, IS, IT, LI, LT, LU, LV, MC, MQ, MT, NL, NO, PL, PM, PT, RE, RO, SE, SI, SJ, SK, SM, TF and VA, then field 33B is mandatory, otherwise field 33B is optional."]]></comment>
					<formula><![CDATA[def header = $this.Header;
def appheader;
if(header.GetFieldCount() == 0) {
	// No Header
	return true;
}
if(header.GetFieldType(0) != "Section"){
	// Custom header or FICC header
	return true;
}
else if(header.GetFieldCount() == 4) {
	// Input/output header
    appheader = If(header.GetSection(1).$size > 0, 
                   header.GetSection(1)[0], 
                   header.GetSection(2)[0]);
}
else {
    appheader = header.GetSection(1)[0];
}
def basicheader = header.GetSection(0)[0];
def ioIdentifier = appheader.GetString("Input_Output_Identifier");
def mir = (If(ioIdentifier == "O", 
           GetString(appheader, "Message Input Reference"), 
           ""));
def receiverAddress = (If(ioIdentifier == "I", 
                       GetString(appheader, "Receiver's Address"), 
                       ""));
def senderCountryCode = (If(ioIdentifier == "I", 
                         Mid(basicheader.GetString("LT Identifier"), 4, 2), 
                         Mid(mir, 10, 2)));
def receiverCountryCode = (If(ioIdentifier == "I", 
                           Mid(receiverAddress, 4, 2), 
                           Mid(basicheader.GetString("LT Identifier"), 4, 2)));
def countryList = ["AD", "AT", "BE", "BG", "BV", "CH", "CY", 
      "CZ", "DE", "DK", "EE", "ES", "FI", "FR", "GB", "GF", 
      "GI", "GP", "GR", "HU", "IE", "IS", "IT", "LI", "LT", 
      "LU", "LV", "MC", "MQ", "MT", "NL", "NO", "PL", "PM", 
      "PT", "RE", "RO", "SE", "SI", "SJ", "SK", "SM", "TF", "VA"];   
If(In(senderCountryCode, countryList) && 
     In(receiverCountryCode, countryList), 
   F33B.$size > 0, 
   true);]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>D49</error-code>
					<actionmessage><![CDATA["If the country codes of the Sender's and the Receiver's BICs are within the following list: AD, AT, BE, BG, BV, CH, CY, CZ, DE, DK, EE, ES, FI, FR, GB, GF, GI, GP, GR, HU, IE, IS, IT, LI, LT, LU, LV, MC, MQ, MT, NL, NO, PL, PM, PT, RE, RO, SE, SI, SJ, SK, SM, TF and VA, then field 33B is mandatory, otherwise field 33B is optional."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>C3-A</name>
					<fieldname>23E.Instruction_Code</fieldname>
					<formula><![CDATA[If(F23B[0].Type == "SPRI", In($value, "SDVA", "INTC"), true)]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>E01</error-code>
					<actionmessage><![CDATA["If field 23B contains the code SPRI, field 23E may contain only the codes SDVA or INTC."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>C3-B</name>
					<fieldname>23B.Type</fieldname>
					<formula><![CDATA[If(In($value, "SSTD", "SPAY"), F23E.$size == 0, true)]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>E02</error-code>
					<actionmessage><![CDATA["If field 23B contains one of the codes SSTD or SPAY, field 23E must not be used."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>C4</name>
					<fieldname>55A</fieldname>
					<formula><![CDATA[(F53a.$size > 0 && F53a[0].FormatOption == 'A') && 
  F54A.$size > 0]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>E06</error-code>
					<actionmessage><![CDATA["If field 55A is present, both fields 53A and 54A must also be present."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>C5</name>
					<fieldname>56A</fieldname>
					<formula><![CDATA[F57A.$size > 0]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>C81</error-code>
					<actionmessage><![CDATA["If field 56A is present, field 57A must also be present."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>C6</name>
					<fieldname>23B.Type</fieldname>
					<formula><![CDATA[If($value == "SPRI", F56A.$size == 0, true)]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>E16</error-code>
					<actionmessage><![CDATA["If field 23B contains the code SPRI, field 56A must not be present."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>C7-A</name>
					<fieldname>71A.Code</fieldname>
					<formula><![CDATA[If($value == "OUR", F71F.$size == 0, true)]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>E13</error-code>
					<actionmessage><![CDATA["If field 71A contains OUR, then field 71F is not allowed and field 71G is optional."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>C7-B</name>
					<fieldname>71A.Code</fieldname>
					<formula><![CDATA[If($value == "SHA", F71G.$size == 0, true)]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>D50</error-code>
					<actionmessage><![CDATA["If field 71A contains SHA, then field(s) 71F is(are) optional and field 71G is not allowed."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>C7-C</name>
					<fieldname>71A.Code</fieldname>
					<formula><![CDATA[If($value == "BEN", F71F.$size > 0 && F71G.$size == 0, true)]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>E15</error-code>
					<actionmessage><![CDATA["If field 71A contains BEN, then at least one occurrence of field 71F is mandatory and field 71G is not allowed."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>C8</name>
					<formula><![CDATA[If(F71F.$size > 0 || F71G.$size > 0, F33B.$size > 0, true)]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>D51</error-code>
					<actionmessage><![CDATA["If either field 71F (at least one occurrence) or field 71G is present, then field 33B is mandatory, otherwise field 33B is optional."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>C9</name>
					<fieldname>71G.Currency</fieldname>
					<formula><![CDATA[$value == F32A[0].Currency]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>C02</error-code>
					<actionmessage><![CDATA["The currency code in the fields 71G and 32A must be the same."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>C10</name>
					<fieldname>59a.Account</fieldname>
					<comment><![CDATA["If the country codes of the Sender's and the Receiver's BICs are within the following list: AD, AT, BE, BG, BV, CH, CY, CZ, DE, DK, EE, ES, FI, FR, GB, GF, GI, GP, GR, HU, IE, IL, IS, IT, LI, LT, LU, LV, MC, MQ, MT, NL, NO, PL, PM, PT, RE, RO, SE, SI, SJ, SK, SM, TF and VA, then the following apply: a) if field 57A is not present, the IBAN (ISO-13616) is mandatory in subfield Account of field 59a; b) if field 57A is present and the country code of the BIC in 57A is within the above list of country codes, the IBAN (ISO-13616) is mandatory in subfield Account of field 59a. In all other cases, the presence of the IBAN (ISO-13616) is optional and its format is not validated in subfield Account of field 59a."]]></comment>
					<formula><![CDATA[def header = $this.Header;
def appheader;

if(header.GetFieldCount() == 0) {
	// No Header
	return true;
}
if(header.GetFieldType(0) != "Section"){
	// Custom header or FICC header
	return true;
}
else if(header.GetFieldCount() == 4) {
	// Input/output header
    appheader = If(header.GetSection(1).$size > 0, 
                   header.GetSection(1)[0], 
                   header.GetSection(2)[0]);
}
else {
    appheader = header.GetSection(1)[0];
}
def basicheader = header.GetSection(0)[0];
def ioIdentifier = appheader.GetString("Input_Output_Identifier");
def mir = (If(ioIdentifier == "O", 
           GetString(appheader, "Message Input Reference"), 
           ""));
def receiverAddress = (If(ioIdentifier == "I", 
                       GetString(appheader, "Receiver's Address"), 
                       ""));
def senderCountryCode = (If(ioIdentifier == "I", 
                         Mid(basicheader.GetString("LT Identifier"), 4, 2), 
                         Mid(mir, 10, 2)));
def receiverCountryCode = (If(ioIdentifier == "I", 
                           Mid(receiverAddress, 4, 2), 
                           Mid(basicheader.GetString("LT Identifier"), 4, 2)));
def countryList = ["AD", "AT", "BE", "BG", "BV", "CH", "CY", 
      "CZ", "DE", "DK", "EE", "ES", "FI", "FR", "GB", "GF", 
      "GI", "GP", "GR", "HR", "HU", "IE", "IL", "IS", "IT", "LI", "LT", 
      "LU", "LV", "MC", "MQ", "MT", "NL", "NO", "PL", "PM", 
      "PT", "RE", "RO", "SE", "SI", "SJ", "SK", "SM", "TF", "VA"];                           
If(In(senderCountryCode, countryList) && 
     In(receiverCountryCode, countryList), 
   		If(F57A.$size==0 || In(Mid(F57A[0].Identifier_Code, 4, 2), countryList), IsISOIBAN($value), true), 
   true);
]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>D19</error-code>
					<actionmessage><![CDATA["If the country codes of the Sender's and the Receiver's BICs are within the following list: AD, AT, BE, BG, BV, CH, CY, CZ, DE, DK, EE, ES, FI, FR, GB, GF, GI, GP, GR, HR, HU, IE, IL, IS, IT, LI, LT, LU, LV, MC, MQ, MT, NL, NO, PL, PM, PT, RE, RO, SE, SI, SJ, SK, SM, TF and VA, then the following apply: a) if field 57A is not present, the IBAN (ISO-13616) is mandatory in subfield Account of field 59a; b) if field 57A is present and the country code of the BIC in 57A is within the above list of country codes, the IBAN (ISO-13616) is mandatory in subfield Account of field 59a. In all other cases, the presence of the IBAN (ISO-13616) is optional and its format is not validated in subfield Account of field 59a."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>F23E-A</name>
					<fieldname>23E.Additional_Information</fieldname>
					<formula><![CDATA[F23E.Instruction_Code == "REPA"]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>D97</error-code>
					<actionmessage><![CDATA["In field 23E, Additional Information is only allowed when Instruction Code consists of the following code: REPA."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>F23E-B</name>
					<fieldname>23E.Instruction_Code</fieldname>
					<formula><![CDATA[If($value == "REPA", 
   !FieldValueExistsInAtLeastOne(F23E, "Instruction_Code", "CORT"), 
   true)]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>D67</error-code>
					<actionmessage><![CDATA["When field 23E is used more than once, the following combination is not allowed: REPA with CORT."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>F23E-C</name>
					<fieldname>23E</fieldname>
					<formula><![CDATA[F23E.$size == SecGroup(F23E, "Instruction_Code").$size]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>E46</error-code>
					<actionmessage><![CDATA["If field 23E is repeated, the same code word must not be present more than once."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>F53a-A</name>
					<fieldname>53a.FormatOption</fieldname>
					<formula><![CDATA[If($value == 'B', IsNotNull(F53a.Party_Identifier), true)]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>E04</error-code>
					<actionmessage><![CDATA["If field 53a is present with option B, Party Identifier must be present in field 53B."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>F59a-A</name>
					<fieldname>59a</fieldname>
					<formula><![CDATA[IsNotNull(F59a.Account)]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>E10</error-code>
					<actionmessage><![CDATA["In field 59a, Account must be present."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>F71G-A</name>
					<fieldname>71G.Amount</fieldname>
					<formula><![CDATA[$value > 0]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>D57</error-code>
					<actionmessage><![CDATA["If field 71G is present, the amount must not equal '0'."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>F72-A</name>
					<fieldname>72.Narrative_-_Structured_Format</fieldname>
					<formula><![CDATA[VerifyField72NarrativeText($value)]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>T32</error-code>
					<actionmessage><![CDATA["The first line of field 72 should be of the following format: /8c/[additional information]. The remaining lines (2 - 6) should be of the following format: [//continuation of additional information] or [/8c/[additional information]]."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>F72-B</name>
					<fieldname>72.Narrative_-_Structured_Format</fieldname>
					<formula><![CDATA[def ActualValue = replace($value, "\r\n", "\n");
$startIndex = (If(StartsWith(ActualValue, "/INS/"), 0, FindFirst(ActualValue, "\n/INS/")));
$codeLen = (If(StartsWith(ActualValue, "/INS/"), 5, 6));
$endIndex = (If($startIndex == -1, -1, FindFirst(ActualValue, "\n", $startIndex + $codeLen)));
$endIndex = (If(($startIndex > -1 && $endIndex == -1), Length(ActualValue), $endIndex));
If($startIndex > -1 && $endIndex > -1, 
   IsValidBIC(Mid(ActualValue, $startIndex + $codeLen, $endIndex - ($startIndex + $codeLen))), 
   true);]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>T27</error-code>
					<actionmessage><![CDATA["In field 72, if the code /INS/ is used at the beginning of a line, it must be followed by a valid BIC and be the only information on that line."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>F72-C</name>
					<fieldname>72.Narrative_-_Structured_Format</fieldname>
					<formula><![CDATA[def ActualValue = replace($value, "\r\n", "\n");
$index = FindFirst(ActualValue, "\n/INS/");
If(StartsWith(ActualValue, "/INS/"), 
   $index == -1, 
   If($index > -1, FindFirst(ActualValue, "\n/INS/", $index + 7) == -1, true));]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>T47</error-code>
					<actionmessage><![CDATA["In field 72, if the code /INS/ is present at the beginning of a line, it must not be used again at the beginning of any other line."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>F72-D</name>
					<fieldname>72.Narrative_-_Structured_Format</fieldname>
					<comment><![CDATA["In field 72, the codes /REJT/ or /RETN/ must not be used."]]></comment>
					<formula><![CDATA[def ActualValue = replace($value, "\r\n", "\n");
!StartsWith(ActualValue, "/REJT/") && 
  !StartsWith(ActualValue, "/RETN/") && 
  FindFirst(ActualValue, "\n/REJT/") == -1 && 
  FindFirst(ActualValue, "\n/RETN/") == -1]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>T81</error-code>
					<actionmessage><![CDATA["In field 72, the codes /REJT/ or /RETN/ must not be used."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>F72-E</name>
					<fieldname>72.Narrative_-_Structured_Format</fieldname>
					<comment><![CDATA["Field 72 must not include ERI, i.e. the codes /OCMT/ or /CHGS/ must not be used."]]></comment>
					<formula><![CDATA[def ActualValue = replace($value, "\r\n", "\n");
!StartsWith(ActualValue, "/OCMT/") && 
  !StartsWith(ActualValue, "/CHGS/") && 
  FindFirst(ActualValue, "\n/OCMT/") == -1 && 
  FindFirst(ActualValue, "\n/CHGS/") == -1]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>T82</error-code>
					<actionmessage><![CDATA["Field 72 must not include ERI, i.e. the codes /OCMT/ or /CHGS/ must not be used."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>F23E-D</name>
					<fieldname>23E</fieldname>
					<formula><![CDATA[$codesOrder = "SDVA,INTC,REPA,CORT";
$prevCodeIndex = -1;
for ($i=0; $i < F23E.$size; $i = $i + 1) {
   $codeIndex = FindFirst($codesOrder, F23E[$i].Instruction_Code);
   if ($codeIndex < $prevCodeIndex) {
      return false;
   }
   else {
      $prevCodeIndex = $codeIndex;
   }
} 
return true;]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>D98</error-code>
					<actionmessage><![CDATA["If field 23E is repeated, the codes must appear in the following order: SDVA,INTC,REPA,CORT."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>F50a-A</name>
					<fieldname>50a.Party_Identifier</fieldname>
					<comment><![CDATA[F50a-A
With option F, subfield 1 (Party Identifier), one of the following line formats must be used (Error code(s): T54):
Line format 1 :/34x (Account)
Line format 2 :4!a/2!a/27x (Code)(Country Code)(Identifier)]]></comment>
					<formula><![CDATA[Implies(F50a.FormatOption == 'F', Verify50FPartyIdFormat($value))]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>T54</error-code>
					<actionmessage><![CDATA["Invalid 'Party Identifier' value. One of the following line formats must be used: /34x (Account) or 4!a/2!a/27x (Code)(Country Code)(Identifier)"]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>F50a-B</name>
					<fieldname>50a.Party_Identifier</fieldname>
					<comment><![CDATA[F50a-B
In option F, when subfield 1 Party Identifier is used with the (Code)(Country Code)(Identifier) format, one of the following codes must be used (Error code(s): T55): ARNU, CCPT, CUST, DRLC, EMPL, NIDN, SOSE and TXID."
]]></comment>
					<formula><![CDATA[Implies(F50a.FormatOption == 'F', Verify50FPartyIdCode($value))
/* get the code from party identifier if format is 4!a/2!a/27x */   ]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>T55</error-code>
					<actionmessage><![CDATA["Invalid 'Party Identifier' value. When 'Party Identifier' is used with the format (Code)(Country Code)(Identifier), one of following codes must be used: ARNU, CCPT, CUST, DRLC, EMPL, NIDN, SOSE and TXID."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>F50a-C</name>
					<fieldname>50a.Party_Identifier</fieldname>
					<comment><![CDATA[F50a-D
In option F, subfield 1 (Party Identifier) used with the (Code)(Country Code)(Identifier) format: Country Code must be a valid ISO country code (Error code(s): T73).
]]></comment>
					<formula><![CDATA[Implies(F50a.FormatOption == 'F', Verify50FPartyIdCountryCode($value))]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>T73</error-code>
					<actionmessage><![CDATA["Invalid 'Party Identifier' value. In option F, subfield 1 (Party Identifier) used with the (Code)(Country Code)(Identifier) format: Country Code must be a valid ISO country code."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>F50a-D</name>
					<fieldname>50a.Name_&amp;_Address</fieldname>
					<comment><![CDATA[F50a-C
With option F, subfield 2 (Name and Address), the following line format must be used for all lines: 1!n/33x (Number)(Details). (Error code(s): T54).]]></comment>
					<formula><![CDATA[Implies(F50a.FormatOption == 'F', Verify50FNmandAdrFormat($value))]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>T54</error-code>
					<actionmessage><![CDATA["Invalid 'Name and Address' value. With option F, subfield 2 (Name and Address), the following line format must be used for all lines :1!n/33x (Number)(Details)."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>F50a-E</name>
					<fieldname>50a.Name_&amp;_Address</fieldname>
					<comment><![CDATA[F50a-E
 With option F - subfield 2 (Name and Address), should start with Number 1 to 8 and it should follow the line formatting rules as specified in the SWIFT spec (Error code(s): T56).]]></comment>
					<formula><![CDATA[Implies(F50a.FormatOption == 'F', Verify50FNmandAdrLines2($value, F50a.Party_Identifier))]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>T56</error-code>
					<actionmessage><![CDATA["Invalid 'Name and Address' value. With option F - subfield 2 (Name and Address), should start with Number 1 to 8 and it should follow the line formatting rules as specified in the SWIFT spec."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>F50a-F</name>
					<fieldname>50a.Name_&amp;_Address</fieldname>
					<comment><![CDATA[F50a-F
Number 4 must be followed by a valid date in the format YYYYMMDD and this date, local to the sender, must not be later than the date on which the message is successfully sent to SWIFT (Error code(s): T50).
]]></comment>
					<formula><![CDATA[Implies(F50a.FormatOption == 'F', Verify50FNmandAdrDate($value))]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>T50</error-code>
					<actionmessage><![CDATA["Invalid 'Name and Address' value. Number 4 must be followed by a valid date in the format YYYYMMDD and this date, local to the sender, must not be later than the date on which the message is successfully sent to SWIFT."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>F50a-G</name>
					<fieldname>50a.Name_&amp;_Address</fieldname>
					<comment><![CDATA[F50a-G
Numbers 3, 5, 6 and 7 must be followed by a valid ISO country code
(Error code(s): T73).]]></comment>
					<formula><![CDATA[Implies(F50a.FormatOption == 'F',Verify50FNmandAdrCtryCode2($value))]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>T73</error-code>
					<actionmessage><![CDATA["Invalid 'Name and Address' value. Numbers 3, 5, 6 and 7 must be followed by a valid ISO country code."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>ERI</name>
					<comment><![CDATA["For specific message types, an European currency must not be used as the currency of settlement after a cut-off date (Error Code: E76)."]]></comment>
					<formula><![CDATA[applyERIValidation(F32A[0], "Date", F32A[0], "Currency")]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>E76</error-code>
					<actionmessage><![CDATA["For specific message types, an European currency must not be used as the currency of settlement after a cut-off date (Error Code: E76)."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>F59a-B</name>
					<fieldname>59a.Account</fieldname>
					<comment><![CDATA[The IBAN must be a valid IBAN (ISO-13616) and Country Code must be a valid ISO country code]]></comment>
					<formula><![CDATA[def header = $this.Header;
def appheader;

if(header.GetFieldCount() == 0) {
	// No Header
	return true;
}
if(header.GetFieldType(0) != "Section"){
	// Custom header or FICC header
	return true;
}
else if(header.GetFieldCount() == 4) {
	// Input/output header
    appheader = If(header.GetSection(1).$size > 0, 
                   header.GetSection(1)[0], 
                   header.GetSection(2)[0]);
}
else {
    appheader = header.GetSection(1)[0];
}
def basicheader = header.GetSection(0)[0];
def ioIdentifier = appheader.GetString("Input_Output_Identifier");
def mir = (If(ioIdentifier == "O", 
           GetString(appheader, "Message Input Reference"), 
           ""));
def receiverAddress = (If(ioIdentifier == "I", 
                       GetString(appheader, "Receiver's Address"), 
                       ""));
def senderCountryCode = (If(ioIdentifier == "I", 
                         Mid(basicheader.GetString("LT Identifier"), 4, 2), 
                         Mid(mir, 10, 2)));
def receiverCountryCode = (If(ioIdentifier == "I", 
                           Mid(receiverAddress, 4, 2), 
                           Mid(basicheader.GetString("LT Identifier"), 4, 2)));
def countryList = ["AD", "AT", "BE", "BG", "BV", "CH", "CY", 
      "CZ", "DE", "DK", "EE", "ES", "FI", "FR", "GB", "GF", 
      "GI", "GP", "GR", "HR", "HU", "IE", "IS", "IT", "LI", "LT", 
      "LU", "LV", "MC", "MQ", "MT", "NL", "NO", "PL", "PM", 
      "PT", "RE", "RO", "SE", "SI", "SJ", "SK", "SM", "TF", "VA"];                           
If(In(senderCountryCode, countryList) && 
     In(receiverCountryCode, countryList), 
   		If(F57A.$size==0 || In(Mid(F57A[0].Identifier_Code, 4, 2), countryList), IsISOCountryCode(GetIBANCountryCode($value)), true), 
   true);
]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>T73</error-code>
					<actionmessage><![CDATA["The IBAN must be a valid IBAN (ISO-13616) and Country Code must be a valid ISO country code (Error code(s): T73)."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>F-32A</name>
					<fieldname>32A.Currency</fieldname>
					<formula><![CDATA[!In($value, "XAU", "XAG", "XPD", "XPT")]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>C08</error-code>
					<actionmessage><![CDATA["The codes XAU, XAG, XPD and XPT are not allowed, as these are codes for commodities for which the category 6 commodities messages must be used."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>F-59a-A</name>
					<fieldname>59a.Name_&amp;_Address_Details</fieldname>
					<formula><![CDATA[Implies(F59a.FormatOption == 'F', Verify59FNmandAdrDtlLines($value))]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>T56</error-code>
					<actionmessage><![CDATA["Invalid 'Name_and_Address_Details' value. With option F - subfield 2 (Name_and_Address_Details), should start with Number 1 to 3 and it should follow the line formatting rules as specified in the SWIFT spec for field 59F."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>F-59a-B</name>
					<fieldname>59a.Name_&amp;_Address_Details</fieldname>
					<formula><![CDATA[Implies(F59a.FormatOption == 'F', Verify59FNmandAdrDtlFormat($value))]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>T56</error-code>
					<actionmessage><![CDATA["Invalid 'Name and Address Details' value. With option F, subfield 2 (Name and Address Details), the following line format must be used for all lines :1!n/33x (Number)(Name and Address Details)."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>F-59a-C</name>
					<fieldname>59a.Name_&amp;_Address_Details</fieldname>
					<formula><![CDATA[Implies(F59a.FormatOption == 'F', Verify59FNmandAdrDtlCtryCode($value))]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>T73</error-code>
					<actionmessage><![CDATA["Invalid 'Name_and_Address_Details' value. Number 3 must be followed by a valid ISO country code."]]></actionmessage>
				</fieldvalidation>
			</fieldvalidations>
		</datavalidationrules>
		<tlrvalidationrules>
			<fieldvalidations>
			</fieldvalidations>
		</tlrvalidationrules>
	</validationrules>
</SwiftMessageFormat>

