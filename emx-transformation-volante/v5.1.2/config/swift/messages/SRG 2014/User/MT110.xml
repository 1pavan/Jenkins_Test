<?xml version="1.0" encoding="UTF-8" ?>
<SwiftMessageFormat name="MT110">
	<standard-version><![CDATA[SRG 2014]]></standard-version>
	<standard-release-qualifier>20140520</standard-release-qualifier>
	<DescriptiveName><![CDATA[Advice of Cheque(s)]]></DescriptiveName>
	<Category><![CDATA[Customer Payments & Cheques]]></Category>
	<Description><![CDATA[This multiple message is sent by a drawer bank, or a bank acting on behalf of the drawer bank to the bank on which a/several cheque(s) has been drawn (the drawee bank).

It is used to advise the drawee bank, or confirm to an enquiring bank, the details concerning the cheque(s) referred to in the message.]]></Description>
	<SwiftFields>
		<customizable>true</customizable>
		<modifiable>true</modifiable>
		<SwiftMessageType>User</SwiftMessageType>
		<max-length>2000</max-length>
		<HeaderAndTrailerType>SWIFT_OUTPUT_HEADER</HeaderAndTrailerType>
		<Header>
		</Header>
		<Data>
			<Fields>
				<SwiftSequence Name="A">
					<Name>A</Name>
					<Description><![CDATA[Sequence A]]></Description>
					<Mandatory>true</Mandatory>
					<Repeating>false</Repeating>
					<Fields>
						<SwiftField Name="20">
							<SwiftFieldDef Name="20">
								<Generic>false</Generic>
								<Description><![CDATA[Reference]]></Description>
								<Option Name="">
									<Format><![CDATA[16x]]></Format>
									<Specification><![CDATA[(Sender's Reference)]]></Specification>
									<Description><![CDATA[Sender's Reference]]></Description>
								</Option>
							</SwiftFieldDef>
							<Repeating>false</Repeating>
							<Presence>M</Presence>
							<Options> </Options>
							<Validations>
								<SubField Name="Sender&apos;s_Reference">
									<Validation>
										<Options> </Options>
										<ErrorCode>T26</ErrorCode>
										<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive slashes '//' (Error code(s): T26).]]></Comment>
										<ValidationPattern Type="T26">
										</ValidationPattern>
									</Validation>
								</SubField>
							</Validations>
						</SwiftField>
						<SwiftField Name="53a">
							<SwiftFieldDef Name="53">
								<Generic>false</Generic>
								<Option Name="A">
									<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
									<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
									<Description><![CDATA[Sender's Correspondent]]></Description>
								</Option>
								<Option Name="B">
									<Format><![CDATA[/1!a[/34x](CRLF35x) | /1!a[/34x] | [/34xCRLF]35x | /34x]]></Format>
									<Specification><![CDATA[(CreditDebit) (Party Identifier) (Location) | (CreditDebit)(Party Identifier) |(Party Identifier) (Location) | (Party Identifier)]]></Specification>
									<Description><![CDATA[Sender's Correspondent]]></Description>
								</Option>
								<Option Name="D">
									<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
									<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
									<Description><![CDATA[Sender's Correspondent]]></Description>
								</Option>
							</SwiftFieldDef>
							<Repeating>false</Repeating>
							<Presence>O</Presence>
							<Options>A, B, D</Options>
							<Validations>
								<SubField Name="Identifier_Code">
									<Validation>
										<Options>A</Options>
										<ErrorCode>T27, T28, T29, T45</ErrorCode>
										<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
										<ValidationPattern Type="BIC">
										</ValidationPattern>
									</Validation>
									<Validation>
										<Options>A</Options>
										<ErrorCode>C05</ErrorCode>
										<Comment><![CDATA[Identifier Code must not be a BEI, ie must not be of subtype BEID, MCCO, TESP or TRCO]]></Comment>
										<ValidationPattern Type="C05">
										</ValidationPattern>
									</Validation>
								</SubField>
								<SubField Name="CreditDebit">
										<Validation>
											<Options>A, B, D</Options>
											<ErrorCode>T51</ErrorCode>
											<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="C">
														<DetailedName>Credit</DetailedName>
													</Code>
													<Code Name="D">
														<DetailedName>Debit</DetailedName>
													</Code>
												</Codes>
										</ValidationPattern>
									</Validation>
								</SubField>								
							</Validations>
						</SwiftField>
						<SwiftField Name="54a">
							<SwiftFieldDef Name="54">
								<Generic>false</Generic>
								<Option Name="A">
									<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
									<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
									<Description><![CDATA[Receiver's Correspondent]]></Description>
								</Option>
								<Option Name="B">
									<Format><![CDATA[/1!a[/34x](CRLF35x) | /1!a[/34x] | [/34xCRLF]35x | /34x]]></Format>
									<Specification><![CDATA[(CreditDebit) (Party Identifier) (Location) | (CreditDebit)(Party Identifier) |(Party Identifier) (Location) | (Party Identifier)]]></Specification>
									<Description><![CDATA[Receiver's Correspondent]]></Description>
								</Option>
								<Option Name="D">
									<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
									<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
									<Description><![CDATA[Receiver's Correspondent]]></Description>
								</Option>
							</SwiftFieldDef>
							<Repeating>false</Repeating>
							<Presence>O</Presence>
							<Options>A, B, D</Options>
							<Validations>
								<SubField Name="Identifier_Code">
									<Validation>
										<Options>A</Options>
										<ErrorCode>T27, T28, T29, T45</ErrorCode>
										<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
										<ValidationPattern Type="BIC">
										</ValidationPattern>
									</Validation>
									<Validation>
										<Options>A</Options>
										<ErrorCode>C05</ErrorCode>
										<Comment><![CDATA[Identifier Code must not be a BEI, ie must not be of subtype BEID, MCCO, TESP or TRCO]]></Comment>
										<ValidationPattern Type="C05">
										</ValidationPattern>
									</Validation>
								</SubField>
								<SubField Name="CreditDebit">
										<Validation>
											<Options>A, B, D</Options>
											<ErrorCode>T51</ErrorCode>
											<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="C">
														<DetailedName>Credit</DetailedName>
													</Code>
													<Code Name="D">
														<DetailedName>Debit</DetailedName>
													</Code>
												</Codes>
										</ValidationPattern>
									</Validation>
								</SubField>								
							</Validations>
						</SwiftField>
						<SwiftField Name="72">
							<SwiftFieldDef Name="72">
								<Generic>false</Generic>
								<Description><![CDATA[Sender to Receiver Information]]></Description>
								<Option Name="">
									<Format><![CDATA[6*35x]]></Format>
									<Specification><![CDATA[(Narrative)]]></Specification>
									<Description><![CDATA[Sender to Receiver Information]]></Description>
								</Option>
							</SwiftFieldDef>
							<Repeating>false</Repeating>
							<Presence>O</Presence>
							<Options> </Options>
						</SwiftField>
					</Fields>
				</SwiftSequence>
				<SwiftSequence Name="B">
					<Name>B</Name>
					<Description><![CDATA[Sequence B]]></Description>
					<Mandatory>true</Mandatory>
					<Repeating>true</Repeating>
					<Fields>
						<SwiftField Name="21">
							<SwiftFieldDef Name="21">
								<Generic>false</Generic>
								<Option Name="">
									<Format><![CDATA[16x]]></Format>
									<Specification><![CDATA[(Cheque Number)]]></Specification>
									<Description><![CDATA[Cheque Number]]></Description>
								</Option>
							</SwiftFieldDef>
							<Repeating>false</Repeating>
							<Presence>M</Presence>
							<Options> </Options>
							<Validations>
								<SubField Name="Cheque_Number">
									<Validation>
										<Options> </Options>
										<ErrorCode>T26</ErrorCode>
										<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive slashes '//'(Error code(s): T26).]]></Comment>
										<ValidationPattern Type="T26">
										</ValidationPattern>
									</Validation>
								</SubField>
							</Validations>
						</SwiftField>
						<SwiftField Name="30">
							<SwiftFieldDef Name="30">
								<Generic>false</Generic>
								<Option Name="">
									<Format><![CDATA[6!n]]></Format>
									<Specification><![CDATA[(Date)]]></Specification>
									<Description><![CDATA[Date of Issue]]></Description>
								</Option>
							</SwiftFieldDef>
							<Repeating>false</Repeating>
							<Presence>M</Presence>
							<Options> </Options>
							<Validations>
								<SubField Name="Date">
									<Validation>
										<Options> </Options>
										<ErrorCode>T50</ErrorCode>
										<Comment><![CDATA[Date must be a valid date expressed as YYMMDD (Error code(s): T50).]]></Comment>
										<ValidationPattern Type="DATE">
											<Format>yyMMdd</Format>
                                            <value-date>true</value-date>
										</ValidationPattern>
									</Validation>
								</SubField>
							</Validations>
						</SwiftField>
						<SwiftField Name="32a">
							<SwiftFieldDef Name="32">
								<Generic>false</Generic>
								<Description><![CDATA[Amount]]></Description>
								<Option Name="A">
									<Format><![CDATA[6!n3!a15d]]></Format>
									<Specification><![CDATA[(Date) (Currency) (Amount)]]></Specification>
									<Description><![CDATA[Amount]]></Description>
								</Option>
								<Option Name="B">
									<Format><![CDATA[3!a15d]]></Format>
									<Specification><![CDATA[(Currency) (Amount)]]></Specification>
									<Description><![CDATA[Amount]]></Description>
								</Option>
							</SwiftFieldDef>
							<Repeating>false</Repeating>
							<Presence>M</Presence>
							<Options>A, B</Options>
							<Validations>
								<SubField Name="Date">
									<Validation>
										<Options>A</Options>
										<ErrorCode>T50</ErrorCode>
										<Comment><![CDATA[Date must be a valid date expressed as YYMMDD (Error code(s): T50).]]></Comment>
										<ValidationPattern Type="DATE">
											<Format>yyMMdd</Format>
                                            <value-date>true</value-date>
										</ValidationPattern>
									</Validation>
								</SubField>
								<SubField Name="Currency">
									<Validation>
										<Options>A, B</Options>
										<ErrorCode>T52</ErrorCode>
										<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52).]]></Comment>
										<ValidationPattern Type="Currency Code">
										</ValidationPattern>
									</Validation>
								</SubField>
								<SubField Name="Amount">
									<Validation>
										<Options>A, B</Options>
										<ErrorCode>C03</ErrorCode>
										<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency.]]></Comment>
										<ValidationPattern Type="Decimal">
											<currency-field>Currency</currency-field>
										</ValidationPattern>
									</Validation>
								</SubField>
							</Validations>
						</SwiftField>
						<SwiftField Name="52a">
							<SwiftFieldDef Name="52">
								<Generic>false</Generic>
								<Description><![CDATA[Drawer Bank]]></Description>
								<Option Name="A">
									<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
									<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
									<Description><![CDATA[Drawer Bank]]></Description>
								</Option>
								<Option Name="B">
									<Format><![CDATA[/1!a([/34x])(CRLF35x) | /1!a[/34x] | [/34xCRLF]35x | /34x]]></Format>
									<Specification><![CDATA[(CreditDebit)(Party Identifier)(Location) | (CreditDebit)(Party Identifier) | (Party Identifier)(Location) | (Party Identifier)]]></Specification>
									<Description><![CDATA[Drawer Bank]]></Description>
								</Option>
								<Option Name="D">
									<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
									<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address) | (Party Identifier)(Name & Address)]]></Specification>
									<Description><![CDATA[Drawer Bank]]></Description>
								</Option>
							</SwiftFieldDef>
							<Repeating>false</Repeating>
							<Presence>O</Presence>
							<Options>A, B, D</Options>
							<Validations>
								<SubField Name="Identifier_Code">
									<Validation>
										<Options>A</Options>
										<ErrorCode>T27, T28, T29, T45</ErrorCode>
										<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
										<ValidationPattern Type="BIC">
										</ValidationPattern>
									</Validation>
									<Validation>
										<Options>A</Options>
										<ErrorCode>C05</ErrorCode>
										<Comment><![CDATA[Identifier Code must not be a BEI, ie must not be of subtype BEID, MCCO, TESP or TRCO]]></Comment>
										<ValidationPattern Type="C05">
										</ValidationPattern>
									</Validation>
								</SubField>
								<SubField Name="CreditDebit">
										<Validation>
											<Options>A, B, D</Options>
											<ErrorCode>T51</ErrorCode>
											<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="C">
														<DetailedName>Credit</DetailedName>
													</Code>
													<Code Name="D">
														<DetailedName>Debit</DetailedName>
													</Code>
												</Codes>
										</ValidationPattern>
									</Validation>
								</SubField>								
							</Validations>
						</SwiftField>
						<SwiftField Name="59">
							<SwiftFieldDef Name="59">
								<Generic>false</Generic>
								<Option Name="">
									<Format><![CDATA[[/34xCRLF]4*35x]]></Format>
									<Specification><![CDATA[(Account)(Name & Address)]]></Specification>
									<Description><![CDATA[Payee]]></Description>
								</Option>
							</SwiftFieldDef>
							<Repeating>false</Repeating>
							<Presence>M</Presence>
							<Options> </Options>
						</SwiftField>
					</Fields>
				</SwiftSequence>
			</Fields>
		</Data>
		<Trailer>
		</Trailer>
	</SwiftFields>
	<validationrules name="Default">
		<hdrvalidationrules>
			<fieldvalidations>
				<fieldvalidation>
					<name>U09</name>
					<formula><![CDATA[if($this.Header.GetFieldIndex("User_Header") != -1) {
    def userHeader = $this.Header.GetSection("User_Header");
    if(userHeader.$size > 0 && userHeader[0].IsNotNull("Validation_Flag")) {
        return false;
    }
}
return true;
]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>U09</error-code>
					<actionmessage><![CDATA["User has used tag 119 in a message that is not a candidate for special processing"]]></actionmessage>
				</fieldvalidation>
			</fieldvalidations>
		</hdrvalidationrules>
		<datavalidationrules>
			<fieldvalidations>
				<fieldvalidation>
					<name>C1</name>
					<formula><![CDATA[B.$size <= 10]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>T10</error-code>
					<actionmessage><![CDATA["The repetitive sequence (Sequence B) must not be present more than ten times."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>C2</name>
					<fieldname>B.32a.Currency</fieldname>
					<formula><![CDATA[$value == B[0].F32a[0].Currency]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>C02</error-code>
					<actionmessage><![CDATA["The currency code in the amount field 32a must be the same for all occurrences of this field in the message."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>ERI</name>
					<fieldname>A.72.Narrative</fieldname>
						<formula><![CDATA[ApplyERICodeValidationStructured($value);]]></formula>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>T47</error-code>
					<actionmessage><![CDATA["In an ERI field (i.e. fields 61, 72, 77A, 79, 86) the data part of a code word /OCMT/, or /CHGS/, is being validated, but the ending separator (i.e. third slash) is missing or the code words are duplicated."]]></actionmessage>
				</fieldvalidation>
				<fieldvalidation>
					<name>FB-52a-A</name>
					<fieldname>B.52a.Party_Identifier</fieldname>
					<comment><![CDATA[FB-52a-A
The value specified for Party Identifier should indicate a national clearing system code.]]></comment>
					<formula><![CDATA[// Fake option B as D VerifyPartyIdentifier check for A, C and D
def formatOption = B.F52a.FormatOption == 'B' ? 'D' : B.F52a.FormatOption; 
VerifyPartyIdentifier($value, formatOption, false, false);]]></formula>
                                        <enabled>false</enabled>
					<severity>error</severity>
					<cascade>true</cascade>
					<error-code>FB-52a-A</error-code>
					<actionmessage><![CDATA["Party Identifier is not valid. The value following the national clearing system code does not conform to the format specified for that code."]]></actionmessage>
				</fieldvalidation>
    <fieldvalidation>
						<name>FA-72</name>
						<fieldname>A.72.Narrative</fieldname>
						<formula><![CDATA[def Actualvalue = replace($value, "\r\n", "\n");
def lines = Split("\n", Actualvalue);
def str = Left(Actualvalue, 6);
def line1format = false;
def line3format = false;
def TREFformat = true;
def CHGSformat = true;
def TEXTformat = true;
def format = true;
def count = 0;
def TREFcount = 0;
def CHGScount = 0;
def TEXTcount = 0;
def i = lines.Length();
if(In(str, "/REJT/", "/RETN/")) {
    if(i <= 6) {
        //if '/REJT/' or '/RETN/' format of 1st line must be "6!x2!n[1a]['/'2c]" & format of 2nd line must be "('/'2!c 2!n'/')[29x]" or "('/X'1c2!n'/')[29x]"
        //if format of 2nd line is "('/'2!c 2!n'/')" then the 6 characters must be one of the codes given below
        line1format = (VerifyFormat(lines[0], "6!x2!n[1a]['/'2c]"));
        if(line1format && lines.Length() > 2) {
            if(!lines[1].StartsWith("/X")) {
                if(VerifyFormat(lines[1], "('/'2!c 2!n'/')[29x]")) {
                	def startStr = lines[1].Left(6);
                    if((!In(startStr, "/AC01/", "/AC02/", "/AC03/", "/AC04/", "/AC05/", "/AC06/", 
                            "/AM01/", "/AM02/", "/AM03/", "/AM04/", "/AM05/", "/AM06/", "/AM07/", 
                            "/AM08/", "/AG01/", "/AG02/", "/BE01/", "/BE02/", "/BE03/", "/BE04/", 
                            "/BE05/", "/DT01/", "/MS01/", "/PY01/", "/RC01/", "/RC02/", "/RC03/", 
                            "/RC04/", "/RF01/", "/TM01/", "/RR01/", "/RR02/", "/RR03/")))
                        return false;
                }
                else
                    return false;
            }
            else if(lines[1].StartsWith("/X") && !VerifyFormat(lines[1], "('/X'1c2!n'/')[29x]"))
                return false;
        }
        else
            return false;
        //Line3 is mandatory and should have the format "/MREF/16x". Lines 4, 5 and 6 are optional
        //If lines 4, 5 or 6 or any combination exists and if the first 6 characters starts with either '/TREF/' or '/CHGS/' or '/TEXT/' or '//'
        //it should satisfy the format given. Also if line starts with '//' it can appear a max of 2 times
        line3format = Equal(Left(lines[2], 6), "/MREF/") && 
                        VerifyFormat(Substring(lines[2], 6), "16x");
        if(line3format) {
            while(i > 3) {
                def str1 = Left(lines[i - 1], 6);
                def str2 = Substring(lines[i - 1], 6);
                if(In(str1, "/TREF/", "/CHGS/", "/TEXT/") || StartsWith(lines[i - 1], "//")) {
                    if(str1 == "/TREF/") {
                        TREFformat = VerifyFormat(str2, "16x");
                        TREFcount += 1;
                    }
                    else if(str1 == "/CHGS/") {
                        CHGSformat = (VerifyFormat(str2, "3!a15d") && 
                                        IsISOCurrencyCode(Substring(lines[i - 1], 6, 3)));
                        CHGScount += 1;
                    }
                    else if(str1 == "/TEXT/") {
                        TEXTformat = (VerifyFormat(str2, "29x"));
                        TEXTcount += 1;
                    }
                    else if(StartsWith(lines[i - 1], "//")) {
                        def str3 = Substring(lines[i - 1], 2);
                        format = (VerifyFormat(str3, "33x"));
                        count += 1;
                        if(!format || count > 2)
                            break;
                    }
                }
                else
                    return false;
                i = i - 1;
            }
        }
        else
            return false;
        if(!TREFformat || !CHGSformat || !TEXTformat || !format || count > 2 || TREFcount > 1 || 
             CHGScount > 1 || TEXTcount > 1)
            return false;
    }
    else
        return false;
}
return true;
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T80</error-code>
						<actionmessage><![CDATA["Field 72 Reject/Return: code word error, or mandatory code word missing, or code word not in the proper sequence, or format 6*35x not satisfied"]]></actionmessage>
					</fieldvalidation>
			</fieldvalidations>
		</datavalidationrules>
		<tlrvalidationrules>
			<fieldvalidations>
			</fieldvalidations>
		</tlrvalidationrules>
	</validationrules>
</SwiftMessageFormat>

