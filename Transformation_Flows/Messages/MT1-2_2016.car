<?xml version="1.0" encoding="UTF-8" ?>
<cartridge xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="5.1.2" name="MT1-2_2016" type="Cartridge">
	<version>1.0</version>
	<private>
		<summary>
			<service name="MT101_2016" version="1.0" type="External Message">
				<description>This message is: 

a)  sent by a financial institution on behalf of a non-financial institution account owner, to an account servicing financial institution or to a forwarding financial institution for further transmission to the account servicing institution. 

b) sent by a non-financial institution account owner, or a party authorised by the account owner, to an account servicing financial institution or to a forwarding financial institution for further transmission to the account servicing institution. 

It is used to move funds from the ordering customer's account(s) serviced at the receiving financial institution or at the account servicing institution, or from an account(s) owned by the ordering customer which the instructing customer has explicit authority to debit, for example,  a subsidiary account. 

The MT 101 can be used to order the movement of funds: 

    a)   between ordering customer accounts, or 

    b)   in favour of a third party, either domestically or internationally.</description>
			</service>
			<service name="MT102_2016" version="1.0" type="External Message">
				<description>This message is sent by or on behalf of the financial institution of the ordering customer(s) to another financial institution for payment to the beneficiary customer. 

It requests the Receiver to credit the beneficiary customer(s) directly or indirectly through a clearing mechanism or another financial institution, or to issue a cheque to the beneficiary. 

This message is used to convey multiple payment instructions between financial institutions for clean payments. Its use is subject to bilateral/multilateral agreements between Sender and Receiver. 

Amongst other things, these bilateral agreements cover the transaction amount limits, the currencies accepted and their settlement. The multiple payments checklist included below is recommended as a guide for institutions in the setup of their agreements.</description>
			</service>
			<service name="MT102STP_2016" version="1.0" type="External Message">
				<description>This message is sent by or on behalf of the financial institution of the ordering customer(s) to another financial institution for payment to the beneficiary customer(s). 

It requests the Receiver to credit the beneficiary customer(s) directly or indirectly through a clearing mechanism or another financial institution. 

This message is used to convey multiple payment instructions between financial institutions for clean payments. Its use is subject to bilateral/multilateral agreements between Sender and Receiver. 

Amongst other things, these bilateral agreements cover the transaction amount limits, the currencies accepted and their settlement. The multiple payments checklist included below is recommended as a guide for institutions in the setup of their agreements.
</description>
			</service>
			<service name="MT103_2016" version="1.0" type="External Message">
				<description>This message type is sent by or on behalf of the financial institution of the ordering customer, directly or through (a) correspondent(s), to the financial institution of the beneficiary customer.

It is used to convey a funds transfer instruction in which the ordering customer or the beneficiary customer, or both, are non-financial institutions from the perspective of the Sender.

This message may only be used for clean payment instructions. It must not be used to advise the remitting bank of a payment for a clean, eg, cheque, collection, nor to provide the cover for a transaction whose completion was advised separately, eg, via an MT 400.</description>
			</service>
			<service name="MT103REMIT_2016" version="1.0" type="External Message">
				<description>This message type is sent by or on behalf of the financial institution of the ordering customer, directly or through (a) correspondent(s), to the financial institution of the beneficiary customer.

It is used to convey a funds transfer instruction in which the ordering customer or the beneficiary customer, or both, are non-financial institutions from the perspective of the Sender.

This message may only be used for clean payment instructions. It must not be used to advise the remitting bank of a payment for a clean, eg, cheque, collection, nor to provide the cover for a transaction whose completion was advised separately, eg, via an MT 400.</description>
			</service>
			<service name="MT103STP_2016" version="1.0" type="External Message">
				<description>This message type is sent by, or on behalf of, the financial institution of the ordering customer, directly or through (a) correspondent(s), to the financial institution of the beneficiary customer.

It is used to convey a funds transfer instruction in which the ordering customer or the beneficiary customer, or both, are non-financial institutions from the perspective of the Sender.

This message may only be used for clean payment instructions. It must not be used to advise the remitting bank of a payment for a clean, eg, cheque, collection, nor to provide the cover for a transaction whose completion was advised separately, eg, via an MT 400.</description>
			</service>
			<service name="MT104_2016" version="1.0" type="External Message">
				<description>The MT 104 is used to convey customer direct debit instructions and can be: 

a) sent by a non-financial institution account owner, or a party authorised by the account owner, to a financial institution to request the direct debit of the debtor's account with the receiver or with another financial institution, and subsequently to credit the creditor's account maintained by the receiver or one of its branches. 

b) sent by the creditor's bank, or another financial institution, to the debtor's bank, or another financial institution, on behalf of the creditor/instructing party to order the debit of the debtor's account and to collect payment from this account. 

c) sent by a non-financial institution account owner, or a party authorised by the account owner, to a forwarding financial institution to request the direct debit of the debtor's account and subsequently to credit the creditor's account serviced by a financial institution in another country. 

d) sent between two financial institutions on behalf of a creditor/instructing party to request the direct debit of the debtor's account in the Receiver's country and subsequently to credit the creditor's account maintained by the Receiver or one of its branches. 

</description>
			</service>
			<service name="MT105_2016" version="1.0" type="External Message">
				<description>This message is sent by a financial institution to another financial institution. It is used as an envelope to convey an EDIFACT message.</description>
			</service>
			<service name="MT107_2016" version="1.0" type="External Message">
				<description>This message is sent by the creditor's financial institution or another financial institution, to the debtor's financial Institution or another financial institution, on behalf of the creditor, to order the debit of the debtor's account and to collect payment from this account.</description>
			</service>
			<service name="MT110_2016" version="1.0" type="External Message">
				<description>This multiple message is sent by a drawer bank, or a bank acting on behalf of the drawer bank to the bank on which a/several cheque(s) has been drawn (the drawee bank).

It is used to advise the drawee bank, or confirm to an enquiring bank, the details concerning the cheque(s) referred to in the message.</description>
			</service>
			<service name="MT111_2016" version="1.0" type="External Message">
				<description>This single message type is sent by a drawer bank, or a bank acting on behalf of the drawer bank, to the bank on which a cheque has been drawn (the drawee bank).

It is used to request stop payment of the cheque referred to in the message.</description>
			</service>
			<service name="MT112_2016" version="1.0" type="External Message">
				<description>This message type is sent by the drawee bank (on which a cheque is drawn) to the drawer bank or the bank acting on behalf of the drawer bank.

It is used to indicate what actions have been taken in attempting to stop payment of the cheque referred to in the message.</description>
			</service>
			<service name="MT190_2016" version="1.0" type="External Message">
				<description>This message type is sent by an account servicing institution to the account owner.

It is used to advise charges, interest or other adjustments which have been debited or credited to the account owner's account. It provides details of charges which are previously unknown to the Receiver.</description>
			</service>
			<service name="MT191_2016" version="1.0" type="External Message">
				<description>This message type is sent by a financial institution to another financial institution.

It is used to request the payment of charges, interest and/or other expenses which are previously unknown to the Receiver.</description>
			</service>
			<service name="MT192_2016" version="1.0" type="External Message">
				<description>This message is: 

a) sent by a financial institution to request a second financial institution to consider cancellation of the SWIFT message identified in the request. 

b) sent by a corporate customer to request a financial institution to consider cancellation of the SWIFT message identified in the request. 

If the Receiver of the request for cancellation has already acted on the message for which cancellation is requested, the MT n92 asks for a retransfer, that is, reversal, with the beneficiary's consent.

</description>
			</service>
			<service name="MT195_2016" version="1.0" type="External Message">
				<description>This message type is: 

a) sent by a financial institution to another financial institution. 

b) sent by a corporate customer to a financial institution. 

c) sent by a financial institution to a corporate customer. 

It is used to request information or clarification relating to a previous SWIFT or non-SWIFT message or to one or more transactions contained therein. 

A query may also be sent to request that an amendment be made to a previous message, except in those cases where a specific message, or facility within a message, has been provided for this purpose in the related category, for example, MT 707, AMEND in field 22 of the MT 300. 

The category digit of the MT n95 Queries must be: 

a) If related to a SWIFT message, the category digit of the related message. 

b) If not related to a SWIFT message, the category digit which best describes the business purpose of the message. 

</description>
			</service>
			<service name="MT196_2016" version="1.0" type="External Message">
				<description>This message type is: 

a) sent by one financial institution to another financial institution . 

b) sent by a corporate customer to a financial institution. 

c) sent by a financial institution to a corporate customer. 

It is used to respond to an MT n95 Queries or MT n92 Request for Cancellation and other messages where no specific message type has been provided for the response. This message should use the same category digit as the related queries message or request for cancellation. 

</description>
			</service>
			<service name="MT198_2016" version="1.0" type="External Message">
				<description>This message type is used by financial institutions, with their own offices, and/or with other financial institutions with which they have established bilateral agreements.

It is used as an envelope for a specified message included in it.

It allows for the definition of a unique format for which another message type is not available or applicable.

It also allows financial institutions to use message types which are awaiting live implementation on the SWIFT system.</description>
			</service>
			<service name="MT199_2016" version="1.0" type="External Message">
				<description>This message type is: 

a) used by financial institutions to send or receive information for which another message type is not applicable. 

b) used between a corporate and its financial institution for which another message type is not applicable. 

The category digit should be chosen so the message will be routed to the unit of the Receiver which is most capable of acting on the information. 

This format does not apply to category 4 and 7. For more details, see the relevant category Message Reference Guide for MT 499 and MT 799. 

</description>
			</service>
			<service name="MT200_2016" version="1.0" type="External Message">
				<description>This message type is sent by an account owner to one of its account servicing institutions. 

It is used to request the movement of funds from an account that the Receiver services for the Sender to an account that the Sender has, in the same currency, with another financial institution.</description>
			</service>
			<service name="MT201_2016" version="1.0" type="External Message">
				<description>This multiple message type is sent by an account owner to one of its account servicing institutions.

It is used to request the movement of funds from an account that the Receiver services for the Sender to several accounts that the Sender has, in the same currency, with other financial institutions.</description>
			</service>
			<service name="MT202_2016" version="1.0" type="External Message">
				<description>This message is sent by or on behalf of the ordering institution directly, or through correspondent(s), to the financial institution of the beneficiary institution. 

It is used to order the movement of funds to the beneficiary institution. 

This message may also be sent to a financial institution servicing multiple accounts for the Sender to transfer funds between these accounts. In addition it can be sent to a financial institution to debit an account of the Sender serviced by the Receiver and to credit an account, owned by the Sender at an institution specified in field 57a. 

This message must not be used to order the movement of funds related to an underlying customer credit transfer that was sent with the cover method. For these payments the MT 202 COV or MT 205 COV must be used. 
</description>
			</service>
			<service name="MT202COV_2016" version="1.0" type="External Message">
				<description>This message is sent by or on behalf of the ordering institution directly, or through correspondent(s), to the financial institution of the beneficiary institution. 

It must only be used to order the movement of funds related to an underlying customer credit transfer that was sent with the cover method. 

The MT 202 COV must not be used for any other interbank transfer. For these transfers the MT 202 must be used.</description>
			</service>
			<service name="MT203_2016" version="1.0" type="External Message">
				<description>This multiple message is sent by or on behalf of the ordering institution directly, or through correspondent(s), to the financial institution(s) of several beneficiary institution(s). The message contains several transactions.

It is used to order the movement of funds to each beneficiary institution.

This message may also contain order(s) for the movement of the Sender's own funds in favour of itself. This is the case when the Receiver services multiple accounts for the Sender and the funds are to be transferred between these accounts. In addition, it can be sent to a financial institution to debit an account of the Sender serviced by the Receiver and to credit an account owned by the Sender at an institution specified in field 57a.</description>
			</service>
			<service name="MT204_2016" version="1.0" type="External Message">
				<description>This message is sent by an exchange or clearing house, or another financial institution to a SWIFT member or submember, to instruct the Receiver of the message to debit the account(s) of a third party specified in the message and to pay or credit the corresponding amount in favour of the Sender of the message.</description>
			</service>
			<service name="MT205_2016" version="1.0" type="External Message">
				<description>This message is sent by the Receiver of a category 2 message that is, 200, 201, 202, 203 or 205, or equivalent (for example ISO 20022 Financial Institution Credit Transfer) , directly , or through correspondent(s), to the financial institution of the beneficiary institution.

It is used to further transmit a funds transfer instruction where Sender and Receiver are located in the same country. 

If the funds transfer instruction is related to an underlying customer credit transfer that was sent with the cover method, then the MT 205 must not be used. 
</description>
			</service>
			<service name="MT205COV_2016" version="1.0" type="External Message">
				<description>This message is sent by the Receiver of an MT 202 COV, MT 205 COV or equivalent (for example ISO 20022 Financial Institution Credit Transfer), directly, or through correspondent(s), to the financial institution of the beneficiary institution. 

It is only used to further transmit a funds transfer instruction related to an underlying customer credit transfer that was sent with the cover method, where Sender and Receiver are located in the same country. 

The MT 205 COV must not be used for any other interbank transfer.</description>
			</service>
			<service name="MT207_2016" version="1.0" type="External Message">
				<description>This message is used to move funds from the ordering financial institution's account, serviced at the receiving financial institution or at the account servicing institution, or from an account(s) owned by the ordering institution for which the initiating institution has explicit authority to debit, eg, a subsidiary account.

It can be used to order the movement of funds:

a)  between the ordering institution's accounts, or

b)  in favour of a third party, either domestically or internationally.

The message is sent by a financial institution on behalf of the ordering financial institution, ie, the account owning financial institution, or on behalf of the initiating financial institution. It is subsequently received by a financial institution and processed by this receiving financial institution or another account servicing financial institution.

The complete chain of parties and the transaction flow is illustrated by the following figure:


The parties mentioned in the chain are not necessarily different entities. The first column of the table below shows the parties that can be omitted in an MT 207. The second column specifies the party which assumes the role of the party in the first column, when it is not present:
If the following party is missing... Its function is assumed by ... Initiating institution Ordering institution Account servicing institution Receiver Intermediary Account with institution Account with institution Receiver</description>
			</service>
			<service name="MT210_2016" version="1.0" type="External Message">
				<description>This message type is: 

a) sent by an account owner to one of its account servicing institutions. 

b) sent by a party authorised by the account owner to one of its account servicing institutions. 

It is an advance notice to the account servicing institution that it will receive funds to be credited to the Sender's account. 

</description>
			</service>
			<service name="MT256_2016" version="1.0" type="External Message">
				<description>This message is sent by the Receiver of one or more MT 206s. It is used to inform the Sender of (a) previously sent MT 206(s) of the non-payment of specified truncated cheques.

This message may only be used to specify dishonoured items that result in reversing a previous payment settlement.</description>
			</service>
			<service name="MT290_2016" version="1.0" type="External Message">
				<description>This message type is sent by an account servicing institution to the account owner.

It is used to advise charges, interest or other adjustments which have been debited or credited to the account owner's account. It provides details of charges which are previously unknown to the Receiver.</description>
			</service>
			<service name="MT291_2016" version="1.0" type="External Message">
				<description>This message type is sent by a financial institution to another financial institution.

It is used to request the payment of charges, interest and/or other expenses which are previously unknown to the Receiver.</description>
			</service>
			<service name="MT292_2016" version="1.0" type="External Message">
				<description>This message is: 

a) sent by a financial institution to request a second financial institution to consider cancellation of the SWIFT message identified in the request. 

b) sent by a corporate customer to request a financial institution to consider cancellation of the SWIFT message identified in the request. 

If the Receiver of the request for cancellation has already acted on the message for which cancellation is requested, the MT n92 asks for a retransfer, that is, reversal, with the beneficiary's consent.

</description>
			</service>
			<service name="MT295_2016" version="1.0" type="External Message">
				<description>This message type is: 

a) sent by a financial institution to another financial institution. 

b) sent by a corporate customer to a financial institution. 

c) sent by a financial institution to a corporate customer. 

It is used to request information or clarification relating to a previous SWIFT or non-SWIFT message or to one or more transactions contained therein. 

A query may also be sent to request that an amendment be made to a previous message, except in those cases where a specific message, or facility within a message, has been provided for this purpose in the related category, for example, MT 707, AMEND in field 22 of the MT 300. 

The category digit of the MT n95 Queries must be: 

a) If related to a SWIFT message, the category digit of the related message. 

b) If not related to a SWIFT message, the category digit which best describes the business purpose of the message. 

</description>
			</service>
			<service name="MT296_2016" version="1.0" type="External Message">
				<description>This message type is: 

a) sent by one financial institution to another financial institution . 

b) sent by a corporate customer to a financial institution. 

c) sent by a financial institution to a corporate customer. 

It is used to respond to an MT n95 Queries or MT n92 Request for Cancellation and other messages where no specific message type has been provided for the response. This message should use the same category digit as the related queries message or request for cancellation. 

</description>
			</service>
			<service name="MT298_2016" version="1.0" type="External Message">
				<description>This message type is used by financial institutions, with their own offices, and/or with other financial institutions with which they have established bilateral agreements.

It is used as an envelope for a specified message included in it.

It allows for the definition of a unique format for which another message type is not available or applicable.

It also allows financial institutions to use message types which are awaiting live implementation on the SWIFT system.</description>
			</service>
			<service name="MT299_2016" version="1.0" type="External Message">
				<description>This message type is: 

a) used by financial institutions to send or receive information for which another message type is not applicable. 

b) used between a corporate and its financial institution for which another message type is not applicable. 

The category digit should be chosen so the message will be routed to the unit of the Receiver which is most capable of acting on the information. 

This format does not apply to category 4 and 7. For more details, see the relevant category Message Reference Guide for MT 499 and MT 799. 

</description>
			</service>
		</summary>
	</private>
	<externalmessage xsi:type="SwiftFormat" type="SwiftFormat" version="5.1.2" rulename="MT101_2016" formattype="SwiftFormat" >
		<description><![CDATA[This message is: 

a)  sent by a financial institution on behalf of a non-financial institution account owner, to an account servicing financial institution or to a forwarding financial institution for further transmission to the account servicing institution. 

b) sent by a non-financial institution account owner, or a party authorised by the account owner, to an account servicing financial institution or to a forwarding financial institution for further transmission to the account servicing institution. 

It is used to move funds from the ordering customer's account(s) serviced at the receiving financial institution or at the account servicing institution, or from an account(s) owned by the ordering customer which the instructing customer has explicit authority to debit, for example,  a subsidiary account. 

The MT 101 can be used to order the movement of funds: 

    a)   between ordering customer accounts, or 

    b)   in favour of a third party, either domestically or internationally.]]></description>
		<standard>SWIFT</standard>
		<standard-name>MT101</standard-name>
		<standard-version>SRG 2016</standard-version>
		<standard-release-qualifier>20160308</standard-release-qualifier>
		<standard-category>Customer Payments &amp; Cheques</standard-category>
		<standard-detailed-name>Request for Transfer</standard-detailed-name>
		<version>1.0</version>
		<SwiftFields>
			<customizable>true</customizable>
			<modifiable>false</modifiable>
			<SwiftMessageType>User</SwiftMessageType>
			<max-length>10000</max-length>
			<HeaderAndTrailerType>SWIFT_INPUT_OUTPUT_HEADER</HeaderAndTrailerType>
			<Header>
				<fields>
					<field>
						<name>Basic Header</name>
						<description><![CDATA[The Basic Header is given in Block 1 of a SWIFT message and is the only header that appears on all messages. The Basic Header provides the fundamental reference for any particular message and is almost always automatically built by the CBT.
The Basic Header has the same format for both input and output messages. However, the information contained in the Basic Header is relative to the sender when the message is input but relative to the receiver when the same message is output.]]></description>
						<datatype>Section</datatype>
						<required>true</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Application Identifier</name>
								<description><![CDATA[The Application Identifier identifies the application within which the message is being sent or received. The available options are:

F = FIN All user-to-user, FIN system and FIN service messages 
A = GPA Most GPA system and service messages 
L = GPA Certain GPA service messages, for example, LOGIN, LAKs, ABORT 

These values are automatically assigned by the SWIFT system and the user's CBT, but the user should be aware of their existence and significance
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Service Identifier</name>
								<description><![CDATA[The Service Identifier consists of 2 numeric characters. It identifies the type of data that is being sent or received and, in doing so, whether the message which follows is one of the following:

a user-to-user message

a system message

a service message, for example, a session control command, such as SELECT, or a logical acknowledgement, such as ACK/SAK/UAK

Users will be primarily concerned with identifier '01' which applies to all GPA and FIN system and user-to-user messages. Other values include: '21' for message acknowledgements such as ACK/NAK, UAK/UNK, '03' for SELECT commands, and 
so on]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>2</length>
							</field>
							<field>
								<name>LT Identifier</name>
								<description><![CDATA[This 12-character SWIFT address, given in the Basic Header Block, is the address of the sending LT for input messages or of the receiving LT for output messages, and includes the Branch Code.

In the Basic Header, the LT Code within the LT Identifier is specific to the LT that has established the session in which the message is being transmitted, that is the sending LT for input messages or the receiving LT for output messages.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>12</length>
							</field>
							<field>
								<name>Session Number</name>
								<description><![CDATA[The Session Number identifies the session in which the message was transmitted. Within the Basic Header, the 4-digit Session Number is the user's current GPA or FIN Session Number.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Sequence Number</name>
								<description><![CDATA[The sequence number always consists of 6 digits. It is the ISN of the sender's current input session or the OSN of the receiver's current output session.

Note: The sequence number is not present in those messages with an Application Identifier of 'L' (for example LOGIN). The sequence number is, however, a key element in the processing of retrievals. Therefore, LOGINs and attempted LOGINs are not retrievable
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>6</length>
							</field>
						</fields>
					</field>
					<field>
						<name>Application Header Input</name>
						<description><![CDATA[The Application Header of a SWIFT message provides information about the message itself.

The Application Header is given in Block 2 of a SWIFT message. It differs according to whether the message is a GPA or a FIN message and whether the Application Header is part of an input or an output message.

]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Input/Output Identifier</name>
								<description><![CDATA[For an input message, the Input/Output Identifier consists of the single letter 'I'.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Message Type</name>
								<description><![CDATA[The Message Type consists of 3 digits which define the MT number of the message being input. The example used above is for an MT 100 Customer Transfer]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>3</length>
							</field>
							<field>
								<name>Receiver's Address</name>
								<description><![CDATA[This address is the 12-character SWIFT address of the receiver of the message, but with a LT Code of 'X'. It defines the destination to which the message should be sent.

The system will replace the 'X' with a specific LT Code on delivery of the message according to the delivery control exercised by the receiving user.

The Branch Code is mandatory and will be validated. The default of 'XXX' may be used, as in the example above.

Unless otherwise documented, system messages addressed to the SWIFT system itself should be addressed to SWFTXXXXXXXX.

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>12</length>
							</field>
							<field>
								<name>Message Priority</name>
								<description><![CDATA[This character, used within FIN Application Headers only, defines the priority with which a message is delivered. The possible values are:

S = System

U = Urgent

N = Normal

Message Priority 'S' must be used for user-to-system messages; for user-to-user messages either 'U' or 'N' can be used. In the absence of user-specified delivery criteria, system messages are always delivered first, followed by urgent priority messages and then normal priority messages.

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Delivery Monitoring</name>
								<description><![CDATA[Delivery monitoring options apply only to FIN user-to-user messages, and allow the sender of a message to request:

automatic MT 011 Delivery Notification once the message has been delivered

automatic MT 010 Non-Delivery Warning if a message is not delivered within the specified obsolescence period (see below)

both, or neither, options. This may be requested on an individual message basis.

The chosen option is expressed as a single digit:

1 = Non-Delivery Warning

2 = Delivery Notification

3 = Non-Delivery Warning and Delivery Notification. 
If the message has priority 'U' then the user must request delivery monitoring option '1' or '3'. If the message has priority 'N', the user can request delivery monitoring option '2', or, by leaving the option blank, no delivery monitoring.
]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>1</length>
							</field>
							<field>
								<name>Obsolescence Period</name>
								<description><![CDATA[The obsolescence period defines the period of time after which a Delayed Message (DLM) trailer is added to a FIN user-to-user message when the message is delivered. For urgent priority messages, it is also the period of time after which, if the message remains undelivered, a Non-Delivery Warning is generated.

The values for the obsolescence period are 003 (15 minutes) for 'U' priority, and 020 (100 minutes) for 'N' priority. An obsolescence period can only be specified when delivery monitoring has been requested (option 1 or 3 for urgent priority messages, option 2 for normal priority messages). If no delivery monitoring has been requested, and an obsolescence period is specified, the message will be NAKed with error code H25.

GPA input Application Headers are similar to their FIN equivalents except that GPA messages do not specify priority, delivery monitoring, nor obsolescence period.

]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>3</length>
							</field>
						</fields>
					</field>
					<field>
						<name>Application Header Output</name>
						<description><![CDATA[The Application Header of a SWIFT message provides information about the message itself.

The Application Header is given in Block 2 of a SWIFT message. It differs according to whether the message is a GPA or a FIN message and whether the Application Header is part of an input or an output message.

]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Input/Output Identifier</name>
								<description><![CDATA[For an input message, the Input/Output Identifier consists of the single letter 'I'.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Message Type</name>
								<description><![CDATA[Three digits indicating the Message Type.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>3</length>
							</field>
							<field>
								<name>Input Time</name>
								<description><![CDATA[The first occurrence of the time field contains the system time and date. This is the generation time in Greenwich Mean Time (GMT).
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Message Input Reference</name>
								<description><![CDATA[The input MIR.

If the message is generated by the system, the input time is the generation time (in GMT) and the input MIR is the system MIR

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>28</length>
							</field>
							<field>
								<name>Output Date</name>
								<description><![CDATA[The output date, local to the receiver.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>6</length>
							</field>
							<field>
								<name>Output Time</name>
								<description><![CDATA[The second occurrence of the time field contains the output time and date. This is in a time local to the receiver.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Message Priority</name>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
						</fields>
					</field>
					<field>
						<name>User Header</name>
						<description><![CDATA[The User Header is an optional header available within FIN for user-to-user messages only. It appears in Block 3 of a SWIFT message, and allows users to provide their own reference within the headers for a particular message.

A User Header can only be assigned by the sender of a message and, if assigned, will always appear on the output message copy. Relevant parts of the User Header will be repeated in related system messages and acknowledgements.

Block 3 may contain tag 113, defining banking priorities, and tag 108, which is a user reference. The user reference part of the User Header may be used as one of the selection criteria when retrieving a message.

The optional field tags 103 and 115 are also used in Block 3 for the FIN Copy service. The order of tags, when present, is 103, 113, 108 and 115.

An optional field tag 119 can be included in Block 3 of certain messages to specify that different validation rules are to be applied. Agreed code words in field 119 indicate what validation rules SWIFT will apply. If field 119 is present, it should appear after field 108
]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Service Identifier</name>
								<description><![CDATA[For any message which the user submits to a FIN Copy service, Block 3 requires an additional field 103 which contains a three-character Service Identifier unique to a specific FIN Copy service. By using a unique identifier it is possible to support access to multiple services within the same CBT.
]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>3</length>
								<tag>103</tag>
							</field>
							<field>
								<name>Banking Priority</name>
								<description><![CDATA[Assigned by the sender of the message.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>4</length>
								<tag>113</tag>
							</field>
							<field>
								<name>Message User Reference</name>
								<description><![CDATA[Assigned by the sender of the message.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>16</length>
								<tag>108</tag>
							</field>
							<field>
								<name>Validation Flag</name>
								<description><![CDATA[Indicates whether a special validation needs to be performed by FIN. The following are examples of the values this field may take. Please note that this list is subject to change:

ISITC indicates validation of ISITC Standards. Only to be used with MT 521 and MT 523.

REMIT identifies the presence of field 77T. Only to be used in MT 103.

RFDD indicates that the message is a request for direct debit. Only to be used in MT 104.

STP indicates that the message is validated according to straight through processing principles. Only to be used in MT 103.

]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>119</tag>
							</field>
							<field>
								<name>Balance checkpoint date and time</name>
								<description><![CDATA[This field contains the balance checkpoint date and time consisting of a date (YYMMDD) and a time (HHMMSS[ss], where 'ss' indicates hundredths of a second). The MI that is subscribed to MIRS will always copy this reference from field tag 13G of the last MT298/091 that it sent into the related MT 298/093 or MT 097 that it generates. ]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>423</tag>
							</field>
							<field>
								<name>Message Input Reference</name>
								<description><![CDATA[This field contains the MIR of the payment message that is related to the notification messages in which this field is present. The MI that is subscribed to MIRS will copy it from the received payment message. In a FINCopy scenario, this field must contain the MIR of the related MT 096]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>106</tag>
							</field>
							<field>
								<name>Related Reference</name>
								<description><![CDATA[This field contains the reference of the payment that is related to the notification messages in which this field is present. The payment itself was not the result of a FIN message. The value of this field must correspond to the related reference (field 21) in the MT298/093. The format of field 424 is 16x.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>424</tag>
							</field>
							<field>
								<name>Service Type Identifier</name>
								<description><![CDATA[This field identifies the applicable global payment service type. The format of field 111 is 3!n.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>111</tag>
							</field>
							<field>
								<name>Unique End-To-End Transaction Reference</name>
								<description><![CDATA[This field provides an end-to-end reference across a payment transaction. The format of field 121 is 36!x.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>121</tag>
							</field>
							<field>
								<name>Addressee Information</name>
								<description><![CDATA[Tag 115 is only valid for output messages. Information from Central Institution to the receiver of payment message. Information is input in the MT 097 FIN Copy Message Authorisation/Refusal Notification in Y-Copy mode.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>115</tag>
							</field>
							<field>
								<name>Payment Release Information Receiver (FINInform Services)</name>
								<description><![CDATA[Tag 165 is only valid for output messages. This field contains information from the server destination to the receiver of payment message. It is only available for use in FINInform services that operate in Y-copy mode.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>165</tag>
							</field>
							<field>
								<name>Receiver Information</name>
								<description><![CDATA[Tag 433 is only valid for output messages. The screening service inputs information in the MT 097 FINCopy Message Authorisation/Refusal Notification, in Y-Copy mode. FINCopy copies the information to the receiver of the screened message.
				    The following values can be present in this field:
				      AOK: message automatically released by screening service
				      FPO: compliance officer has flagged the screening result as false positive
				      NOK: compliance officer has flagged the screened message as suspect
				    The code word can optionally be followed by additional information (up to 20 characters from the x character set).]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>433</tag>
							</field>
						</fields>
					</field>
				</fields>
			</Header>
			<Data>
				<Fields>
					<SwiftSequence Name="A">
						<Name>A</Name>
						<Description><![CDATA[General Information]]></Description>
						<Mandatory>true</Mandatory>
						<Repeating>false</Repeating>
						<Fields>
							<SwiftField Name="20">
								<SwiftFieldDef Name="20">
									<Generic>false</Generic>
									<Description><![CDATA[Reference]]></Description>
									<Option Name="">
										<Format><![CDATA[16x]]></Format>
										<Specification><![CDATA[(Reference)]]></Specification>
										<Description><![CDATA[Sender's Reference]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options> </Options>
								<Validations>
									<SubField Name="Reference">
										<Validation>
											<Options> </Options>
											<ErrorCode>T26</ErrorCode>
											<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive slashes '//' (Error code(s): T26).]]></Comment>
											<ValidationPattern xsi:type="T26" Type="T26">
												<Type>T26</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="21R">
								<SwiftFieldDef Name="21">
									<Generic>false</Generic>
									<Option Name="R">
										<Format><![CDATA[16x]]></Format>
										<Specification><![CDATA[(Reference)]]></Specification>
										<Description><![CDATA[Customer Specified Reference]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>R</Options>
								<Validations>
									<SubField Name="Reference">
										<Validation>
											<Options>R</Options>
											<ErrorCode>T26</ErrorCode>
											<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive  slashes '//' (Error code(s): T26).]]></Comment>
											<ValidationPattern xsi:type="T26" Type="T26">
												<Type>T26</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="28D">
								<SwiftFieldDef Name="28">
									<Generic>false</Generic>
									<Option Name="D">
										<Format><![CDATA[5n/5n]]></Format>
										<Specification><![CDATA[(Message Index)(Total)]]></Specification>
										<Description><![CDATA[Message Index / Total]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options>D</Options>
							</SwiftField>
							<SwiftField Name="50a">
								<SwiftFieldDef Name="50">
									<Generic>false</Generic>
									<Option Name="C">
										<Format><![CDATA[(4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(Identifier Code)]]></Specification>
										<Description><![CDATA[Instructing Party]]></Description>
									</Option>
									<Option Name="L">
										<Format><![CDATA[35x]]></Format>
										<Specification><![CDATA[(Party Identifier)]]></Specification>
										<Description><![CDATA[Instructing Party]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>L, C</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>C</Options>
											<ErrorCode>T27, T28, T29, T45, E57</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="50b">
								<SwiftFieldDef Name="50">
									<Generic>false</Generic>
									<Option Name="F">
										<Format><![CDATA[35x(CRLF4*35x)]]></Format>
										<Specification><![CDATA[(Party Identifier)(Name & Address)]]></Specification>
										<Description><![CDATA[Ordering Customer]]></Description>
									</Option>
									<Option Name="G">
										<Format><![CDATA[/34x(CRLF4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(Account) (Identifier Code)]]></Specification>
										<Description><![CDATA[Ordering Customer]]></Description>
									</Option>
									<Option Name="H">
										<Format><![CDATA[/34x(CRLF4*35x)]]></Format>
										<Specification><![CDATA[(Account)(Name & Address)]]></Specification>
										<Description><![CDATA[Ordering Customer]]></Description>
									</Option>
								</SwiftFieldDef>
								<Suffix>b</Suffix>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>H, G, F</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>G</Options>
											<ErrorCode>T27, T28, T29, T45, E57</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="52a">
								<SwiftFieldDef Name="52">
									<Generic>false</Generic>
									<Option Name="A">
										<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
										<Description><![CDATA[Account Servicing Institution]]></Description>
									</Option>
									<Option Name="C">
										<Format><![CDATA[/34x]]></Format>
										<Specification><![CDATA[(Party Identifier)]]></Specification>
										<Description><![CDATA[Account Servicing Institution]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>A, C</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27, T28, T29, T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
										<Validation>
											<Options>A</Options>
											<ErrorCode>C05</ErrorCode>
											<Comment><![CDATA[Identifier Code must not be a BEI, ie must not be of subtype BEID, MCCO, TESP or TRCO]]></Comment>
											<ValidationPattern xsi:type="C05" Type="C05">
												<Type>C05</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="CreditDebit">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T51</ErrorCode>
											<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="C">
														<DetailedName>Credit</DetailedName>
													</Code>
													<Code Name="D">
														<DetailedName>Debit</DetailedName>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="51A">
								<SwiftFieldDef Name="51">
									<Generic>false</Generic>
									<Option Name="A">
										<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
										<Description><![CDATA[Sending Institution]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>A</Options>
								<Validations>
									<SubField Name="CreditDebit">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T51</ErrorCode>
											<Comment><![CDATA[CreditDebit should contain the following codes]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="C">
														<DetailedName>Credit</DetailedName>
													</Code>
													<Code Name="D">
														<DetailedName>Debit</DetailedName>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="30">
								<SwiftFieldDef Name="30">
									<Generic>false</Generic>
									<Option Name="">
										<Format><![CDATA[6!n]]></Format>
										<Specification><![CDATA[(Date)]]></Specification>
										<Description><![CDATA[Requested Execution Date]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options> </Options>
								<Validations>
									<SubField Name="Date">
										<Validation>
											<Options> </Options>
											<ErrorCode>T50</ErrorCode>
											<Comment><![CDATA[Date must be a valid date expressed as YYMMDD (Error code(s): T50).]]></Comment>
											<ValidationPattern xsi:type="DATE" Type="DATE">
												<Type>DATE</Type>
												<Format>yyMMdd</Format>
												<value-date>true</value-date>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="25">
								<SwiftFieldDef Name="25">
									<Generic>false</Generic>
									<Description><![CDATA[Status]]></Description>
									<Option Name="">
										<Format><![CDATA[35x]]></Format>
										<Specification><![CDATA[(Authorisation)]]></Specification>
										<Description><![CDATA[Authorisation]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options> </Options>
							</SwiftField>
						</Fields>
					</SwiftSequence>
					<SwiftSequence Name="B">
						<Name>B</Name>
						<Description><![CDATA[Transaction Details]]></Description>
						<Mandatory>true</Mandatory>
						<Repeating>true</Repeating>
						<Fields>
							<SwiftField Name="21">
								<SwiftFieldDef Name="21">
									<Generic>false</Generic>
									<Option Name="">
										<Format><![CDATA[16x]]></Format>
										<Specification><![CDATA[(Transaction Reference)]]></Specification>
										<Description><![CDATA[Transaction Reference]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options> </Options>
								<Validations>
									<SubField Name="Transaction_Reference">
										<Validation>
											<Options> </Options>
											<ErrorCode>T26</ErrorCode>
											<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive slashes '//'  (Error code(s): T26).]]></Comment>
											<ValidationPattern xsi:type="T26" Type="T26">
												<Type>T26</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="21F">
								<SwiftFieldDef Name="21">
									<Generic>false</Generic>
									<Option Name="F">
										<Format><![CDATA[16x]]></Format>
										<Specification><![CDATA[(Reference)]]></Specification>
										<Description><![CDATA[F/X Deal Reference]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>F</Options>
								<Validations>
									<SubField Name="Reference">
										<Validation>
											<Options>F</Options>
											<ErrorCode>T26</ErrorCode>
											<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive  slashes '//' (Error code(s): T26).]]></Comment>
											<ValidationPattern xsi:type="T26" Type="T26">
												<Type>T26</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="23E">
								<SwiftFieldDef Name="23">
									<Generic>false</Generic>
									<Description><![CDATA[Function of the Message]]></Description>
									<Option Name="E">
										<Format><![CDATA[4!c[/30x]]]></Format>
										<Specification><![CDATA[(Instruction Code) (Additional Information)]]></Specification>
										<Description><![CDATA[Instruction Code]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>true</Repeating>
								<Presence>O</Presence>
								<Options>E</Options>
								<Validations>
									<SubField Name="Instruction_Code">
										<Validation>
											<Options>E</Options>
											<ErrorCode>T47</ErrorCode>
											<Comment><![CDATA[One of the following codes must be used (Error code(s): T47).]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="CHQB">
														<DetailedName>Cheque</DetailedName>
														<Description>Pay beneficiary customer by cheque only. The optional account number line in field 59a must not be used.</Description>
													</Code>
													<Code Name="CMSW">
														<DetailedName>Sweep the account</DetailedName>
														<Description>This transaction contains a cash management instruction, requesting to sweep the account of the ordering customer.</Description>
													</Code>
													<Code Name="CMTO">
														<DetailedName>Top the account</DetailedName>
														<Description>This transaction contains a cash management instruction, requesting to top the account of the ordering customer above a certain floor amount. The floor amount, if not pre-agreed by the parties involved, may be specified after the code.</Description>
													</Code>
													<Code Name="CMZB">
														<DetailedName>Zero balance the account</DetailedName>
														<Description>This transaction contains a cash management instruction, requesting to zero balance the account of the ordering customer.</Description>
													</Code>
													<Code Name="CORT">
														<DetailedName>Corporate Trade</DetailedName>
														<Description>This transaction contains a payment that is made in settlement of a trade, eg, foreign exchange deal, securities transaction.</Description>
													</Code>
													<Code Name="EQUI">
														<DetailedName>Equivalent Amount</DetailedName>
														<Description>This transaction contains an instruction requesting to pay the beneficiary customer an amount in one currency, equivalent to an instructed amount in a different currency.</Description>
													</Code>
													<Code Name="INTC">
														<DetailedName>Intra-Company Payment</DetailedName>
														<Description>This transaction contains an intra-company payment, ie, a payment between two companies belonging to the same group.</Description>
													</Code>
													<Code Name="NETS">
														<DetailedName>Net Settlement System</DetailedName>
														<Description>This transaction contains a payment that should be settled via a net settlement system, if available.</Description>
													</Code>
													<Code Name="OTHR">
														<DetailedName>Other</DetailedName>
														<Description>Used for bilaterally agreed codes/information. The actual bilateral code/information needs to be specified in Additional Information.</Description>
													</Code>
													<Code Name="PHON">
														<DetailedName>Telephone</DetailedName>
														<Description>This transaction requires the beneficiary to be contacted by telephone and should be followed by the appropriate telephone number. This code is meant for the last financial institution in the chain.</Description>
													</Code>
													<Code Name="REPA">
														<DetailedName>Related Payment</DetailedName>
														<Description>Payment has a related e-Payments reference.</Description>
													</Code>
													<Code Name="RTGS">
														<DetailedName>RTGS Payment</DetailedName>
														<Description>This transaction contains a payment that should be settled via a real time gross settlement system, if available.</Description>
													</Code>
													<Code Name="URGP">
														<DetailedName>Urgent Payment</DetailedName>
														<Description>This transaction contains a time sensitive payment which should be executed in an expeditious manner.</Description>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="32B">
								<SwiftFieldDef Name="32">
									<Generic>false</Generic>
									<Option Name="B">
										<Format><![CDATA[3!a15d]]></Format>
										<Specification><![CDATA[(Currency) (Amount)]]></Specification>
										<Description><![CDATA[Currency/Transaction Amount]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options>B</Options>
								<Validations>
									<SubField Name="Currency">
										<Validation>
											<Options>B</Options>
											<ErrorCode>T52</ErrorCode>
											<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52).]]></Comment>
											<ValidationPattern xsi:type="Currency_Code" Type="Currency Code">
												<Type>Currency Code</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="Amount">
										<Validation>
											<Options>B</Options>
											<ErrorCode>C03</ErrorCode>
											<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency.]]></Comment>
											<ValidationPattern xsi:type="Decimal" Type="Decimal">
												<Type>Decimal</Type>
												<currency-field>Currency</currency-field>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="50a">
								<SwiftFieldDef Name="50">
									<Generic>false</Generic>
									<Option Name="C">
										<Format><![CDATA[(4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(Identifier Code)]]></Specification>
										<Description><![CDATA[Instructing Party]]></Description>
									</Option>
									<Option Name="L">
										<Format><![CDATA[35x]]></Format>
										<Specification><![CDATA[(Party Identifier)]]></Specification>
										<Description><![CDATA[Instructing Party]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>C, L</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>C</Options>
											<ErrorCode>T27, T28, T29, T45, E57</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="50b">
								<SwiftFieldDef Name="50">
									<Generic>false</Generic>
									<Option Name="F">
										<Format><![CDATA[35x(CRLF4*35x)]]></Format>
										<Specification><![CDATA[(Party Identifier)(Name & Address)]]></Specification>
										<Description><![CDATA[Ordering Customer]]></Description>
									</Option>
									<Option Name="G">
										<Format><![CDATA[/34x(CRLF4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(Account) (Identifier Code)]]></Specification>
										<Description><![CDATA[Ordering Customer]]></Description>
									</Option>
									<Option Name="H">
										<Format><![CDATA[/34x(CRLF4*35x)]]></Format>
										<Specification><![CDATA[(Account)(Name & Address)]]></Specification>
										<Description><![CDATA[Ordering Customer]]></Description>
									</Option>
								</SwiftFieldDef>
								<Suffix>b</Suffix>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>G, H, F</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>G</Options>
											<ErrorCode>T27, T28, T29, T45, E57</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="52a">
								<SwiftFieldDef Name="52">
									<Generic>false</Generic>
									<Option Name="A">
										<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
										<Description><![CDATA[Account Servicing Institution]]></Description>
									</Option>
									<Option Name="C">
										<Format><![CDATA[/34x]]></Format>
										<Specification><![CDATA[(Party Identifier)]]></Specification>
										<Description><![CDATA[Account Servicing Institution]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>A, C</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27, T28, T29, T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
										<Validation>
											<Options>A</Options>
											<ErrorCode>C05</ErrorCode>
											<Comment><![CDATA[Identifier Code must not be a BEI, ie must not be of subtype BEID, MCCO, TESP or TRCO]]></Comment>
											<ValidationPattern xsi:type="C05" Type="C05">
												<Type>C05</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="CreditDebit">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T51</ErrorCode>
											<Comment><![CDATA[CreditDebit should contain the following codes]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="C">
														<DetailedName>Credit</DetailedName>
													</Code>
													<Code Name="D">
														<DetailedName>Debit</DetailedName>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="56a">
								<SwiftFieldDef Name="56">
									<Generic>false</Generic>
									<Option Name="A">
										<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
										<Description><![CDATA[Intermediary]]></Description>
									</Option>
									<Option Name="C">
										<Format><![CDATA[/34x]]></Format>
										<Specification><![CDATA[(Party Identifier)]]></Specification>
										<Description><![CDATA[Intermediary]]></Description>
									</Option>
									<Option Name="D">
										<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
										<Description><![CDATA[Intermediary]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>A, C, D</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27, T28, T29, T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
										<Validation>
											<Options>A</Options>
											<ErrorCode>C05</ErrorCode>
											<Comment><![CDATA[Identifier Code must not be a BEI, ie must not be of subtype BEID, MCCO, TESP or TRCO]]></Comment>
											<ValidationPattern xsi:type="C05" Type="C05">
												<Type>C05</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="CreditDebit">
										<Validation>
											<Options>A, D</Options>
											<ErrorCode>T51</ErrorCode>
											<Comment><![CDATA[CreditDebit should contain the following codes]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="C">
														<DetailedName>Credit</DetailedName>
													</Code>
													<Code Name="D">
														<DetailedName>Debit</DetailedName>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="57a">
								<SwiftFieldDef Name="57">
									<Generic>false</Generic>
									<Option Name="A">
										<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
										<Description><![CDATA[Account With Institution]]></Description>
									</Option>
									<Option Name="C">
										<Format><![CDATA[/34x]]></Format>
										<Specification><![CDATA[(Party Identifier)]]></Specification>
										<Description><![CDATA[Account With Institution]]></Description>
									</Option>
									<Option Name="D">
										<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
										<Description><![CDATA[Account With Institution]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>D, C, A</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27, T28, T29, T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
										<Validation>
											<Options>A</Options>
											<ErrorCode>C05</ErrorCode>
											<Comment><![CDATA[Identifier Code must not be a BEI, ie must not be of subtype BEID, MCCO, TESP or TRCO]]></Comment>
											<ValidationPattern xsi:type="C05" Type="C05">
												<Type>C05</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="CreditDebit">
										<Validation>
											<Options>A, D</Options>
											<ErrorCode>T51</ErrorCode>
											<Comment><![CDATA[CreditDebit should contain the following codes]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="C">
														<DetailedName>Credit</DetailedName>
													</Code>
													<Code Name="D">
														<DetailedName>Debit</DetailedName>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="59a">
								<SwiftFieldDef Name="59">
									<Generic>false</Generic>
									<Option Name="">
										<Format><![CDATA[([/34xCRLF])(4*35x)]]></Format>
										<Specification><![CDATA[(Account)(Name & Address)]]></Specification>
										<Description><![CDATA[Beneficiary]]></Description>
									</Option>
									<Option Name="A">
										<Format><![CDATA[([/34xCRLF])(4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(Account)(Identifier Code)]]></Specification>
										<Description><![CDATA[Beneficiary]]></Description>
									</Option>
									<Option Name="F">
										<Format><![CDATA[[/34xCRLF]4*35x]]></Format>
										<Specification><![CDATA[(Account)(Name & Address Details)]]></Specification>
										<Description><![CDATA[Beneficiary]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options>A,  , F</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27, T28, T29, T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="70">
								<SwiftFieldDef Name="70">
									<Generic>false</Generic>
									<Description><![CDATA[Narrative]]></Description>
									<Option Name="">
										<Format><![CDATA[4*35x]]></Format>
										<Specification><![CDATA[(Narrative)]]></Specification>
										<Description><![CDATA[Remittance Information]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options> </Options>
							</SwiftField>
							<SwiftField Name="77B">
								<SwiftFieldDef Name="77">
									<Generic>false</Generic>
									<Option Name="B">
										<Format><![CDATA[3*35x]]></Format>
										<Specification><![CDATA[(Narrative)]]></Specification>
										<Description><![CDATA[Regulatory Reporting]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>B</Options>
							</SwiftField>
							<SwiftField Name="33B">
								<SwiftFieldDef Name="33">
									<Generic>false</Generic>
									<Option Name="B">
										<Format><![CDATA[3!a15d]]></Format>
										<Specification><![CDATA[(Currency) (Amount)]]></Specification>
										<Description><![CDATA[Currency/Original Ordered Amount]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>B</Options>
								<Validations>
									<SubField Name="Currency">
										<Validation>
											<Options>B</Options>
											<ErrorCode>T52</ErrorCode>
											<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52).]]></Comment>
											<ValidationPattern xsi:type="Currency_Code" Type="Currency Code">
												<Type>Currency Code</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="Amount">
										<Validation>
											<Options>B</Options>
											<ErrorCode>C03</ErrorCode>
											<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency.]]></Comment>
											<ValidationPattern xsi:type="Decimal" Type="Decimal">
												<Type>Decimal</Type>
												<currency-field>Currency</currency-field>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="71A">
								<SwiftFieldDef Name="71">
									<Generic>false</Generic>
									<Option Name="A">
										<Format><![CDATA[3!a]]></Format>
										<Specification><![CDATA[(Code)]]></Specification>
										<Description><![CDATA[Details of Charges]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options>A</Options>
								<Validations>
									<SubField Name="Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T08</ErrorCode>
											<Comment><![CDATA[One of the following codes must be used (Error code(s): T08):]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="BEN">
														<DetailedName>Beneficiary</DetailedName>
														<Description>All transaction charges, including the charges of the financial institution servicing the ordering customer&#8217;s account, for the subsequent credit transfer(s) are to be borne by the beneficiary customer.</Description>
													</Code>
													<Code Name="OUR">
														<DetailedName>Our customer charged</DetailedName>
														<Description>All transaction charges for the subsequent credit transfer are to be borne by the ordering customer.</Description>
													</Code>
													<Code Name="SHA">
														<DetailedName>Shared charges</DetailedName>
														<Description>All transaction charges other than the charges of the financial institution servicing the ordering customer account are borne by the beneficiary customer.</Description>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="25A">
								<SwiftFieldDef Name="25">
									<Generic>false</Generic>
									<Description><![CDATA[Status]]></Description>
									<Option Name="A">
										<Format><![CDATA[/34x]]></Format>
										<Specification><![CDATA[(Account)]]></Specification>
										<Description><![CDATA[Charges Account]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>A</Options>
							</SwiftField>
							<SwiftField Name="36">
								<SwiftFieldDef Name="36">
									<Generic>false</Generic>
									<Description><![CDATA[Quantity of Financial Instrument]]></Description>
									<Option Name="">
										<Format><![CDATA[12d]]></Format>
										<Specification><![CDATA[(Rate)]]></Specification>
										<Description><![CDATA[Exchange Rate]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options> </Options>
							</SwiftField>
						</Fields>
					</SwiftSequence>
				</Fields>
			</Data>
			<Trailer>
				<fields>
					<field>
						<name>Message Authentication Code</name>
						<description><![CDATA[Allows authentication by the receiving user. It is followed by an authentication result.

This trailer is mandatory for most user-to-user message categories within the FIN application. When the FIN Copy Service is used a PAC trailer, if present, follows the MAC trailer.

Format:

{MAC:<authentication-result>}

where <authentication-result> = 8!h

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>8</length>
						<tag>MAC</tag>
					</field>
					<field>
						<name>Proprietary Authentication Code</name>
						<description><![CDATA[The PAC is used within the FIN Copy service only, when using the double authentication option. The PAC is included in Block 5 of FIN user-to-user messages, immediately after the MAC trailer, if present.

This is calculated on the extracted fields of Block 4 of the message, the value of field 115, if present, and the <authentication-result> of the MAC trailer for Copy Services with double authentication.

Thus, the end-of-block indicator (CrLf-) is included in the PAC calculation, and the fields are defined as follows:

The first three characters are CrLf:

The field and the delimiter are present, that is, 32A:, 20:, and so on.

All subfields and their delimiters are present.

Format:

{PAC:[<authentication-result>]}

where <authentication-result> is mandatory on input messages only and <authentication-result> = 8!h

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>8</length>
						<tag>PAC</tag>
					</field>
					<field>
						<name>Checksum</name>
						<description><![CDATA[The checksum is computed based on the receiver's address (12 characters, with 9th character replaced by X) plus the Text Block. This trailer allows the system and the CBT to check that messages have not been corrupted due to a system malfunction or an undetected transmission error.

Format:

{CHK:<checksum-result>}

where <checksum-result> = 12!h

Note: This trailer is mandatory for FIN and GPA messages (Service Identifier 01).

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>12</length>
						<tag>CHK</tag>
					</field>
					<field>
						<name>System Originated Message</name>
						<description><![CDATA[The system message or service message which is generated by a system PLT has a SYS trailer. All solicited system messages (Service Identifier 01) contain the MIR of the request and may also contain the time.

Format:

{SYS:[<time><mir>]}

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>SYS</tag>
					</field>
					<field>
						<name>Test And Training Message</name>
						<description><![CDATA[Mandatory for FIN and GPA messages (Service Identifier 01) sent by, or delivered to, a Test & Training Logical Terminal (LT). This trailer has a tag only, and no value.

Format:

{TNG:}
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>0</length>
						<tag>TNG</tag>
					</field>
					<field>
						<name>Possible Duplicate Emission</name>
						<description><![CDATA[This trailer is used by the destination of the message. It only applies to FIN user-to-user messages (Service Identifier 01, message categories reserved for banking messages). There can be multiple PDEs. The system does not verify the order nor restrict the number (except for maximum message length).

Correctly formatted PDE trailers applied to user-to-system messages are accepted by the system, but not processed. This means that the system does not check to see if the original message exists. Therefore, a retrieval request sent with a PDE trailer may be processed twice if the original message was received by the system.

Format:

{PDE:[<time><mir>]}

where <time><mir> refers to the emission of the previous possible issue.

Note: It can be added automatically by a CBT or manually by a user. It may be followed by the MIR and the time of its previous possible messages.

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>PDE</tag>
					</field>
					<field>
						<name>Delayed Message</name>
						<description><![CDATA[This trailer is added to all FIN user-to-user output messages that have exceeded their obsolescence period. If this trailer appears in GPA or FIN system messages, it must be ignored. This trailer has a tag only, and no value.

The Obsolescence Period is:

U = 15 minutes

N = 100 minutes

Format:

{DLM:}

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>0</length>
						<tag>DLM</tag>
					</field>
					<field>
						<name>Possible Duplicate Message</name>
						<description><![CDATA[Added by the system to any output message (GPA and FIN Service Identifier 01) being resent because a prior delivery may be invalid. If a system PLT receives a report request with a PDM, the response has a plain PDM (without the optional delivery reference). Other PDMs may be added as a result of unsuccessful delivery attempts to the user. 
Format:
{PDM:[<time><mor>]}
where <time> and the Message Output Reference <mor> are that of the previous attempt.
Note: For messages recovered after a system failure, the optional fields may not be present.
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>PDM</tag>
					</field>
					<field>
						<name>Message Reference</name>
						<description><![CDATA[The MRF trailer is used to specify the message reference of the original user message in MT 096 FIN Copy to Central Institution Messages.
Format:
{MRF:<date><full-time><mir>}
where <mir> is that of the original user message whose fields are copied in the MT 096 FIN Copy to Central Institution Message.
Note: The MRF is specific to FIN Copy. The MRF trailer is automatically generated in the MT 096 FIN Copy to Central Institution Message and can only be reused in field 109 of the MT 096 FIN Copy to Central Institution Message to identify the MT 096 to which the MT 097 is a response. The format of the MRF is subject to change.
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>MRF</tag>
					</field>
				</fields>
			</Trailer>
		</SwiftFields>
		<validationrules name="Default">
			<hdrvalidationrules>
				<fieldvalidations>
					<fieldvalidation>
						<name>U09</name>
						<formula><![CDATA[if($this.Header.GetFieldIndex("User_Header") != -1) {
    def userHeader = $this.Header.GetSection("User_Header");
    if(userHeader.$size > 0 && userHeader[0].IsNotNull("Validation_Flag")) {
        return false;
    }
}
return true;
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U09</error-code>
						<actionmessage><![CDATA["User has used tag 119 in a message that is not a candidate for special processing"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>U03</name>
						<fieldname>User Header</fieldname>
						<formula><![CDATA[Iff(IsNotNull(User_Header.Service_Type_Identifier), 
    IsNotNull(User_Header.Unique_End_To_End_Transaction_Reference))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U03</error-code>
						<actionmessage><![CDATA["When populating an end-to-end reference, both fields 111 and 121 must be populated: a message that contains only one of these two fields will not be accepted by FIN."]]></actionmessage>
					</fieldvalidation>
				</fieldvalidations>
			</hdrvalidationrules>
			<datavalidationrules>
				<fieldvalidations>
					<fieldvalidation>
						<name>C1</name>
						<fieldname>B.36</fieldname>
						<formula><![CDATA[B.F21F.$size > 0]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D54</error-code>
						<actionmessage><![CDATA["If an exchange rate is given in field 36, the corresponding forex deal must be referenced in field 21F."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C2</name>
						<fieldname>B</fieldname>
						<comment><![CDATA[C2:
In each occurrence of sequence B, if field 33B is present and 'amount' in field 32B is not equal to zero, then field 36 must be present, otherwise field 36 is not allowed (Error code(s): D60).]]></comment>
						<formula><![CDATA[If(B.F33B.$size > 0 && B.F32B[0].Amount != 0, 
   B.F36.$size > 0, 
   B.F36.$size == 0)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D60</error-code>
						<actionmessage><![CDATA["In each occurrence of sequence B, if field 33B is present and 'amount' in field 32B is not equal to zero, then field 36 must be present, otherwise field 36 is not allowed."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C3</name>
						<fieldname>B</fieldname>
						<formula><![CDATA[If(A.F50b.$size > 0 && In(A[0].F50b[0].FormatOption, 'F', 'G', 'H'), 
   Implies($value.F50b.$size > 0, !In($value.F50b.FormatOption, 'F', 'G', 'H')), 
   $value.F50b.$size > 0 && In($value.F50b.FormatOption, 'F', 'G', 'H'))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D61</error-code>
						<actionmessage><![CDATA["Field 50a (option F, G or H), must be present in either sequence A (index 5) or in each occurrence of sequence B (index 15), but must never be present in both sequences, nor be absent from both sequences."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C4</name>
						<fieldname>B.50a</fieldname>
						<formula><![CDATA[Implies(In($value.FormatOption, 'C', 'L') && A.F50a.$size > 0, 
        !In(A[0].F50a[0].FormatOption, 'C', 'L'))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D62</error-code>
						<actionmessage><![CDATA["Field 50a (option C or L), may be present in either sequence A (index 4), or in one or more occurrences of sequence B (index 14), but must not be present in both sequences A and B."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C5</name>
						<fieldname>B.33B.Currency</fieldname>
						<formula><![CDATA[$value != B.F32B[0].Currency]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D68</error-code>
						<actionmessage><![CDATA["If field 33B is present in sequence B, its currency code must be different from the currency code in field 32B in the same occurrence of sequence B."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C6</name>
						<fieldname>B.52a</fieldname>
						<formula><![CDATA[A[0].F52a.$size == 0]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D64</error-code>
						<actionmessage><![CDATA["Field 52a may be present in either sequence A or in one or more occurrences of sequence B, but must not be present in both sequences."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C7</name>
						<fieldname>B.56a</fieldname>
						<formula><![CDATA[B.F57a.$size > 0]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D65</error-code>
						<actionmessage><![CDATA["If field 56a is present, field 57a must also be present."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C8</name>
						<fieldname>B.32B.Currency</fieldname>
						<formula><![CDATA[If(A[0].F21R.$size > 0, 
   $value == B[0].F32B[0].Currency, 
   true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D98</error-code>
						<actionmessage><![CDATA["If field 21R is present in sequence A, then in each occurrence of sequence B, the currency code in fields 32B must be the same."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C9</name>
						<fieldname>B</fieldname>
						<comment><![CDATA[C9:
In each occurrence of sequence B, the presence of fields 33B and 21F is dependent on the presence and value of fields 32B and 23E as follows(Error code(s): E54).]]></comment>
						<formula><![CDATA[If(B.F32B[0].Amount == 0,
   If(FieldValueExistsInAtLeastOne(B.F23E, "Instruction_Code", "EQUI"),
      B.F33B.$size > 0,
      B.F33B.$size == 0 && B.F21F.$size == 0),
   true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E54</error-code>
						<actionmessage><![CDATA["In each occurrence of sequence B, if 'amount' in field 32B is equal to zero, the following conditions apply: a) if field 23E is present and code equals EQUI, then field 33B is mandatory, b) if field 23E is present and code NOT equals EQUI, then fields 33B and 21F are not allowed and c) if field 23E is NOT present, then fields 33B and 21F are not allowed."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FA-51A-A</name>
						<comment><![CDATA["Field 51A is only valid in IFT."]]></comment>
						<formula><![CDATA[A[0].F51A.$size == 0]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D63</error-code>
						<actionmessage><![CDATA["Field 51A is only valid in IFT."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-23E-A</name>
						<fieldname>B.23E.Additional_Information</fieldname>
						<comment><![CDATA["Additional Information is only allowed when Instruction Code consists of one of the following codes: CMTO, PHON, OTHR and REPA."]]></comment>
						<formula><![CDATA[In(B.F23E.Instruction_Code, "CMTO", "PHON", "OTHR", "REPA")]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D66</error-code>
						<actionmessage><![CDATA["Additional Information is only allowed when Instruction Code consists of one of the following codes: CMTO, PHON, OTHR and REPA."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-23E-B</name>
						<fieldname>B.23E</fieldname>
						<comment><![CDATA["In each occurrence of Sequence B, when field 23E is repeated, the same code word must not be present more than once with the exception of OTHR. The code word OTHR may be repeated."]]></comment>
						<formula><![CDATA[$sec1 = SecFilter(B.F23E, 
                  "$filterObj.Instruction_Code == \"OTHR\"");
$sec2 = SecFilter(B.F23E, 
                  "$filterObj.Instruction_Code != \"OTHR\"");
$sec3 = SecGroup($sec2, "Instruction_Code");
$sec3.$size == (B.F23E.$size - $sec1.$size);
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E46</error-code>
						<actionmessage><![CDATA["In each occurrence of Sequence B, when field 23E is repeated, the same code word must not be present more than once with the exception of OTHR. The code word OTHR may be repeated."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-23E-C1</name>
						<fieldname>B.23E.Instruction_Code</fieldname>
						<comment><![CDATA["In each occurrence of sequence B, when field 23E is used more than once, the following combinations are not allowed: CHQB with CMSW, CHQB with CMTO, CHQB with CMZB, CHQB with CORT, CHQB with NETS, CHQB with PHON, CHQB with REPA, CHQB with RTGS, CHQB with URGP."]]></comment>
						<formula><![CDATA[If($value == "CHQB", 
   SecFilter(B.F23E, 
             "In($filterObj.Instruction_Code, \"CMSW\", \"CMTO\", \"CMZB\", \"CORT\", \"NETS\", \"PHON\", \"REPA\", \"RTGS\", \"URGP\")").$size == 0, 
   true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D67</error-code>
						<actionmessage><![CDATA["In each occurrence of sequence B, when field 23E is used more than once, the following combinations are not allowed: CHQB with CMSW, CHQB with CMTO, CHQB with CMZB, CHQB with CORT, CHQB with NETS, CHQB with PHON, CHQB with REPA, CHQB with RTGS, CHQB with URGP."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-23E-C2</name>
						<fieldname>B.23E.Instruction_Code</fieldname>
						<comment><![CDATA["In each occurrence of sequence B, when field 23E is used more than once, the following combinations are not allowed: CMSW with CMTO, CMSW with CMZB."]]></comment>
						<formula><![CDATA[If($value == "CMSW", 
   SecFilter(B.F23E, 
             "In($filterObj.Instruction_Code, \"CMTO\", \"CMZB\")").$size == 0, 
   true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D67</error-code>
						<actionmessage><![CDATA["In each occurrence of sequence B, when field 23E is used more than once, the following combinations are not allowed: CMSW with CMTO, CMSW with CMZB."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-23E-C3</name>
						<fieldname>B.23E.Instruction_Code</fieldname>
						<comment><![CDATA["In each occurrence of sequence B, when field 23E is used more than once, the following combination is not allowed: CMTO with CMZB."]]></comment>
						<formula><![CDATA[If($value == "CMTO", 
   SecFilter(B.F23E, 
             "$filterObj.Instruction_Code == \"CMZB\"").$size == 0, 
   true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D67</error-code>
						<actionmessage><![CDATA["In each occurrence of sequence B, when field 23E is used more than once, the following combination is not allowed: CMTO with CMZB."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-23E-C4</name>
						<fieldname>B.23E.Instruction_Code</fieldname>
						<comment><![CDATA["In each occurrence of sequence B, when field 23E is used more than once, the following combinations are not allowed: CORT with CMSW, CORT with CMTO, CORT with CMZB, CORT with REPA."]]></comment>
						<formula><![CDATA[If($value == "CORT", 
   SecFilter(B.F23E, 
             "In($filterObj.Instruction_Code, \"CMSW\", \"CMTO\", \"CMZB\", \"REPA\")").$size == 0, 
   true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D67</error-code>
						<actionmessage><![CDATA["In each occurrence of sequence B, when field 23E is used more than once, the following combinations are not allowed: CORT with CMSW, CORT with CMTO, CORT with CMZB, CORT with REPA."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-23E-C5</name>
						<fieldname>B.23E.Instruction_Code</fieldname>
						<comment><![CDATA["In each occurrence of sequence B, when field 23E is used more than once, the following combination is not allowed: NETS with RTGS."]]></comment>
						<formula><![CDATA[If($value == "NETS", 
   SecFilter(B.F23E, 
             "$filterObj.Instruction_Code == \"RTGS\"").$size == 0, 
   true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D67</error-code>
						<actionmessage><![CDATA["In each occurrence of sequence B, when field 23E is used more than once, the following combination is not allowed: NETS with RTGS."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-23E-C6</name>
						<fieldname>B.23E.Instruction_Code</fieldname>
						<comment><![CDATA["In each occurrence of sequence B, when field 23E is used more than once, the following combinations are not allowed: EQUI with CMSW, EQUI with CMTO, EQUI with CMZB."]]></comment>
						<formula><![CDATA[If($value == "EQUI", 
  SecFilter(B.F23E, 
            "In($filterObj.Instruction_Code, \"CMSW\", \"CMTO\", \"CMZB\")").$size == 0, 
  true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D67</error-code>
						<actionmessage><![CDATA["In each occurrence of sequence B, when field 23E is used more than once, the following combinations are not allowed: EQUI with CMSW, EQUI with CMTO, EQUI with CMZB."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>ERI</name>
						<fieldname>B</fieldname>
						<comment><![CDATA["For specific message types, an European currency must not be used as the currency of settlement after a cut-off date (Error Code: E76)."]]></comment>
						<formula><![CDATA[applyERIValidation(A[0].F30[0], "Date", B.F32B[0], "Currency")]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E76</error-code>
						<actionmessage><![CDATA["For specific message types, an European currency must not be used as the currency of settlement after a cut-off date (Error Code: E76)."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FA-50b-A</name>
						<fieldname>A.50b.Party_Identifier</fieldname>
						<comment><![CDATA[FA-50b-A
With option F, subfield 1 (Party Identifier), one of the following line formats must be used (Error code(s): T54):
Line format 1 :/34x (Account)
Line format 2 :4!a/2!a/27x (Code)(Country Code)(Identifier)]]></comment>
						<formula><![CDATA[Implies(A.F50b.FormatOption == 'F', Verify50FPartyIdFormat($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T54</error-code>
						<actionmessage><![CDATA["Invalid 'Party Identifier' value. One of the following line formats must be used: /34x (Account) or 4!a/2!a/27x (Code)(Country Code)(Identifier)"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FA-50b-B</name>
						<fieldname>A.50b.Party_Identifier</fieldname>
						<comment><![CDATA[FA-50b-B
In option F, when subfield 1 Party Identifier is used with the (Code)(Country Code)(Identifier) format, one of the following codes must be used (Error code(s): T55): ARNU, CCPT, CUST, DRLC, EMPL, NIDN, SOSE and TXID."
]]></comment>
						<formula><![CDATA[Implies(A.F50b.FormatOption == 'F', Verify50FPartyIdCode($value))
/* get the code from party identifier if format is 4!a/2!a/27x */   ]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T55</error-code>
						<actionmessage><![CDATA["Invalid 'Party Identifier' value. When 'Party Identifier' is used with the format (Code)(Country Code)(Identifier), one of following codes must be used: ARNU, CCPT, CUST, DRLC, EMPL, NIDN, SOSE and TXID."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FA-50b-C</name>
						<fieldname>A.50b.Name_&amp;_Address</fieldname>
						<comment><![CDATA[FA-50b-C
With option F, subfield 2 (Name and Address), the following line format must be used for all lines: 1!n/33x (Number)(Details). (Error code(s): T54).]]></comment>
						<formula><![CDATA[Implies(A.F50b.FormatOption == 'F', Verify50FNmandAdrFormat($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T54</error-code>
						<actionmessage><![CDATA["Invalid 'Name and Address' value. With option F, subfield 2 (Name and Address), the following line format must be used for all lines :1!n/33x (Number)(Details)."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FA-50b-D</name>
						<fieldname>A.50b.Party_Identifier</fieldname>
						<comment><![CDATA[FA-50b-D
In option F, subfield 1 (Party Identifier) used with the (Code)(Country Code)(Identifier) format: Country Code must be a valid ISO country code (Error code(s): T73).
]]></comment>
						<formula><![CDATA[Implies(A.F50b.FormatOption == 'F', Verify50FPartyIdCountryCode($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T73</error-code>
						<actionmessage><![CDATA["Invalid 'Party Identifier' value. In option F, subfield 1 (Party Identifier) used with the (Code)(Country Code)(Identifier) format: Country Code must be a valid ISO country code."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FA-50b-E</name>
						<fieldname>A.50b.Name_&amp;_Address</fieldname>
						<comment><![CDATA[FA-50b-E
 With option F - subfield 2 (Name and Address), should start with Number 1 to 8 and it should follow the line formatting rules as specified in the SWIFT spec (Error code(s): T56).]]></comment>
						<formula><![CDATA[Implies(A.F50b.FormatOption == 'F', Verify50FNmAndAdrLines2($value, A.F50b.Party_Identifier))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T56</error-code>
						<actionmessage><![CDATA["Invalid 'Name and Address' value. With option F - subfield 2 (Name and Address), should start with Number 1 to 8 and it should follow the line formatting rules as specified in the SWIFT spec."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FA-50b-F</name>
						<fieldname>A.50b.Name_&amp;_Address</fieldname>
						<comment><![CDATA[FA-50b-F
Number 4 must be followed by a valid date in the format YYYYMMDD and this date, local to the sender, must not be later than the date on which the message is successfully sent to SWIFT (Error code(s): T50).
]]></comment>
						<formula><![CDATA[Implies(A.F50b.FormatOption == 'F', Verify50FNmandAdrDate($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T50</error-code>
						<actionmessage><![CDATA["Invalid 'Name and Address' value. Number 4 must be followed by a valid date in the format YYYYMMDD and this date, local to the sender, must not be later than the date on which the message is successfully sent to SWIFT."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FA-50b-G</name>
						<fieldname>A.50b.Name_&amp;_Address</fieldname>
						<comment><![CDATA[FA-50b-G
Numbers 3, 5, 6 and 7 must be followed by a valid ISO country code
(Error code(s): T73).]]></comment>
						<formula><![CDATA[Implies(A.F50b.FormatOption == 'F',Verify50FNmAndAdrCtryCode2($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T73</error-code>
						<actionmessage><![CDATA["Invalid 'Name and Address' value. Numbers 3, 5, 6 and 7 must be followed by a valid ISO country code."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-50b-A</name>
						<fieldname>B.50b.Party_Identifier</fieldname>
						<comment><![CDATA[FB-50b-A
With option F, subfield 1 (Party Identifier), one of the following line formats must be used (Error code(s): T54):
Line format 1 :/34x (Account)
Line format 2 :4!a/2!a/27x (Code)(Country Code)(Identifier)]]></comment>
						<formula><![CDATA[Implies(B.F50b.FormatOption == 'F', Verify50FPartyIdFormat($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T54</error-code>
						<actionmessage><![CDATA["Invalid 'Party Identifier' value. One of the following line formats must be used: /34x (Account) or 4!a/2!a/27x (Code)(Country Code)(Identifier)"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-50b-B</name>
						<fieldname>B.50b.Party_Identifier</fieldname>
						<comment><![CDATA[FB-50b-B
In option F, when subfield 1 Party Identifier is used with the (Code)(Country Code)(Identifier) format, one of the following codes must be used (Error code(s): T55): ARNU, CCPT, CUST, DRLC, EMPL, NIDN, SOSE and TXID."
]]></comment>
						<formula><![CDATA[Implies(B.F50b.FormatOption == 'F', Verify50FPartyIdCode($value))
/* get the code from party identifier if format is 4!a/2!a/27x */   ]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T55</error-code>
						<actionmessage><![CDATA["Invalid 'Party Identifier' value. When 'Party Identifier' is used with the format (Code)(Country Code)(Identifier), one of following codes must be used: ARNU, CCPT, CUST, DRLC, EMPL, NIDN, SOSE and TXID."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-50b-C</name>
						<fieldname>B.50b.Name_&amp;_Address</fieldname>
						<comment><![CDATA[FB-50b-C
With option F, subfield 2 (Name and Address), the following line format must be used for all lines: 1!n/33x (Number)(Details). (Error code(s): T54).]]></comment>
						<formula><![CDATA[Implies(B.F50b.FormatOption == 'F', Verify50FNmandAdrFormat($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T54</error-code>
						<actionmessage><![CDATA["Invalid 'Name and Address' value. With option F, subfield 2 (Name and Address), the following line format must be used for all lines :1!n/33x (Number)(Details)."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-50b-D</name>
						<fieldname>B.50b.Party_Identifier</fieldname>
						<comment><![CDATA[FB-50b-D
In option F, subfield 1 (Party Identifier) used with the (Code)(Country Code)(Identifier) format: Country Code must be a valid ISO country code (Error code(s): T73).
]]></comment>
						<formula><![CDATA[Implies(B.F50b.FormatOption == 'F', Verify50FPartyIdCountryCode($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T73</error-code>
						<actionmessage><![CDATA["Invalid 'Party Identifier' value. In option F, subfield 1 (Party Identifier) used with the (Code)(Country Code)(Identifier) format: Country Code must be a valid ISO country code."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-50b-E</name>
						<fieldname>B.50b.Name_&amp;_Address</fieldname>
						<comment><![CDATA[FB-50b-E
 With option F - subfield 2 (Name and Address), should start with Number 1 to 8 and it should follow the line formatting rules as specified in the SWIFT spec (Error code(s): T56).]]></comment>
						<formula><![CDATA[Implies(B.F50b.FormatOption == 'F', Verify50FNmandAdrLines2($value, B.F50b.Party_Identifier))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T56</error-code>
						<actionmessage><![CDATA["Invalid 'Name and Address' value. With option F - subfield 2 (Name and Address), should start with Number 1 to 8 and it should follow the line formatting rules as specified in the SWIFT spec."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-50b-F</name>
						<fieldname>B.50b.Name_&amp;_Address</fieldname>
						<comment><![CDATA[FB-50b-F
Number 4 must be followed by a valid date in the format YYYYMMDD and this date, local to the sender, must not be later than the date on which the message is successfully sent to SWIFT (Error code(s): T50).
]]></comment>
						<formula><![CDATA[Implies(B.F50b.FormatOption == 'F', Verify50FNmandAdrDate($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T50</error-code>
						<actionmessage><![CDATA["Invalid 'Name and Address' value. Number 4 must be followed by a valid date in the format YYYYMMDD and this date, local to the sender, must not be later than the date on which the message is successfully sent to SWIFT."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-50b-G</name>
						<fieldname>B.50b.Name_&amp;_Address</fieldname>
						<comment><![CDATA[FB-50b-G
Numbers 3, 5, 6 and 7 must be followed by a valid ISO country code
(Error code(s): T73).]]></comment>
						<formula><![CDATA[Implies(B.F50b.FormatOption == 'F',Verify50FNmandAdrCtryCode2($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T73</error-code>
						<actionmessage><![CDATA["Invalid 'Name and Address' value. Numbers 3, 5, 6 and 7 must be followed by a valid ISO country code."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FA-50a-A</name>
						<fieldname>A.50a.Identifier_Code</fieldname>
						<comment><![CDATA[FA-50a-A
The BIC must be a BEI, i.e. must be of subtype BEID or TRCO or MCCO or SMDP or CORP (Error code E57).
]]></comment>
						<formula><![CDATA[return IsValidBEI($value)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E57</error-code>
						<actionmessage><![CDATA["The BIC must be a BEI, i.e. must be of subtype BEID or TRCO or MCCO or SMDP or CORP (Error code E57)."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FA-50b-H</name>
						<fieldname>A.50b.Identifier_Code</fieldname>
						<comment><![CDATA[FA-50b-H
The BIC must be a BEI, i.e. must be of subtype BEID or TRCO or MCCO or SMDP or CORP (Error code E57).
]]></comment>
						<formula><![CDATA[return IsValidBEI($value)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E57</error-code>
						<actionmessage><![CDATA["The BIC must be a BEI, i.e. must be of subtype BEID or TRCO or MCCO or SMDP or CORP (Error code E57)."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-50a-A</name>
						<fieldname>B.50a.Identifier_Code</fieldname>
						<comment><![CDATA[FB-50a-A
The BIC must be a BEI, i.e. must be of subtype BEID or TRCO or MCCO or SMDP or CORP (Error code E57).
]]></comment>
						<formula><![CDATA[return IsValidBEI($value)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E57</error-code>
						<actionmessage><![CDATA["The BIC must be a BEI, i.e. must be of subtype BEID or TRCO or MCCO or SMDP or CORP (Error code E57)."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-50b-H</name>
						<fieldname>B.50b.Identifier_Code</fieldname>
						<comment><![CDATA[FB-50b-H
The BIC must be a BEI, i.e. must be of subtype BEID or TRCO or MCCO or SMDP or CORP (Error code E57).]]></comment>
						<formula><![CDATA[return IsValidBEI($value)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E57</error-code>
						<actionmessage><![CDATA["The BIC must be a BEI, i.e. must be of subtype BEID or TRCO or MCCO or SMDP or CORP (Error code E57)."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-32B</name>
						<fieldname>B.32B.Currency</fieldname>
						<formula><![CDATA[!In($value, "XAU", "XAG", "XPD", "XPT")]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C08</error-code>
						<actionmessage><![CDATA["The codes XAU, XAG, XPD and XPT are not allowed, as these are codes for commodities for which the category 6 commodities messages must be used."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-59a-A</name>
						<fieldname>B.59a.Name_&amp;_Address_Details</fieldname>
						<formula><![CDATA[Implies(B.F59a.FormatOption == 'F', Verify59FNmandAdrDtlLines($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T56</error-code>
						<actionmessage><![CDATA["Invalid 'Name_and_Address_Details' value. With option F - subfield 2 (Name_and_Address_Details), should start with Number 1 to 3 and it should follow the line formatting rules as specified in the SWIFT spec for field 59F."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-59a-B</name>
						<fieldname>B.59a.Name_&amp;_Address_Details</fieldname>
						<formula><![CDATA[Implies(B.F59a.FormatOption == 'F', Verify59FNmandAdrDtlFormat($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T56</error-code>
						<actionmessage><![CDATA["Invalid 'Name and Address Details' value. With option F, subfield 2 (Name and Address Details), the following line format must be used for all lines :1!n/33x (Number)(Name and Address Details)."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-59a-C</name>
						<fieldname>B.59a.Name_&amp;_Address_Details</fieldname>
						<formula><![CDATA[Implies(B.F59a.FormatOption == 'F', Verify59FNmandAdrDtlCtryCode($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T73</error-code>
						<actionmessage><![CDATA["Invalid 'Name_and_Address_Details' value. Number 3 must be followed by a valid ISO country code."]]></actionmessage>
					</fieldvalidation>
				</fieldvalidations>
			</datavalidationrules>
			<tlrvalidationrules>
				<fieldvalidations>
				</fieldvalidations>
			</tlrvalidationrules>
		</validationrules>
		<elementproperties>
			<propertymap>
				<property name="codegen.java.properties">
					<value>
						<propertymap type="com.tplus.transform.design.PropertiesDef">
							<property name="Java Package Name" value="com.transform.external.%e"/>
							<property name="Jar Name" value="%c.jar"/>
							<property name="Manifest Entries" value="transformrt.jar swiftrt.jar swiftresources.jar"/>
							<property name="Data Source" value=""/>
						</propertymap>
					</value>
				</property>
			</propertymap>
		</elementproperties>
	</externalmessage>
	<externalmessage xsi:type="SwiftFormat" type="SwiftFormat" version="5.1.2" rulename="MT102_2016" formattype="SwiftFormat" >
		<description><![CDATA[This message is sent by or on behalf of the financial institution of the ordering customer(s) to another financial institution for payment to the beneficiary customer. 

It requests the Receiver to credit the beneficiary customer(s) directly or indirectly through a clearing mechanism or another financial institution, or to issue a cheque to the beneficiary. 

This message is used to convey multiple payment instructions between financial institutions for clean payments. Its use is subject to bilateral/multilateral agreements between Sender and Receiver. 

Amongst other things, these bilateral agreements cover the transaction amount limits, the currencies accepted and their settlement. The multiple payments checklist included below is recommended as a guide for institutions in the setup of their agreements.]]></description>
		<standard>SWIFT</standard>
		<standard-name>MT102</standard-name>
		<standard-version>SRG 2016</standard-version>
		<standard-release-qualifier>20160308</standard-release-qualifier>
		<standard-category>Customer Payments &amp; Cheques</standard-category>
		<standard-detailed-name>Multiple Customer Credit Transfer</standard-detailed-name>
		<version>1.0</version>
		<SwiftFields>
			<customizable>true</customizable>
			<modifiable>false</modifiable>
			<SwiftMessageType>User</SwiftMessageType>
			<max-length>10000</max-length>
			<HeaderAndTrailerType>SWIFT_INPUT_OUTPUT_HEADER</HeaderAndTrailerType>
			<Header>
				<fields>
					<field>
						<name>Basic Header</name>
						<description><![CDATA[The Basic Header is given in Block 1 of a SWIFT message and is the only header that appears on all messages. The Basic Header provides the fundamental reference for any particular message and is almost always automatically built by the CBT.
The Basic Header has the same format for both input and output messages. However, the information contained in the Basic Header is relative to the sender when the message is input but relative to the receiver when the same message is output.]]></description>
						<datatype>Section</datatype>
						<required>true</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Application Identifier</name>
								<description><![CDATA[The Application Identifier identifies the application within which the message is being sent or received. The available options are:

F = FIN All user-to-user, FIN system and FIN service messages 
A = GPA Most GPA system and service messages 
L = GPA Certain GPA service messages, for example, LOGIN, LAKs, ABORT 

These values are automatically assigned by the SWIFT system and the user's CBT, but the user should be aware of their existence and significance
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Service Identifier</name>
								<description><![CDATA[The Service Identifier consists of 2 numeric characters. It identifies the type of data that is being sent or received and, in doing so, whether the message which follows is one of the following:

a user-to-user message

a system message

a service message, for example, a session control command, such as SELECT, or a logical acknowledgement, such as ACK/SAK/UAK

Users will be primarily concerned with identifier '01' which applies to all GPA and FIN system and user-to-user messages. Other values include: '21' for message acknowledgements such as ACK/NAK, UAK/UNK, '03' for SELECT commands, and 
so on]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>2</length>
							</field>
							<field>
								<name>LT Identifier</name>
								<description><![CDATA[This 12-character SWIFT address, given in the Basic Header Block, is the address of the sending LT for input messages or of the receiving LT for output messages, and includes the Branch Code.

In the Basic Header, the LT Code within the LT Identifier is specific to the LT that has established the session in which the message is being transmitted, that is the sending LT for input messages or the receiving LT for output messages.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>12</length>
							</field>
							<field>
								<name>Session Number</name>
								<description><![CDATA[The Session Number identifies the session in which the message was transmitted. Within the Basic Header, the 4-digit Session Number is the user's current GPA or FIN Session Number.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Sequence Number</name>
								<description><![CDATA[The sequence number always consists of 6 digits. It is the ISN of the sender's current input session or the OSN of the receiver's current output session.

Note: The sequence number is not present in those messages with an Application Identifier of 'L' (for example LOGIN). The sequence number is, however, a key element in the processing of retrievals. Therefore, LOGINs and attempted LOGINs are not retrievable
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>6</length>
							</field>
						</fields>
					</field>
					<field>
						<name>Application Header Input</name>
						<description><![CDATA[The Application Header of a SWIFT message provides information about the message itself.

The Application Header is given in Block 2 of a SWIFT message. It differs according to whether the message is a GPA or a FIN message and whether the Application Header is part of an input or an output message.

]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Input/Output Identifier</name>
								<description><![CDATA[For an input message, the Input/Output Identifier consists of the single letter 'I'.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Message Type</name>
								<description><![CDATA[The Message Type consists of 3 digits which define the MT number of the message being input. The example used above is for an MT 100 Customer Transfer]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>3</length>
							</field>
							<field>
								<name>Receiver's Address</name>
								<description><![CDATA[This address is the 12-character SWIFT address of the receiver of the message, but with a LT Code of 'X'. It defines the destination to which the message should be sent.

The system will replace the 'X' with a specific LT Code on delivery of the message according to the delivery control exercised by the receiving user.

The Branch Code is mandatory and will be validated. The default of 'XXX' may be used, as in the example above.

Unless otherwise documented, system messages addressed to the SWIFT system itself should be addressed to SWFTXXXXXXXX.

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>12</length>
							</field>
							<field>
								<name>Message Priority</name>
								<description><![CDATA[This character, used within FIN Application Headers only, defines the priority with which a message is delivered. The possible values are:

S = System

U = Urgent

N = Normal

Message Priority 'S' must be used for user-to-system messages; for user-to-user messages either 'U' or 'N' can be used. In the absence of user-specified delivery criteria, system messages are always delivered first, followed by urgent priority messages and then normal priority messages.

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Delivery Monitoring</name>
								<description><![CDATA[Delivery monitoring options apply only to FIN user-to-user messages, and allow the sender of a message to request:

automatic MT 011 Delivery Notification once the message has been delivered

automatic MT 010 Non-Delivery Warning if a message is not delivered within the specified obsolescence period (see below)

both, or neither, options. This may be requested on an individual message basis.

The chosen option is expressed as a single digit:

1 = Non-Delivery Warning

2 = Delivery Notification

3 = Non-Delivery Warning and Delivery Notification. 
If the message has priority 'U' then the user must request delivery monitoring option '1' or '3'. If the message has priority 'N', the user can request delivery monitoring option '2', or, by leaving the option blank, no delivery monitoring.
]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>1</length>
							</field>
							<field>
								<name>Obsolescence Period</name>
								<description><![CDATA[The obsolescence period defines the period of time after which a Delayed Message (DLM) trailer is added to a FIN user-to-user message when the message is delivered. For urgent priority messages, it is also the period of time after which, if the message remains undelivered, a Non-Delivery Warning is generated.

The values for the obsolescence period are 003 (15 minutes) for 'U' priority, and 020 (100 minutes) for 'N' priority. An obsolescence period can only be specified when delivery monitoring has been requested (option 1 or 3 for urgent priority messages, option 2 for normal priority messages). If no delivery monitoring has been requested, and an obsolescence period is specified, the message will be NAKed with error code H25.

GPA input Application Headers are similar to their FIN equivalents except that GPA messages do not specify priority, delivery monitoring, nor obsolescence period.

]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>3</length>
							</field>
						</fields>
					</field>
					<field>
						<name>Application Header Output</name>
						<description><![CDATA[The Application Header of a SWIFT message provides information about the message itself.

The Application Header is given in Block 2 of a SWIFT message. It differs according to whether the message is a GPA or a FIN message and whether the Application Header is part of an input or an output message.

]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Input/Output Identifier</name>
								<description><![CDATA[For an input message, the Input/Output Identifier consists of the single letter 'I'.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Message Type</name>
								<description><![CDATA[Three digits indicating the Message Type.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>3</length>
							</field>
							<field>
								<name>Input Time</name>
								<description><![CDATA[The first occurrence of the time field contains the system time and date. This is the generation time in Greenwich Mean Time (GMT).
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Message Input Reference</name>
								<description><![CDATA[The input MIR.

If the message is generated by the system, the input time is the generation time (in GMT) and the input MIR is the system MIR

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>28</length>
							</field>
							<field>
								<name>Output Date</name>
								<description><![CDATA[The output date, local to the receiver.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>6</length>
							</field>
							<field>
								<name>Output Time</name>
								<description><![CDATA[The second occurrence of the time field contains the output time and date. This is in a time local to the receiver.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Message Priority</name>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
						</fields>
					</field>
					<field>
						<name>User Header</name>
						<description><![CDATA[The User Header is an optional header available within FIN for user-to-user messages only. It appears in Block 3 of a SWIFT message, and allows users to provide their own reference within the headers for a particular message.

A User Header can only be assigned by the sender of a message and, if assigned, will always appear on the output message copy. Relevant parts of the User Header will be repeated in related system messages and acknowledgements.

Block 3 may contain tag 113, defining banking priorities, and tag 108, which is a user reference. The user reference part of the User Header may be used as one of the selection criteria when retrieving a message.

The optional field tags 103 and 115 are also used in Block 3 for the FIN Copy service. The order of tags, when present, is 103, 113, 108 and 115.

An optional field tag 119 can be included in Block 3 of certain messages to specify that different validation rules are to be applied. Agreed code words in field 119 indicate what validation rules SWIFT will apply. If field 119 is present, it should appear after field 108
]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Service Identifier</name>
								<description><![CDATA[For any message which the user submits to a FIN Copy service, Block 3 requires an additional field 103 which contains a three-character Service Identifier unique to a specific FIN Copy service. By using a unique identifier it is possible to support access to multiple services within the same CBT.
]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>3</length>
								<tag>103</tag>
							</field>
							<field>
								<name>Banking Priority</name>
								<description><![CDATA[Assigned by the sender of the message.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>4</length>
								<tag>113</tag>
							</field>
							<field>
								<name>Message User Reference</name>
								<description><![CDATA[Assigned by the sender of the message.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>16</length>
								<tag>108</tag>
							</field>
							<field>
								<name>Validation Flag</name>
								<description><![CDATA[Indicates whether a special validation needs to be performed by FIN. The following are examples of the values this field may take. Please note that this list is subject to change:

ISITC indicates validation of ISITC Standards. Only to be used with MT 521 and MT 523.

REMIT identifies the presence of field 77T. Only to be used in MT 103.

RFDD indicates that the message is a request for direct debit. Only to be used in MT 104.

STP indicates that the message is validated according to straight through processing principles. Only to be used in MT 103.

]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>119</tag>
							</field>
							<field>
								<name>Balance checkpoint date and time</name>
								<description><![CDATA[This field contains the balance checkpoint date and time consisting of a date (YYMMDD) and a time (HHMMSS[ss], where 'ss' indicates hundredths of a second). The MI that is subscribed to MIRS will always copy this reference from field tag 13G of the last MT298/091 that it sent into the related MT 298/093 or MT 097 that it generates. ]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>423</tag>
							</field>
							<field>
								<name>Message Input Reference</name>
								<description><![CDATA[This field contains the MIR of the payment message that is related to the notification messages in which this field is present. The MI that is subscribed to MIRS will copy it from the received payment message. In a FINCopy scenario, this field must contain the MIR of the related MT 096]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>106</tag>
							</field>
							<field>
								<name>Related Reference</name>
								<description><![CDATA[This field contains the reference of the payment that is related to the notification messages in which this field is present. The payment itself was not the result of a FIN message. The value of this field must correspond to the related reference (field 21) in the MT298/093. The format of field 424 is 16x.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>424</tag>
							</field>
							<field>
								<name>Service Type Identifier</name>
								<description><![CDATA[This field identifies the applicable global payment service type. The format of field 111 is 3!n.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>111</tag>
							</field>
							<field>
								<name>Unique End-To-End Transaction Reference</name>
								<description><![CDATA[This field provides an end-to-end reference across a payment transaction. The format of field 121 is 36!x.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>121</tag>
							</field>
							<field>
								<name>Addressee Information</name>
								<description><![CDATA[Tag 115 is only valid for output messages. Information from Central Institution to the receiver of payment message. Information is input in the MT 097 FIN Copy Message Authorisation/Refusal Notification in Y-Copy mode.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>115</tag>
							</field>
							<field>
								<name>Payment Release Information Receiver (FINInform Services)</name>
								<description><![CDATA[Tag 165 is only valid for output messages. This field contains information from the server destination to the receiver of payment message. It is only available for use in FINInform services that operate in Y-copy mode.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>165</tag>
							</field>
							<field>
								<name>Receiver Information</name>
								<description><![CDATA[Tag 433 is only valid for output messages. The screening service inputs information in the MT 097 FINCopy Message Authorisation/Refusal Notification, in Y-Copy mode. FINCopy copies the information to the receiver of the screened message.
				    The following values can be present in this field:
				      AOK: message automatically released by screening service
				      FPO: compliance officer has flagged the screening result as false positive
				      NOK: compliance officer has flagged the screened message as suspect
				    The code word can optionally be followed by additional information (up to 20 characters from the x character set).]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>433</tag>
							</field>
						</fields>
					</field>
				</fields>
			</Header>
			<Data>
				<Fields>
					<SwiftSequence Name="A">
						<Name>A</Name>
						<Description><![CDATA[General Information]]></Description>
						<Mandatory>true</Mandatory>
						<Repeating>false</Repeating>
						<Fields>
							<SwiftField Name="20">
								<SwiftFieldDef Name="20">
									<Generic>false</Generic>
									<Description><![CDATA[Reference]]></Description>
									<Option Name="">
										<Format><![CDATA[16x]]></Format>
										<Specification><![CDATA[(Reference)]]></Specification>
										<Description><![CDATA[File Reference]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options> </Options>
								<Validations>
									<SubField Name="Reference">
										<Validation>
											<Options> </Options>
											<ErrorCode>T26</ErrorCode>
											<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive  slashes '//' (Error code(s): T26).]]></Comment>
											<ValidationPattern xsi:type="T26" Type="T26">
												<Type>T26</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="23">
								<SwiftFieldDef Name="23">
									<Generic>false</Generic>
									<Description><![CDATA[Bank operation Code]]></Description>
									<Option Name="">
										<Format><![CDATA[16x]]></Format>
										<Specification><![CDATA[(Type of Operation)]]></Specification>
										<Description><![CDATA[Bank Operation Code]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options> </Options>
							</SwiftField>
							<SwiftField Name="51A">
								<SwiftFieldDef Name="51">
									<Generic>false</Generic>
									<Option Name="A">
										<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
										<Description><![CDATA[Sending Institution]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>A</Options>
								<Validations>
									<SubField Name="CreditDebit">
										<Validation>
											<Options>A, B</Options>
											<ErrorCode>T51</ErrorCode>
											<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="C">
														<DetailedName>Credit</DetailedName>
													</Code>
													<Code Name="D">
														<DetailedName>Debit</DetailedName>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="50a">
								<SwiftFieldDef Name="50">
									<Generic>false</Generic>
									<Option Name="A">
										<Format><![CDATA[([/34xCRLF])(4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(Account)(Identifier Code)]]></Specification>
										<Description><![CDATA[Ordering Customer]]></Description>
									</Option>
									<Option Name="F">
										<Format><![CDATA[35x(CRLF4*35x)]]></Format>
										<Specification><![CDATA[(Party Identifier)(Name & Address)]]></Specification>
										<Description><![CDATA[Ordering Customer]]></Description>
									</Option>
									<Option Name="K">
										<Format><![CDATA[([/34xCRLF])(4*35x)]]></Format>
										<Specification><![CDATA[(Account)(Name & Address)]]></Specification>
										<Description><![CDATA[Ordering Customer]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>K, A, F</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27, T28, T29, T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="52a">
								<SwiftFieldDef Name="52">
									<Generic>false</Generic>
									<Option Name="A">
										<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
										<Description><![CDATA[Ordering Institution]]></Description>
									</Option>
									<Option Name="B">
										<Format><![CDATA[/1!a([/34x])(CRLF35x) | /1!a[/34x] | [/34xCRLF]35x | /34x]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Location) | (CreditDebit)(Party Identifier) | (Party Identifier)(Location) | (Party Identifier)]]></Specification>
										<Description><![CDATA[Sender of Cash Letter]]></Description>
									</Option>
									<Option Name="C">
										<Format><![CDATA[/34x]]></Format>
										<Specification><![CDATA[(Party Identifier)]]></Specification>
										<Description><![CDATA[Remitting Bank]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>A, B, C</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27, T28, T29, T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
										<Validation>
											<Options>A</Options>
											<ErrorCode>C05</ErrorCode>
											<Comment><![CDATA[Identifier Code must not be a BEI, ie must not be of subtype BEID, MCCO, TESP or TRCO]]></Comment>
											<ValidationPattern xsi:type="C05" Type="C05">
												<Type>C05</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="CreditDebit">
										<Validation>
											<Options>A, B</Options>
											<ErrorCode>T51</ErrorCode>
											<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="C">
														<DetailedName>Credit</DetailedName>
													</Code>
													<Code Name="D">
														<DetailedName>Debit</DetailedName>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="26T">
								<SwiftFieldDef Name="26">
									<Generic>false</Generic>
									<Option Name="T">
										<Format><![CDATA[3!c]]></Format>
										<Specification><![CDATA[(Type)]]></Specification>
										<Description><![CDATA[Transaction Type Code]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>T</Options>
							</SwiftField>
							<SwiftField Name="77B">
								<SwiftFieldDef Name="77">
									<Generic>false</Generic>
									<Option Name="B">
										<Format><![CDATA[3*35x]]></Format>
										<Specification><![CDATA[(Narrative)]]></Specification>
										<Description><![CDATA[Regulatory Reporting]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>B</Options>
							</SwiftField>
							<SwiftField Name="71A">
								<SwiftFieldDef Name="71">
									<Generic>false</Generic>
									<Option Name="A">
										<Format><![CDATA[3!a]]></Format>
										<Specification><![CDATA[(Code)]]></Specification>
										<Description><![CDATA[Details of Charges]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>A</Options>
								<Validations>
									<SubField Name="Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T08</ErrorCode>
											<Comment><![CDATA[One of the following codes must be used (Error code(s): T08):]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="BEN">
														<Description>All transaction charges are to be borne by the beneficiary customer.</Description>
													</Code>
													<Code Name="OUR">
														<Description>All transaction charges are to be borne by the ordering customer.</Description>
													</Code>
													<Code Name="SHA">
														<Description>Transaction charges on the Sender&#8217;s side are to be borne by the ordering customer and transaction charges on the Receiver&#8217;s side are to be borne by the beneficiary customer.</Description>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="36">
								<SwiftFieldDef Name="36">
									<Generic>false</Generic>
									<Description><![CDATA[Exchande Rate]]></Description>
									<Option Name="">
										<Format><![CDATA[12d]]></Format>
										<Specification><![CDATA[(Rate)]]></Specification>
										<Description><![CDATA[Exchange Rate]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options> </Options>
							</SwiftField>
						</Fields>
					</SwiftSequence>
					<SwiftSequence Name="B">
						<Name>B</Name>
						<Description><![CDATA[Transaction Details]]></Description>
						<Mandatory>true</Mandatory>
						<Repeating>true</Repeating>
						<Fields>
							<SwiftField Name="21">
								<SwiftFieldDef Name="21">
									<Generic>false</Generic>
									<Option Name="">
										<Format><![CDATA[16x]]></Format>
										<Specification><![CDATA[(Transaction Reference)]]></Specification>
										<Description><![CDATA[Transaction Reference]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options> </Options>
								<Validations>
									<SubField Name="Transaction_Reference">
										<Validation>
											<Options> </Options>
											<ErrorCode>T26</ErrorCode>
											<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive slashes '//'  (Error code(s): T26).]]></Comment>
											<ValidationPattern xsi:type="T26" Type="T26">
												<Type>T26</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="32B">
								<SwiftFieldDef Name="32">
									<Generic>false</Generic>
									<Option Name="B">
										<Format><![CDATA[3!a15d]]></Format>
										<Specification><![CDATA[(Currency) (Amount)]]></Specification>
										<Description><![CDATA[Transaction Amount]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options>B</Options>
								<Validations>
									<SubField Name="Currency">
										<Validation>
											<Options>B</Options>
											<ErrorCode>T52</ErrorCode>
											<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52).]]></Comment>
											<ValidationPattern xsi:type="Currency_Code" Type="Currency Code">
												<Type>Currency Code</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="Amount">
										<Validation>
											<Options>B</Options>
											<ErrorCode>C03</ErrorCode>
											<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency.]]></Comment>
											<ValidationPattern xsi:type="Decimal" Type="Decimal">
												<Type>Decimal</Type>
												<currency-field>Currency</currency-field>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="50a">
								<SwiftFieldDef Name="50">
									<Generic>false</Generic>
									<Option Name="A">
										<Format><![CDATA[([/34xCRLF])(4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(Account)(Identifier Code)]]></Specification>
										<Description><![CDATA[Ordering Customer]]></Description>
									</Option>
									<Option Name="F">
										<Format><![CDATA[35x(CRLF4*35x)]]></Format>
										<Specification><![CDATA[(Party Identifier)(Name & Address)]]></Specification>
										<Description><![CDATA[Ordering Customer]]></Description>
									</Option>
									<Option Name="K">
										<Format><![CDATA[([/34xCRLF])(4*35x)]]></Format>
										<Specification><![CDATA[(Account)(Name & Address)]]></Specification>
										<Description><![CDATA[Ordering Customer]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>A, K, F</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27, T28, T29, T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="52a">
								<SwiftFieldDef Name="52">
									<Generic>false</Generic>
									<Option Name="A">
										<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
										<Description><![CDATA[Ordering Institution]]></Description>
									</Option>
									<Option Name="B">
										<Format><![CDATA[/1!a([/34x])(CRLF35x) | /1!a[/34x] | [/34xCRLF]35x | /34x]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Location) | (CreditDebit)(Party Identifier) | (Party Identifier)(Location) | (Party Identifier)]]></Specification>
										<Description><![CDATA[Sender of Cash Letter]]></Description>
									</Option>
									<Option Name="C">
										<Format><![CDATA[/34x]]></Format>
										<Specification><![CDATA[(Party Identifier)]]></Specification>
										<Description><![CDATA[Remitting Bank]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>A, B, C</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27, T28, T29, T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
										<Validation>
											<Options>A</Options>
											<ErrorCode>C05</ErrorCode>
											<Comment><![CDATA[Identifier Code must not be a BEI, ie must not be of subtype BEID, MCCO, TESP or TRCO]]></Comment>
											<ValidationPattern xsi:type="C05" Type="C05">
												<Type>C05</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="CreditDebit">
										<Validation>
											<Options>A, B</Options>
											<ErrorCode>T51</ErrorCode>
											<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="C">
														<DetailedName>Credit</DetailedName>
													</Code>
													<Code Name="D">
														<DetailedName>Debit</DetailedName>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="57a">
								<SwiftFieldDef Name="57">
									<Generic>false</Generic>
									<Description><![CDATA[Account With Institution]]></Description>
									<Option Name="A">
										<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
										<Description><![CDATA[Account With Institution]]></Description>
									</Option>
									<Option Name="C">
										<Format><![CDATA[/34x]]></Format>
										<Specification><![CDATA[(Party Identifier)]]></Specification>
										<Description><![CDATA[Account With Institution]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>A, C</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27, T28, T29, T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
										<Validation>
											<Options>A</Options>
											<ErrorCode>C05</ErrorCode>
											<Comment><![CDATA[Identifier Code must not be a BEI, ie must not be of subtype BEID, MCCO, TESP or TRCO]]></Comment>
											<ValidationPattern xsi:type="C05" Type="C05">
												<Type>C05</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="CreditDebit">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T51</ErrorCode>
											<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="C">
														<DetailedName>Credit</DetailedName>
													</Code>
													<Code Name="D">
														<DetailedName>Debit</DetailedName>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="59a">
								<SwiftFieldDef Name="59">
									<Generic>false</Generic>
									<Description><![CDATA[Beneficiary Customer]]></Description>
									<Option Name="">
										<Format><![CDATA[[/34xCRLF]4*35x]]></Format>
										<Specification><![CDATA[(Account)(Name & Address)]]></Specification>
										<Description><![CDATA[Beneficiary Customer]]></Description>
									</Option>
									<Option Name="A">
										<Format><![CDATA[([/34xCRLF])(4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(Account)(Identifier Code)]]></Specification>
										<Description><![CDATA[Beneficiary Customer]]></Description>
									</Option>
									<Option Name="F">
										<Format><![CDATA[[/34xCRLF]4*35x]]></Format>
										<Specification><![CDATA[(Account)(Name & Address Details)]]></Specification>
										<Description><![CDATA[Beneficiary Customer]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options> , A, F</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27, T28, T29, T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="70">
								<SwiftFieldDef Name="70">
									<Generic>false</Generic>
									<Description><![CDATA[Narrative]]></Description>
									<Option Name="">
										<Format><![CDATA[4*35x]]></Format>
										<Specification><![CDATA[(Narrative)]]></Specification>
										<Description><![CDATA[Remittance Information]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options> </Options>
							</SwiftField>
							<SwiftField Name="26T">
								<SwiftFieldDef Name="26">
									<Generic>false</Generic>
									<Option Name="T">
										<Format><![CDATA[3!c]]></Format>
										<Specification><![CDATA[(Type)]]></Specification>
										<Description><![CDATA[Transaction Type Code]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>T</Options>
							</SwiftField>
							<SwiftField Name="77B">
								<SwiftFieldDef Name="77">
									<Generic>false</Generic>
									<Option Name="B">
										<Format><![CDATA[3*35x]]></Format>
										<Specification><![CDATA[(Narrative)]]></Specification>
										<Description><![CDATA[Regulatory Reporting]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>B</Options>
							</SwiftField>
							<SwiftField Name="33B">
								<SwiftFieldDef Name="33">
									<Generic>false</Generic>
									<Option Name="B">
										<Format><![CDATA[3!a15d]]></Format>
										<Specification><![CDATA[(Currency) (Amount)]]></Specification>
										<Description><![CDATA[Currency/Instructed Amount]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>B</Options>
								<Validations>
									<SubField Name="Currency">
										<Validation>
											<Options>B</Options>
											<ErrorCode>T52</ErrorCode>
											<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52).]]></Comment>
											<ValidationPattern xsi:type="Currency_Code" Type="Currency Code">
												<Type>Currency Code</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="Amount">
										<Validation>
											<Options>B</Options>
											<ErrorCode>C03</ErrorCode>
											<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency.]]></Comment>
											<ValidationPattern xsi:type="Decimal" Type="Decimal">
												<Type>Decimal</Type>
												<currency-field>Currency</currency-field>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="71A">
								<SwiftFieldDef Name="71">
									<Generic>false</Generic>
									<Option Name="A">
										<Format><![CDATA[3!a]]></Format>
										<Specification><![CDATA[(Code)]]></Specification>
										<Description><![CDATA[Details of Charges]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>A</Options>
								<Validations>
									<SubField Name="Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T08</ErrorCode>
											<Comment><![CDATA[One of the following codes must be used (Error code(s): T08):]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="BEN">
														<Description>The transaction charges are to be borne by the beneficiary customer.</Description>
													</Code>
													<Code Name="OUR">
														<Description>The transaction charges are to be borne by the ordering customer.</Description>
													</Code>
													<Code Name="SHA">
														<Description>The transaction charges on the Sender&#8217;s side are to be borne by the ordering customer and the transaction charges on the Receiver&#8217;s side are to be borne by the beneficiary customer.</Description>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="71F">
								<SwiftFieldDef Name="71">
									<Generic>false</Generic>
									<Option Name="F">
										<Format><![CDATA[3!a15d]]></Format>
										<Specification><![CDATA[(Currency) (Amount)]]></Specification>
										<Description><![CDATA[Sender's Charges]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>true</Repeating>
								<Presence>O</Presence>
								<Options>F</Options>
								<Validations>
									<SubField Name="Currency">
										<Validation>
											<Options>F</Options>
											<ErrorCode>T52</ErrorCode>
											<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52).]]></Comment>
											<ValidationPattern xsi:type="Currency_Code" Type="Currency Code">
												<Type>Currency Code</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="Amount">
										<Validation>
											<Options>F</Options>
											<ErrorCode>C03</ErrorCode>
											<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency.]]></Comment>
											<ValidationPattern xsi:type="Decimal" Type="Decimal">
												<Type>Decimal</Type>
												<currency-field>Currency</currency-field>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="71G">
								<SwiftFieldDef Name="71">
									<Generic>false</Generic>
									<Option Name="G">
										<Format><![CDATA[3!a15d]]></Format>
										<Specification><![CDATA[(Currency) (Amount)]]></Specification>
										<Description><![CDATA[Receiver's Charges]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>G</Options>
								<Validations>
									<SubField Name="Currency">
										<Validation>
											<Options>G</Options>
											<ErrorCode>T52</ErrorCode>
											<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52).]]></Comment>
											<ValidationPattern xsi:type="Currency_Code" Type="Currency Code">
												<Type>Currency Code</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="Amount">
										<Validation>
											<Options>G</Options>
											<ErrorCode>C03</ErrorCode>
											<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency.]]></Comment>
											<ValidationPattern xsi:type="Decimal" Type="Decimal">
												<Type>Decimal</Type>
												<currency-field>Currency</currency-field>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="36">
								<SwiftFieldDef Name="36">
									<Generic>false</Generic>
									<Description><![CDATA[Exchande Rate]]></Description>
									<Option Name="">
										<Format><![CDATA[12d]]></Format>
										<Specification><![CDATA[(Rate)]]></Specification>
										<Description><![CDATA[Exchange Rate]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options> </Options>
							</SwiftField>
						</Fields>
					</SwiftSequence>
					<SwiftSequence Name="C">
						<Name>C</Name>
						<Description><![CDATA[Settlement Details]]></Description>
						<Mandatory>true</Mandatory>
						<Repeating>false</Repeating>
						<Fields>
							<SwiftField Name="32A">
								<SwiftFieldDef Name="32">
									<Generic>false</Generic>
									<Option Name="A">
										<Format><![CDATA[6!n3!a15d]]></Format>
										<Specification><![CDATA[(Date) (Currency) (Amount)]]></Specification>
										<Description><![CDATA[Value Date, Currency Code, Amount]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options>A</Options>
								<Validations>
									<SubField Name="Date">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T50</ErrorCode>
											<Comment><![CDATA[Date must be a valid date expressed as YYMMDD (Error code(s): T50).]]></Comment>
											<ValidationPattern xsi:type="DATE" Type="DATE">
												<Type>DATE</Type>
												<Format>yyMMdd</Format>
												<value-date>true</value-date>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="Currency">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T52</ErrorCode>
											<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52).]]></Comment>
											<ValidationPattern xsi:type="Currency_Code" Type="Currency Code">
												<Type>Currency Code</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="Amount">
										<Validation>
											<Options>A</Options>
											<ErrorCode>C03</ErrorCode>
											<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency.]]></Comment>
											<ValidationPattern xsi:type="Decimal" Type="Decimal">
												<Type>Decimal</Type>
												<currency-field>Currency</currency-field>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="19">
								<SwiftFieldDef Name="19">
									<Generic>false</Generic>
									<Description><![CDATA[Amount]]></Description>
									<Option Name="">
										<Format><![CDATA[17d]]></Format>
										<Specification><![CDATA[(Amount)]]></Specification>
										<Description><![CDATA[Sum of Amounts ]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options> </Options>
							</SwiftField>
							<SwiftField Name="71G">
								<SwiftFieldDef Name="71">
									<Generic>false</Generic>
									<Option Name="G">
										<Format><![CDATA[3!a15d]]></Format>
										<Specification><![CDATA[(Currency) (Amount)]]></Specification>
										<Description><![CDATA[Sum of Receiver's Charges]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>G</Options>
								<Validations>
									<SubField Name="Currency">
										<Validation>
											<Options>G</Options>
											<ErrorCode>T52</ErrorCode>
											<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52).]]></Comment>
											<ValidationPattern xsi:type="Currency_Code" Type="Currency Code">
												<Type>Currency Code</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="Amount">
										<Validation>
											<Options>G</Options>
											<ErrorCode>C03</ErrorCode>
											<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency.]]></Comment>
											<ValidationPattern xsi:type="Decimal" Type="Decimal">
												<Type>Decimal</Type>
												<currency-field>Currency</currency-field>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="13C">
								<SwiftFieldDef Name="13">
									<Generic>false</Generic>
									<Option Name="C">
										<Format><![CDATA[/8c/4!n1!x4!n]]></Format>
										<Specification><![CDATA[(Code)(Time indication)(Sign)(Time offset) ]]></Specification>
										<Description><![CDATA[Time Indication]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>true</Repeating>
								<Presence>O</Presence>
								<Options>C</Options>
								<Validations>
									<SubField Name="Time_indication">
										<Validation>
											<Options>C</Options>
											<ErrorCode>T38</ErrorCode>
											<Comment><![CDATA[Time indication must be a valid time expressed as HHMM (Error code(s): T38).]]></Comment>
											<ValidationPattern xsi:type="DATE" Type="DATE">
												<Type>DATE</Type>
												<Format>HHmm</Format>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="Time_offset">
										<Validation>
											<Options>C</Options>
											<ErrorCode>T16</ErrorCode>
											<Comment><![CDATA[Time offset is expressed as HHMM, where the hour component, ie, 'HH', must be in the range of 00 through 13,and the minute component, ie, 'MM' must be in the range of 00 through 59. Any 'HH' or 'MM' component outside of these range checks will be disallowed.]]></Comment>
											<ValidationPattern xsi:type="Time_Offset" Type="Time Offset">
												<Type>Time Offset</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="Sign">
										<Validation>
											<Options>C</Options>
											<ErrorCode>T15</ErrorCode>
											<Comment><![CDATA[Sign is either "+" or "-" (Error code(s): T15).]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="+">
													</Code>
													<Code Name="-">
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="53a">
								<SwiftFieldDef Name="53">
									<Generic>false</Generic>
									<Option Name="A">
										<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
										<Description><![CDATA[Sender's Correspondent]]></Description>
									</Option>
									<Option Name="C">
										<Format><![CDATA[/34x]]></Format>
										<Specification><![CDATA[(Account)]]></Specification>
										<Description><![CDATA[Account for Payment]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>A, C</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27, T28, T29, T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
										<Validation>
											<Options>A</Options>
											<ErrorCode>C05</ErrorCode>
											<Comment><![CDATA[Identifier Code must not be a BEI, ie must not be of subtype BEID, MCCO, TESP or TRCO]]></Comment>
											<ValidationPattern xsi:type="C05" Type="C05">
												<Type>C05</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="CreditDebit">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T51</ErrorCode>
											<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="C">
														<DetailedName>Credit</DetailedName>
													</Code>
													<Code Name="D">
														<DetailedName>Debit</DetailedName>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="54A">
								<SwiftFieldDef Name="54">
									<Generic>false</Generic>
									<Option Name="A">
										<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
										<Description><![CDATA[Receiver's Correspondent]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>A</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27, T28, T29, T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
										<Validation>
											<Options>A</Options>
											<ErrorCode>C05</ErrorCode>
											<Comment><![CDATA[Identifier Code must not be a BEI, ie must not be of subtype BEID, MCCO, TESP or TRCO]]></Comment>
											<ValidationPattern xsi:type="C05" Type="C05">
												<Type>C05</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="CreditDebit">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T51</ErrorCode>
											<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="C">
														<DetailedName>Credit</DetailedName>
													</Code>
													<Code Name="D">
														<DetailedName>Debit</DetailedName>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="72">
								<SwiftFieldDef Name="72">
									<Generic>false</Generic>
									<Option Name="">
										<Format><![CDATA[6*35x]]></Format>
										<Specification><![CDATA[(Narrative - Structured Format)]]></Specification>
										<Description><![CDATA[Sender to Receiver Information]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options> </Options>
							</SwiftField>
						</Fields>
					</SwiftSequence>
				</Fields>
			</Data>
			<Trailer>
				<fields>
					<field>
						<name>Message Authentication Code</name>
						<description><![CDATA[Allows authentication by the receiving user. It is followed by an authentication result.

This trailer is mandatory for most user-to-user message categories within the FIN application. When the FIN Copy Service is used a PAC trailer, if present, follows the MAC trailer.

Format:

{MAC:<authentication-result>}

where <authentication-result> = 8!h

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>8</length>
						<tag>MAC</tag>
					</field>
					<field>
						<name>Proprietary Authentication Code</name>
						<description><![CDATA[The PAC is used within the FIN Copy service only, when using the double authentication option. The PAC is included in Block 5 of FIN user-to-user messages, immediately after the MAC trailer, if present.

This is calculated on the extracted fields of Block 4 of the message, the value of field 115, if present, and the <authentication-result> of the MAC trailer for Copy Services with double authentication.

Thus, the end-of-block indicator (CrLf-) is included in the PAC calculation, and the fields are defined as follows:

The first three characters are CrLf:

The field and the delimiter are present, that is, 32A:, 20:, and so on.

All subfields and their delimiters are present.

Format:

{PAC:[<authentication-result>]}

where <authentication-result> is mandatory on input messages only and <authentication-result> = 8!h

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>8</length>
						<tag>PAC</tag>
					</field>
					<field>
						<name>Checksum</name>
						<description><![CDATA[The checksum is computed based on the receiver's address (12 characters, with 9th character replaced by X) plus the Text Block. This trailer allows the system and the CBT to check that messages have not been corrupted due to a system malfunction or an undetected transmission error.

Format:

{CHK:<checksum-result>}

where <checksum-result> = 12!h

Note: This trailer is mandatory for FIN and GPA messages (Service Identifier 01).

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>12</length>
						<tag>CHK</tag>
					</field>
					<field>
						<name>System Originated Message</name>
						<description><![CDATA[The system message or service message which is generated by a system PLT has a SYS trailer. All solicited system messages (Service Identifier 01) contain the MIR of the request and may also contain the time.

Format:

{SYS:[<time><mir>]}

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>SYS</tag>
					</field>
					<field>
						<name>Test And Training Message</name>
						<description><![CDATA[Mandatory for FIN and GPA messages (Service Identifier 01) sent by, or delivered to, a Test & Training Logical Terminal (LT). This trailer has a tag only, and no value.

Format:

{TNG:}
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>0</length>
						<tag>TNG</tag>
					</field>
					<field>
						<name>Possible Duplicate Emission</name>
						<description><![CDATA[This trailer is used by the destination of the message. It only applies to FIN user-to-user messages (Service Identifier 01, message categories reserved for banking messages). There can be multiple PDEs. The system does not verify the order nor restrict the number (except for maximum message length).

Correctly formatted PDE trailers applied to user-to-system messages are accepted by the system, but not processed. This means that the system does not check to see if the original message exists. Therefore, a retrieval request sent with a PDE trailer may be processed twice if the original message was received by the system.

Format:

{PDE:[<time><mir>]}

where <time><mir> refers to the emission of the previous possible issue.

Note: It can be added automatically by a CBT or manually by a user. It may be followed by the MIR and the time of its previous possible messages.

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>PDE</tag>
					</field>
					<field>
						<name>Delayed Message</name>
						<description><![CDATA[This trailer is added to all FIN user-to-user output messages that have exceeded their obsolescence period. If this trailer appears in GPA or FIN system messages, it must be ignored. This trailer has a tag only, and no value.

The Obsolescence Period is:

U = 15 minutes

N = 100 minutes

Format:

{DLM:}

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>0</length>
						<tag>DLM</tag>
					</field>
					<field>
						<name>Possible Duplicate Message</name>
						<description><![CDATA[Added by the system to any output message (GPA and FIN Service Identifier 01) being resent because a prior delivery may be invalid. If a system PLT receives a report request with a PDM, the response has a plain PDM (without the optional delivery reference). Other PDMs may be added as a result of unsuccessful delivery attempts to the user. 
Format:
{PDM:[<time><mor>]}
where <time> and the Message Output Reference <mor> are that of the previous attempt.
Note: For messages recovered after a system failure, the optional fields may not be present.
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>PDM</tag>
					</field>
					<field>
						<name>Message Reference</name>
						<description><![CDATA[The MRF trailer is used to specify the message reference of the original user message in MT 096 FIN Copy to Central Institution Messages.
Format:
{MRF:<date><full-time><mir>}
where <mir> is that of the original user message whose fields are copied in the MT 096 FIN Copy to Central Institution Message.
Note: The MRF is specific to FIN Copy. The MRF trailer is automatically generated in the MT 096 FIN Copy to Central Institution Message and can only be reused in field 109 of the MT 096 FIN Copy to Central Institution Message to identify the MT 096 to which the MT 097 is a response. The format of the MRF is subject to change.
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>MRF</tag>
					</field>
				</fields>
			</Trailer>
		</SwiftFields>
		<validationrules name="Default">
			<hdrvalidationrules>
				<fieldvalidations>
					<fieldvalidation>
						<name>U09</name>
						<formula><![CDATA[if($this.Header.GetFieldIndex("User_Header") != -1) {
    def userHeader = $this.Header.GetSection("User_Header");
    if(userHeader.$size > 0 && userHeader[0].IsNotNull("Validation_Flag")) {
        return false;
    }
}
return true;
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U09</error-code>
						<actionmessage><![CDATA["User has used tag 119 in a message that is not a candidate for special processing"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>U03</name>
						<fieldname>User Header</fieldname>
						<formula><![CDATA[Iff(IsNotNull(User_Header.Service_Type_Identifier), 
    IsNotNull(User_Header.Unique_End_To_End_Transaction_Reference))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U03</error-code>
						<actionmessage><![CDATA["When populating an end-to-end reference, both fields 111 and 121 must be populated: a message that contains only one of these two fields will not be accepted by FIN."]]></actionmessage>
					</fieldvalidation>
				</fieldvalidations>
			</hdrvalidationrules>
			<datavalidationrules>
				<fieldvalidations>
					<fieldvalidation>
						<name>FA-51A-A</name>
						<comment><![CDATA["Field 51A is only valid in IFT."]]></comment>
						<formula><![CDATA[A[0].F51A.$size == 0]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D63</error-code>
						<actionmessage><![CDATA["Field 51A is only valid in IFT."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FC-19-A</name>
						<fieldname>C.19.Amount</fieldname>
						<comment><![CDATA["The number of digits following the comma must not exceed the maximum number allowed for the currency specified in field 32A."]]></comment>
						<formula><![CDATA[isValidDecimals(C.F32A[0].Currency, $value)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C03</error-code>
						<actionmessage><![CDATA["The number of digits following the comma must not exceed the maximum number allowed for the currency specified in field 32A."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FC-71G-A</name>
						<fieldname>C.71G.Amount</fieldname>
						<comment><![CDATA["If field 71G is present in sequence C, the amount must not equal '0'."]]></comment>
						<formula><![CDATA[$value > 0]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D57</error-code>
						<actionmessage><![CDATA["If field 71G is present in sequence C, the amount must not equal '0'."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FC-72-A</name>
						<fieldname>C.72.Narrative_-_Structured_Format</fieldname>
						<comment><![CDATA["The first line of field 72 should be of the following format: /8c/[additional information]. The remaining lines (2 - 6) should be of the following format: [//continuation of additional information] or [/8c/[additional information]]."]]></comment>
						<formula><![CDATA[VerifyField72NarrativeText($value)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T32</error-code>
						<actionmessage><![CDATA["The first line of field 72 should be of the following format: /8c/[additional information]. The remaining lines (2 - 6) should be of the following format: [//continuation of additional information] or [/8c/[additional information]]."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FA-50a-A</name>
						<fieldname>A.50a.Party_Identifier</fieldname>
						<comment><![CDATA[FA-50a-A
With option F, subfield 1 (Party Identifier), one of the following line formats must be used (Error code(s): T54):
Line format 1 :/34x (Account)
Line format 2 :4!a/2!a/27x (Code)(Country Code)(Identifier)]]></comment>
						<formula><![CDATA[Implies(A.F50a.FormatOption == 'F', Verify50FPartyIdFormat($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T54</error-code>
						<actionmessage><![CDATA["Invalid 'Party Identifier' value. One of the following line formats must be used: /34x (Account) or 4!a/2!a/27x (Code)(Country Code)(Identifier)"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FA-50a-B</name>
						<fieldname>A.50a.Party_Identifier</fieldname>
						<comment><![CDATA[FA-50a-B
In option F, when subfield 1 Party Identifier is used with the (Code)(Country Code)(Identifier) format, one of the following codes must be used (Error code(s): T55): ARNU, CCPT, CUST, DRLC, EMPL, NIDN, SOSE and TXID."
]]></comment>
						<formula><![CDATA[Implies(A.F50a.FormatOption == 'F', Verify50FPartyIdCode($value))
/* get the code from party identifier if format is 4!a/2!a/27x */   ]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T55</error-code>
						<actionmessage><![CDATA["Invalid 'Party Identifier' value. When 'Party Identifier' is used with the format (Code)(Country Code)(Identifier), one of following codes must be used: ARNU, CCPT, CUST, DRLC, EMPL, NIDN, SOSE and TXID."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FA-50a-C</name>
						<fieldname>A.50a.Party_Identifier</fieldname>
						<comment><![CDATA[FA-50a-D
In option F, subfield 1 (Party Identifier) used with the (Code)(Country Code)(Identifier) format: Country Code must be a valid ISO country code (Error code(s): T73).
]]></comment>
						<formula><![CDATA[Implies(A.F50a.FormatOption == 'F', Verify50FPartyIdCountryCode($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T73</error-code>
						<actionmessage><![CDATA["Invalid 'Party Identifier' value. In option F, subfield 1 (Party Identifier) used with the (Code)(Country Code)(Identifier) format: Country Code must be a valid ISO country code."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FA-50a-D</name>
						<fieldname>A.50a.Name_&amp;_Address</fieldname>
						<comment><![CDATA[FA-50a-C
With option F, subfield 2 (Name and Address), the following line format must be used for all lines: 1!n/33x (Number)(Details). (Error code(s): T54).]]></comment>
						<formula><![CDATA[Implies(A.F50a.FormatOption == 'F', Verify50FNmandAdrFormat($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T54</error-code>
						<actionmessage><![CDATA["Invalid 'Name and Address' value. With option F, subfield 2 (Name and Address), the following line format must be used for all lines :1!n/33x (Number)(Details)."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FA-50a-E</name>
						<fieldname>A.50a.Name_&amp;_Address</fieldname>
						<comment><![CDATA[FA-50a-E
 With option F - subfield 2 (Name and Address), should start with Number 1 to 8 and it should follow the line formatting rules as specified in the SWIFT spec (Error code(s): T56).]]></comment>
						<formula><![CDATA[Implies(A.F50a.FormatOption == 'F', Verify50FNmandAdrLines2($value, A.F50a.Party_Identifier))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T56</error-code>
						<actionmessage><![CDATA["Invalid 'Name and Address' value. With option F - subfield 2 (Name and Address), should start with Number 1 to 8 and it should follow the line formatting rules as specified in the SWIFT spec."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FA-50a-F</name>
						<fieldname>A.50a.Name_&amp;_Address</fieldname>
						<comment><![CDATA[FA-50a-F
Number 4 must be followed by a valid date in the format YYYYMMDD and this date, local to the sender, must not be later than the date on which the message is successfully sent to SWIFT (Error code(s): T50).
]]></comment>
						<formula><![CDATA[Implies(A.F50a.FormatOption == 'F', Verify50FNmandAdrDate($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T50</error-code>
						<actionmessage><![CDATA["Invalid 'Name and Address' value. Number 4 must be followed by a valid date in the format YYYYMMDD and this date, local to the sender, must not be later than the date on which the message is successfully sent to SWIFT."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FA-50a-G</name>
						<fieldname>A.50a.Name_&amp;_Address</fieldname>
						<comment><![CDATA[FA-50a-G
Numbers 3, 5, 6 and 7 must be followed by a valid ISO country code
(Error code(s): T73).]]></comment>
						<formula><![CDATA[Implies(A.F50a.FormatOption == 'F',Verify50FNmandAdrCtryCode2($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T73</error-code>
						<actionmessage><![CDATA["Invalid 'Name and Address' value. Numbers 3, 5, 6 and 7 must be followed by a valid ISO country code."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-50a-A</name>
						<fieldname>B.50a.Party_Identifier</fieldname>
						<comment><![CDATA[FB-50a-A
With option F, subfield 1 (Party Identifier), one of the following line formats must be used (Error code(s): T54):
Line format 1 :/34x (Account)
Line format 2 :4!a/2!a/27x (Code)(Country Code)(Identifier)]]></comment>
						<formula><![CDATA[Implies(B.F50a.FormatOption == 'F', Verify50FPartyIdFormat($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T54</error-code>
						<actionmessage><![CDATA["Invalid 'Party Identifier' value. One of the following line formats must be used: /34x (Account) or 4!a/2!a/27x (Code)(Country Code)(Identifier)"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-50a-B</name>
						<fieldname>B.50a.Party_Identifier</fieldname>
						<comment><![CDATA[FB-50a-B
In option F, when subfield 1 Party Identifier is used with the (Code)(Country Code)(Identifier) format, one of the following codes must be used (Error code(s): T55): ARNU, CCPT, CUST, DRLC, EMPL, NIDN, SOSE and TXID."
]]></comment>
						<formula><![CDATA[Implies(B.F50a.FormatOption == 'F', Verify50FPartyIdCode($value))
/* get the code from party identifier if format is 4!a/2!a/27x */   ]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T55</error-code>
						<actionmessage><![CDATA["Invalid 'Party Identifier' value. When 'Party Identifier' is used with the format (Code)(Country Code)(Identifier), one of following codes must be used: ARNU, CCPT, CUST, DRLC, EMPL, NIDN, SOSE and TXID."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-50a-C</name>
						<fieldname>B.50a.Party_Identifier</fieldname>
						<comment><![CDATA[FB-50a-D
In option F, subfield 1 (Party Identifier) used with the (Code)(Country Code)(Identifier) format: Country Code must be a valid ISO country code (Error code(s): T73).
]]></comment>
						<formula><![CDATA[Implies(B.F50a.FormatOption == 'F', Verify50FPartyIdCountryCode($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T73</error-code>
						<actionmessage><![CDATA["Invalid 'Party Identifier' value. In option F, subfield 1 (Party Identifier) used with the (Code)(Country Code)(Identifier) format: Country Code must be a valid ISO country code."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-50a-D</name>
						<fieldname>B.50a.Name_&amp;_Address</fieldname>
						<comment><![CDATA[FB-50a-C
With option F, subfield 2 (Name and Address), the following line format must be used for all lines: 1!n/33x (Number)(Details). (Error code(s): T54).]]></comment>
						<formula><![CDATA[Implies(B.F50a.FormatOption == 'F', Verify50FNmandAdrFormat($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T54</error-code>
						<actionmessage><![CDATA["Invalid 'Name and Address' value. With option F, subfield 2 (Name and Address), the following line format must be used for all lines :1!n/33x (Number)(Details)."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-50a-E</name>
						<fieldname>B.50a.Name_&amp;_Address</fieldname>
						<comment><![CDATA[FB-50a-E
 With option F - subfield 2 (Name and Address), should start with Number 1 to 8 and it should follow the line formatting rules as specified in the SWIFT spec (Error code(s): T56).]]></comment>
						<formula><![CDATA[Implies(B.F50a.FormatOption == 'F', Verify50FNmandAdrLines2($value, B.F50a.Party_Identifier))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T56</error-code>
						<actionmessage><![CDATA["Invalid 'Name and Address' value. With option F - subfield 2 (Name and Address), should start with Number 1 to 8 and it should follow the line formatting rules as specified in the SWIFT spec."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-50a-F</name>
						<fieldname>B.50a.Name_&amp;_Address</fieldname>
						<comment><![CDATA[FB-50a-F
Number 4 must be followed by a valid date in the format YYYYMMDD and this date, local to the sender, must not be later than the date on which the message is successfully sent to SWIFT (Error code(s): T50).
]]></comment>
						<formula><![CDATA[Implies(B.F50a.FormatOption == 'F', Verify50FNmandAdrDate($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T50</error-code>
						<actionmessage><![CDATA["Invalid 'Name and Address' value. Number 4 must be followed by a valid date in the format YYYYMMDD and this date, local to the sender, must not be later than the date on which the message is successfully sent to SWIFT."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-50a-G</name>
						<fieldname>B.50a.Name_&amp;_Address</fieldname>
						<comment><![CDATA[FB-50a-G
Numbers 3, 5, 6 and 7 must be followed by a valid ISO country code
(Error code(s): T73).]]></comment>
						<formula><![CDATA[Implies(B.F50a.FormatOption == 'F',Verify50FNmandAdrCtryCode2($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T73</error-code>
						<actionmessage><![CDATA["Invalid 'Name and Address' value. Numbers 3, 5, 6 and 7 must be followed by a valid ISO country code."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C1</name>
						<fieldname>C.19.Amount</fieldname>
						<comment><![CDATA["If field 19 is present in sequence C, it must equal the sum of the amounts in all occurrences of field 32B."]]></comment>
						<formula><![CDATA[Abs($value - SecSumDouble(B, "F32B.Amount")) < 1.0E-4]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C01</error-code>
						<actionmessage><![CDATA["If field 19 is present in sequence C, it must equal the sum of the amounts in all occurrences of field 32B."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C2-1</name>
						<fieldname>B.71G.Currency</fieldname>
						<comment><![CDATA["The currency code in the fields 71G, 32B and 32A must be the same for all occurrences of these fields in the message."]]></comment>
						<formula><![CDATA[$value == B[0].F32B[0].Currency]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C02</error-code>
						<actionmessage><![CDATA["The currency code in the fields 71G, 32B and 32A must be the same for all occurrences of these fields in the message."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C2-2</name>
						<fieldname>C.71G.Currency</fieldname>
						<comment><![CDATA["The currency code in the fields 71G, 32B and 32A must be the same for all occurrences of these fields in the message."]]></comment>
						<formula><![CDATA[$value == B[0].F32B[0].Currency]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C02</error-code>
						<actionmessage><![CDATA["The currency code in the fields 71G, 32B and 32A must be the same for all occurrences of these fields in the message."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C2-3</name>
						<fieldname>B.32B.Currency</fieldname>
						<comment><![CDATA["The currency code in the fields 71G, 32B and 32A must be the same for all occurrences of these fields in the message."]]></comment>
						<formula><![CDATA[$value == B[0].F32B[0].Currency]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C02</error-code>
						<actionmessage><![CDATA["The currency code in the fields 71G, 32B and 32A must be the same for all occurrences of these fields in the message."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C2-4</name>
						<fieldname>C.32A.Currency</fieldname>
						<comment><![CDATA["The currency code in the fields 71G, 32B and 32A must be the same for all occurrences of these fields in the message."]]></comment>
						<formula><![CDATA[$value == B[0].F32B[0].Currency]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C02</error-code>
						<actionmessage><![CDATA["The currency code in the fields 71G, 32B and 32A must be the same for all occurrences of these fields in the message."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C3</name>
						<fieldname>B</fieldname>
						<comment><![CDATA["Field 50a must be present either in sequence A or in each occurrence of sequence B, but it must never be present in both sequences, nor be absent from both sequences."]]></comment>
						<formula><![CDATA[If(A[0].F50a.$size == 0, 
   B.F50a.$size > 0, 
   B.F50a.$size == 0)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D17</error-code>
						<actionmessage><![CDATA["Field 50a must be present either in sequence A or in each occurrence of sequence B, but it must never be present in both sequences, nor be absent from both sequences."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C4</name>
						<fieldname>B</fieldname>
						<comment><![CDATA["Field 71A must be present either in sequence A or in each occurrence of sequence B, but it must never be present in both sequences, nor be absent from both sequences."]]></comment>
						<formula><![CDATA[If(A[0].F71A.$size == 0, 
   B.F71A.$size > 0, 
   B.F71A.$size == 0)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D20</error-code>
						<actionmessage><![CDATA["Field 71A must be present either in sequence A or in each occurrence of sequence B, but it must never be present in both sequences, nor be absent from both sequences."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C5-A</name>
						<fieldname>B.52a</fieldname>
						<comment><![CDATA["When a field 52a is present in any occurrence of sequence B, that field must not be present in sequence A."]]></comment>
						<formula><![CDATA[A[0].F52a.$size == 0]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D18</error-code>
						<actionmessage><![CDATA["When a field 52a is present in any occurrence of sequence B, that field must not be present in sequence A."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C5-B</name>
						<fieldname>B.26T</fieldname>
						<comment><![CDATA["When a field 26T is present in any occurrence of sequence B, that field must not be present in sequence A."]]></comment>
						<formula><![CDATA[A[0].F26T.$size == 0]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D18</error-code>
						<actionmessage><![CDATA["When a field 26T is present in any occurrence of sequence B, that field must not be present in sequence A."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C5-C</name>
						<fieldname>B.77B</fieldname>
						<comment><![CDATA["When a field 77B is present in any occurrence of sequence B, that field must not be present in sequence A."]]></comment>
						<formula><![CDATA[A[0].F77B.$size == 0]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D18</error-code>
						<actionmessage><![CDATA["When a field 77B is present in any occurrence of sequence B, that field must not be present in sequence A."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C6-A</name>
						<fieldname>A.36</fieldname>
						<comment><![CDATA["If field 36 is present in Sequence A, then the following conditions apply: 1) in minimum one occurrence of Sequence B field 33B must be present and currency codes in fields 32B and 33B must be different; 2) field 36 is not allowed in any occurrence of Sequence B."]]></comment>
						<formula><![CDATA[$sec1 = SecFilter(B, "$filterObj.F33B.$size > 0");
$sec2 = SecFilter($sec1, 
                  "$filterObj.F33B[0].Currency != $filterObj.F32B[0].Currency");
$sec2.$size > 0 && !SecExistsInAtLeastOne(B, "F36");
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D22</error-code>
						<actionmessage><![CDATA["If field 36 is present in Sequence A, then the following conditions apply: 1) in minimum one occurrence of Sequence B field 33B must be present and currency codes in fields 32B and 33B must be different; 2) field 36 is not allowed in any occurrence of Sequence B."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C6-B</name>
						<fieldname>B</fieldname>
						<comment><![CDATA["Field 36 must be present in every sequence B which contains fields 32B and 33B with different currency codes and must not be present in sequence A or any other sequence B."]]></comment>
						<formula><![CDATA[If(A[0].F36.$size == 0, 
   If(B.F33B.$size > 0 && 
        (B.F33B[0].Currency != B.F32B[0].Currency), 
      B.F36.$size > 0, 
      B.F36.$size == 0), 
   true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D22</error-code>
						<actionmessage><![CDATA["Field 36 must be present in every sequence B which contains fields 32B and 33B with different currency codes and must not be present in sequence A or any other sequence B."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C7</name>
						<fieldname>B.59a</fieldname>
						<comment><![CDATA["If field 23 contains the code CHQB, the Account Number must not be present in field 59a. In all other cases, it is mandatory."]]></comment>
						<formula><![CDATA[If(A[0].F23[0].Type_of_Operation == "CHQB", 
   IsNull(B.F59a.Account), 
   IsNotNull(B.F59a.Account))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D93</error-code>
						<actionmessage><![CDATA["If field 23 contains the code CHQB, the Account Number must not be present in field 59a. In all other cases, it is mandatory."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C8</name>
						<fieldname>B</fieldname>
						<comment><![CDATA["If the country codes of the Sender's and the Receiver's BICs are within the following list: AD, AT, BE, BG, BV, CH, CY, CZ, DE, DK, EE, ES, FI, FR, GB, GF, GI, GP, GR, HU, IE, IS, IT, LI, LT, LU, LV, MC, MQ, MT, NL, NO, PL, PM, PT, RE, RO, SE, SI, SJ, SK, SM, TF and VA, then field 33B is mandatory in each occurrence of sequence B, otherwise field 33B is optional."]]></comment>
						<formula><![CDATA[def header = $this.Header;
def appheader;
if(header.GetFieldCount() == 0 || (header.getfieldcount() > 0 && header.GetFieldIndex("Basic_Header") == -1)) {
	// No Header or FICC Header
	return true;
}
if(header.GetFieldCount() == 4) {
	// Input/output header
    appheader = If(header.GetSection(1).$size > 0, 
                   header.GetSection(1)[0], 
                   header.GetSection(2)[0]);
}
else {
    appheader = header.GetSection(1)[0];
}
def basicheader = header.GetSection(0)[0];
def ioIdentifier = appheader.GetString("Input_Output_Identifier");
def mir = (If(ioIdentifier == "O", GetString(appheader, "Message Input Reference"), ""));
def receiverAddress = (If(ioIdentifier == "I", GetString(appheader, "Receiver's Address"), ""));
def senderCountryCode = (If(ioIdentifier == "I", Mid(basicheader.GetString("LT Identifier"), 4, 2), Mid(mir, 10, 2)));
def receiverCountryCode = (If(ioIdentifier == "I", Mid(receiverAddress, 4, 2), Mid(basicheader.GetString("LT Identifier"), 4, 2)));
return If(In(senderCountryCode, "AD", "AT", "BE", "BG", "BV", "CH", "CY", 
      "CZ", "DE", "DK", "EE", "ES", "FI", "FR", "GB", "GF", 
      "GI", "GP", "GR", "HU", "IE", "IS", "IT", "LI", "LT", 
      "LU", "LV", "MC", "MQ", "MT", "NL", "NO", "PL", "PM", 
      "PT", "RE", "RO", "SE", "SI", "SJ", "SK", "SM", "TF", "VA") && 
     In(receiverCountryCode, "AD", "AT", "BE", "BG", "BV", "CH", 
        "CY", "CZ", "DE", "DK", "EE", "ES", "FI", "FR", "GB", 
        "GF", "GI", "GP", "GR", "HU", "IE", "IS", "IT", "LI", 
        "LT", "LU", "LV", "MC", "MQ", "MT", "NL", "NO", "PL", 
        "PM", "PT", "RE", "RO", "SE", "SI", "SJ", "SK", "SM", "TF", 
        "VA"), 
   B.F33B.$size > 0, 
   true);
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D49</error-code>
						<actionmessage><![CDATA["If the country codes of the Sender's and the Receiver's BICs are within the following list: AD, AT, BE, BG, BV, CH, CY, CZ, DE, DK, EE, ES, FI, FR, GB, GF, GI, GP, GR, HU, IE, IS, IT, LI, LT, LU, LV, MC, MQ, MT, NL, NO, PL, PM, PT, RE, RO, SE, SI, SJ, SK, SM, TF and VA, then field 33B is mandatory in each occurrence of sequence B, otherwise field 33B is optional."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C9-A</name>
						<fieldname>B.71F</fieldname>
						<comment><![CDATA["If field 71A in sequence A contains OUR, then field 71F is not allowed and field 71G is optional in any occurrence of sequence B."]]></comment>
						<formula><![CDATA[A[0].F71A.$size == 0 || A[0].F71A[0].Code != "OUR"]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E13</error-code>
						<actionmessage><![CDATA["If field 71A in sequence A contains OUR, then field 71F is not allowed and field 71G is optional in any occurrence of sequence B."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C9-B</name>
						<fieldname>B.71F</fieldname>
						<comment><![CDATA["If field 71A in sequence B contains OUR, then field 71F is not allowed and field 71G is optional in the same occurrence of sequence B."]]></comment>
						<formula><![CDATA[B.F71A.$size == 0 || B.F71A[0].Code != "OUR"]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E13</error-code>
						<actionmessage><![CDATA["If field 71A in sequence B contains OUR, then field 71F is not allowed and field 71G is optional in the same occurrence of sequence B."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C9-C</name>
						<fieldname>B.71G</fieldname>
						<comment><![CDATA["If field 71A in sequence A contains SHA, then fields 71F are optional and field 71G is not allowed in any occurrence of sequence B."]]></comment>
						<formula><![CDATA[A[0].F71A.$size == 0 || A[0].F71A[0].Code != "SHA"]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D50</error-code>
						<actionmessage><![CDATA["If field 71A in sequence A contains SHA, then fields 71F are optional and field 71G is not allowed in any occurrence of sequence B."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C9-D</name>
						<fieldname>B.71G</fieldname>
						<comment><![CDATA["If field 71A in sequence B contains SHA, then fields 71F are optional and field 71G is not allowed in the same occurrence of sequence B."]]></comment>
						<formula><![CDATA[B.F71A.$size == 0 || B.F71A[0].Code != "SHA"]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D50</error-code>
						<actionmessage><![CDATA["If field 71A in sequence B contains SHA, then fields 71F are optional and field 71G is not allowed in the same occurrence of sequence B."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C9-E</name>
						<fieldname>B</fieldname>
						<comment><![CDATA["If field 71A in sequence A contains BEN, then at least one occurrence of field 71F is mandatory in each occurrence of sequence B and field 71G is not allowed."]]></comment>
						<formula><![CDATA[If(A[0].F71A.$size > 0 && A[0].F71A[0].Code == "BEN", 
   B.F71F.$size > 0 && B.F71G.$size == 0, 
   true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E15</error-code>
						<actionmessage><![CDATA["If field 71A in sequence A contains BEN, then at least one occurrence of field 71F is mandatory in each occurrence of sequence B and field 71G is not allowed."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C9-F</name>
						<fieldname>B</fieldname>
						<comment><![CDATA["If field 71A in sequence B contains BEN, then at least one occurrence of field 71F is mandatory in the same occurrence of sequence B and field 71G is not allowed."]]></comment>
						<formula><![CDATA[If(B.F71A.$size > 0 && B.F71A[0].Code == "BEN", 
   B.F71F.$size > 0 && B.F71G.$size == 0, 
   true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E15</error-code>
						<actionmessage><![CDATA["If field 71A in sequence B contains BEN, then at least one occurrence of field 71F is mandatory in the same occurrence of sequence B and field 71G is not allowed."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C10-1</name>
						<fieldname>B.71F</fieldname>
						<comment><![CDATA["If either field 71F (at least one occurrence) or field 71G are present in an occurrence of sequence B, then field 33B is mandatory in the same occurrence of sequence B."]]></comment>
						<formula><![CDATA[If(B.F71G.$size == 0, B.F33B.$size > 0, true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D51</error-code>
						<actionmessage><![CDATA["If either field 71F (at least one occurrence) or field 71G are present in an occurrence of sequence B, then field 33B is mandatory in the same occurrence of sequence B."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C10-2</name>
						<fieldname>B.71G</fieldname>
						<comment><![CDATA["If either field 71F (at least one occurrence) or field 71G are present in an occurrence of sequence B, then field 33B is mandatory in the same occurrence of sequence B."]]></comment>
						<formula><![CDATA[If(B.F71F.$size == 0, B.F33B.$size > 0, true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D51</error-code>
						<actionmessage><![CDATA["If either field 71F (at least one occurrence) or field 71G are present in an occurrence of sequence B, then field 33B is mandatory in the same occurrence of sequence B."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C11</name>
						<fieldname>B.71G</fieldname>
						<comment><![CDATA["If field 71G is present in an occurrence of sequence B, then field 71G is mandatory in the sequence C."]]></comment>
						<formula><![CDATA[C[0].F71G.$size > 0]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D79</error-code>
						<actionmessage><![CDATA["If field 71G is present in an occurrence of sequence B, then field 71G is mandatory in the sequence C."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>ERI-1</name>
						<fieldname>C</fieldname>
						<comment><![CDATA["For specific message types, an European currency must not be used as the currency of settlement after a cut-off date (Error Code: E76)."]]></comment>
						<formula><![CDATA[applyERIValidation(C.F32A[0], "Date", C.F32A[0], "Currency")]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E76</error-code>
						<actionmessage><![CDATA["For specific message types, an European currency must not be used as the currency of settlement after a cut-off date (Error Code: E76)."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>ERI-2</name>
						<fieldname>C.72.Narrative_-_Structured_Format</fieldname>
						<formula><![CDATA[ApplyERICodeValidationStructured($value);]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T47</error-code>
						<actionmessage><![CDATA["In an ERI field (i.e. fields 61, 72, 77A, 79, 86) the data part of a code word /OCMT/, or /CHGS/, is being validated, but the ending separator (i.e. third slash) is missing or the code words are duplicated."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FC-72</name>
						<fieldname>C.72.Narrative_-_Structured_Format</fieldname>
						<formula><![CDATA[def Actualvalue = replace($value, "\r\n", "\n");
def lines = Split("\n", Actualvalue);
def str = Left(Actualvalue, 6);
def line1format = false;
def line3format = false;
def TREFformat = true;
def CHGSformat = true;
def TEXTformat = true;
def format = true;
def count = 0;
def TREFcount = 0;
def CHGScount = 0;
def TEXTcount = 0;
def i = lines.Length();
if(In(str, "/REJT/", "/RETN/")) {
    if(i <= 6) {
        //if '/REJT/' or '/RETN/' format of 1st line must be "6!x2!n[1a]['/'2c]" & format of 2nd line must be "('/'2!c 2!n'/')[29x]" or "('/X'1c2!n'/')[29x]"
        //if format of 2nd line is "('/'2!c 2!n'/')" then the 6 characters must be one of the codes given below
        line1format = (VerifyFormat(lines[0], "6!x2!n[1a]['/'2c]"));
        if(line1format && lines.Length() > 2) {
            if(!lines[1].StartsWith("/X")) {
                if(VerifyFormat(lines[1], "('/'2!c 2!n'/')[29x]")) {
                	def startStr = lines[1].Left(6);
                    if((!In(startStr, "/AC01/", "/AC02/", "/AC03/", "/AC04/", "/AC05/", "/AC06/", 
                            "/AM01/", "/AM02/", "/AM03/", "/AM04/", "/AM05/", "/AM06/", "/AM07/", 
                            "/AM08/", "/AG01/", "/AG02/", "/BE01/", "/BE02/", "/BE03/", "/BE04/", 
                            "/BE05/", "/DT01/", "/MS01/", "/PY01/", "/RC01/", "/RC02/", "/RC03/", 
                            "/RC04/", "/RF01/", "/TM01/", "/RR01/", "/RR02/", "/RR03/")))
                        return false;
                }
                else
                    return false;
            }
            else if(lines[1].StartsWith("/X") && !VerifyFormat(lines[1], "('/X'1c2!n'/')[29x]"))
                return false;
        }
        else
            return false;
        //Line3 is mandatory and should have the format "/MREF/16x". Lines 4, 5 and 6 are optional
        //If lines 4, 5 or 6 or any combination exists and if the first 6 characters starts with either '/TREF/' or '/CHGS/' or '/TEXT/' or '//'
        //it should satisfy the format given. Also if line starts with '//' it can appear a max of 2 times
        line3format = Equal(Left(lines[2], 6), "/MREF/") && 
                        VerifyFormat(Substring(lines[2], 6), "16x");
        if(line3format) {
            while(i > 3) {
                def str1 = Left(lines[i - 1], 6);
                def str2 = Substring(lines[i - 1], 6);
                if(In(str1, "/TREF/", "/CHGS/", "/TEXT/") || StartsWith(lines[i - 1], "//")) {
                    if(str1 == "/TREF/") {
                        TREFformat = VerifyFormat(str2, "16x");
                        TREFcount += 1;
                    }
                    else if(str1 == "/CHGS/") {
                        CHGSformat = (VerifyFormat(str2, "3!a15d") && 
                                        IsISOCurrencyCode(Substring(lines[i - 1], 6, 3)));
                        CHGScount += 1;
                    }
                    else if(str1 == "/TEXT/") {
                        TEXTformat = (VerifyFormat(str2, "29x"));
                        TEXTcount += 1;
                    }
                    else if(StartsWith(lines[i - 1], "//")) {
                        def str3 = Substring(lines[i - 1], 2);
                        format = (VerifyFormat(str3, "33x"));
                        count += 1;
                        if(!format || count > 2)
                            break;
                    }
                }
                else
                    return false;
                i = i - 1;
            }
        }
        else
            return false;
        if(!TREFformat || !CHGSformat || !TEXTformat || !format || count > 2 || TREFcount > 1 || 
             CHGScount > 1 || TEXTcount > 1)
            return false;
    }
    else
        return false;
}
return true;
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T80</error-code>
						<actionmessage><![CDATA["Field 72 Reject/Return: code word error, or mandatory code word missing, or code word not in the proper sequence, or format 6*35x not satisfied"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-32B</name>
						<fieldname>B.32B.Currency</fieldname>
						<formula><![CDATA[!In($value, "XAU", "XAG", "XPD", "XPT")]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C08</error-code>
						<actionmessage><![CDATA["The codes XAU, XAG, XPD and XPT are not allowed, as these are codes for commodities for which the category 6 commodities messages must be used."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FC-32A</name>
						<fieldname>C.32A.Currency</fieldname>
						<formula><![CDATA[!In($value, "XAU", "XAG", "XPD", "XPT")]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C08</error-code>
						<actionmessage><![CDATA["The codes XAU, XAG, XPD and XPT are not allowed, as these are codes for commodities for which the category 6 commodities messages must be used."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-59a-A</name>
						<fieldname>B.59a.Name_&amp;_Address_Details</fieldname>
						<formula><![CDATA[Implies(B.F59a.FormatOption == 'F', Verify59FNmandAdrDtlLines($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T56</error-code>
						<actionmessage><![CDATA["Invalid 'Name_and_Address_Details' value. With option F - subfield 2 (Name_and_Address_Details), should start with Number 1 to 3 and it should follow the line formatting rules as specified in the SWIFT spec for field 59F."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-59a-B</name>
						<fieldname>B.59a.Name_&amp;_Address_Details</fieldname>
						<formula><![CDATA[Implies(B.F59a.FormatOption == 'F', Verify59FNmandAdrDtlFormat($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T56</error-code>
						<actionmessage><![CDATA["Invalid 'Name and Address Details' value. With option F, subfield 2 (Name and Address Details), the following line format must be used for all lines :1!n/33x (Number)(Name and Address Details)."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-59a-C</name>
						<fieldname>B.59a.Name_&amp;_Address_Details</fieldname>
						<formula><![CDATA[Implies(B.F59a.FormatOption == 'F', Verify59FNmandAdrDtlCtryCode($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T73</error-code>
						<actionmessage><![CDATA["Invalid 'Name_and_Address_Details' value. Number 3 must be followed by a valid ISO country code."]]></actionmessage>
					</fieldvalidation>
				</fieldvalidations>
			</datavalidationrules>
			<tlrvalidationrules>
				<fieldvalidations>
				</fieldvalidations>
			</tlrvalidationrules>
		</validationrules>
		<elementproperties>
			<propertymap>
				<property name="codegen.java.properties">
					<value>
						<propertymap type="com.tplus.transform.design.PropertiesDef">
							<property name="Java Package Name" value="com.transform.external.%e"/>
							<property name="Jar Name" value="%c.jar"/>
							<property name="Manifest Entries" value="transformrt.jar swiftrt.jar swiftresources.jar"/>
							<property name="Data Source" value=""/>
						</propertymap>
					</value>
				</property>
			</propertymap>
		</elementproperties>
	</externalmessage>
	<externalmessage xsi:type="SwiftFormat" type="SwiftFormat" version="5.1.2" rulename="MT102STP_2016" formattype="SwiftFormat" >
		<description><![CDATA[This message is sent by or on behalf of the financial institution of the ordering customer(s) to another financial institution for payment to the beneficiary customer(s). 

It requests the Receiver to credit the beneficiary customer(s) directly or indirectly through a clearing mechanism or another financial institution. 

This message is used to convey multiple payment instructions between financial institutions for clean payments. Its use is subject to bilateral/multilateral agreements between Sender and Receiver. 

Amongst other things, these bilateral agreements cover the transaction amount limits, the currencies accepted and their settlement. The multiple payments checklist included below is recommended as a guide for institutions in the setup of their agreements.
]]></description>
		<standard>SWIFT</standard>
		<standard-name>MT102STP</standard-name>
		<standard-version>SRG 2016</standard-version>
		<standard-release-qualifier>20160308</standard-release-qualifier>
		<standard-category>Customer Payments &amp; Cheques</standard-category>
		<standard-detailed-name>Multiple Customer Credit Transfer</standard-detailed-name>
		<version>1.0</version>
		<SwiftFields>
			<customizable>true</customizable>
			<modifiable>false</modifiable>
			<SwiftMessageType>User</SwiftMessageType>
			<max-length>10000</max-length>
			<HeaderAndTrailerType>SWIFT_INPUT_OUTPUT_HEADER</HeaderAndTrailerType>
			<Header>
				<fields>
					<field>
						<name>Basic Header</name>
						<description><![CDATA[The Basic Header is given in Block 1 of a SWIFT message and is the only header that appears on all messages. The Basic Header provides the fundamental reference for any particular message and is almost always automatically built by the CBT.
The Basic Header has the same format for both input and output messages. However, the information contained in the Basic Header is relative to the sender when the message is input but relative to the receiver when the same message is output.]]></description>
						<datatype>Section</datatype>
						<required>true</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Application Identifier</name>
								<description><![CDATA[The Application Identifier identifies the application within which the message is being sent or received. The available options are:

F = FIN All user-to-user, FIN system and FIN service messages 
A = GPA Most GPA system and service messages 
L = GPA Certain GPA service messages, for example, LOGIN, LAKs, ABORT 

These values are automatically assigned by the SWIFT system and the user's CBT, but the user should be aware of their existence and significance
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Service Identifier</name>
								<description><![CDATA[The Service Identifier consists of 2 numeric characters. It identifies the type of data that is being sent or received and, in doing so, whether the message which follows is one of the following:

a user-to-user message

a system message

a service message, for example, a session control command, such as SELECT, or a logical acknowledgement, such as ACK/SAK/UAK

Users will be primarily concerned with identifier '01' which applies to all GPA and FIN system and user-to-user messages. Other values include: '21' for message acknowledgements such as ACK/NAK, UAK/UNK, '03' for SELECT commands, and 
so on]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>2</length>
							</field>
							<field>
								<name>LT Identifier</name>
								<description><![CDATA[This 12-character SWIFT address, given in the Basic Header Block, is the address of the sending LT for input messages or of the receiving LT for output messages, and includes the Branch Code.

In the Basic Header, the LT Code within the LT Identifier is specific to the LT that has established the session in which the message is being transmitted, that is the sending LT for input messages or the receiving LT for output messages.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>12</length>
							</field>
							<field>
								<name>Session Number</name>
								<description><![CDATA[The Session Number identifies the session in which the message was transmitted. Within the Basic Header, the 4-digit Session Number is the user's current GPA or FIN Session Number.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Sequence Number</name>
								<description><![CDATA[The sequence number always consists of 6 digits. It is the ISN of the sender's current input session or the OSN of the receiver's current output session.

Note: The sequence number is not present in those messages with an Application Identifier of 'L' (for example LOGIN). The sequence number is, however, a key element in the processing of retrievals. Therefore, LOGINs and attempted LOGINs are not retrievable
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>6</length>
							</field>
						</fields>
					</field>
					<field>
						<name>Application Header Input</name>
						<description><![CDATA[The Application Header of a SWIFT message provides information about the message itself.

The Application Header is given in Block 2 of a SWIFT message. It differs according to whether the message is a GPA or a FIN message and whether the Application Header is part of an input or an output message.

]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Input/Output Identifier</name>
								<description><![CDATA[For an input message, the Input/Output Identifier consists of the single letter 'I'.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Message Type</name>
								<description><![CDATA[The Message Type consists of 3 digits which define the MT number of the message being input. The example used above is for an MT 100 Customer Transfer]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>3</length>
							</field>
							<field>
								<name>Receiver's Address</name>
								<description><![CDATA[This address is the 12-character SWIFT address of the receiver of the message, but with a LT Code of 'X'. It defines the destination to which the message should be sent.

The system will replace the 'X' with a specific LT Code on delivery of the message according to the delivery control exercised by the receiving user.

The Branch Code is mandatory and will be validated. The default of 'XXX' may be used, as in the example above.

Unless otherwise documented, system messages addressed to the SWIFT system itself should be addressed to SWFTXXXXXXXX.

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>12</length>
							</field>
							<field>
								<name>Message Priority</name>
								<description><![CDATA[This character, used within FIN Application Headers only, defines the priority with which a message is delivered. The possible values are:

S = System

U = Urgent

N = Normal

Message Priority 'S' must be used for user-to-system messages; for user-to-user messages either 'U' or 'N' can be used. In the absence of user-specified delivery criteria, system messages are always delivered first, followed by urgent priority messages and then normal priority messages.

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Delivery Monitoring</name>
								<description><![CDATA[Delivery monitoring options apply only to FIN user-to-user messages, and allow the sender of a message to request:

automatic MT 011 Delivery Notification once the message has been delivered

automatic MT 010 Non-Delivery Warning if a message is not delivered within the specified obsolescence period (see below)

both, or neither, options. This may be requested on an individual message basis.

The chosen option is expressed as a single digit:

1 = Non-Delivery Warning

2 = Delivery Notification

3 = Non-Delivery Warning and Delivery Notification. 
If the message has priority 'U' then the user must request delivery monitoring option '1' or '3'. If the message has priority 'N', the user can request delivery monitoring option '2', or, by leaving the option blank, no delivery monitoring.
]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>1</length>
							</field>
							<field>
								<name>Obsolescence Period</name>
								<description><![CDATA[The obsolescence period defines the period of time after which a Delayed Message (DLM) trailer is added to a FIN user-to-user message when the message is delivered. For urgent priority messages, it is also the period of time after which, if the message remains undelivered, a Non-Delivery Warning is generated.

The values for the obsolescence period are 003 (15 minutes) for 'U' priority, and 020 (100 minutes) for 'N' priority. An obsolescence period can only be specified when delivery monitoring has been requested (option 1 or 3 for urgent priority messages, option 2 for normal priority messages). If no delivery monitoring has been requested, and an obsolescence period is specified, the message will be NAKed with error code H25.

GPA input Application Headers are similar to their FIN equivalents except that GPA messages do not specify priority, delivery monitoring, nor obsolescence period.

]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>3</length>
							</field>
						</fields>
					</field>
					<field>
						<name>Application Header Output</name>
						<description><![CDATA[The Application Header of a SWIFT message provides information about the message itself.

The Application Header is given in Block 2 of a SWIFT message. It differs according to whether the message is a GPA or a FIN message and whether the Application Header is part of an input or an output message.

]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Input/Output Identifier</name>
								<description><![CDATA[For an input message, the Input/Output Identifier consists of the single letter 'I'.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Message Type</name>
								<description><![CDATA[Three digits indicating the Message Type.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>3</length>
							</field>
							<field>
								<name>Input Time</name>
								<description><![CDATA[The first occurrence of the time field contains the system time and date. This is the generation time in Greenwich Mean Time (GMT).
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Message Input Reference</name>
								<description><![CDATA[The input MIR.

If the message is generated by the system, the input time is the generation time (in GMT) and the input MIR is the system MIR

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>28</length>
							</field>
							<field>
								<name>Output Date</name>
								<description><![CDATA[The output date, local to the receiver.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>6</length>
							</field>
							<field>
								<name>Output Time</name>
								<description><![CDATA[The second occurrence of the time field contains the output time and date. This is in a time local to the receiver.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Message Priority</name>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
						</fields>
					</field>
					<field>
						<name>User Header</name>
						<description><![CDATA[The User Header is an optional header available within FIN for user-to-user messages only. It appears in Block 3 of a SWIFT message, and allows users to provide their own reference within the headers for a particular message.

A User Header can only be assigned by the sender of a message and, if assigned, will always appear on the output message copy. Relevant parts of the User Header will be repeated in related system messages and acknowledgements.

Block 3 may contain tag 113, defining banking priorities, and tag 108, which is a user reference. The user reference part of the User Header may be used as one of the selection criteria when retrieving a message.

The optional field tags 103 and 115 are also used in Block 3 for the FIN Copy service. The order of tags, when present, is 103, 113, 108 and 115.

An optional field tag 119 can be included in Block 3 of certain messages to specify that different validation rules are to be applied. Agreed code words in field 119 indicate what validation rules SWIFT will apply. If field 119 is present, it should appear after field 108
]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Service Identifier</name>
								<description><![CDATA[For any message which the user submits to a FIN Copy service, Block 3 requires an additional field 103 which contains a three-character Service Identifier unique to a specific FIN Copy service. By using a unique identifier it is possible to support access to multiple services within the same CBT.
]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>3</length>
								<tag>103</tag>
							</field>
							<field>
								<name>Banking Priority</name>
								<description><![CDATA[Assigned by the sender of the message.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>4</length>
								<tag>113</tag>
							</field>
							<field>
								<name>Message User Reference</name>
								<description><![CDATA[Assigned by the sender of the message.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>16</length>
								<tag>108</tag>
							</field>
							<field>
								<name>Validation Flag</name>
								<description><![CDATA[Indicates whether a special validation needs to be performed by FIN. The following are examples of the values this field may take. Please note that this list is subject to change:

ISITC indicates validation of ISITC Standards. Only to be used with MT 521 and MT 523.

REMIT identifies the presence of field 77T. Only to be used in MT 103.

RFDD indicates that the message is a request for direct debit. Only to be used in MT 104.

STP indicates that the message is validated according to straight through processing principles. Only to be used in MT 103.

]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>119</tag>
							</field>
							<field>
								<name>Balance checkpoint date and time</name>
								<description><![CDATA[This field contains the balance checkpoint date and time consisting of a date (YYMMDD) and a time (HHMMSS[ss], where 'ss' indicates hundredths of a second). The MI that is subscribed to MIRS will always copy this reference from field tag 13G of the last MT298/091 that it sent into the related MT 298/093 or MT 097 that it generates. ]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>423</tag>
							</field>
							<field>
								<name>Message Input Reference</name>
								<description><![CDATA[This field contains the MIR of the payment message that is related to the notification messages in which this field is present. The MI that is subscribed to MIRS will copy it from the received payment message. In a FINCopy scenario, this field must contain the MIR of the related MT 096]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>106</tag>
							</field>
							<field>
								<name>Related Reference</name>
								<description><![CDATA[This field contains the reference of the payment that is related to the notification messages in which this field is present. The payment itself was not the result of a FIN message. The value of this field must correspond to the related reference (field 21) in the MT298/093. The format of field 424 is 16x.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>424</tag>
							</field>
							<field>
								<name>Service Type Identifier</name>
								<description><![CDATA[This field identifies the applicable global payment service type. The format of field 111 is 3!n.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>111</tag>
							</field>
							<field>
								<name>Unique End-To-End Transaction Reference</name>
								<description><![CDATA[This field provides an end-to-end reference across a payment transaction. The format of field 121 is 36!x.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>121</tag>
							</field>
							<field>
								<name>Addressee Information</name>
								<description><![CDATA[Tag 115 is only valid for output messages. Information from Central Institution to the receiver of payment message. Information is input in the MT 097 FIN Copy Message Authorisation/Refusal Notification in Y-Copy mode.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>115</tag>
							</field>
							<field>
								<name>Payment Release Information Receiver (FINInform Services)</name>
								<description><![CDATA[Tag 165 is only valid for output messages. This field contains information from the server destination to the receiver of payment message. It is only available for use in FINInform services that operate in Y-copy mode.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>165</tag>
							</field>
							<field>
								<name>Receiver Information</name>
								<description><![CDATA[Tag 433 is only valid for output messages. The screening service inputs information in the MT 097 FINCopy Message Authorisation/Refusal Notification, in Y-Copy mode. FINCopy copies the information to the receiver of the screened message.
				    The following values can be present in this field:
				      AOK: message automatically released by screening service
				      FPO: compliance officer has flagged the screening result as false positive
				      NOK: compliance officer has flagged the screened message as suspect
				    The code word can optionally be followed by additional information (up to 20 characters from the x character set).]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>433</tag>
							</field>
						</fields>
					</field>
				</fields>
			</Header>
			<Data>
				<Fields>
					<SwiftSequence Name="A">
						<Name>A</Name>
						<Description><![CDATA[General information]]></Description>
						<Mandatory>true</Mandatory>
						<Repeating>false</Repeating>
						<Fields>
							<SwiftField Name="20">
								<SwiftFieldDef Name="20">
									<Generic>false</Generic>
									<Description><![CDATA[Reference]]></Description>
									<Option Name="">
										<Format><![CDATA[16x]]></Format>
										<Specification><![CDATA[(Reference)]]></Specification>
										<Description><![CDATA[File Reference]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options> </Options>
								<Validations>
									<SubField Name="Reference">
										<Validation>
											<Options> </Options>
											<ErrorCode>T26</ErrorCode>
											<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive  slashes '//' (Error code(s): T26).]]></Comment>
											<ValidationPattern xsi:type="T26" Type="T26">
												<Type>T26</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="23">
								<SwiftFieldDef Name="23">
									<Generic>false</Generic>
									<Description><![CDATA[Bank operation Code]]></Description>
									<Option Name="">
										<Format><![CDATA[16x]]></Format>
										<Specification><![CDATA[(Type of Operation)]]></Specification>
										<Description><![CDATA[Bank Operation Code]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options> </Options>
								<Validations>
									<SubField Name="Type_of_Operation">
										<Validation>
											<Options> </Options>
											<ErrorCode>T08</ErrorCode>
											<Comment><![CDATA[One of the following codes must be used (Error code(s): T08):]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="CREDIT">
														<DetailedName>Credit transfer(s)</DetailedName>
														<Description>This message contains credit transfer(s) to be processed according to the pre-established bilateral agreement between the Sender and the Receiver.</Description>
													</Code>
													<Code Name="CRTST">
														<DetailedName>Test credit transfer</DetailedName>
														<Description>This message contains credit transfers for test purpose(s).</Description>
													</Code>
													<Code Name="SPAY">
														<DetailedName>SWIFTPay</DetailedName>
														<Description>This message contains credit transfer(s) to be processed according to the SWIFTPay Service Level.</Description>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="50a">
								<SwiftFieldDef Name="50">
									<Generic>false</Generic>
									<Option Name="A">
										<Format><![CDATA[([/34xCRLF])(4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(Account)(Identifier Code)]]></Specification>
										<Description><![CDATA[Ordering Customer]]></Description>
									</Option>
									<Option Name="F">
										<Format><![CDATA[35x(CRLF4*35x)]]></Format>
										<Specification><![CDATA[(Party Identifier)(Name & Address)]]></Specification>
										<Description><![CDATA[Ordering Customer]]></Description>
									</Option>
									<Option Name="K">
										<Format><![CDATA[([/34xCRLF])(4*35x)]]></Format>
										<Specification><![CDATA[(Account)(Name & Address)]]></Specification>
										<Description><![CDATA[Ordering Customer]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>A, K, F</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27, T28, T29, T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="52A">
								<SwiftFieldDef Name="52">
									<Generic>false</Generic>
									<Option Name="A">
										<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
										<Description><![CDATA[Ordering Institution]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>A</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27, T28, T29, T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
										<Validation>
											<Options>A</Options>
											<ErrorCode>C05</ErrorCode>
											<Comment><![CDATA[Identifier Code must not be a BEI, ie must not be of subtype BEID, MCCO, TESP or TRCO (Error code(s): C05).]]></Comment>
											<ValidationPattern xsi:type="C05" Type="C05">
												<Type>C05</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="CreditDebit">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T51</ErrorCode>
											<Comment><![CDATA[CreditDebit should contain the following codes]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="C">
														<DetailedName>Credit</DetailedName>
													</Code>
													<Code Name="D">
														<DetailedName>Debit</DetailedName>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="26T">
								<SwiftFieldDef Name="26">
									<Generic>false</Generic>
									<Option Name="T">
										<Format><![CDATA[3!c]]></Format>
										<Specification><![CDATA[(Type)]]></Specification>
										<Description><![CDATA[Transaction Type Code]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>T</Options>
							</SwiftField>
							<SwiftField Name="77B">
								<SwiftFieldDef Name="77">
									<Generic>false</Generic>
									<Option Name="B">
										<Format><![CDATA[3*35x]]></Format>
										<Specification><![CDATA[(Narrative)]]></Specification>
										<Description><![CDATA[Regulatory Reporting]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>B</Options>
							</SwiftField>
							<SwiftField Name="71A">
								<SwiftFieldDef Name="71">
									<Generic>false</Generic>
									<Option Name="A">
										<Format><![CDATA[3!a]]></Format>
										<Specification><![CDATA[(Code)]]></Specification>
										<Description><![CDATA[Details of Charges]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>A</Options>
								<Validations>
									<SubField Name="Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T08</ErrorCode>
											<Comment><![CDATA[One of the following codes must be used (Error code(s): T08):]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="BEN">
														<DetailedName>Beneficiary</DetailedName>
														<Description>All transaction charges are to be borne by the beneficiary customer.</Description>
													</Code>
													<Code Name="OUR">
														<DetailedName>Our customer charged</DetailedName>
														<Description>All transaction charges are to be borne by the ordering customer.</Description>
													</Code>
													<Code Name="SHA">
														<DetailedName>Shared charges</DetailedName>
														<Description>Transaction charges on the Sender&#8217;s side are to be borne by the ordering customer and transaction charges on the Receiver&#8217;s side are to be borne by the beneficiary customer.</Description>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="36">
								<SwiftFieldDef Name="36">
									<Generic>false</Generic>
									<Description><![CDATA[Exchange Rate]]></Description>
									<Option Name="">
										<Format><![CDATA[12d]]></Format>
										<Specification><![CDATA[(Rate)]]></Specification>
										<Description><![CDATA[Exchange Rate]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options> </Options>
							</SwiftField>
						</Fields>
					</SwiftSequence>
					<SwiftSequence Name="B">
						<Name>B</Name>
						<Description><![CDATA[Transaction Details]]></Description>
						<Mandatory>true</Mandatory>
						<Repeating>true</Repeating>
						<Fields>
							<SwiftField Name="21">
								<SwiftFieldDef Name="21">
									<Generic>false</Generic>
									<Option Name="">
										<Format><![CDATA[16x]]></Format>
										<Specification><![CDATA[(Transaction Reference)]]></Specification>
										<Description><![CDATA[Transaction Reference]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options> </Options>
								<Validations>
									<SubField Name="Transaction_Reference">
										<Validation>
											<Options> </Options>
											<ErrorCode>T26</ErrorCode>
											<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive slashes '//'  (Error code(s): T26).]]></Comment>
											<ValidationPattern xsi:type="T26" Type="T26">
												<Type>T26</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="32B">
								<SwiftFieldDef Name="32">
									<Generic>false</Generic>
									<Option Name="B">
										<Format><![CDATA[3!a15d]]></Format>
										<Specification><![CDATA[(Currency) (Amount)]]></Specification>
										<Description><![CDATA[Transaction Amount]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options>B</Options>
								<Validations>
									<SubField Name="Currency">
										<Validation>
											<Options>B</Options>
											<ErrorCode>T52</ErrorCode>
											<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52).]]></Comment>
											<ValidationPattern xsi:type="Currency_Code" Type="Currency Code">
												<Type>Currency Code</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="Amount">
										<Validation>
											<Options>B</Options>
											<ErrorCode>C03</ErrorCode>
											<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency.]]></Comment>
											<ValidationPattern xsi:type="Decimal" Type="Decimal">
												<Type>Decimal</Type>
												<currency-field>Currency</currency-field>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="50a">
								<SwiftFieldDef Name="50">
									<Generic>false</Generic>
									<Option Name="A">
										<Format><![CDATA[([/34xCRLF])(4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(Account)(Identifier Code)]]></Specification>
										<Description><![CDATA[Ordering Customer]]></Description>
									</Option>
									<Option Name="F">
										<Format><![CDATA[35x(CRLF4*35x)]]></Format>
										<Specification><![CDATA[(Party Identifier)(Name & Address)]]></Specification>
										<Description><![CDATA[Ordering Customer]]></Description>
									</Option>
									<Option Name="K">
										<Format><![CDATA[([/34xCRLF])(4*35x)]]></Format>
										<Specification><![CDATA[(Account)(Name & Address)]]></Specification>
										<Description><![CDATA[Ordering Customer]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>A, K, F</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27, T28, T29, T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="52A">
								<SwiftFieldDef Name="52">
									<Generic>false</Generic>
									<Option Name="A">
										<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
										<Description><![CDATA[Ordering Institution]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>A</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27, T28, T29, T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
										<Validation>
											<Options>A</Options>
											<ErrorCode>C05</ErrorCode>
											<Comment><![CDATA[Identifier Code must not be a BEI, ie must not be of subtype BEID, MCCO, TESP or TRCO (Error code(s): C05).]]></Comment>
											<ValidationPattern xsi:type="C05" Type="C05">
												<Type>C05</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="CreditDebit">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T51</ErrorCode>
											<Comment><![CDATA[CreditDebit should contain the following codes]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="C">
														<DetailedName>Credit</DetailedName>
													</Code>
													<Code Name="D">
														<DetailedName>Debit</DetailedName>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="57A">
								<SwiftFieldDef Name="57">
									<Generic>false</Generic>
									<Description><![CDATA[Receiving Agent]]></Description>
									<Option Name="A">
										<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
										<Description><![CDATA[Account With Institution]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>A</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27, T28, T29, T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
										<Validation>
											<Options>A</Options>
											<ErrorCode>C05</ErrorCode>
											<Comment><![CDATA[Identifier Code must not be a BEI, ie must not be of subtype BEID, MCCO, TESP or TRCO (Error code(s): C05).]]></Comment>
											<ValidationPattern xsi:type="C05" Type="C05">
												<Type>C05</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="CreditDebit">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T51</ErrorCode>
											<Comment><![CDATA[CreditDebit should contain the following codes]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="C">
														<DetailedName>Credit</DetailedName>
													</Code>
													<Code Name="D">
														<DetailedName>Debit</DetailedName>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="59a">
								<SwiftFieldDef Name="59">
									<Generic>false</Generic>
									<Description><![CDATA[Beneficiary Customer]]></Description>
									<Option Name="">
										<Format><![CDATA[[/34xCRLF]4*35x]]></Format>
										<Specification><![CDATA[(Account)(Name & Address)]]></Specification>
										<Description><![CDATA[Beneficiary Customer]]></Description>
									</Option>
									<Option Name="A">
										<Format><![CDATA[([/34xCRLF])(4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(Account)(Identifier Code)]]></Specification>
										<Description><![CDATA[Beneficiary Customer]]></Description>
									</Option>
									<Option Name="F">
										<Format><![CDATA[[/34xCRLF]4*35x]]></Format>
										<Specification><![CDATA[(Account)(Name & Address Details)]]></Specification>
										<Description><![CDATA[Beneficiary Customer]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options>A,  , F</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27, T28, T29, T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="70">
								<SwiftFieldDef Name="70">
									<Generic>false</Generic>
									<Description><![CDATA[Narrative]]></Description>
									<Option Name="">
										<Format><![CDATA[4*35x]]></Format>
										<Specification><![CDATA[(Narrative)]]></Specification>
										<Description><![CDATA[Remittance Information]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options> </Options>
							</SwiftField>
							<SwiftField Name="26T">
								<SwiftFieldDef Name="26">
									<Generic>false</Generic>
									<Option Name="T">
										<Format><![CDATA[3!c]]></Format>
										<Specification><![CDATA[(Type)]]></Specification>
										<Description><![CDATA[Transaction Type Code]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>T</Options>
							</SwiftField>
							<SwiftField Name="77B">
								<SwiftFieldDef Name="77">
									<Generic>false</Generic>
									<Option Name="B">
										<Format><![CDATA[3*35x]]></Format>
										<Specification><![CDATA[(Narrative)]]></Specification>
										<Description><![CDATA[Regulatory Reporting]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>B</Options>
							</SwiftField>
							<SwiftField Name="33B">
								<SwiftFieldDef Name="33">
									<Generic>false</Generic>
									<Option Name="B">
										<Format><![CDATA[3!a15d]]></Format>
										<Specification><![CDATA[(Currency) (Amount)]]></Specification>
										<Description><![CDATA[Currency/Instructed Amount]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>B</Options>
								<Validations>
									<SubField Name="Currency">
										<Validation>
											<Options>B</Options>
											<ErrorCode>T52</ErrorCode>
											<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52).]]></Comment>
											<ValidationPattern xsi:type="Currency_Code" Type="Currency Code">
												<Type>Currency Code</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="Amount">
										<Validation>
											<Options>B</Options>
											<ErrorCode>C03</ErrorCode>
											<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency.]]></Comment>
											<ValidationPattern xsi:type="Decimal" Type="Decimal">
												<Type>Decimal</Type>
												<currency-field>Currency</currency-field>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="71A">
								<SwiftFieldDef Name="71">
									<Generic>false</Generic>
									<Option Name="A">
										<Format><![CDATA[3!a]]></Format>
										<Specification><![CDATA[(Code)]]></Specification>
										<Description><![CDATA[Details of Charges]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>A</Options>
								<Validations>
									<SubField Name="Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T08</ErrorCode>
											<Comment><![CDATA[One of the following codes must be used (Error code(s): T08):]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="BEN">
														<DetailedName>Beneficiary</DetailedName>
														<Description>The transaction charges are to be borne by the beneficiary customer.</Description>
													</Code>
													<Code Name="OUR">
														<DetailedName>Our customer charged</DetailedName>
														<Description>The transaction charges are to be borne by the ordering customer.</Description>
													</Code>
													<Code Name="SHA">
														<DetailedName>Shared charges</DetailedName>
														<Description>The transaction charges on the Sender&#8217;s side are to be borne by the ordering customer and the transaction charges on the Receiver&#8217;s side are to be borne by the beneficiary customer.</Description>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="71F">
								<SwiftFieldDef Name="71">
									<Generic>false</Generic>
									<Option Name="F">
										<Format><![CDATA[3!a15d]]></Format>
										<Specification><![CDATA[(Currency) (Amount)]]></Specification>
										<Description><![CDATA[Sender's Charges]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>true</Repeating>
								<Presence>O</Presence>
								<Options>F</Options>
								<Validations>
									<SubField Name="Currency">
										<Validation>
											<Options>F</Options>
											<ErrorCode>T52</ErrorCode>
											<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52).]]></Comment>
											<ValidationPattern xsi:type="Currency_Code" Type="Currency Code">
												<Type>Currency Code</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="Amount">
										<Validation>
											<Options>F</Options>
											<ErrorCode>C03</ErrorCode>
											<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency.]]></Comment>
											<ValidationPattern xsi:type="Decimal" Type="Decimal">
												<Type>Decimal</Type>
												<currency-field>Currency</currency-field>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="71G">
								<SwiftFieldDef Name="71">
									<Generic>false</Generic>
									<Option Name="G">
										<Format><![CDATA[3!a15d]]></Format>
										<Specification><![CDATA[(Currency) (Amount)]]></Specification>
										<Description><![CDATA[Receiver's Charges]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>G</Options>
								<Validations>
									<SubField Name="Currency">
										<Validation>
											<Options>G</Options>
											<ErrorCode>T52</ErrorCode>
											<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52).]]></Comment>
											<ValidationPattern xsi:type="Currency_Code" Type="Currency Code">
												<Type>Currency Code</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="Amount">
										<Validation>
											<Options>G</Options>
											<ErrorCode>C03</ErrorCode>
											<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency.]]></Comment>
											<ValidationPattern xsi:type="Decimal" Type="Decimal">
												<Type>Decimal</Type>
												<currency-field>Currency</currency-field>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="36">
								<SwiftFieldDef Name="36">
									<Generic>false</Generic>
									<Description><![CDATA[Exchange Rate]]></Description>
									<Option Name="">
										<Format><![CDATA[12d]]></Format>
										<Specification><![CDATA[(Rate)]]></Specification>
										<Description><![CDATA[Exchange Rate]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options> </Options>
							</SwiftField>
						</Fields>
					</SwiftSequence>
					<SwiftSequence Name="C">
						<Name>C</Name>
						<Description><![CDATA[Settlement Details]]></Description>
						<Mandatory>true</Mandatory>
						<Repeating>false</Repeating>
						<Fields>
							<SwiftField Name="32A">
								<SwiftFieldDef Name="32">
									<Generic>false</Generic>
									<Option Name="A">
										<Format><![CDATA[6!n3!a15d]]></Format>
										<Specification><![CDATA[(Date) (Currency) (Amount)]]></Specification>
										<Description><![CDATA[Value Date, Currency Code, Amount]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options>A</Options>
								<Validations>
									<SubField Name="Date">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T50</ErrorCode>
											<Comment><![CDATA[Date must be a valid date expressed as YYMMDD (Error code(s): T50).]]></Comment>
											<ValidationPattern xsi:type="DATE" Type="DATE">
												<Type>DATE</Type>
												<Format>yyMMdd</Format>
												<value-date>true</value-date>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="Currency">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T52</ErrorCode>
											<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52).]]></Comment>
											<ValidationPattern xsi:type="Currency_Code" Type="Currency Code">
												<Type>Currency Code</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="Amount">
										<Validation>
											<Options>A</Options>
											<ErrorCode>C03</ErrorCode>
											<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency.]]></Comment>
											<ValidationPattern xsi:type="Decimal" Type="Decimal">
												<Type>Decimal</Type>
												<currency-field>Currency</currency-field>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="19">
								<SwiftFieldDef Name="19">
									<Generic>false</Generic>
									<Description><![CDATA[Amount]]></Description>
									<Option Name="">
										<Format><![CDATA[17d]]></Format>
										<Specification><![CDATA[(Amount)]]></Specification>
										<Description><![CDATA[Sum of Amounts ]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options> </Options>
							</SwiftField>
							<SwiftField Name="71G">
								<SwiftFieldDef Name="71">
									<Generic>false</Generic>
									<Option Name="G">
										<Format><![CDATA[3!a15d]]></Format>
										<Specification><![CDATA[(Currency) (Amount)]]></Specification>
										<Description><![CDATA[Sum of Receiver's Charges]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>G</Options>
								<Validations>
									<SubField Name="Currency">
										<Validation>
											<Options>G</Options>
											<ErrorCode>T52</ErrorCode>
											<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52).]]></Comment>
											<ValidationPattern xsi:type="Currency_Code" Type="Currency Code">
												<Type>Currency Code</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="Amount">
										<Validation>
											<Options>G</Options>
											<ErrorCode>C03</ErrorCode>
											<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency.]]></Comment>
											<ValidationPattern xsi:type="Decimal" Type="Decimal">
												<Type>Decimal</Type>
												<currency-field>Currency</currency-field>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="13C">
								<SwiftFieldDef Name="13">
									<Generic>false</Generic>
									<Description><![CDATA[Number Identification]]></Description>
									<Option Name="C">
										<Format><![CDATA[/8c/4!n1!x4!n]]></Format>
										<Specification><![CDATA[(Code)(Time indication)(Sign)(Time offset) ]]></Specification>
										<Description><![CDATA[Time indication]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>true</Repeating>
								<Presence>O</Presence>
								<Options>C</Options>
								<Validations>
									<SubField Name="Time_indication">
										<Validation>
											<Options>C</Options>
											<ErrorCode>T38</ErrorCode>
											<Comment><![CDATA[Time indication must be a valid time expressed as HHMM (Error code(s): T38).]]></Comment>
											<ValidationPattern xsi:type="DATE" Type="DATE">
												<Type>DATE</Type>
												<Format>HHmm</Format>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="Time_offset">
										<Validation>
											<Options>C</Options>
											<ErrorCode>T16</ErrorCode>
											<Comment><![CDATA[Time offset is expressed as HHMM, where the hour component, ie, 'HH', must be in the range of 00 through 13,and the minute component, ie, 'MM' must be in the range of 00 through 59. Any 'HH' or 'MM' component outside of these range checks will be disallowed.]]></Comment>
											<ValidationPattern xsi:type="Time_Offset" Type="Time Offset">
												<Type>Time Offset</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="Sign">
										<Validation>
											<Options>C</Options>
											<ErrorCode>T15</ErrorCode>
											<Comment><![CDATA[Sign is either "+" or "-" (Error code(s): T15).]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="+">
														<DetailedName>Plus</DetailedName>
														<Description>The + sign.</Description>
													</Code>
													<Code Name="-">
														<DetailedName>Minus</DetailedName>
														<Description>The - sign.</Description>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="53a">
								<SwiftFieldDef Name="53">
									<Generic>false</Generic>
									<Description><![CDATA[Sender's Correspondent]]></Description>
									<Option Name="A">
										<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
										<Description><![CDATA[Sender's Correspondent]]></Description>
									</Option>
									<Option Name="C">
										<Format><![CDATA[/34x]]></Format>
										<Specification><![CDATA[(Account)]]></Specification>
										<Description><![CDATA[Account for Payment]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>A, C</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27, T28, T29, T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
										<Validation>
											<Options>A</Options>
											<ErrorCode>C05</ErrorCode>
											<Comment><![CDATA[Identifier Code must not be a BEI, ie must not be of subtype BEID, MCCO, TESP or TRCO (Error code(s): C05).]]></Comment>
											<ValidationPattern xsi:type="C05" Type="C05">
												<Type>C05</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="CreditDebit">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T51</ErrorCode>
											<Comment><![CDATA[CreditDebit should contain the following codes]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="C">
														<DetailedName>Credit</DetailedName>
													</Code>
													<Code Name="D">
														<DetailedName>Debit</DetailedName>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="54A">
								<SwiftFieldDef Name="54">
									<Generic>false</Generic>
									<Option Name="A">
										<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
										<Description><![CDATA[Receiver's Correspondent]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>A</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27, T28, T29, T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
										<Validation>
											<Options>A</Options>
											<ErrorCode>C05</ErrorCode>
											<Comment><![CDATA[Identifier Code must not be a BEI, ie must not be of subtype BEID, MCCO, TESP or TRCO (Error code(s): C05).]]></Comment>
											<ValidationPattern xsi:type="C05" Type="C05">
												<Type>C05</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="CreditDebit">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T51</ErrorCode>
											<Comment><![CDATA[CreditDebit should contain the following codes]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="C">
														<DetailedName>Credit</DetailedName>
													</Code>
													<Code Name="D">
														<DetailedName>Debit</DetailedName>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="72">
								<SwiftFieldDef Name="72">
									<Generic>false</Generic>
									<Option Name="">
										<Format><![CDATA[6*35x]]></Format>
										<Specification><![CDATA[(Narrative - Structured Format)]]></Specification>
										<Description><![CDATA[Sender to Receiver Information]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options> </Options>
							</SwiftField>
						</Fields>
					</SwiftSequence>
				</Fields>
			</Data>
			<Trailer>
				<fields>
					<field>
						<name>Message Authentication Code</name>
						<description><![CDATA[Allows authentication by the receiving user. It is followed by an authentication result.

This trailer is mandatory for most user-to-user message categories within the FIN application. When the FIN Copy Service is used a PAC trailer, if present, follows the MAC trailer.

Format:

{MAC:<authentication-result>}

where <authentication-result> = 8!h

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>8</length>
						<tag>MAC</tag>
					</field>
					<field>
						<name>Proprietary Authentication Code</name>
						<description><![CDATA[The PAC is used within the FIN Copy service only, when using the double authentication option. The PAC is included in Block 5 of FIN user-to-user messages, immediately after the MAC trailer, if present.

This is calculated on the extracted fields of Block 4 of the message, the value of field 115, if present, and the <authentication-result> of the MAC trailer for Copy Services with double authentication.

Thus, the end-of-block indicator (CrLf-) is included in the PAC calculation, and the fields are defined as follows:

The first three characters are CrLf:

The field and the delimiter are present, that is, 32A:, 20:, and so on.

All subfields and their delimiters are present.

Format:

{PAC:[<authentication-result>]}

where <authentication-result> is mandatory on input messages only and <authentication-result> = 8!h

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>8</length>
						<tag>PAC</tag>
					</field>
					<field>
						<name>Checksum</name>
						<description><![CDATA[The checksum is computed based on the receiver's address (12 characters, with 9th character replaced by X) plus the Text Block. This trailer allows the system and the CBT to check that messages have not been corrupted due to a system malfunction or an undetected transmission error.

Format:

{CHK:<checksum-result>}

where <checksum-result> = 12!h

Note: This trailer is mandatory for FIN and GPA messages (Service Identifier 01).

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>12</length>
						<tag>CHK</tag>
					</field>
					<field>
						<name>System Originated Message</name>
						<description><![CDATA[The system message or service message which is generated by a system PLT has a SYS trailer. All solicited system messages (Service Identifier 01) contain the MIR of the request and may also contain the time.

Format:

{SYS:[<time><mir>]}

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>SYS</tag>
					</field>
					<field>
						<name>Test And Training Message</name>
						<description><![CDATA[Mandatory for FIN and GPA messages (Service Identifier 01) sent by, or delivered to, a Test & Training Logical Terminal (LT). This trailer has a tag only, and no value.

Format:

{TNG:}
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>0</length>
						<tag>TNG</tag>
					</field>
					<field>
						<name>Possible Duplicate Emission</name>
						<description><![CDATA[This trailer is used by the destination of the message. It only applies to FIN user-to-user messages (Service Identifier 01, message categories reserved for banking messages). There can be multiple PDEs. The system does not verify the order nor restrict the number (except for maximum message length).

Correctly formatted PDE trailers applied to user-to-system messages are accepted by the system, but not processed. This means that the system does not check to see if the original message exists. Therefore, a retrieval request sent with a PDE trailer may be processed twice if the original message was received by the system.

Format:

{PDE:[<time><mir>]}

where <time><mir> refers to the emission of the previous possible issue.

Note: It can be added automatically by a CBT or manually by a user. It may be followed by the MIR and the time of its previous possible messages.

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>PDE</tag>
					</field>
					<field>
						<name>Delayed Message</name>
						<description><![CDATA[This trailer is added to all FIN user-to-user output messages that have exceeded their obsolescence period. If this trailer appears in GPA or FIN system messages, it must be ignored. This trailer has a tag only, and no value.

The Obsolescence Period is:

U = 15 minutes

N = 100 minutes

Format:

{DLM:}

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>0</length>
						<tag>DLM</tag>
					</field>
					<field>
						<name>Possible Duplicate Message</name>
						<description><![CDATA[Added by the system to any output message (GPA and FIN Service Identifier 01) being resent because a prior delivery may be invalid. If a system PLT receives a report request with a PDM, the response has a plain PDM (without the optional delivery reference). Other PDMs may be added as a result of unsuccessful delivery attempts to the user. 
Format:
{PDM:[<time><mor>]}
where <time> and the Message Output Reference <mor> are that of the previous attempt.
Note: For messages recovered after a system failure, the optional fields may not be present.
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>PDM</tag>
					</field>
					<field>
						<name>Message Reference</name>
						<description><![CDATA[The MRF trailer is used to specify the message reference of the original user message in MT 096 FIN Copy to Central Institution Messages.
Format:
{MRF:<date><full-time><mir>}
where <mir> is that of the original user message whose fields are copied in the MT 096 FIN Copy to Central Institution Message.
Note: The MRF is specific to FIN Copy. The MRF trailer is automatically generated in the MT 096 FIN Copy to Central Institution Message and can only be reused in field 109 of the MT 096 FIN Copy to Central Institution Message to identify the MT 096 to which the MT 097 is a response. The format of the MRF is subject to change.
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>MRF</tag>
					</field>
				</fields>
			</Trailer>
		</SwiftFields>
		<validationrules name="Default">
			<hdrvalidationrules>
				<fieldvalidations>
					<fieldvalidation>
						<name>U08</name>
						<formula><![CDATA[if($this.Header.GetFieldIndex("User_Header") != -1) {
    def userHeader = $this.Header.GetSection("User_Header");
    if(userHeader.$size == 0) {
        return false;
    }
    else
        if(userHeader[0].IsNull("Validation_Flag")) {
            return false;
        }
        else
            if(userHeader[0].GetString("Validation_Flag") != "STP") {
                return false;
            }


}
return true;
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U08</error-code>
						<actionmessage><![CDATA["Invalid syntax, format, code word in tag 119(Validation Flag), or field tag 119 is missing. Allowed value is STP."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>U03</name>
						<fieldname>User Header</fieldname>
						<formula><![CDATA[Iff(IsNotNull(User_Header.Service_Type_Identifier), 
    IsNotNull(User_Header.Unique_End_To_End_Transaction_Reference))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U03</error-code>
						<actionmessage><![CDATA["When populating an end-to-end reference, both fields 111 and 121 must be populated: a message that contains only one of these two fields will not be accepted by FIN."]]></actionmessage>
					</fieldvalidation>
				</fieldvalidations>
			</hdrvalidationrules>
			<datavalidationrules>
				<fieldvalidations>
					<fieldvalidation>
						<name>FB-59a-A</name>
						<fieldname>B.59a</fieldname>
						<comment><![CDATA["Subfield 1 (Account) must be present."]]></comment>
						<formula><![CDATA[IsNotNull(B.F59a.Account)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E10</error-code>
						<actionmessage><![CDATA["Subfield 1 (Account) must be present."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FC-19-A</name>
						<fieldname>C.19.Amount</fieldname>
						<comment><![CDATA["The number of digits following the comma must not exceed the maximum number allowed for the currency specified in field 32A."]]></comment>
						<formula><![CDATA[isValidDecimals(C.F32A[0].Currency, $value)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C03</error-code>
						<actionmessage><![CDATA["The number of digits following the comma must not exceed the maximum number allowed for the currency specified in field 32A."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FC-71G-A</name>
						<fieldname>C.71G.Amount</fieldname>
						<comment><![CDATA["If field 71G is present in sequence C, the amount in field 71G must not equal '0'."]]></comment>
						<formula><![CDATA[$value > 0]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D57</error-code>
						<actionmessage><![CDATA["If field 71G is present in sequence C, the amount in field 71G must not equal '0'."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FC-72-A</name>
						<fieldname>C.72.Narrative_-_Structured_Format</fieldname>
						<comment><![CDATA["The first line of field 72 should be of the following format: /8c/[additional information]. The remaining lines (2 - 6) should be of the following format: [//continuation of additional information] or [/8c/[additional information]]."]]></comment>
						<formula><![CDATA[VerifyField72NarrativeText($value)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T32</error-code>
						<actionmessage><![CDATA["The first line of field 72 should be of the following format: /8c/[additional information]. The remaining lines (2 - 6) should be of the following format: [//continuation of additional information] or [/8c/[additional information]]."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FC-72-B</name>
						<fieldname>C.72.Narrative_-_Structured_Format</fieldname>
						<comment><![CDATA["If the code /INS/ is used at the beginning of a line, it must be followed by a valid BIC and be the only information on that line."]]></comment>
						<formula><![CDATA[def ActualValue = replace($value, "\r\n", "\n");
$startIndex = (If(StartsWith(ActualValue, "/INS/"), 0, FindFirst(ActualValue, "\n/INS/")));
$codeLen = (If(StartsWith(ActualValue, "/INS/"), 5, 6));
$endIndex = (If($startIndex == -1, -1, FindFirst(ActualValue, "\n", $startIndex + $codeLen)));
$endIndex = (If(($startIndex > -1 && $endIndex == -1), Length(ActualValue), $endIndex));
If($startIndex > -1 && $endIndex > -1, 
   IsValidBIC(Mid(ActualValue, $startIndex + $codeLen, $endIndex - ($startIndex + $codeLen))), 
   true);]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T27</error-code>
						<actionmessage><![CDATA["If the code /INS/ is used at the beginning of a line, it must be followed by a valid BIC and be the only information on that line."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FC-72-C</name>
						<fieldname>C.72.Narrative_-_Structured_Format</fieldname>
						<comment><![CDATA["If the code /INS/ is present at the beginning of a line, it must not be used again at the beginning of any other line."]]></comment>
						<formula><![CDATA[def ActualValue = replace($value, "\r\n", "\n");
$index = FindFirst(ActualValue, "\n/INS/");
If(StartsWith(ActualValue, "/INS/"), 
   $index == -1, 
   If($index > -1, FindFirst(ActualValue, "\n/INS/", $index + 7) == -1, true));]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T47</error-code>
						<actionmessage><![CDATA["If the code /INS/ is present at the beginning of a line, it must not be used again at the beginning of any other line."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FC-72-D</name>
						<fieldname>C.72.Narrative_-_Structured_Format</fieldname>
						<comment><![CDATA["The codes /REJT/ or /RETN/ must not be used in this field."]]></comment>
						<formula><![CDATA[def ActualValue = replace($value, "\r\n", "\n");
!StartsWith(ActualValue, "/REJT/") && 
  !StartsWith(ActualValue, "/RETN/") && 
  FindFirst(ActualValue, "\n/REJT/") == -1 && 
  FindFirst(ActualValue, "\n/RETN/") == -1]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T81</error-code>
						<actionmessage><![CDATA["The codes /REJT/ or /RETN/ must not be used in this field."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FC-72-E</name>
						<fieldname>C.72.Narrative_-_Structured_Format</fieldname>
						<comment><![CDATA["Field 72 must not include ERI, i.e. the codes /OCMT/ or /CHGS/ must not be used."]]></comment>
						<formula><![CDATA[def ActualValue = replace($value, "\r\n", "\n");
!StartsWith(ActualValue, "/OCMT/") && 
  !StartsWith(ActualValue, "/CHGS/") && 
  FindFirst(ActualValue, "\n/OCMT/") == -1 && 
  FindFirst(ActualValue, "\n/CHGS/") == -1]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T82</error-code>
						<actionmessage><![CDATA["Field 72 must not include ERI, i.e. the codes /OCMT/ or /CHGS/ must not be used."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FA-50a-A</name>
						<fieldname>A.50a.Party_Identifier</fieldname>
						<comment><![CDATA[FA-50a-A
With option F, subfield 1 (Party Identifier), one of the following line formats must be used (Error code(s): T54):
Line format 1 :/34x (Account)
Line format 2 :4!a/2!a/27x (Code)(Country Code)(Identifier)]]></comment>
						<formula><![CDATA[Implies(A.F50a.FormatOption == 'F', Verify50FPartyIdFormat($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T54</error-code>
						<actionmessage><![CDATA["Invalid 'Party Identifier' value. One of the following line formats must be used: /34x (Account) or 4!a/2!a/27x (Code)(Country Code)(Identifier)"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FA-50a-B</name>
						<fieldname>A.50a.Party_Identifier</fieldname>
						<comment><![CDATA[FA-50a-B
In option F, when subfield 1 Party Identifier is used with the (Code)(Country Code)(Identifier) format, one of the following codes must be used (Error code(s): T55): ARNU, CCPT, CUST, DRLC, EMPL, NIDN, SOSE and TXID."
]]></comment>
						<formula><![CDATA[Implies(A.F50a.FormatOption == 'F', Verify50FPartyIdCode($value))
/* get the code from party identifier if format is 4!a/2!a/27x */   ]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T55</error-code>
						<actionmessage><![CDATA["Invalid 'Party Identifier' value. When 'Party Identifier' is used with the format (Code)(Country Code)(Identifier), one of following codes must be used: ARNU, CCPT, CUST, DRLC, EMPL, NIDN, SOSE and TXID."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FA-50a-C</name>
						<fieldname>A.50a.Party_Identifier</fieldname>
						<comment><![CDATA[FA-50a-D
In option F, subfield 1 (Party Identifier) used with the (Code)(Country Code)(Identifier) format: Country Code must be a valid ISO country code (Error code(s): T73).
]]></comment>
						<formula><![CDATA[Implies(A.F50a.FormatOption == 'F', Verify50FPartyIdCountryCode($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T73</error-code>
						<actionmessage><![CDATA["Invalid 'Party Identifier' value. In option F, subfield 1 (Party Identifier) used with the (Code)(Country Code)(Identifier) format: Country Code must be a valid ISO country code."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FA-50a-D</name>
						<fieldname>A.50a.Name_&amp;_Address</fieldname>
						<comment><![CDATA[FA-50a-C
With option F, subfield 2 (Name and Address), the following line format must be used for all lines: 1!n/33x (Number)(Details). (Error code(s): T54).]]></comment>
						<formula><![CDATA[Implies(A.F50a.FormatOption == 'F', Verify50FNmandAdrFormat($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T54</error-code>
						<actionmessage><![CDATA["Invalid 'Name and Address' value. With option F, subfield 2 (Name and Address), the following line format must be used for all lines :1!n/33x (Number)(Details)."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FA-50a-E</name>
						<fieldname>A.50a.Name_&amp;_Address</fieldname>
						<comment><![CDATA[FA-50a-E
 With option F - subfield 2 (Name and Address), should start with Number 1 to 8 and it should follow the line formatting rules as specified in the SWIFT spec (Error code(s): T56).]]></comment>
						<formula><![CDATA[Implies(A.F50a.FormatOption == 'F', Verify50FNmandAdrLines2($value, A.F50a.Party_Identifier))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T56</error-code>
						<actionmessage><![CDATA["Invalid 'Name and Address' value. With option F - subfield 2 (Name and Address), should start with Number 1 to 8 and it should follow the line formatting rules as specified in the SWIFT spec."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FA-50a-F</name>
						<fieldname>A.50a.Name_&amp;_Address</fieldname>
						<comment><![CDATA[FA-50a-F
Number 4 must be followed by a valid date in the format YYYYMMDD and this date, local to the sender, must not be later than the date on which the message is successfully sent to SWIFT (Error code(s): T50).
]]></comment>
						<formula><![CDATA[Implies(A.F50a.FormatOption == 'F', Verify50FNmandAdrDate($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T50</error-code>
						<actionmessage><![CDATA["Invalid 'Name and Address' value. Number 4 must be followed by a valid date in the format YYYYMMDD and this date, local to the sender, must not be later than the date on which the message is successfully sent to SWIFT."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FA-50a-G</name>
						<fieldname>A.50a.Name_&amp;_Address</fieldname>
						<comment><![CDATA[FA-50a-G
Numbers 3, 5, 6 and 7 must be followed by a valid ISO country code
(Error code(s): T73).]]></comment>
						<formula><![CDATA[Implies(A.F50a.FormatOption == 'F',Verify50FNmandAdrCtryCode2($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T73</error-code>
						<actionmessage><![CDATA["Invalid 'Name and Address' value. Numbers 3, 5, 6 and 7 must be followed by a valid ISO country code."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-50a-A</name>
						<fieldname>B.50a.Party_Identifier</fieldname>
						<comment><![CDATA[FB-50a-A
With option F, subfield 1 (Party Identifier), one of the following line formats must be used (Error code(s): T54):
Line format 1 :/34x (Account)
Line format 2 :4!a/2!a/27x (Code)(Country Code)(Identifier)]]></comment>
						<formula><![CDATA[Implies(B.F50a.FormatOption == 'F', Verify50FPartyIdFormat($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T54</error-code>
						<actionmessage><![CDATA["Invalid 'Party Identifier' value. One of the following line formats must be used: /34x (Account) or 4!a/2!a/27x (Code)(Country Code)(Identifier)"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-50a-B</name>
						<fieldname>B.50a.Party_Identifier</fieldname>
						<comment><![CDATA[FB-50a-B
In option F, when subfield 1 Party Identifier is used with the (Code)(Country Code)(Identifier) format, one of the following codes must be used (Error code(s): T55): ARNU, CCPT, CUST, DRLC, EMPL, NIDN, SOSE and TXID."
]]></comment>
						<formula><![CDATA[Implies(B.F50a.FormatOption == 'F', Verify50FPartyIdCode($value))
/* get the code from party identifier if format is 4!a/2!a/27x */   ]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T55</error-code>
						<actionmessage><![CDATA["Invalid 'Party Identifier' value. When 'Party Identifier' is used with the format (Code)(Country Code)(Identifier), one of following codes must be used: ARNU, CCPT, CUST, DRLC, EMPL, NIDN, SOSE and TXID."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-50a-C</name>
						<fieldname>B.50a.Party_Identifier</fieldname>
						<comment><![CDATA[FB-50a-D
In option F, subfield 1 (Party Identifier) used with the (Code)(Country Code)(Identifier) format: Country Code must be a valid ISO country code (Error code(s): T73).
]]></comment>
						<formula><![CDATA[Implies(B.F50a.FormatOption == 'F', Verify50FPartyIdCountryCode($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T73</error-code>
						<actionmessage><![CDATA["Invalid 'Party Identifier' value. In option F, subfield 1 (Party Identifier) used with the (Code)(Country Code)(Identifier) format: Country Code must be a valid ISO country code."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-50a-D</name>
						<fieldname>B.50a.Name_&amp;_Address</fieldname>
						<comment><![CDATA[FB-50a-C
With option F, subfield 2 (Name and Address), the following line format must be used for all lines: 1!n/33x (Number)(Details). (Error code(s): T54).]]></comment>
						<formula><![CDATA[Implies(B.F50a.FormatOption == 'F', Verify50FNmandAdrFormat($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T54</error-code>
						<actionmessage><![CDATA["Invalid 'Name and Address' value. With option F, subfield 2 (Name and Address), the following line format must be used for all lines :1!n/33x (Number)(Details)."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-50a-E</name>
						<fieldname>B.50a.Name_&amp;_Address</fieldname>
						<comment><![CDATA[FB-50a-E
 With option F - subfield 2 (Name and Address), should start with Number 1 to 8 and it should follow the line formatting rules as specified in the SWIFT spec (Error code(s): T56).]]></comment>
						<formula><![CDATA[Implies(B.F50a.FormatOption == 'F', Verify50FNmandAdrLines2($value, B.F50a.Party_Identifier))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T56</error-code>
						<actionmessage><![CDATA["Invalid 'Name and Address' value. With option F - subfield 2 (Name and Address), should start with Number 1 to 8 and it should follow the line formatting rules as specified in the SWIFT spec."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-50a-F</name>
						<fieldname>B.50a.Name_&amp;_Address</fieldname>
						<comment><![CDATA[FB-50a-F
Number 4 must be followed by a valid date in the format YYYYMMDD and this date, local to the sender, must not be later than the date on which the message is successfully sent to SWIFT (Error code(s): T50).
]]></comment>
						<formula><![CDATA[Implies(B.F50a.FormatOption == 'F', Verify50FNmandAdrDate($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T50</error-code>
						<actionmessage><![CDATA["Invalid 'Name and Address' value. Number 4 must be followed by a valid date in the format YYYYMMDD and this date, local to the sender, must not be later than the date on which the message is successfully sent to SWIFT."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-50a-G</name>
						<fieldname>B.50a.Name_&amp;_Address</fieldname>
						<comment><![CDATA[FB-50a-G
Numbers 3, 5, 6 and 7 must be followed by a valid ISO country code
(Error code(s): T73).]]></comment>
						<formula><![CDATA[Implies(B.F50a.FormatOption == 'F',Verify50FNmandAdrCtryCode2($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T73</error-code>
						<actionmessage><![CDATA["Invalid 'Name and Address' value. Numbers 3, 5, 6 and 7 must be followed by a valid ISO country code."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C1</name>
						<fieldname>C.19.Amount</fieldname>
						<comment><![CDATA["If field 19 is present in sequence C, it must equal the sum of the amounts in all occurrences of field 32B."]]></comment>
						<formula><![CDATA[Abs($value - SecSumDouble(B, "F32B.Amount")) < 1.0E-4
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C01</error-code>
						<actionmessage><![CDATA["If field 19 is present in sequence C, it must equal the sum of the amounts in all occurrences of field 32B."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C2-1</name>
						<fieldname>B.32B.Currency</fieldname>
						<comment><![CDATA["The currency code in the fields 71G, 32B and 32A must be the same for all occurrences of these fields in the message."]]></comment>
						<formula><![CDATA[$value == B[0].F32B[0].Currency]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C02</error-code>
						<actionmessage><![CDATA["The currency code in the fields 71G, 32B and 32A must be the same for all occurrences of these fields in the message."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C2-2</name>
						<fieldname>B.71G.Currency</fieldname>
						<comment><![CDATA["The currency code in the fields 71G, 32B and 32A must be the same for all occurrences of these fields in the message."]]></comment>
						<formula><![CDATA[$value == B[0].F32B[0].Currency]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C02</error-code>
						<actionmessage><![CDATA["The currency code in the fields 71G, 32B and 32A must be the same for all occurrences of these fields in the message."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C2-3</name>
						<fieldname>C.71G.Currency</fieldname>
						<comment><![CDATA["The currency code in the fields 71G, 32B and 32A must be the same for all occurrences of these fields in the message."]]></comment>
						<formula><![CDATA[$value == B[0].F32B[0].Currency]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C02</error-code>
						<actionmessage><![CDATA["The currency code in the fields 71G, 32B and 32A must be the same for all occurrences of these fields in the message."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C2-4</name>
						<fieldname>C.32A.Currency</fieldname>
						<comment><![CDATA["The currency code in the fields 71G, 32B and 32A must be the same for all occurrences of these fields in the message."]]></comment>
						<formula><![CDATA[$value == B[0].F32B[0].Currency]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C02</error-code>
						<actionmessage><![CDATA["The currency code in the fields 71G, 32B and 32A must be the same for all occurrences of these fields in the message."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C3</name>
						<fieldname>B</fieldname>
						<comment><![CDATA["Field 50a must be present either in sequence A or in each occurrence of sequence B, but it must never be present in both sequences, nor be absent from both sequences."]]></comment>
						<formula><![CDATA[If(A[0].F50a.$size == 0, 
   B.F50a.$size > 0, 
   B.F50a.$size == 0)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D17</error-code>
						<actionmessage><![CDATA["Field 50a must be present either in sequence A or in each occurrence of sequence B, but it must never be present in both sequences, nor be absent from both sequences."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C4</name>
						<fieldname>B</fieldname>
						<comment><![CDATA["Field 71A must be present either in sequence A or in each occurrence of sequence B, but it must never be present in both sequences, nor be absent from both sequences."]]></comment>
						<formula><![CDATA[If(A[0].F71A.$size == 0, 
   B.F71A.$size > 0, 
   B.F71A.$size == 0)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D20</error-code>
						<actionmessage><![CDATA["Field 71A must be present either in sequence A or in each occurrence of sequence B, but it must never be present in both sequences, nor be absent from both sequences."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C5-A</name>
						<fieldname>B.52A</fieldname>
						<comment><![CDATA["When a field 52A is present in any occurrence of sequence B, that field must not be present in sequence A."]]></comment>
						<formula><![CDATA[A[0].F52A.$size == 0]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D18</error-code>
						<actionmessage><![CDATA["When a field 52A is present in any occurrence of sequence B, that field must not be present in sequence A."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C5-B</name>
						<fieldname>B.26T</fieldname>
						<comment><![CDATA["When a field 26T is present in any occurrence of sequence B, that field must not be present in sequence A."]]></comment>
						<formula><![CDATA[A[0].F26T.$size == 0]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D18</error-code>
						<actionmessage><![CDATA["When a field 26T is present in any occurrence of sequence B, that field must not be present in sequence A."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C5-C</name>
						<fieldname>B.77B</fieldname>
						<comment><![CDATA["When a field 77B is present in any occurrence of sequence B, that field must not be present in sequence A."]]></comment>
						<formula><![CDATA[A[0].F77B.$size == 0]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D18</error-code>
						<actionmessage><![CDATA["When a field 77B is present in any occurrence of sequence B, that field must not be present in sequence A."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C6-A</name>
						<fieldname>A.36</fieldname>
						<comment><![CDATA["If field 36 is present in Sequence A, then the following conditions apply: 1) in minimum one occurrence of Sequence B field 33B must be present and currency codes in fields 32B and 33B must be different; 2) field 36 is not allowed in any occurrence of Sequence B."]]></comment>
						<formula><![CDATA[$sec1 = SecFilter(B, "$filterObj.F33B.$size > 0");
$sec2 = SecFilter($sec1, 
                  "$filterObj.F33B[0].Currency != $filterObj.F32B[0].Currency");
$sec2.$size > 0 && !SecExistsInAtLeastOne(B, "F36");
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D22</error-code>
						<actionmessage><![CDATA["If field 36 is present in Sequence A, then the following conditions apply: 1) in minimum one occurrence of Sequence B field 33B must be present and currency codes in fields 32B and 33B must be different; 2) field 36 is not allowed in any occurrence of Sequence B."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C6-B</name>
						<fieldname>B</fieldname>
						<comment><![CDATA["Field 36 must be present in every sequence B which contains fields 32B and 33B with different currency codes and must not be present in sequence A or any other sequence B."]]></comment>
						<formula><![CDATA[If(A[0].F36.$size == 0, 
   If(B.F33B.$size > 0 && 
        (B.F33B[0].Currency != B.F32B[0].Currency), 
      B.F36.$size > 0, 
      B.F36.$size == 0), 
   true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D22</error-code>
						<actionmessage><![CDATA["Field 36 must be present in every sequence B which contains fields 32B and 33B with different currency codes and must not be present in sequence A or any other sequence B."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C7</name>
						<fieldname>B</fieldname>
						<comment><![CDATA["If the country codes of the Sender's and the Receiver's BICs are within the following list: AD, AT, BE, BG, BV, CH, CY, CZ, DE, DK, EE, ES, FI, FR, GB, GF, GI, GP, GR, HU, IE, IS, IT, LI, LT, LU, LV, MC, MQ, MT, NL, NO, PL, PM, PT, RE, RO, SE, SI, SJ, SK, SM, TF and VA, then field 33B is mandatory in each occurrence of sequence B, otherwise field 33B is optional."]]></comment>
						<formula><![CDATA[def header = $this.Header;
def appheader;
if(header.GetFieldCount() == 0 || (header.getfieldcount() > 0 && header.GetFieldIndex("Basic_Header") == -1)) {
	// No Header or FICC Header
	return true;
}
if(header.GetFieldCount() == 4) {
	// Input/output header
    appheader = If(header.GetSection(1).$size > 0, 
                   header.GetSection(1)[0], 
                   header.GetSection(2)[0]);
}
else {
    appheader = header.GetSection(1)[0];
}
def basicheader = header.GetSection(0)[0];
def ioIdentifier = appheader.GetString("Input_Output_Identifier");
def mir = (If(ioIdentifier == "O", 
           GetString(appheader, "Message Input Reference"), 
           ""));
def receiverAddress = (If(ioIdentifier == "I", 
                       GetString(appheader, "Receiver's Address"), 
                       ""));
def senderCountryCode = (If(ioIdentifier == "I", 
                         Mid(basicheader.GetString("LT Identifier"), 4, 2), 
                         Mid(mir, 10, 2)));
def receiverCountryCode = (If(ioIdentifier == "I", 
                           Mid(receiverAddress, 4, 2), 
                           Mid(basicheader.GetString("LT Identifier"), 4, 2)));
def countryList = ["AD", "AT", "BE", "BG", "BV", "CH", "CY", 
      "CZ", "DE", "DK", "EE", "ES", "FI", "FR", "GB", "GF", 
      "GI", "GP", "GR", "HU", "IE", "IS", "IT", "LI", "LT", 
      "LU", "LV", "MC", "MQ", "MT", "NL", "NO", "PL", "PM", 
      "PT", "RE", "RO", "SE", "SI", "SJ", "SK", "SM", "TF", "VA"];                           
If(In(senderCountryCode, countryList) && 
     In(receiverCountryCode, countryList), 
    B.F33B.$size > 0, 
   true);]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D49</error-code>
						<actionmessage><![CDATA["If the country codes of the Sender's and the Receiver's BICs are within the following list: AD, AT, BE, BG, BV, CH, CY, CZ, DE, DK, EE, ES, FI, FR, GB, GF, GI, GP, GR, HU, IE, IS, IT, LI, LT, LU, LV, MC, MQ, MT, NL, NO, PL, PM, PT, RE, RO, SE, SI, SJ, SK, SM, TF and VA, then field 33B is mandatory in each occurrence of sequence B, otherwise field 33B is optional."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C8-A</name>
						<fieldname>B.71F</fieldname>
						<comment><![CDATA["If field 71A in sequence A contains OUR, then field 71F is not allowed and field 71G is optional in any occurrence of sequence B."]]></comment>
						<formula><![CDATA[A[0].F71A.$size == 0 || A[0].F71A[0].Code != "OUR"]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E13</error-code>
						<actionmessage><![CDATA["If field 71A in sequence A contains OUR, then field 71F is not allowed and field 71G is optional in any occurrence of sequence B."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C8-B</name>
						<fieldname>B.71F</fieldname>
						<comment><![CDATA["If field 71A in sequence B contains OUR, then field 71F is not allowed and field 71G is optional in the same occurrence of sequence B."]]></comment>
						<formula><![CDATA[B.F71A.$size == 0 || B.F71A[0].Code != "OUR"]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E13</error-code>
						<actionmessage><![CDATA["If field 71A in sequence B contains OUR, then field 71F is not allowed and field 71G is optional in the same occurrence of sequence B."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C8-C</name>
						<fieldname>B.71G</fieldname>
						<comment><![CDATA["If field 71A in sequence A contains SHA, then fields 71F are optional and field 71G is not allowed in any occurrence of sequence B."]]></comment>
						<formula><![CDATA[A[0].F71A.$size == 0 || A[0].F71A[0].Code != "SHA"]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D50</error-code>
						<actionmessage><![CDATA["If field 71A in sequence A contains SHA, then fields 71F are optional and field 71G is not allowed in any occurrence of sequence B."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C8-D</name>
						<fieldname>B.71G</fieldname>
						<comment><![CDATA["If field 71A in sequence B contains SHA, then fields 71F are optional and field 71G is not allowed in the same occurrence of sequence B."]]></comment>
						<formula><![CDATA[B.F71A.$size == 0 || B.F71A[0].Code != "SHA"]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D50</error-code>
						<actionmessage><![CDATA["If field 71A in sequence B contains SHA, then fields 71F are optional and field 71G is not allowed in the same occurrence of sequence B."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C8-E</name>
						<fieldname>B</fieldname>
						<comment><![CDATA["If field 71A in sequence A contains BEN, then at least one occurrence of field 71F is mandatory in each occurrence of sequence B and field 71G is not allowed."]]></comment>
						<formula><![CDATA[If(A[0].F71A.$size > 0 && A[0].F71A[0].Code == "BEN", 
   B.F71F.$size > 0 && B.F71G.$size == 0, 
   true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E15</error-code>
						<actionmessage><![CDATA["If field 71A in sequence A contains BEN, then at least one occurrence of field 71F is mandatory in each occurrence of sequence B and field 71G is not allowed."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C8-F</name>
						<fieldname>B</fieldname>
						<comment><![CDATA["If field 71A in sequence B contains BEN, then at least one occurrence of field 71F is mandatory in the same occurrence of sequence B and field 71G is not allowed."]]></comment>
						<formula><![CDATA[If(B.F71A.$size > 0 && B.F71A[0].Code == "BEN", 
   B.F71F.$size > 0 && B.F71G.$size == 0, 
   true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E15</error-code>
						<actionmessage><![CDATA["If field 71A in sequence B contains BEN, then at least one occurrence of field 71F is mandatory in the same occurrence of sequence B and field 71G is not allowed."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C9-A</name>
						<fieldname>B.71F</fieldname>
						<comment><![CDATA["If either field 71F (at least one occurrence) or field 71G are present in an occurrence of sequence B, then field 33B is mandatory in the same occurrence of sequence B."]]></comment>
						<formula><![CDATA[If(B.F71G.$size == 0, B.F33B.$size > 0, true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D51</error-code>
						<actionmessage><![CDATA["If either field 71F (at least one occurrence) or field 71G are present in an occurrence of sequence B, then field 33B is mandatory in the same occurrence of sequence B."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C9-B</name>
						<fieldname>B.71G</fieldname>
						<comment><![CDATA["If either field 71F (at least one occurrence) or field 71G are present in an occurrence of sequence B, then field 33B is mandatory in the same occurrence of sequence B."]]></comment>
						<formula><![CDATA[If(B.F71F.$size == 0, B.F33B.$size > 0, true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D51</error-code>
						<actionmessage><![CDATA["If either field 71F (at least one occurrence) or field 71G are present in an occurrence of sequence B, then field 33B is mandatory in the same occurrence of sequence B."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C10</name>
						<fieldname>B.71G</fieldname>
						<comment><![CDATA["If field 71G is present in an occurrence of sequence B, then field 71G is mandatory in the sequence C."]]></comment>
						<formula><![CDATA[C[0].F71G.$size > 0]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D79</error-code>
						<actionmessage><![CDATA["If field 71G is present in an occurrence of sequence B, then field 71G is mandatory in the sequence C."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C11</name>
						<fieldname>B.59a.Account</fieldname>
						<comment><![CDATA["If the country codes of the Sender's and the Receiver's BICs are within the following list: AD, AT, BE, BG, BV, CH, CY, CZ, DE, DK, EE, ES, FI, FR, GB, GF, GI, GP, GR, HU, IE, IL, IS, IT, LI, LT, LU, LV, MC, MQ, MT, NL, NO, PL, PM, PT, RE, RO, SE, SI, SJ, SK, SM, TF and VA, then in each occurrence of sequence B the following apply: a) if field 57A is not present, the IBAN (ISO-13616) is mandatory in subfield Account of field 59a in that occurrence of Sequence B; b) if field 57A is present and the country code of the BIC in 57A is within the above list of country codes, the IBAN (ISO-13616) is mandatory in subfield Account of field 59a in that occurrence of Sequence B. In all other cases, the presence of the IBAN (ISO-13616) is optional and its format is not validated in subfield Account of field 59a."]]></comment>
						<formula><![CDATA[def header = $this.Header;
def appheader;

if(header.GetFieldCount() == 0 || (header.getfieldcount() > 0 && header.GetFieldIndex("Basic_Header") == -1)) {
	// No Header or FICC Header
	return true;
}
else if(header.GetFieldCount() == 4) {
	// Input/output header
    appheader = If(header.GetSection(1).$size > 0, 
                   header.GetSection(1)[0], 
                   header.GetSection(2)[0]);
}
else {
    appheader = header.GetSection(1)[0];
}
def basicheader = header.GetSection(0)[0];
def ioIdentifier = appheader.GetString("Input_Output_Identifier");
def mir = (If(ioIdentifier == "O", 
           GetString(appheader, "Message Input Reference"), 
           ""));
def receiverAddress = (If(ioIdentifier == "I", 
                       GetString(appheader, "Receiver's Address"), 
                       ""));
def senderCountryCode = (If(ioIdentifier == "I", 
                         Mid(basicheader.GetString("LT Identifier"), 4, 2), 
                         Mid(mir, 10, 2)));
def receiverCountryCode = (If(ioIdentifier == "I", 
                           Mid(receiverAddress, 4, 2), 
                           Mid(basicheader.GetString("LT Identifier"), 4, 2)));
def countryList = ["AD", "AT", "BE", "BG", "BV", "CH", "CY", 
      "CZ", "DE", "DK", "EE", "ES", "FI", "FR", "GB", "GF", 
      "GI", "GP", "GR", "HR", "HU", "IE", "IL", "IS", "IT", "LI", "LT", 
      "LU", "LV", "MC", "MQ", "MT", "NL", "NO", "PL", "PM", 
      "PT", "RE", "RO", "SE", "SI", "SJ", "SK", "SM", "TF", "VA"];                           
If(In(senderCountryCode, countryList) && 
     In(receiverCountryCode, countryList), 
   		If(B.F57A.$size==0 || In(Mid(B.F57A[0].Identifier_Code, 4, 2), countryList), IsISOIBAN($value), true), 
   true);
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D19</error-code>
						<actionmessage><![CDATA["If the country codes of the Sender's and the Receiver's BICs are within the following list: AD, AT, BE, BG, BV, CH, CY, CZ, DE, DK, EE, ES, FI, FR, GB, GF, GI, GP, GR, HR, HU, IE, IL, IS, IT, LI, LT, LU, LV, MC, MQ, MT, NL, NO, PL, PM, PT, RE, RO, SE, SI, SJ, SK, SM, TF and VA, then in each occurrence of sequence B the following apply: a) if field 57A is not present, the IBAN (ISO-13616) is mandatory in subfield Account of field 59a in that occurrence of Sequence B; b) if field 57A is present and the country code of the BIC in 57A is within the above list of country codes, the IBAN (ISO-13616) is mandatory in subfield Account of field 59a in that occurrence of Sequence B. In all other cases, the presence of the IBAN (ISO-13616) is optional and its format is not validated in subfield Account of field 59a."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>ERI</name>
						<fieldname>C.32A</fieldname>
						<comment><![CDATA["For specific message types, an European currency must not be used as the currency of settlement after a cut-off date (Error Code: E76)."]]></comment>
						<formula><![CDATA[applyERIValidation(C.F32A[0], "Date", C.F32A[0], "Currency")]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E76</error-code>
						<actionmessage><![CDATA["For specific message types, an European currency must not be used as the currency of settlement after a cut-off date (Error Code: E76)."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-59a-A</name>
						<fieldname>B.59a.Account</fieldname>
						<comment><![CDATA[The IBAN must be a valid IBAN (ISO-13616) and Country Code must be a valid ISO country code]]></comment>
						<formula><![CDATA[def header = $this.Header;
def appheader;

if(header.GetFieldCount() == 0 || (header.getfieldcount() > 0 && header.GetFieldIndex("Basic_Header") == -1)) {
	// No Header or FICC Header
	return true;
}
else if(header.GetFieldCount() == 4) {
	// Input/output header
    appheader = If(header.GetSection(1).$size > 0, 
                   header.GetSection(1)[0], 
                   header.GetSection(2)[0]);
}
else {
    appheader = header.GetSection(1)[0];
}
def basicheader = header.GetSection(0)[0];
def ioIdentifier = appheader.GetString("Input_Output_Identifier");
def mir = (If(ioIdentifier == "O", 
           GetString(appheader, "Message Input Reference"), 
           ""));
def receiverAddress = (If(ioIdentifier == "I", 
                       GetString(appheader, "Receiver's Address"), 
                       ""));
def senderCountryCode = (If(ioIdentifier == "I", 
                         Mid(basicheader.GetString("LT Identifier"), 4, 2), 
                         Mid(mir, 10, 2)));
def receiverCountryCode = (If(ioIdentifier == "I", 
                           Mid(receiverAddress, 4, 2), 
                           Mid(basicheader.GetString("LT Identifier"), 4, 2)));
def countryList = ["AD", "AT", "BE", "BG", "BV", "CH", "CY", 
      "CZ", "DE", "DK", "EE", "ES", "FI", "FR", "GB", "GF", 
      "GI", "GP", "GR", "HR", "HU", "IE", "IL", "IS", "IT", "LI", "LT", 
      "LU", "LV", "MC", "MQ", "MT", "NL", "NO", "PL", "PM", 
      "PT", "RE", "RO", "SE", "SI", "SJ", "SK", "SM", "TF", "VA"];                           
If(In(senderCountryCode, countryList) && 
     In(receiverCountryCode, countryList), 
   		If(B.F57A.$size==0 || In(Mid(B.F57A[0].Identifier_Code, 4, 2), countryList), IsISOCountryCode(GetIBANCountryCode($value)), true), 
   true);
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T73</error-code>
						<actionmessage><![CDATA["The IBAN must be a valid IBAN (ISO-13616) and Country Code must be a valid ISO country code (Error code(s): T73)."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-32B</name>
						<fieldname>B.32B.Currency</fieldname>
						<formula><![CDATA[!In($value, "XAU", "XAG", "XPD", "XPT")]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C08</error-code>
						<actionmessage><![CDATA["The codes XAU, XAG, XPD and XPT are not allowed, as these are codes for commodities for which the category 6 commodities messages must be used."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-59a-A</name>
						<fieldname>B.59a.Name_&amp;_Address_Details</fieldname>
						<formula><![CDATA[Implies(B.F59a.FormatOption == 'F', Verify59FNmandAdrDtlLines($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T56</error-code>
						<actionmessage><![CDATA["Invalid 'Name_and_Address_Details' value. With option F - subfield 2 (Name_and_Address_Details), should start with Number 1 to 3 and it should follow the line formatting rules as specified in the SWIFT spec for field 59F."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-59a-B</name>
						<fieldname>B.59a.Name_&amp;_Address_Details</fieldname>
						<formula><![CDATA[Implies(B.F59a.FormatOption == 'F', Verify59FNmandAdrDtlFormat($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T56</error-code>
						<actionmessage><![CDATA["Invalid 'Name and Address Details' value. With option F, subfield 2 (Name and Address Details), the following line format must be used for all lines :1!n/33x (Number)(Name and Address Details)."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-59a-C</name>
						<fieldname>B.59a.Name_&amp;_Address_Details</fieldname>
						<formula><![CDATA[Implies(B.F59a.FormatOption == 'F', Verify59FNmandAdrDtlCtryCode($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T73</error-code>
						<actionmessage><![CDATA["Invalid 'Name_and_Address_Details' value. Number 3 must be followed by a valid ISO country code."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FC-32A</name>
						<fieldname>C.32A.Currency</fieldname>
						<formula><![CDATA[!In($value, "XAU", "XAG", "XPD", "XPT")]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C08</error-code>
						<actionmessage><![CDATA["The codes XAU, XAG, XPD and XPT are not allowed, as these are codes for commodities for which the category 6 commodities messages must be used."]]></actionmessage>
					</fieldvalidation>
				</fieldvalidations>
			</datavalidationrules>
			<tlrvalidationrules>
				<fieldvalidations>
				</fieldvalidations>
			</tlrvalidationrules>
		</validationrules>
		<elementproperties>
			<propertymap>
				<property name="codegen.java.properties">
					<value>
						<propertymap type="com.tplus.transform.design.PropertiesDef">
							<property name="Java Package Name" value="com.transform.external.%e"/>
							<property name="Jar Name" value="%c.jar"/>
							<property name="Manifest Entries" value="transformrt.jar swiftrt.jar swiftresources.jar"/>
							<property name="Data Source" value=""/>
						</propertymap>
					</value>
				</property>
			</propertymap>
		</elementproperties>
	</externalmessage>
	<externalmessage xsi:type="SwiftFormat" type="SwiftFormat" version="5.1.2" rulename="MT103_2016" formattype="SwiftFormat" >
		<description><![CDATA[This message type is sent by or on behalf of the financial institution of the ordering customer, directly or through (a) correspondent(s), to the financial institution of the beneficiary customer.

It is used to convey a funds transfer instruction in which the ordering customer or the beneficiary customer, or both, are non-financial institutions from the perspective of the Sender.

This message may only be used for clean payment instructions. It must not be used to advise the remitting bank of a payment for a clean, eg, cheque, collection, nor to provide the cover for a transaction whose completion was advised separately, eg, via an MT 400.]]></description>
		<standard>SWIFT</standard>
		<standard-name>MT103</standard-name>
		<standard-version>SRG 2016</standard-version>
		<standard-release-qualifier>20160308</standard-release-qualifier>
		<standard-category>Customer Payments &amp; Cheques</standard-category>
		<standard-detailed-name>Single Customer Credit Transfer</standard-detailed-name>
		<version>1.0</version>
		<SwiftFields>
			<customizable>true</customizable>
			<modifiable>false</modifiable>
			<SwiftMessageType>User</SwiftMessageType>
			<max-length>10000</max-length>
			<HeaderAndTrailerType>SWIFT_INPUT_OUTPUT_HEADER</HeaderAndTrailerType>
			<Header>
				<fields>
					<field>
						<name>Basic Header</name>
						<description><![CDATA[The Basic Header is given in Block 1 of a SWIFT message and is the only header that appears on all messages. The Basic Header provides the fundamental reference for any particular message and is almost always automatically built by the CBT.
The Basic Header has the same format for both input and output messages. However, the information contained in the Basic Header is relative to the sender when the message is input but relative to the receiver when the same message is output.]]></description>
						<datatype>Section</datatype>
						<required>true</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Application Identifier</name>
								<description><![CDATA[The Application Identifier identifies the application within which the message is being sent or received. The available options are:

F = FIN All user-to-user, FIN system and FIN service messages 
A = GPA Most GPA system and service messages 
L = GPA Certain GPA service messages, for example, LOGIN, LAKs, ABORT 

These values are automatically assigned by the SWIFT system and the user's CBT, but the user should be aware of their existence and significance
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Service Identifier</name>
								<description><![CDATA[The Service Identifier consists of 2 numeric characters. It identifies the type of data that is being sent or received and, in doing so, whether the message which follows is one of the following:

a user-to-user message

a system message

a service message, for example, a session control command, such as SELECT, or a logical acknowledgement, such as ACK/SAK/UAK

Users will be primarily concerned with identifier '01' which applies to all GPA and FIN system and user-to-user messages. Other values include: '21' for message acknowledgements such as ACK/NAK, UAK/UNK, '03' for SELECT commands, and 
so on]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>2</length>
							</field>
							<field>
								<name>LT Identifier</name>
								<description><![CDATA[This 12-character SWIFT address, given in the Basic Header Block, is the address of the sending LT for input messages or of the receiving LT for output messages, and includes the Branch Code.

In the Basic Header, the LT Code within the LT Identifier is specific to the LT that has established the session in which the message is being transmitted, that is the sending LT for input messages or the receiving LT for output messages.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>12</length>
							</field>
							<field>
								<name>Session Number</name>
								<description><![CDATA[The Session Number identifies the session in which the message was transmitted. Within the Basic Header, the 4-digit Session Number is the user's current GPA or FIN Session Number.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Sequence Number</name>
								<description><![CDATA[The sequence number always consists of 6 digits. It is the ISN of the sender's current input session or the OSN of the receiver's current output session.

Note: The sequence number is not present in those messages with an Application Identifier of 'L' (for example LOGIN). The sequence number is, however, a key element in the processing of retrievals. Therefore, LOGINs and attempted LOGINs are not retrievable
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>6</length>
							</field>
						</fields>
					</field>
					<field>
						<name>Application Header Input</name>
						<description><![CDATA[The Application Header of a SWIFT message provides information about the message itself.

The Application Header is given in Block 2 of a SWIFT message. It differs according to whether the message is a GPA or a FIN message and whether the Application Header is part of an input or an output message.

]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Input/Output Identifier</name>
								<description><![CDATA[For an input message, the Input/Output Identifier consists of the single letter 'I'.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Message Type</name>
								<description><![CDATA[The Message Type consists of 3 digits which define the MT number of the message being input. The example used above is for an MT 100 Customer Transfer]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>3</length>
							</field>
							<field>
								<name>Receiver's Address</name>
								<description><![CDATA[This address is the 12-character SWIFT address of the receiver of the message, but with a LT Code of 'X'. It defines the destination to which the message should be sent.

The system will replace the 'X' with a specific LT Code on delivery of the message according to the delivery control exercised by the receiving user.

The Branch Code is mandatory and will be validated. The default of 'XXX' may be used, as in the example above.

Unless otherwise documented, system messages addressed to the SWIFT system itself should be addressed to SWFTXXXXXXXX.

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>12</length>
							</field>
							<field>
								<name>Message Priority</name>
								<description><![CDATA[This character, used within FIN Application Headers only, defines the priority with which a message is delivered. The possible values are:

S = System

U = Urgent

N = Normal

Message Priority 'S' must be used for user-to-system messages; for user-to-user messages either 'U' or 'N' can be used. In the absence of user-specified delivery criteria, system messages are always delivered first, followed by urgent priority messages and then normal priority messages.

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Delivery Monitoring</name>
								<description><![CDATA[Delivery monitoring options apply only to FIN user-to-user messages, and allow the sender of a message to request:

automatic MT 011 Delivery Notification once the message has been delivered

automatic MT 010 Non-Delivery Warning if a message is not delivered within the specified obsolescence period (see below)

both, or neither, options. This may be requested on an individual message basis.

The chosen option is expressed as a single digit:

1 = Non-Delivery Warning

2 = Delivery Notification

3 = Non-Delivery Warning and Delivery Notification. 
If the message has priority 'U' then the user must request delivery monitoring option '1' or '3'. If the message has priority 'N', the user can request delivery monitoring option '2', or, by leaving the option blank, no delivery monitoring.
]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>1</length>
							</field>
							<field>
								<name>Obsolescence Period</name>
								<description><![CDATA[The obsolescence period defines the period of time after which a Delayed Message (DLM) trailer is added to a FIN user-to-user message when the message is delivered. For urgent priority messages, it is also the period of time after which, if the message remains undelivered, a Non-Delivery Warning is generated.

The values for the obsolescence period are 003 (15 minutes) for 'U' priority, and 020 (100 minutes) for 'N' priority. An obsolescence period can only be specified when delivery monitoring has been requested (option 1 or 3 for urgent priority messages, option 2 for normal priority messages). If no delivery monitoring has been requested, and an obsolescence period is specified, the message will be NAKed with error code H25.

GPA input Application Headers are similar to their FIN equivalents except that GPA messages do not specify priority, delivery monitoring, nor obsolescence period.

]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>3</length>
							</field>
						</fields>
					</field>
					<field>
						<name>Application Header Output</name>
						<description><![CDATA[The Application Header of a SWIFT message provides information about the message itself.

The Application Header is given in Block 2 of a SWIFT message. It differs according to whether the message is a GPA or a FIN message and whether the Application Header is part of an input or an output message.

]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Input/Output Identifier</name>
								<description><![CDATA[For an input message, the Input/Output Identifier consists of the single letter 'I'.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Message Type</name>
								<description><![CDATA[Three digits indicating the Message Type.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>3</length>
							</field>
							<field>
								<name>Input Time</name>
								<description><![CDATA[The first occurrence of the time field contains the system time and date. This is the generation time in Greenwich Mean Time (GMT).
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Message Input Reference</name>
								<description><![CDATA[The input MIR.

If the message is generated by the system, the input time is the generation time (in GMT) and the input MIR is the system MIR

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>28</length>
							</field>
							<field>
								<name>Output Date</name>
								<description><![CDATA[The output date, local to the receiver.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>6</length>
							</field>
							<field>
								<name>Output Time</name>
								<description><![CDATA[The second occurrence of the time field contains the output time and date. This is in a time local to the receiver.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Message Priority</name>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
						</fields>
					</field>
					<field>
						<name>User Header</name>
						<description><![CDATA[The User Header is an optional header available within FIN for user-to-user messages only. It appears in Block 3 of a SWIFT message, and allows users to provide their own reference within the headers for a particular message.

A User Header can only be assigned by the sender of a message and, if assigned, will always appear on the output message copy. Relevant parts of the User Header will be repeated in related system messages and acknowledgements.

Block 3 may contain tag 113, defining banking priorities, and tag 108, which is a user reference. The user reference part of the User Header may be used as one of the selection criteria when retrieving a message.

The optional field tags 103 and 115 are also used in Block 3 for the FIN Copy service. The order of tags, when present, is 103, 113, 108 and 115.

An optional field tag 119 can be included in Block 3 of certain messages to specify that different validation rules are to be applied. Agreed code words in field 119 indicate what validation rules SWIFT will apply. If field 119 is present, it should appear after field 108
]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Service Identifier</name>
								<description><![CDATA[For any message which the user submits to a FIN Copy service, Block 3 requires an additional field 103 which contains a three-character Service Identifier unique to a specific FIN Copy service. By using a unique identifier it is possible to support access to multiple services within the same CBT.
]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>3</length>
								<tag>103</tag>
							</field>
							<field>
								<name>Banking Priority</name>
								<description><![CDATA[Assigned by the sender of the message.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>4</length>
								<tag>113</tag>
							</field>
							<field>
								<name>Message User Reference</name>
								<description><![CDATA[Assigned by the sender of the message.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>16</length>
								<tag>108</tag>
							</field>
							<field>
								<name>Validation Flag</name>
								<description><![CDATA[Indicates whether a special validation needs to be performed by FIN. The following are examples of the values this field may take. Please note that this list is subject to change:

ISITC indicates validation of ISITC Standards. Only to be used with MT 521 and MT 523.

REMIT identifies the presence of field 77T. Only to be used in MT 103.

RFDD indicates that the message is a request for direct debit. Only to be used in MT 104.

STP indicates that the message is validated according to straight through processing principles. Only to be used in MT 103.

]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>119</tag>
							</field>
							<field>
								<name>Balance checkpoint date and time</name>
								<description><![CDATA[This field contains the balance checkpoint date and time consisting of a date (YYMMDD) and a time (HHMMSS[ss], where 'ss' indicates hundredths of a second). The MI that is subscribed to MIRS will always copy this reference from field tag 13G of the last MT298/091 that it sent into the related MT 298/093 or MT 097 that it generates. ]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>423</tag>
							</field>
							<field>
								<name>Message Input Reference</name>
								<description><![CDATA[This field contains the MIR of the payment message that is related to the notification messages in which this field is present. The MI that is subscribed to MIRS will copy it from the received payment message. In a FINCopy scenario, this field must contain the MIR of the related MT 096]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>106</tag>
							</field>
							<field>
								<name>Related Reference</name>
								<description><![CDATA[This field contains the reference of the payment that is related to the notification messages in which this field is present. The payment itself was not the result of a FIN message. The value of this field must correspond to the related reference (field 21) in the MT298/093. The format of field 424 is 16x.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>424</tag>
							</field>
							<field>
								<name>Service Type Identifier</name>
								<description><![CDATA[This field identifies the applicable global payment service type. The format of field 111 is 3!n.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>111</tag>
							</field>
							<field>
								<name>Unique End-To-End Transaction Reference</name>
								<description><![CDATA[This field provides an end-to-end reference across a payment transaction. The format of field 121 is 36!x.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>121</tag>
							</field>
							<field>
								<name>Addressee Information</name>
								<description><![CDATA[Tag 115 is only valid for output messages. Information from Central Institution to the receiver of payment message. Information is input in the MT 097 FIN Copy Message Authorisation/Refusal Notification in Y-Copy mode.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>115</tag>
							</field>
							<field>
								<name>Payment Release Information Receiver (FINInform Services)</name>
								<description><![CDATA[Tag 165 is only valid for output messages. This field contains information from the server destination to the receiver of payment message. It is only available for use in FINInform services that operate in Y-copy mode.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>165</tag>
							</field>
							<field>
								<name>Receiver Information</name>
								<description><![CDATA[Tag 433 is only valid for output messages. The screening service inputs information in the MT 097 FINCopy Message Authorisation/Refusal Notification, in Y-Copy mode. FINCopy copies the information to the receiver of the screened message.
				    The following values can be present in this field:
				      AOK: message automatically released by screening service
				      FPO: compliance officer has flagged the screening result as false positive
				      NOK: compliance officer has flagged the screened message as suspect
				    The code word can optionally be followed by additional information (up to 20 characters from the x character set).]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>433</tag>
							</field>
						</fields>
					</field>
				</fields>
			</Header>
			<Data>
				<Fields>
					<SwiftField Name="20">
						<SwiftFieldDef Name="20">
							<Generic>false</Generic>
							<Description><![CDATA[Reference]]></Description>
							<Option Name="">
								<Format><![CDATA[16x]]></Format>
								<Specification><![CDATA[(Sender's Reference)]]></Specification>
								<Description><![CDATA[Sender's Reference]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options> </Options>
						<Validations>
							<SubField Name="Sender's_Reference">
								<Validation>
									<Options> </Options>
									<ErrorCode>T26</ErrorCode>
									<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive slashes '//' (Error code(s): T26).]]></Comment>
									<ValidationPattern xsi:type="T26" Type="T26">
										<Type>T26</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="13C">
						<SwiftFieldDef Name="13">
							<Generic>false</Generic>
							<Description><![CDATA[Number Identification]]></Description>
							<Option Name="C">
								<Format><![CDATA[/8c/4!n1!x4!n]]></Format>
								<Specification><![CDATA[(Code)(Time indication)(Sign)(Time offset)]]></Specification>
								<Description><![CDATA[Time Indication]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>true</Repeating>
						<Presence>O</Presence>
						<Options>C</Options>
						<Validations>
							<SubField Name="Time_indication">
								<Validation>
									<Options>C</Options>
									<ErrorCode>T38</ErrorCode>
									<Comment><![CDATA[Time indication must be a valid time expressed as HHMM (Error code(s): T38).]]></Comment>
									<ValidationPattern xsi:type="DATE" Type="DATE">
										<Type>DATE</Type>
										<Format>HHmm</Format>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="Sign">
								<Validation>
									<Options>C</Options>
									<ErrorCode>T15</ErrorCode>
									<Comment><![CDATA[Sign is either "+" or "-" (Error code(s): T15).]]></Comment>
									<ValidationPattern xsi:type="CODE" Type="CODE">
										<Type>CODE</Type>
										<Codes>
											<Code Name="+">
											</Code>
											<Code Name="-">
											</Code>
										</Codes>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="Time_offset">
								<Validation>
									<Options>C</Options>
									<ErrorCode>T16</ErrorCode>
									<Comment><![CDATA[Time offset is expressed as HHMM, where the hour component, ie, 'HH', must be in the range of 00 through 13,and the minute component, ie, 'MM' must be in the range of 00 through 59. Any 'HH' or 'MM' component outside of these range checks will be disallowed (Error code(s): T16).]]></Comment>
									<ValidationPattern xsi:type="Time_Offset" Type="Time Offset">
										<Type>Time Offset</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="23B">
						<SwiftFieldDef Name="23">
							<Generic>false</Generic>
							<Description><![CDATA[Function of the Message]]></Description>
							<Option Name="B">
								<Format><![CDATA[4!c]]></Format>
								<Specification><![CDATA[(Type)]]></Specification>
								<Description><![CDATA[Bank Operation Code]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options>B</Options>
						<Validations>
							<SubField Name="Type">
								<Validation>
									<Options>B</Options>
									<ErrorCode>T36</ErrorCode>
									<Comment><![CDATA[One of the following codes must be used (Error code(s): T36):]]></Comment>
									<ValidationPattern xsi:type="CODE" Type="CODE">
										<Type>CODE</Type>
										<Codes>
											<Code Name="CRED">
												<DetailedName>Normal credit transfer</DetailedName>
												<Description>This message contains a credit transfer where there is no SWIFT Service Level involved.</Description>
											</Code>
											<Code Name="CRTS">
												<DetailedName>Test message</DetailedName>
												<Description>This message contains a credit transfer for test purposes.</Description>
											</Code>
											<Code Name="SPAY">
												<DetailedName>SWIFTPay</DetailedName>
												<Description>This message contains a credit transfer to be processed according to the SWIFTPay Service Level.</Description>
											</Code>
											<Code Name="SPRI">
												<DetailedName>Priority</DetailedName>
												<Description>This message contains a credit transfer to be processed according to the Priority Service Level.</Description>
											</Code>
											<Code Name="SSTD">
												<DetailedName>Standard</DetailedName>
												<Description>This message contains a credit transfer to be processed according to the Standard Service Level.</Description>
											</Code>
										</Codes>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="23E">
						<SwiftFieldDef Name="23">
							<Generic>false</Generic>
							<Description><![CDATA[Function of the Message]]></Description>
							<Option Name="E">
								<Format><![CDATA[4!c[/30x]]]></Format>
								<Specification><![CDATA[(Instruction Code)(Additional Information)]]></Specification>
								<Description><![CDATA[Instruction Code]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>true</Repeating>
						<Presence>O</Presence>
						<Options>E</Options>
						<Validations>
							<SubField Name="Instruction_Code">
								<Validation>
									<Options>E</Options>
									<ErrorCode>T47</ErrorCode>
									<Comment><![CDATA[Instruction Code must contain one of the following codes (Error code(s): T47):]]></Comment>
									<ValidationPattern xsi:type="CODE" Type="CODE">
										<Type>CODE</Type>
										<Codes>
											<Code Name="SDVA">
												<DetailedName>Same Day Value</DetailedName>
												<Description>Payment must be executed with same day value to the beneficiary.</Description>
											</Code>
											<Code Name="INTC">
												<DetailedName>Intra-Company Payment</DetailedName>
												<Description>A payment between two companies belonging to the same group.</Description>
											</Code>
											<Code Name="REPA">
												<DetailedName>Related Payment</DetailedName>
												<Description>Payment has a related e-Payments reference.</Description>
											</Code>
											<Code Name="CORT">
												<DetailedName>Corporate Trade</DetailedName>
												<Description>Payment is made in settlement of a trade, eg, foreign exchange deal, securities transaction.</Description>
											</Code>
											<Code Name="HOLD">
												<DetailedName>Hold</DetailedName>
												<Description>Beneficiary customer/claimant will call; pay upon identification.</Description>
											</Code>
											<Code Name="CHQB">
												<DetailedName>Cheque</DetailedName>
												<Description>Pay beneficiary customer by cheque only. The optional account number line in field 59a must not be used.</Description>
											</Code>
											<Code Name="PHOB">
												<DetailedName>Phone Beneficiary</DetailedName>
												<Description>Please advise/contact beneficiary/claimant by phone.</Description>
											</Code>
											<Code Name="TELB">
												<DetailedName>Telecommunication</DetailedName>
												<Description>Please advise/contact beneficiary/claimant by the most efficient means of telecommunication.</Description>
											</Code>
											<Code Name="PHON">
												<DetailedName>Telephone</DetailedName>
												<Description>Please advise account with institution by phone.</Description>
											</Code>
											<Code Name="TELE">
												<DetailedName>Telecommunication</DetailedName>
												<Description>Please advise the account with institution by the most efficient means of telecommunication.</Description>
											</Code>
											<Code Name="PHOI">
												<DetailedName>Phone Intermediary</DetailedName>
												<Description>Please advise the intermediary institution by phone.</Description>
											</Code>
											<Code Name="TELI">
												<DetailedName>Telecommunication</DetailedName>
												<Description>Please advise the intermediary institution by the most efficient means of telecommunication.</Description>
											</Code>
										</Codes>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="26T">
						<SwiftFieldDef Name="26">
							<Generic>false</Generic>
							<Option Name="T">
								<Format><![CDATA[3!c]]></Format>
								<Specification><![CDATA[(Type)]]></Specification>
								<Description><![CDATA[Transaction Type Code]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options>T</Options>
					</SwiftField>
					<SwiftField Name="32A">
						<SwiftFieldDef Name="32">
							<Generic>false</Generic>
							<Option Name="A">
								<Format><![CDATA[6!n3!a15d]]></Format>
								<Specification><![CDATA[(Date) (Currency) (Amount)]]></Specification>
								<Description><![CDATA[Value Date/Currency/Interbank Settled Amount]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options>A</Options>
						<Validations>
							<SubField Name="Date">
								<Validation>
									<Options>A</Options>
									<ErrorCode>T50</ErrorCode>
									<Comment><![CDATA[Date must be a valid date expressed as YYMMDD (Error code(s): T50).]]></Comment>
									<ValidationPattern xsi:type="DATE" Type="DATE">
										<Type>DATE</Type>
										<Format>yyMMdd</Format>
										<value-date>true</value-date>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="Currency">
								<Validation>
									<Options>A</Options>
									<ErrorCode>T52</ErrorCode>
									<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52).]]></Comment>
									<ValidationPattern xsi:type="Currency_Code" Type="Currency Code">
										<Type>Currency Code</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="Amount">
								<Validation>
									<Options>A</Options>
									<ErrorCode>C03</ErrorCode>
									<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency (Error code(s): C03,T40,T43).]]></Comment>
									<ValidationPattern xsi:type="Decimal" Type="Decimal">
										<Type>Decimal</Type>
										<currency-field>Currency</currency-field>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="33B">
						<SwiftFieldDef Name="33">
							<Generic>false</Generic>
							<Option Name="B">
								<Format><![CDATA[3!a15d]]></Format>
								<Specification><![CDATA[(Currency) (Amount)]]></Specification>
								<Description><![CDATA[Currency/Instructed Amount]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options>B</Options>
						<Validations>
							<SubField Name="Currency">
								<Validation>
									<Options>B</Options>
									<ErrorCode>T52</ErrorCode>
									<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52).]]></Comment>
									<ValidationPattern xsi:type="Currency_Code" Type="Currency Code">
										<Type>Currency Code</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="Amount">
								<Validation>
									<Options>B</Options>
									<ErrorCode>C03</ErrorCode>
									<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency (Error code(s): C03,T40,T43).]]></Comment>
									<ValidationPattern xsi:type="Decimal" Type="Decimal">
										<Type>Decimal</Type>
										<currency-field>Currency</currency-field>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="36">
						<SwiftFieldDef Name="36">
							<Generic>false</Generic>
							<Description><![CDATA[Quantity of Financial Instrument]]></Description>
							<Option Name="">
								<Format><![CDATA[12d]]></Format>
								<Specification><![CDATA[(Rate)]]></Specification>
								<Description><![CDATA[Exchange Rate]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options> </Options>
					</SwiftField>
					<SwiftField Name="50a">
						<SwiftFieldDef Name="50">
							<Generic>false</Generic>
							<Option Name="A">
								<Format><![CDATA[([/34xCRLF])(4!a2!a2!c[3!c])]]></Format>
								<Specification><![CDATA[(Account)(Identifier Code)]]></Specification>
								<Description><![CDATA[Ordering Customer]]></Description>
							</Option>
							<Option Name="F">
								<Format><![CDATA[35x(CRLF4*35x)]]></Format>
								<Specification><![CDATA[(Party Identifier)(Name & Address)]]></Specification>
								<Description><![CDATA[Ordering Customer]]></Description>
							</Option>
							<Option Name="K">
								<Format><![CDATA[([/34xCRLF])(4*35x)]]></Format>
								<Specification><![CDATA[(Account)(Name & Address)]]></Specification>
								<Description><![CDATA[Ordering Customer]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options>A, K, F</Options>
						<Validations>
							<SubField Name="Identifier_Code">
								<Validation>
									<Options>A</Options>
									<ErrorCode>T27, T28, T29, T45</ErrorCode>
									<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
									<ValidationPattern xsi:type="BIC" Type="BIC">
										<Type>BIC</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="51A">
						<SwiftFieldDef Name="51">
							<Generic>false</Generic>
							<Option Name="A">
								<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
								<Description><![CDATA[Sending Institution]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options>A</Options>
						<Validations>
							<SubField Name="CreditDebit">
								<Validation>
									<Options>A</Options>
									<ErrorCode>T51</ErrorCode>
									<Comment><![CDATA[CreditDebit should contain the following codes]]></Comment>
									<ValidationPattern xsi:type="CODE" Type="CODE">
										<Type>CODE</Type>
										<Codes>
											<Code Name="C">
												<DetailedName>Credit</DetailedName>
											</Code>
											<Code Name="D">
												<DetailedName>Debit</DetailedName>
											</Code>
										</Codes>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="52a">
						<SwiftFieldDef Name="52">
							<Generic>false</Generic>
							<Option Name="A">
								<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
								<Description><![CDATA[Ordering Institution]]></Description>
							</Option>
							<Option Name="D">
								<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address) | (Party Identifier)(Name & Address)]]></Specification>
								<Description><![CDATA[Ordering Institution]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options>A, D</Options>
						<Validations>
							<SubField Name="Identifier_Code">
								<Validation>
									<Options>A</Options>
									<ErrorCode>T27, T28, T29, T45</ErrorCode>
									<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
									<ValidationPattern xsi:type="BIC" Type="BIC">
										<Type>BIC</Type>
									</ValidationPattern>
								</Validation>
								<Validation>
									<Options>A</Options>
									<ErrorCode>C05</ErrorCode>
									<Comment><![CDATA[Identifier Code must not be a BEI, ie must not be of subtype BEID, MCCO, TESP or TRCO]]></Comment>
									<ValidationPattern xsi:type="C05" Type="C05">
										<Type>C05</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="CreditDebit">
								<Validation>
									<Options>A, D</Options>
									<ErrorCode>T51</ErrorCode>
									<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
									<ValidationPattern xsi:type="CODE" Type="CODE">
										<Type>CODE</Type>
										<Codes>
											<Code Name="C">
												<DetailedName>Credit</DetailedName>
											</Code>
											<Code Name="D">
												<DetailedName>Debit</DetailedName>
											</Code>
										</Codes>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="53a">
						<SwiftFieldDef Name="53">
							<Generic>false</Generic>
							<Option Name="A">
								<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
								<Description><![CDATA[Sender's Correspondent]]></Description>
							</Option>
							<Option Name="B">
								<Format><![CDATA[/1!a[/34x](CRLF35x) | /1!a[/34x] | [/34xCRLF]35x | /34x]]></Format>
								<Specification><![CDATA[(CreditDebit) (Party Identifier) (Location) | (CreditDebit)(Party Identifier) |(Party Identifier) (Location) | (Party Identifier)]]></Specification>
								<Description><![CDATA[Sender's Correspondent]]></Description>
							</Option>
							<Option Name="D">
								<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
								<Description><![CDATA[Sender's Correspondent]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options>A, B, D</Options>
						<Validations>
							<SubField Name="Identifier_Code">
								<Validation>
									<Options>A</Options>
									<ErrorCode>T27, T28, T29, T45</ErrorCode>
									<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
									<ValidationPattern xsi:type="BIC" Type="BIC">
										<Type>BIC</Type>
									</ValidationPattern>
								</Validation>
								<Validation>
									<Options>A</Options>
									<ErrorCode>C05</ErrorCode>
									<Comment><![CDATA[Identifier Code must not be a BEI, ie must not be of subtype BEID, MCCO, TESP or TRCO]]></Comment>
									<ValidationPattern xsi:type="C05" Type="C05">
										<Type>C05</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="CreditDebit">
								<Validation>
									<Options>A, B, D</Options>
									<ErrorCode>T51</ErrorCode>
									<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
									<ValidationPattern xsi:type="CODE" Type="CODE">
										<Type>CODE</Type>
										<Codes>
											<Code Name="C">
												<DetailedName>Credit</DetailedName>
											</Code>
											<Code Name="D">
												<DetailedName>Debit</DetailedName>
											</Code>
										</Codes>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="54a">
						<SwiftFieldDef Name="54">
							<Generic>false</Generic>
							<Option Name="A">
								<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
								<Description><![CDATA[Receiver's Correspondent]]></Description>
							</Option>
							<Option Name="B">
								<Format><![CDATA[/1!a[/34x](CRLF35x) | /1!a[/34x] | [/34xCRLF]35x | /34x]]></Format>
								<Specification><![CDATA[(CreditDebit) (Party Identifier) (Location) | (CreditDebit)(Party Identifier) |(Party Identifier) (Location) | (Party Identifier)]]></Specification>
								<Description><![CDATA[Receiver's Correspondent]]></Description>
							</Option>
							<Option Name="D">
								<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
								<Description><![CDATA[Receiver's Correspondent]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options>A, B, D</Options>
						<Validations>
							<SubField Name="Identifier_Code">
								<Validation>
									<Options>A</Options>
									<ErrorCode>T27, T28, T29, T45</ErrorCode>
									<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
									<ValidationPattern xsi:type="BIC" Type="BIC">
										<Type>BIC</Type>
									</ValidationPattern>
								</Validation>
								<Validation>
									<Options>A</Options>
									<ErrorCode>C05</ErrorCode>
									<Comment><![CDATA[Identifier Code must not be a BEI, ie must not be of subtype BEID, MCCO, TESP or TRCO]]></Comment>
									<ValidationPattern xsi:type="C05" Type="C05">
										<Type>C05</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="CreditDebit">
								<Validation>
									<Options>A, B, D</Options>
									<ErrorCode>T51</ErrorCode>
									<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
									<ValidationPattern xsi:type="CODE" Type="CODE">
										<Type>CODE</Type>
										<Codes>
											<Code Name="C">
												<DetailedName>Credit</DetailedName>
											</Code>
											<Code Name="D">
												<DetailedName>Debit</DetailedName>
											</Code>
										</Codes>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="55a">
						<SwiftFieldDef Name="55">
							<Generic>false</Generic>
							<Description><![CDATA[Third Reimbursement Institution]]></Description>
							<Option Name="A">
								<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
								<Description><![CDATA[Third Reimbursement Institution]]></Description>
							</Option>
							<Option Name="B">
								<Format><![CDATA[/1!a[/34x](CRLF35x) | /1!a[/34x] | [/34xCRLF]35x | /34x]]></Format>
								<Specification><![CDATA[(CreditDebit) (Party Identifier) (Location) | (CreditDebit)(Party Identifier) |(Party Identifier) (Location) | (Party Identifier)]]></Specification>
								<Description><![CDATA[Third Reimbursement Institution]]></Description>
							</Option>
							<Option Name="D">
								<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
								<Description><![CDATA[Third Reimbursement Institution]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options>A, B, D</Options>
						<Validations>
							<SubField Name="Identifier_Code">
								<Validation>
									<Options>A</Options>
									<ErrorCode>T27, T28, T29, T45</ErrorCode>
									<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
									<ValidationPattern xsi:type="BIC" Type="BIC">
										<Type>BIC</Type>
									</ValidationPattern>
								</Validation>
								<Validation>
									<Options>A</Options>
									<ErrorCode>C05</ErrorCode>
									<Comment><![CDATA[Identifier Code must not be a BEI, ie must not be of subtype BEID, MCCO, TESP or TRCO]]></Comment>
									<ValidationPattern xsi:type="C05" Type="C05">
										<Type>C05</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="CreditDebit">
								<Validation>
									<Options>A, B, D</Options>
									<ErrorCode>T51</ErrorCode>
									<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
									<ValidationPattern xsi:type="CODE" Type="CODE">
										<Type>CODE</Type>
										<Codes>
											<Code Name="C">
												<DetailedName>Credit</DetailedName>
											</Code>
											<Code Name="D">
												<DetailedName>Debit</DetailedName>
											</Code>
										</Codes>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="56a">
						<SwiftFieldDef Name="56">
							<Generic>false</Generic>
							<Option Name="A">
								<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
								<Description><![CDATA[Intermediary Institution]]></Description>
							</Option>
							<Option Name="C">
								<Format><![CDATA[/34x]]></Format>
								<Specification><![CDATA[(Party Identifier)]]></Specification>
								<Description><![CDATA[Intermediary Institution]]></Description>
							</Option>
							<Option Name="D">
								<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
								<Description><![CDATA[Intermediary Institution]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options>A, C, D</Options>
						<Validations>
							<SubField Name="Identifier_Code">
								<Validation>
									<Options>A</Options>
									<ErrorCode>T27, T28, T29, T45</ErrorCode>
									<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
									<ValidationPattern xsi:type="BIC" Type="BIC">
										<Type>BIC</Type>
									</ValidationPattern>
								</Validation>
								<Validation>
									<Options>A</Options>
									<ErrorCode>C05</ErrorCode>
									<Comment><![CDATA[Identifier Code must not be a BEI, ie must not be of subtype BEID, MCCO, TESP or TRCO]]></Comment>
									<ValidationPattern xsi:type="C05" Type="C05">
										<Type>C05</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="CreditDebit">
								<Validation>
									<Options>A, D</Options>
									<ErrorCode>T51</ErrorCode>
									<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
									<ValidationPattern xsi:type="CODE" Type="CODE">
										<Type>CODE</Type>
										<Codes>
											<Code Name="C">
												<DetailedName>Credit</DetailedName>
											</Code>
											<Code Name="D">
												<DetailedName>Debit</DetailedName>
											</Code>
										</Codes>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="57a">
						<SwiftFieldDef Name="57">
							<Generic>false</Generic>
							<Option Name="A">
								<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
								<Description><![CDATA[Account With Institution]]></Description>
							</Option>
							<Option Name="B">
								<Format><![CDATA[/1!a[/34x](CRLF35x) | /1!a[/34x] | [/34xCRLF]35x | /34x]]></Format>
								<Specification><![CDATA[(CreditDebit) (Party Identifier) (Location) | (CreditDebit)(Party Identifier) |(Party Identifier) (Location) | (Party Identifier)]]></Specification>
								<Description><![CDATA[Account With Institution]]></Description>
							</Option>
							<Option Name="C">
								<Format><![CDATA[/34x]]></Format>
								<Specification><![CDATA[(Party Identifier)]]></Specification>
								<Description><![CDATA[Account With Institution]]></Description>
							</Option>
							<Option Name="D">
								<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
								<Description><![CDATA[Account With Institution]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options>A, B, C, D</Options>
						<Validations>
							<SubField Name="Identifier_Code">
								<Validation>
									<Options>A</Options>
									<ErrorCode>T27, T28, T29, T45</ErrorCode>
									<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
									<ValidationPattern xsi:type="BIC" Type="BIC">
										<Type>BIC</Type>
									</ValidationPattern>
								</Validation>
								<Validation>
									<Options>A</Options>
									<ErrorCode>C05</ErrorCode>
									<Comment><![CDATA[Identifier Code must not be a BEI, ie must not be of subtype BEID, MCCO, TESP or TRCO]]></Comment>
									<ValidationPattern xsi:type="C05" Type="C05">
										<Type>C05</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="CreditDebit">
								<Validation>
									<Options>A, B, D</Options>
									<ErrorCode>T51</ErrorCode>
									<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
									<ValidationPattern xsi:type="CODE" Type="CODE">
										<Type>CODE</Type>
										<Codes>
											<Code Name="C">
												<DetailedName>Credit</DetailedName>
											</Code>
											<Code Name="D">
												<DetailedName>Debit</DetailedName>
											</Code>
										</Codes>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="59a">
						<SwiftFieldDef Name="59">
							<Generic>false</Generic>
							<Option Name="">
								<Format><![CDATA[[/34xCRLF]4*35x]]></Format>
								<Specification><![CDATA[(Account)(Name & Address)]]></Specification>
								<Description><![CDATA[Beneficiary Customer]]></Description>
							</Option>
							<Option Name="A">
								<Format><![CDATA[([/34xCRLF])(4!a2!a2!c[3!c])]]></Format>
								<Specification><![CDATA[(Account)(Identifier Code)]]></Specification>
								<Description><![CDATA[Beneficiary Customer]]></Description>
							</Option>
							<Option Name="F">
								<Format><![CDATA[[/34xCRLF]4*35x]]></Format>
								<Specification><![CDATA[(Account)(Name & Address Details)]]></Specification>
								<Description><![CDATA[Beneficiary Customer]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options>A,  , F</Options>
						<Validations>
							<SubField Name="Identifier_Code">
								<Validation>
									<Options>A</Options>
									<ErrorCode>T27, T28, T29, T45</ErrorCode>
									<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
									<ValidationPattern xsi:type="BIC" Type="BIC">
										<Type>BIC</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="70">
						<SwiftFieldDef Name="70">
							<Generic>false</Generic>
							<Description><![CDATA[Narrative]]></Description>
							<Option Name="">
								<Format><![CDATA[4*35x]]></Format>
								<Specification><![CDATA[(Narrative)]]></Specification>
								<Description><![CDATA[Remittance Information]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options> </Options>
					</SwiftField>
					<SwiftField Name="71A">
						<SwiftFieldDef Name="71">
							<Generic>false</Generic>
							<Option Name="A">
								<Format><![CDATA[3!a]]></Format>
								<Specification><![CDATA[(Code)]]></Specification>
								<Description><![CDATA[Details of Charges]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options>A</Options>
						<Validations>
							<SubField Name="Code">
								<Validation>
									<Options>A</Options>
									<ErrorCode>T08</ErrorCode>
									<Comment><![CDATA[One of the following codes must be used (Error code(s): T08):]]></Comment>
									<ValidationPattern xsi:type="CODE" Type="CODE">
										<Type>CODE</Type>
										<Codes>
											<Code Name="BEN">
												<DetailedName>Beneficiary</DetailedName>
												<Description>All transaction charges are to be borne by the beneficiary customer.</Description>
											</Code>
											<Code Name="OUR">
												<DetailedName>Our customer charged</DetailedName>
												<Description>All transaction charges are to be borne by the ordering customer.</Description>
											</Code>
											<Code Name="SHA">
												<DetailedName>Shared charges</DetailedName>
												<Description>All transaction charges other than the charges of the financial institution servicing the ordering customer account are borne by the beneficiary customer.</Description>
											</Code>
										</Codes>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="71F">
						<SwiftFieldDef Name="71">
							<Generic>false</Generic>
							<Option Name="F">
								<Format><![CDATA[3!a15d]]></Format>
								<Specification><![CDATA[(Currency) (Amount)]]></Specification>
								<Description><![CDATA[Sender's Charges]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>true</Repeating>
						<Presence>O</Presence>
						<Options>F</Options>
						<Validations>
							<SubField Name="Currency">
								<Validation>
									<Options>F</Options>
									<ErrorCode>T52</ErrorCode>
									<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52).]]></Comment>
									<ValidationPattern xsi:type="Currency_Code" Type="Currency Code">
										<Type>Currency Code</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="Amount">
								<Validation>
									<Options>F</Options>
									<ErrorCode>C03</ErrorCode>
									<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency.]]></Comment>
									<ValidationPattern xsi:type="Decimal" Type="Decimal">
										<Type>Decimal</Type>
										<currency-field>Currency</currency-field>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="71G">
						<SwiftFieldDef Name="71">
							<Generic>false</Generic>
							<Option Name="G">
								<Format><![CDATA[3!a15d]]></Format>
								<Specification><![CDATA[(Currency) (Amount)]]></Specification>
								<Description><![CDATA[Receiver's Charges]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options>G</Options>
						<Validations>
							<SubField Name="Currency">
								<Validation>
									<Options>G</Options>
									<ErrorCode>T52</ErrorCode>
									<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52).]]></Comment>
									<ValidationPattern xsi:type="Currency_Code" Type="Currency Code">
										<Type>Currency Code</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="Amount">
								<Validation>
									<Options>G</Options>
									<ErrorCode>C03</ErrorCode>
									<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency (Error code(s): C03,T40,T43).]]></Comment>
									<ValidationPattern xsi:type="Decimal" Type="Decimal">
										<Type>Decimal</Type>
										<currency-field>Currency</currency-field>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="72">
						<SwiftFieldDef Name="72">
							<Generic>false</Generic>
							<Option Name="">
								<Format><![CDATA[6*35x]]></Format>
								<Specification><![CDATA[(Narrative - Structured Format)]]></Specification>
								<Description><![CDATA[Sender to Receiver Information]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options> </Options>
					</SwiftField>
					<SwiftField Name="77B">
						<SwiftFieldDef Name="77">
							<Generic>false</Generic>
							<Option Name="B">
								<Format><![CDATA[3*35x]]></Format>
								<Specification><![CDATA[(Narrative)]]></Specification>
								<Description><![CDATA[Regulatory Reporting]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options>B</Options>
					</SwiftField>
				</Fields>
			</Data>
			<Trailer>
				<fields>
					<field>
						<name>Message Authentication Code</name>
						<description><![CDATA[Allows authentication by the receiving user. It is followed by an authentication result.

This trailer is mandatory for most user-to-user message categories within the FIN application. When the FIN Copy Service is used a PAC trailer, if present, follows the MAC trailer.

Format:

{MAC:<authentication-result>}

where <authentication-result> = 8!h

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>8</length>
						<tag>MAC</tag>
					</field>
					<field>
						<name>Proprietary Authentication Code</name>
						<description><![CDATA[The PAC is used within the FIN Copy service only, when using the double authentication option. The PAC is included in Block 5 of FIN user-to-user messages, immediately after the MAC trailer, if present.

This is calculated on the extracted fields of Block 4 of the message, the value of field 115, if present, and the <authentication-result> of the MAC trailer for Copy Services with double authentication.

Thus, the end-of-block indicator (CrLf-) is included in the PAC calculation, and the fields are defined as follows:

The first three characters are CrLf:

The field and the delimiter are present, that is, 32A:, 20:, and so on.

All subfields and their delimiters are present.

Format:

{PAC:[<authentication-result>]}

where <authentication-result> is mandatory on input messages only and <authentication-result> = 8!h

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>8</length>
						<tag>PAC</tag>
					</field>
					<field>
						<name>Checksum</name>
						<description><![CDATA[The checksum is computed based on the receiver's address (12 characters, with 9th character replaced by X) plus the Text Block. This trailer allows the system and the CBT to check that messages have not been corrupted due to a system malfunction or an undetected transmission error.

Format:

{CHK:<checksum-result>}

where <checksum-result> = 12!h

Note: This trailer is mandatory for FIN and GPA messages (Service Identifier 01).

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>12</length>
						<tag>CHK</tag>
					</field>
					<field>
						<name>System Originated Message</name>
						<description><![CDATA[The system message or service message which is generated by a system PLT has a SYS trailer. All solicited system messages (Service Identifier 01) contain the MIR of the request and may also contain the time.

Format:

{SYS:[<time><mir>]}

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>SYS</tag>
					</field>
					<field>
						<name>Test And Training Message</name>
						<description><![CDATA[Mandatory for FIN and GPA messages (Service Identifier 01) sent by, or delivered to, a Test & Training Logical Terminal (LT). This trailer has a tag only, and no value.

Format:

{TNG:}
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>0</length>
						<tag>TNG</tag>
					</field>
					<field>
						<name>Possible Duplicate Emission</name>
						<description><![CDATA[This trailer is used by the destination of the message. It only applies to FIN user-to-user messages (Service Identifier 01, message categories reserved for banking messages). There can be multiple PDEs. The system does not verify the order nor restrict the number (except for maximum message length).

Correctly formatted PDE trailers applied to user-to-system messages are accepted by the system, but not processed. This means that the system does not check to see if the original message exists. Therefore, a retrieval request sent with a PDE trailer may be processed twice if the original message was received by the system.

Format:

{PDE:[<time><mir>]}

where <time><mir> refers to the emission of the previous possible issue.

Note: It can be added automatically by a CBT or manually by a user. It may be followed by the MIR and the time of its previous possible messages.

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>PDE</tag>
					</field>
					<field>
						<name>Delayed Message</name>
						<description><![CDATA[This trailer is added to all FIN user-to-user output messages that have exceeded their obsolescence period. If this trailer appears in GPA or FIN system messages, it must be ignored. This trailer has a tag only, and no value.

The Obsolescence Period is:

U = 15 minutes

N = 100 minutes

Format:

{DLM:}

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>0</length>
						<tag>DLM</tag>
					</field>
					<field>
						<name>Possible Duplicate Message</name>
						<description><![CDATA[Added by the system to any output message (GPA and FIN Service Identifier 01) being resent because a prior delivery may be invalid. If a system PLT receives a report request with a PDM, the response has a plain PDM (without the optional delivery reference). Other PDMs may be added as a result of unsuccessful delivery attempts to the user. 
Format:
{PDM:[<time><mor>]}
where <time> and the Message Output Reference <mor> are that of the previous attempt.
Note: For messages recovered after a system failure, the optional fields may not be present.
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>PDM</tag>
					</field>
					<field>
						<name>Message Reference</name>
						<description><![CDATA[The MRF trailer is used to specify the message reference of the original user message in MT 096 FIN Copy to Central Institution Messages.
Format:
{MRF:<date><full-time><mir>}
where <mir> is that of the original user message whose fields are copied in the MT 096 FIN Copy to Central Institution Message.
Note: The MRF is specific to FIN Copy. The MRF trailer is automatically generated in the MT 096 FIN Copy to Central Institution Message and can only be reused in field 109 of the MT 096 FIN Copy to Central Institution Message to identify the MT 096 to which the MT 097 is a response. The format of the MRF is subject to change.
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>MRF</tag>
					</field>
				</fields>
			</Trailer>
		</SwiftFields>
		<validationrules name="Default">
			<hdrvalidationrules>
				<fieldvalidations>
					<fieldvalidation>
						<name>U09</name>
						<formula><![CDATA[if($this.Header.GetFieldIndex("User_Header") != -1) {
    def userHeader = $this.Header.GetSection("User_Header");
    if(userHeader.$size > 0 && userHeader[0].IsNotNull("Validation_Flag")) {
            return false;
        }
    }
return true;
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U09</error-code>
						<actionmessage><![CDATA["User has used tag 119 in a message that is not a candidate for special processing"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>U03</name>
						<fieldname>User Header</fieldname>
						<formula><![CDATA[Iff(IsNotNull(User_Header.Service_Type_Identifier), 
    IsNotNull(User_Header.Unique_End_To_End_Transaction_Reference))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U03</error-code>
						<actionmessage><![CDATA["When populating an end-to-end reference, both fields 111 and 121 must be populated: a message that contains only one of these two fields will not be accepted by FIN."]]></actionmessage>
					</fieldvalidation>
				</fieldvalidations>
			</hdrvalidationrules>
			<datavalidationrules>
				<fieldvalidations>
					<fieldvalidation>
						<name>C1-1</name>
						<fieldname>33B.Currency</fieldname>
						<formula><![CDATA[If($value == F32A[0].Currency, 
   F36.$size == 0, 
   F36.$size > 0)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D75</error-code>
						<actionmessage><![CDATA["If field 33B is present and the currency code is different from the currency code in field 32A, field 36 must be present, otherwise field 36 is not allowed."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C1-2</name>
						<fieldname>36</fieldname>
						<formula><![CDATA[F33B.$size > 0]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D75</error-code>
						<actionmessage><![CDATA["If field 33B is present and the currency code is different from the currency code in field 32A, field 36 must be present, otherwise field 36 is not allowed."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C2</name>
						<comment><![CDATA["If the country codes of the Sender's and the Receiver's BICs are within the following list: AD, AT, BE, BG, BV, CH, CY, CZ, DE, DK, ES, EE, FI, FR, GB, GF, GI, GP, GR, HU, IE, IS, IT, LI, LT, LU, LV, MC, MQ, MT, NL, NO, PL, PM, PT, RE, RO, SE, SI, SJ, SK, SM, TF and VA, then field 33B is mandatory, otherwise field 33B is optional."]]></comment>
						<formula><![CDATA[def header = $this.Header;
def appheader;
if(header.GetFieldCount() == 0 || (header.getfieldcount() > 0 && header.GetFieldIndex("Basic_Header") == -1)) {
	// No Header or FICC Header
	return true;
}
if(header.GetFieldCount() == 4) {
	// Input/output header
    appheader = If(header.GetSection(1).$size > 0, 
                   header.GetSection(1)[0], 
                   header.GetSection(2)[0]);
}
else {
    appheader = header.GetSection(1)[0];
}
def basicheader = header.GetSection(0)[0];
def ioIdentifier = appheader.GetString("Input_Output_Identifier");
def mir = (If(ioIdentifier == "O", 
           GetString(appheader, "Message Input Reference"), 
           ""));
def receiverAddress = (If(ioIdentifier == "I", 
                       GetString(appheader, "Receiver's Address"), 
                       ""));
def senderCountryCode = (If(ioIdentifier == "I", 
                         Mid(basicheader.GetString("LT Identifier"), 4, 2), 
                         Mid(mir, 10, 2)));
def receiverCountryCode = (If(ioIdentifier == "I", 
                           Mid(receiverAddress, 4, 2), 
                           Mid(basicheader.GetString("LT Identifier"), 4, 2)));
If(In(senderCountryCode, "AD", "AT", "BE", "BG", "BV", "CH", "CY", 
      "CZ", "DE", "DK", "EE", "ES", "FI", "FR", "GB", "GF", 
      "GI", "GP", "GR", "HU", "IE", "IS", "IT", "LI", "LT", 
      "LU", "LV", "MC", "MQ", "MT", "NL", "NO", "PL", "PM", 
      "PT", "RE", "RO", "SE", "SI", "SJ", "SK", "SM", "TF", "VA") && 
     In(receiverCountryCode, "AD", "AT", "BE", "BG", "BV", "CH", 
        "CY", "CZ", "DE", "DK", "EE", "ES", "FI", "FR", "GB", 
        "GF", "GI", "GP", "GR", "HU", "IE", "IS", "IT", "LI", 
        "LT", "LU", "LV", "MC", "MQ", "MT", "NL", "NO", "PL", 
        "PM", "PT", "RE", "RO", "SE", "SI", "SJ", "SK", "SM", "TF", 
        "VA"), 
   F33B.$size > 0, 
   true);
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D49</error-code>
						<actionmessage><![CDATA["If the country codes of the Sender's and the Receiver's BICs are within the following list: AD, AT, BE, BG, BV, CH, CY, CZ, DE, DK, ES, EE, FI, FR, GB, GF, GI, GP, GR, HU, IE, IS, IT, LI, LT, LU, LV, MC, MQ, MT, NL, NO, PL, PM, PT, RE, RO, SE, SI, SJ, SK, SM, TF and VA, then field 33B is mandatory, otherwise field 33B is optional."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C3-1</name>
						<fieldname>23E.Instruction_Code</fieldname>
						<formula><![CDATA[If(F23B[0].Type == "SPRI", 
   In($value, "SDVA", "TELB", "PHOB", "INTC"), 
   true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E01</error-code>
						<actionmessage><![CDATA["If field 23B contains the code SPRI, field 23E may contain only the codes SDVA, TELB, PHOB, INTC."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C3-2</name>
						<fieldname>23B.Type</fieldname>
						<formula><![CDATA[If(In($value, "SSTD", "SPAY"), F23E.$size == 0, true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E02</error-code>
						<actionmessage><![CDATA["If field 23B contains one of the codes SSTD or SPAY, field 23E must not be used."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C4</name>
						<fieldname>23B.Type</fieldname>
						<formula><![CDATA[If(In($value, "SPRI", "SSTD", "SPAY"), 
   If(F53a.$size > 0, F53a[0].FormatOption != 'D', true), 
   true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E03</error-code>
						<actionmessage><![CDATA["If field 23B contains one of the codes SPRI, SSTD or SPAY, field 53a must not be used with option D."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C5</name>
						<fieldname>23B.Type</fieldname>
						<formula><![CDATA[If(In($value, "SPRI", "SSTD", "SPAY"), 
   If(F53a.$size > 0 && F53a[0].FormatOption == 'B', 
      IsNotNull(F53a[0].Party_Identifier), 
      true), 
   true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E04</error-code>
						<actionmessage><![CDATA["If field 23B contains one of the codes SPRI, SSTD or SPAY and field 53a is present with option B, Party Identifier must be present in field 53B."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C6</name>
						<fieldname>23B.Type</fieldname>
						<formula><![CDATA[If(In($value, "SPRI", "SSTD", "SPAY"), 
   If(F54a.$size > 0, F54a[0].FormatOption == 'A', true), 
   true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E05</error-code>
						<actionmessage><![CDATA["If field 23B contains one of the codes SPRI, SSTD or SPAY, field 54a may be used with option A only."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C7</name>
						<fieldname>55a</fieldname>
						<formula><![CDATA[F53a.$size > 0 && F54a.$size > 0]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E06</error-code>
						<actionmessage><![CDATA["If field 55a is present, then both fields 53a and 54a must also be present."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C8</name>
						<fieldname>23B.Type</fieldname>
						<formula><![CDATA[If(In($value, "SPRI", "SSTD", "SPAY"), 
   If(F55a.$size > 0, F55a[0].FormatOption == 'A', true), 
   true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E07</error-code>
						<actionmessage><![CDATA["If field 23B contains one of the codes SPRI, SSTD or SPAY, field 55a may be used with option A only."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C9</name>
						<fieldname>56a</fieldname>
						<formula><![CDATA[F57a.$size > 0]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C81</error-code>
						<actionmessage><![CDATA["If field 56a is present, field 57a must also be present."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C10A</name>
						<fieldname>23B.Type</fieldname>
						<formula><![CDATA[If($value == "SPRI", F56a.$size == 0, true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E16</error-code>
						<actionmessage><![CDATA["If field 23B contains the code SPRI, field 56a must not be present."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C10B</name>
						<fieldname>23B.Type</fieldname>
						<formula><![CDATA[If(In($value, "SSTD", "SPAY"), 
   If(F56a.$size > 0, 
      F56a[0].FormatOption == 'A' || 
        (F56a[0].FormatOption == 'C' && 
           Length(F56a[0].Party_Identifier) >= 3 && 
           StartsWith(F56a[0].Party_Identifier, "/") && 
           In(Mid(F56a[0].Party_Identifier, 1, 2), "AT", 
              "AU", "BL", "CC", "CH", "CP", "ES", "FW", "GR", 
              "HK", "IE", "IN", "IT", "NZ", "PT", "RT", "RU", 
              "SC", "SW")), 
      true), 
   true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E17</error-code>
						<actionmessage><![CDATA["If field 23B contains one of the codes SSTD or SPAY, field 56a may be used with either option A or option C. If option C is used, it must contain a clearing code."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C11</name>
						<fieldname>23B.Type</fieldname>
						<formula><![CDATA[If(In($value, "SPRI", "SSTD", "SPAY"), 
   If(F57a.$size > 0, 
      In(F57a[0].FormatOption, 'A', 'C') || 
        (F57a[0].FormatOption == 'D' && 
           IsNotNull(F57a[0].Party_Identifier)), 
      true), 
   true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E09</error-code>
						<actionmessage><![CDATA["If field 23B contains one of the codes SPRI, SSTD or SPAY, field 57a may be used with option A, option C or option D. Subfield 1 (Party Identifier) in option D must be present."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C12</name>
						<fieldname>23B.Type</fieldname>
						<formula><![CDATA[If(In($value, "SPRI", "SSTD", "SPAY"), 
   IsNotNull(F59a[0].Account), 
   true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E10</error-code>
						<actionmessage><![CDATA["If field 23B contains one of the codes SPRI, SSTD or SPAY, subfield 1 (Account) in field 59a Beneficiary Customer is mandatory."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C13</name>
						<fieldname>23E.Instruction_Code</fieldname>
						<formula><![CDATA[If($value == "CHQB", IsNull(F59a[0].Account), true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E18</error-code>
						<actionmessage><![CDATA["If any field 23E contains the code CHQB, subfield 1 (Account) in field 59a Beneficiary Customer is not allowed."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C14</name>
						<fieldname>71A.Code</fieldname>
						<formula><![CDATA[If($value == "OUR", F71F.$size == 0, true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E13</error-code>
						<actionmessage><![CDATA["If field 71A contains OUR, then field 71F is not allowed and field 71G is optional."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C14</name>
						<fieldname>71A.Code</fieldname>
						<formula><![CDATA[If($value == "SHA", F71G.$size == 0, true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D50</error-code>
						<actionmessage><![CDATA["If field 71A contains SHA, then field(s) 71F is(are) optional and field 71G is not allowed."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C14</name>
						<fieldname>71A.Code</fieldname>
						<formula><![CDATA[If($value == "BEN", F71F.$size > 0 && F71G.$size == 0, true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E15</error-code>
						<actionmessage><![CDATA["If field 71A contains BEN, then at least one occurrence of field 71F is mandatory and field 71G is not allowed."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C15</name>
						<formula><![CDATA[If(F71F.$size > 0 || F71G.$size > 0, F33B.$size > 0, true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D51</error-code>
						<actionmessage><![CDATA["If either field 71F (at least one occurrence) or field 71G is present, then field 33B is mandatory, otherwise field 33B is optional."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C16</name>
						<fieldname>23E.Instruction_Code</fieldname>
						<formula><![CDATA[If(In($value, "TELI", "PHOI"), F56a.$size > 0, true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E44</error-code>
						<actionmessage><![CDATA["If field 56a is not present, no field 23E may contain TELI or PHOI."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C17</name>
						<fieldname>23E.Instruction_Code</fieldname>
						<formula><![CDATA[If(In($value, "TELE", "PHON"), F57a.$size > 0, true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E45</error-code>
						<actionmessage><![CDATA["If field 57a is not present, no field 23E may contain TELE or PHON."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C18</name>
						<fieldname>71G.Currency</fieldname>
						<formula><![CDATA[$value == F32A[0].Currency]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C02</error-code>
						<actionmessage><![CDATA["The currency code in the fields 71G and 32A must be the same."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F23E-A</name>
						<fieldname>23E.Additional_Information</fieldname>
						<formula><![CDATA[In(F23E.Instruction_Code, "PHON", "PHOB", "PHOI", "TELE", "TELB", 
   "TELI", "HOLD", "REPA")]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D97</error-code>
						<actionmessage><![CDATA["Additional Information is only allowed when Instruction Code consists of one of the following codes: PHON, PHOB, PHOI, TELE, TELB, TELI, HOLD or REPA."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F23E-C</name>
						<fieldname>23E</fieldname>
						<formula><![CDATA[F23E.$size == SecGroup(F23E, "Instruction_Code").$size]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E46</error-code>
						<actionmessage><![CDATA["If this field is repeated, the same code word must not be present more than once."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F23E-B1</name>
						<fieldname>23E.Instruction_Code</fieldname>
						<formula><![CDATA[If(In($value, "SDVA", "INTC", "REPA", "CORT"), 
   !FieldValueExistsInAtLeastOne(F23E, "Instruction_Code", "HOLD"), 
   true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D67</error-code>
						<actionmessage><![CDATA["When field 23E is used more than once, the following combinations are not allowed: SDVA with HOLD, INTC with HOLD, REPA with HOLD, CORT with HOLD."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F23E-B2</name>
						<fieldname>23E.Instruction_Code</fieldname>
						<formula><![CDATA[If(In($value, "SDVA", "INTC", "REPA", "CORT", "HOLD"), 
   !FieldValueExistsInAtLeastOne(F23E, "Instruction_Code", "CHQB"), 
   true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D67</error-code>
						<actionmessage><![CDATA["When field 23E is used more than once, the following combinations are not allowed: SDVA with CHQB, INTC with CHQB, REPA with CHQB, CORT with CHQB, HOLD with CHQB."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F23E-B4</name>
						<fieldname>23E.Instruction_Code</fieldname>
						<formula><![CDATA[If($value == "REPA", 
   !FieldValueExistsInAtLeastOne(F23E, "Instruction_Code", "CORT"), 
   true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D67</error-code>
						<actionmessage><![CDATA["When field 23E is used more than once, the following combination is not allowed: REPA with CORT."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F23E-B5</name>
						<fieldname>23E.Instruction_Code</fieldname>
						<formula><![CDATA[If($value == "PHOB", 
   !FieldValueExistsInAtLeastOne(F23E, "Instruction_Code", "TELB"), 
   true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D67</error-code>
						<actionmessage><![CDATA["When field 23E is used more than once, the following combination is not allowed: PHOB with TELB."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F23E-B6</name>
						<fieldname>23E.Instruction_Code</fieldname>
						<formula><![CDATA[If($value == "PHON", 
   !FieldValueExistsInAtLeastOne(F23E, "Instruction_Code", "TELE"), 
   true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D67</error-code>
						<actionmessage><![CDATA["When field 23E is used more than once, the following combination is not allowed: PHON with TELE."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F23E-B7</name>
						<fieldname>23E.Instruction_Code</fieldname>
						<formula><![CDATA[If($value == "PHOI", 
   !FieldValueExistsInAtLeastOne(F23E, "Instruction_Code", "TELI"), 
   true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D67</error-code>
						<actionmessage><![CDATA["When field 23E is used more than once, the following combination is not allowed: PHOI with TELI."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F71G-A</name>
						<fieldname>71G.Amount</fieldname>
						<formula><![CDATA[$value > 0]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D57</error-code>
						<actionmessage><![CDATA["If field 71G is present, the amount must not equal '0'."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F51A-A</name>
						<formula><![CDATA[F51A.$size == 0]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D63</error-code>
						<actionmessage><![CDATA["Field 51A is only valid in IFT."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F72-A</name>
						<fieldname>72.Narrative_-_Structured_Format</fieldname>
						<formula><![CDATA[VerifyField72NarrativeText($value)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T32</error-code>
						<actionmessage><![CDATA["The first line of field 72 should be of the following format: /8c/[additional information]. The remaining lines (2 - 6) should be of the following format: [//continuation of additional information] or [/8c/[additional information]]."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F50a-A</name>
						<fieldname>50a.Party_Identifier</fieldname>
						<comment><![CDATA[F50a-A
With option F, subfield 1 (Party Identifier), one of the following line formats must be used (Error code(s): T54):
Line format 1 :/34x (Account)
Line format 2 :4!a/2!a/27x (Code)(Country Code)(Identifier)]]></comment>
						<formula><![CDATA[Implies(F50a.FormatOption == 'F', Verify50FPartyIdFormat($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T54</error-code>
						<actionmessage><![CDATA["Invalid 'Party Identifier' value. One of the following line formats must be used: /34x (Account) or 4!a/2!a/27x (Code)(Country Code)(Identifier)"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F50a-B</name>
						<fieldname>50a.Party_Identifier</fieldname>
						<comment><![CDATA[F50a-B
In option F, when subfield 1 Party Identifier is used with the (Code)(Country Code)(Identifier) format, one of the following codes must be used (Error code(s): T55): ARNU, CCPT, CUST, DRLC, EMPL, NIDN, SOSE and TXID."
]]></comment>
						<formula><![CDATA[Implies(F50a.FormatOption == 'F', Verify50FPartyIdCode($value))
/* get the code from party identifier if format is 4!a/2!a/27x */   ]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T55</error-code>
						<actionmessage><![CDATA["Invalid 'Party Identifier' value. When 'Party Identifier' is used with the format (Code)(Country Code)(Identifier), one of following codes must be used: ARNU, CCPT, CUST, DRLC, EMPL, NIDN, SOSE and TXID."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F50a-C</name>
						<fieldname>50a.Party_Identifier</fieldname>
						<comment><![CDATA[F50a-D
In option F, subfield 1 (Party Identifier) used with the (Code)(Country Code)(Identifier) format: Country Code must be a valid ISO country code (Error code(s): T73).
]]></comment>
						<formula><![CDATA[Implies(F50a.FormatOption == 'F', Verify50FPartyIdCountryCode($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T73</error-code>
						<actionmessage><![CDATA["Invalid 'Party Identifier' value. In option F, subfield 1 (Party Identifier) used with the (Code)(Country Code)(Identifier) format: Country Code must be a valid ISO country code."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F50a-D</name>
						<fieldname>50a.Name_&amp;_Address</fieldname>
						<comment><![CDATA[F50a-C
With option F, subfield 2 (Name and Address), the following line format must be used for all lines: 1!n/33x (Number)(Details). (Error code(s): T54).]]></comment>
						<formula><![CDATA[Implies(F50a.FormatOption == 'F', Verify50FNmandAdrFormat($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T54</error-code>
						<actionmessage><![CDATA["Invalid 'Name and Address' value. With option F, subfield 2 (Name and Address), the following line format must be used for all lines :1!n/33x (Number)(Details)."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F50a-E</name>
						<fieldname>50a.Name_&amp;_Address</fieldname>
						<comment><![CDATA[F50a-E
 With option F - subfield 2 (Name and Address), should start with Number 1 to 8 and it should follow the line formatting rules as specified in the SWIFT spec (Error code(s): T56).]]></comment>
						<formula><![CDATA[Implies(F50a.FormatOption == 'F', Verify50FNmandAdrLines2($value, F50a.Party_Identifier))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T56</error-code>
						<actionmessage><![CDATA["Invalid 'Name and Address' value. With option F - subfield 2 (Name and Address), should start with Number 1 to 8 and it should follow the line formatting rules as specified in the SWIFT spec."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F50a-F</name>
						<fieldname>50a.Name_&amp;_Address</fieldname>
						<comment><![CDATA[F50a-F
Number 4 must be followed by a valid date in the format YYYYMMDD and this date, local to the sender, must not be later than the date on which the message is successfully sent to SWIFT (Error code(s): T50).
]]></comment>
						<formula><![CDATA[Implies(F50a.FormatOption == 'F', Verify50FNmandAdrDate($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T50</error-code>
						<actionmessage><![CDATA["Invalid 'Name and Address' value. Number 4 must be followed by a valid date in the format YYYYMMDD and this date, local to the sender, must not be later than the date on which the message is successfully sent to SWIFT."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F50a-G</name>
						<fieldname>50a.Name_&amp;_Address</fieldname>
						<comment><![CDATA[F50a-G
Numbers 3, 5, 6 and 7 must be followed by a valid ISO country code
(Error code(s): T73).]]></comment>
						<formula><![CDATA[Implies(F50a.FormatOption == 'F',Verify50FNmandAdrCtryCode2($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T73</error-code>
						<actionmessage><![CDATA["Invalid 'Name and Address' value. Numbers 3, 5, 6 and 7 must be followed by a valid ISO country code."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F23E-D</name>
						<fieldname>23E</fieldname>
						<formula><![CDATA[$codesOrder = "SDVA,INTC,REPA,CORT,HOLD,CHQB,PHOB,TELB,PHON,TELE,PHOI,TELI";
$prevCodeIndex = -1;
for ($i=0; $i < F23E.$size; $i = $i + 1) {
   $codeIndex = FindFirst($codesOrder, F23E[$i].Instruction_Code);
   if ($codeIndex < $prevCodeIndex) {
      return false;
   }
   else {
      $prevCodeIndex = $codeIndex;
   }
} 
return true;]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D98</error-code>
						<actionmessage><![CDATA["If field 23E is repeated, the codes must appear in the following order: SDVA,INTC,REPA,CORT,BONL,HOLD,CHQB,PHOB,TELB,PHON,TELE,PHOI,TELI"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>ERI-1</name>
						<comment><![CDATA["For specific message types, an European currency must not be used as the currency of settlement after a cut-off date (Error Code: E76)."]]></comment>
						<formula><![CDATA[applyERIValidation(F32A[0], "Date", F32A[0], "Currency")]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E76</error-code>
						<actionmessage><![CDATA["For specific message types, an European currency must not be used as the currency of settlement after a cut-off date (Error Code: E76)."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>ERI-2</name>
						<fieldname>72.Narrative_-_Structured_Format</fieldname>
						<formula><![CDATA[ApplyERICodeValidationStructured($value);]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T47</error-code>
						<actionmessage><![CDATA["In an ERI field (i.e. fields 61, 72, 77A, 79, 86) the data part of a code word /OCMT/, or /CHGS/, is being validated, but the ending separator (i.e. third slash) is missing or the code words are duplicated."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F-72-B</name>
						<fieldname>72.Narrative_-_Structured_Format</fieldname>
						<formula><![CDATA[def ActualValue = Replace($value, "\r\n", "\n");
def lines = Split("\n", ActualValue);
def str = Left(ActualValue, 6);
def line1format = false;
def line3format = false;
def TREFformat = true;
def CHGSformat = true;
def TEXTformat = true;
def format = true;
def count = 0;
def TREFcount = 0;
def CHGScount = 0;
def TEXTcount = 0;
def i = lines.Length();
if(In(str, "/REJT/", "/RETN/")) {
    if(i <= 6) {
        //if '/REJT/' or '/RETN/' format of 1st line must be "6!x2!n[1a]['/'2c]" & format of 2nd line must be "('/'2!c 2!n'/')[29x]" or "('/X'1c2!n'/')[29x]"
        //if format of 2nd line is "('/'2!c 2!n'/')" then the 6 characters must be one of the codes given below
        line1format = (VerifyFormat(lines[0], "6!x2!n[1a]['/'2c]"));
        if(line1format && lines.Length() > 2) {
            if(!lines[1].StartsWith("/X")) {
                if(VerifyFormat(lines[1], "('/'2!c 2!n'/')[29x]")) {
                	def startStr = lines[1].Left(6);
                    if((!In(startStr, "/AC01/", "/AC02/", "/AC03/", "/AC04/", "/AC05/", "/AC06/", 
                            "/AM01/", "/AM02/", "/AM03/", "/AM04/", "/AM05/", "/AM06/", "/AM07/", 
                            "/AM08/", "/AG01/", "/AG02/", "/BE01/", "/BE02/", "/BE03/", "/BE04/", 
                            "/BE05/", "/DT01/", "/MS01/", "/PY01/", "/RC01/", "/RC02/", "/RC03/", 
                            "/RC04/", "/RF01/", "/TM01/", "/RR01/", "/RR02/", "/RR03/")))
                        return false;
                }
                else
                    return false;
            }
            else if(lines[1].StartsWith("/X") && !VerifyFormat(lines[1], "('/X'1c2!n'/')[29x]"))
                return false;
        }
        else
            return false;
        //Line3 is mandatory and should have the format "/MREF/16x". Lines 4, 5 and 6 are optional
        //If lines 4, 5 or 6 or any combination exists and if the first 6 characters starts with either '/TREF/' or '/CHGS/' or '/TEXT/' or '//'
        //it should satisfy the format given. Also if line starts with '//' it can appear a max of 2 times
        line3format = Equal(Left(lines[2], 6), "/MREF/") && 
                        VerifyFormat(Substring(lines[2], 6), "16x");
        if(line3format) {
            while(i > 3) {
                def str1 = Left(lines[i - 1], 6);
                def str2 = Substring(lines[i - 1], 6);
                if(In(str1, "/TREF/", "/CHGS/", "/TEXT/") || StartsWith(lines[i - 1], "//")) {
                    if(str1 == "/TREF/") {
                        TREFformat = VerifyFormat(str2, "16x");
                        TREFcount += 1;
                    }
                    else if(str1 == "/CHGS/") {
                        CHGSformat = (VerifyFormat(str2, "3!a15d") && 
                                        IsISOCurrencyCode(Substring(lines[i - 1], 6, 3)));
                        CHGScount += 1;
                    }
                    else if(str1 == "/TEXT/") {
                        TEXTformat = (VerifyFormat(str2, "29x"));
                        TEXTcount += 1;
                    }
                    else if(StartsWith(lines[i - 1], "//")) {
                        def str3 = Substring(lines[i - 1], 2);
                        format = (VerifyFormat(str3, "33x"));
                        count += 1;
                        if(!format || count > 2)
                            break;
                    }
                }
                else
                    return false;
                i = i - 1;
            }
        }
        else
            return false;
        if(!TREFformat || !CHGSformat || !TEXTformat || !format || count > 2 || TREFcount > 1 || 
             CHGScount > 1 || TEXTcount > 1)
            return false;
    }
    else
        return false;
}
return true;
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T80</error-code>
						<actionmessage><![CDATA["Field 72 Reject/Return: code word error, or mandatory code word missing, or code word not in the proper sequence, or format 6*35x not satisfied"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F-72-C</name>
						<fieldname>72.Narrative_-_Structured_Format</fieldname>
						<formula><![CDATA[def ActualValue = Replace($value, "\r\n", "\n");
def lines = Split("\n", ActualValue);
if(lines.Length() > 3) {
    for(def i = 0; i < lines.Length(); ++i) {
        if(lines[i].Substring(0, 6) == "/CHGS/") {
            def format = lines[i].Substring(6);
            def cur = format.Substring(0, 3);
            def amt = format.Substring(3);
            def Lastslash = FindFirst(amt, "/");
            if(Lastslash != -1)
                amt = amt.Left(Lastslash);
            def pos = FindFirst(amt, ",");
            amt = Replace(amt, ",", ".");
            def isvalid = IsValidDecimals(cur, amt);
            if(!isvalid)
                return false;

        }
    }
}
return true;
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C03</error-code>
						<actionmessage><![CDATA["Field 72 Reject/Return: The number of digits following the comma must not exceed the maximum number allowed for the currency specified."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F-32A</name>
						<fieldname>32A.Currency</fieldname>
						<formula><![CDATA[!In($value, "XAU", "XAG", "XPD", "XPT")]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C08</error-code>
						<actionmessage><![CDATA["The codes XAU, XAG, XPD and XPT are not allowed, as these are codes for commodities for which the category 6 commodities messages must be used."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F-59a-A</name>
						<fieldname>59a.Name_&amp;_Address_Details</fieldname>
						<formula><![CDATA[Implies(F59a.FormatOption == 'F', Verify59FNmandAdrDtlLines($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T56</error-code>
						<actionmessage><![CDATA["Invalid 'Name_and_Address_Details' value. With option F - subfield 2 (Name_and_Address_Details), should start with Number 1 to 3 and it should follow the line formatting rules as specified in the SWIFT spec for field 59F."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F-59a-B</name>
						<fieldname>59a.Name_&amp;_Address_Details</fieldname>
						<formula><![CDATA[Implies(F59a.FormatOption == 'F', Verify59FNmandAdrDtlFormat($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T56</error-code>
						<actionmessage><![CDATA["Invalid 'Name and Address Details' value. With option F, subfield 2 (Name and Address Details), the following line format must be used for all lines :1!n/33x (Number)(Name and Address Details)."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F-59a-C</name>
						<fieldname>59a.Name_&amp;_Address_Details</fieldname>
						<formula><![CDATA[Implies(F59a.FormatOption == 'F', Verify59FNmandAdrDtlCtryCode($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T73</error-code>
						<actionmessage><![CDATA["Invalid 'Name_and_Address_Details' value. Number 3 must be followed by a valid ISO country code."]]></actionmessage>
					</fieldvalidation>
				</fieldvalidations>
			</datavalidationrules>
			<tlrvalidationrules>
				<fieldvalidations>
				</fieldvalidations>
			</tlrvalidationrules>
		</validationrules>
		<elementproperties>
			<propertymap>
				<property name="codegen.java.properties">
					<value>
						<propertymap type="com.tplus.transform.design.PropertiesDef">
							<property name="Java Package Name" value="com.transform.external.%e"/>
							<property name="Jar Name" value="%c.jar"/>
							<property name="Manifest Entries" value="transformrt.jar swiftrt.jar swiftresources.jar"/>
							<property name="Data Source" value=""/>
						</propertymap>
					</value>
				</property>
			</propertymap>
		</elementproperties>
	</externalmessage>
	<externalmessage xsi:type="SwiftFormat" type="SwiftFormat" version="5.1.2" rulename="MT103REMIT_2016" formattype="SwiftFormat" >
		<description><![CDATA[This message type is sent by or on behalf of the financial institution of the ordering customer, directly or through (a) correspondent(s), to the financial institution of the beneficiary customer.

It is used to convey a funds transfer instruction in which the ordering customer or the beneficiary customer, or both, are non-financial institutions from the perspective of the Sender.

This message may only be used for clean payment instructions. It must not be used to advise the remitting bank of a payment for a clean, eg, cheque, collection, nor to provide the cover for a transaction whose completion was advised separately, eg, via an MT 400.]]></description>
		<standard>SWIFT</standard>
		<standard-name>MT103REMIT</standard-name>
		<standard-version>SRG 2016</standard-version>
		<standard-release-qualifier>20160308</standard-release-qualifier>
		<standard-category>Customer Payments &amp; Cheques</standard-category>
		<standard-detailed-name>REMIT Single Customer Credit Transfer</standard-detailed-name>
		<version>1.0</version>
		<SwiftFields>
			<customizable>true</customizable>
			<modifiable>false</modifiable>
			<SwiftMessageType>User</SwiftMessageType>
			<max-length>10000</max-length>
			<HeaderAndTrailerType>SWIFT_INPUT_OUTPUT_HEADER</HeaderAndTrailerType>
			<Header>
				<fields>
					<field>
						<name>Basic Header</name>
						<description><![CDATA[The Basic Header is given in Block 1 of a SWIFT message and is the only header that appears on all messages. The Basic Header provides the fundamental reference for any particular message and is almost always automatically built by the CBT.
The Basic Header has the same format for both input and output messages. However, the information contained in the Basic Header is relative to the sender when the message is input but relative to the receiver when the same message is output.]]></description>
						<datatype>Section</datatype>
						<required>true</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Application Identifier</name>
								<description><![CDATA[The Application Identifier identifies the application within which the message is being sent or received. The available options are:

F = FIN All user-to-user, FIN system and FIN service messages 
A = GPA Most GPA system and service messages 
L = GPA Certain GPA service messages, for example, LOGIN, LAKs, ABORT 

These values are automatically assigned by the SWIFT system and the user's CBT, but the user should be aware of their existence and significance
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Service Identifier</name>
								<description><![CDATA[The Service Identifier consists of 2 numeric characters. It identifies the type of data that is being sent or received and, in doing so, whether the message which follows is one of the following:

a user-to-user message

a system message

a service message, for example, a session control command, such as SELECT, or a logical acknowledgement, such as ACK/SAK/UAK

Users will be primarily concerned with identifier '01' which applies to all GPA and FIN system and user-to-user messages. Other values include: '21' for message acknowledgements such as ACK/NAK, UAK/UNK, '03' for SELECT commands, and 
so on]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>2</length>
							</field>
							<field>
								<name>LT Identifier</name>
								<description><![CDATA[This 12-character SWIFT address, given in the Basic Header Block, is the address of the sending LT for input messages or of the receiving LT for output messages, and includes the Branch Code.

In the Basic Header, the LT Code within the LT Identifier is specific to the LT that has established the session in which the message is being transmitted, that is the sending LT for input messages or the receiving LT for output messages.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>12</length>
							</field>
							<field>
								<name>Session Number</name>
								<description><![CDATA[The Session Number identifies the session in which the message was transmitted. Within the Basic Header, the 4-digit Session Number is the user's current GPA or FIN Session Number.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Sequence Number</name>
								<description><![CDATA[The sequence number always consists of 6 digits. It is the ISN of the sender's current input session or the OSN of the receiver's current output session.

Note: The sequence number is not present in those messages with an Application Identifier of 'L' (for example LOGIN). The sequence number is, however, a key element in the processing of retrievals. Therefore, LOGINs and attempted LOGINs are not retrievable
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>6</length>
							</field>
						</fields>
					</field>
					<field>
						<name>Application Header Input</name>
						<description><![CDATA[The Application Header of a SWIFT message provides information about the message itself.

The Application Header is given in Block 2 of a SWIFT message. It differs according to whether the message is a GPA or a FIN message and whether the Application Header is part of an input or an output message.

]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Input/Output Identifier</name>
								<description><![CDATA[For an input message, the Input/Output Identifier consists of the single letter 'I'.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Message Type</name>
								<description><![CDATA[The Message Type consists of 3 digits which define the MT number of the message being input. The example used above is for an MT 100 Customer Transfer]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>3</length>
							</field>
							<field>
								<name>Receiver's Address</name>
								<description><![CDATA[This address is the 12-character SWIFT address of the receiver of the message, but with a LT Code of 'X'. It defines the destination to which the message should be sent.

The system will replace the 'X' with a specific LT Code on delivery of the message according to the delivery control exercised by the receiving user.

The Branch Code is mandatory and will be validated. The default of 'XXX' may be used, as in the example above.

Unless otherwise documented, system messages addressed to the SWIFT system itself should be addressed to SWFTXXXXXXXX.

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>12</length>
							</field>
							<field>
								<name>Message Priority</name>
								<description><![CDATA[This character, used within FIN Application Headers only, defines the priority with which a message is delivered. The possible values are:

S = System

U = Urgent

N = Normal

Message Priority 'S' must be used for user-to-system messages; for user-to-user messages either 'U' or 'N' can be used. In the absence of user-specified delivery criteria, system messages are always delivered first, followed by urgent priority messages and then normal priority messages.

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Delivery Monitoring</name>
								<description><![CDATA[Delivery monitoring options apply only to FIN user-to-user messages, and allow the sender of a message to request:

automatic MT 011 Delivery Notification once the message has been delivered

automatic MT 010 Non-Delivery Warning if a message is not delivered within the specified obsolescence period (see below)

both, or neither, options. This may be requested on an individual message basis.

The chosen option is expressed as a single digit:

1 = Non-Delivery Warning

2 = Delivery Notification

3 = Non-Delivery Warning and Delivery Notification. 
If the message has priority 'U' then the user must request delivery monitoring option '1' or '3'. If the message has priority 'N', the user can request delivery monitoring option '2', or, by leaving the option blank, no delivery monitoring.
]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>1</length>
							</field>
							<field>
								<name>Obsolescence Period</name>
								<description><![CDATA[The obsolescence period defines the period of time after which a Delayed Message (DLM) trailer is added to a FIN user-to-user message when the message is delivered. For urgent priority messages, it is also the period of time after which, if the message remains undelivered, a Non-Delivery Warning is generated.

The values for the obsolescence period are 003 (15 minutes) for 'U' priority, and 020 (100 minutes) for 'N' priority. An obsolescence period can only be specified when delivery monitoring has been requested (option 1 or 3 for urgent priority messages, option 2 for normal priority messages). If no delivery monitoring has been requested, and an obsolescence period is specified, the message will be NAKed with error code H25.

GPA input Application Headers are similar to their FIN equivalents except that GPA messages do not specify priority, delivery monitoring, nor obsolescence period.

]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>3</length>
							</field>
						</fields>
					</field>
					<field>
						<name>Application Header Output</name>
						<description><![CDATA[The Application Header of a SWIFT message provides information about the message itself.

The Application Header is given in Block 2 of a SWIFT message. It differs according to whether the message is a GPA or a FIN message and whether the Application Header is part of an input or an output message.

]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Input/Output Identifier</name>
								<description><![CDATA[For an input message, the Input/Output Identifier consists of the single letter 'I'.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Message Type</name>
								<description><![CDATA[Three digits indicating the Message Type.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>3</length>
							</field>
							<field>
								<name>Input Time</name>
								<description><![CDATA[The first occurrence of the time field contains the system time and date. This is the generation time in Greenwich Mean Time (GMT).
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Message Input Reference</name>
								<description><![CDATA[The input MIR.

If the message is generated by the system, the input time is the generation time (in GMT) and the input MIR is the system MIR

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>28</length>
							</field>
							<field>
								<name>Output Date</name>
								<description><![CDATA[The output date, local to the receiver.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>6</length>
							</field>
							<field>
								<name>Output Time</name>
								<description><![CDATA[The second occurrence of the time field contains the output time and date. This is in a time local to the receiver.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Message Priority</name>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
						</fields>
					</field>
					<field>
						<name>User Header</name>
						<description><![CDATA[The User Header is an optional header available within FIN for user-to-user messages only. It appears in Block 3 of a SWIFT message, and allows users to provide their own reference within the headers for a particular message.

A User Header can only be assigned by the sender of a message and, if assigned, will always appear on the output message copy. Relevant parts of the User Header will be repeated in related system messages and acknowledgements.

Block 3 may contain tag 113, defining banking priorities, and tag 108, which is a user reference. The user reference part of the User Header may be used as one of the selection criteria when retrieving a message.

The optional field tags 103 and 115 are also used in Block 3 for the FIN Copy service. The order of tags, when present, is 103, 113, 108 and 115.

An optional field tag 119 can be included in Block 3 of certain messages to specify that different validation rules are to be applied. Agreed code words in field 119 indicate what validation rules SWIFT will apply. If field 119 is present, it should appear after field 108
]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Service Identifier</name>
								<description><![CDATA[For any message which the user submits to a FIN Copy service, Block 3 requires an additional field 103 which contains a three-character Service Identifier unique to a specific FIN Copy service. By using a unique identifier it is possible to support access to multiple services within the same CBT.
]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>3</length>
								<tag>103</tag>
							</field>
							<field>
								<name>Banking Priority</name>
								<description><![CDATA[Assigned by the sender of the message.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>4</length>
								<tag>113</tag>
							</field>
							<field>
								<name>Message User Reference</name>
								<description><![CDATA[Assigned by the sender of the message.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>16</length>
								<tag>108</tag>
							</field>
							<field>
								<name>Validation Flag</name>
								<description><![CDATA[Indicates whether a special validation needs to be performed by FIN. The following are examples of the values this field may take. Please note that this list is subject to change:

ISITC indicates validation of ISITC Standards. Only to be used with MT 521 and MT 523.

REMIT identifies the presence of field 77T. Only to be used in MT 103.

RFDD indicates that the message is a request for direct debit. Only to be used in MT 104.

STP indicates that the message is validated according to straight through processing principles. Only to be used in MT 103.

]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>119</tag>
							</field>
							<field>
								<name>Balance checkpoint date and time</name>
								<description><![CDATA[This field contains the balance checkpoint date and time consisting of a date (YYMMDD) and a time (HHMMSS[ss], where 'ss' indicates hundredths of a second). The MI that is subscribed to MIRS will always copy this reference from field tag 13G of the last MT298/091 that it sent into the related MT 298/093 or MT 097 that it generates. ]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>423</tag>
							</field>
							<field>
								<name>Message Input Reference</name>
								<description><![CDATA[This field contains the MIR of the payment message that is related to the notification messages in which this field is present. The MI that is subscribed to MIRS will copy it from the received payment message. In a FINCopy scenario, this field must contain the MIR of the related MT 096]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>106</tag>
							</field>
							<field>
								<name>Related Reference</name>
								<description><![CDATA[This field contains the reference of the payment that is related to the notification messages in which this field is present. The payment itself was not the result of a FIN message. The value of this field must correspond to the related reference (field 21) in the MT298/093. The format of field 424 is 16x.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>424</tag>
							</field>
							<field>
								<name>Service Type Identifier</name>
								<description><![CDATA[This field identifies the applicable global payment service type. The format of field 111 is 3!n.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>111</tag>
							</field>
							<field>
								<name>Unique End-To-End Transaction Reference</name>
								<description><![CDATA[This field provides an end-to-end reference across a payment transaction. The format of field 121 is 36!x.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>121</tag>
							</field>
							<field>
								<name>Addressee Information</name>
								<description><![CDATA[Tag 115 is only valid for output messages. Information from Central Institution to the receiver of payment message. Information is input in the MT 097 FIN Copy Message Authorisation/Refusal Notification in Y-Copy mode.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>115</tag>
							</field>
							<field>
								<name>Payment Release Information Receiver (FINInform Services)</name>
								<description><![CDATA[Tag 165 is only valid for output messages. This field contains information from the server destination to the receiver of payment message. It is only available for use in FINInform services that operate in Y-copy mode.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>165</tag>
							</field>
							<field>
								<name>Receiver Information</name>
								<description><![CDATA[Tag 433 is only valid for output messages. The screening service inputs information in the MT 097 FINCopy Message Authorisation/Refusal Notification, in Y-Copy mode. FINCopy copies the information to the receiver of the screened message.
				    The following values can be present in this field:
				      AOK: message automatically released by screening service
				      FPO: compliance officer has flagged the screening result as false positive
				      NOK: compliance officer has flagged the screened message as suspect
				    The code word can optionally be followed by additional information (up to 20 characters from the x character set).]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>433</tag>
							</field>
						</fields>
					</field>
				</fields>
			</Header>
			<Data>
				<Fields>
					<SwiftField Name="20">
						<SwiftFieldDef Name="20">
							<Generic>false</Generic>
							<Description><![CDATA[Reference]]></Description>
							<Option Name="">
								<Format><![CDATA[16x]]></Format>
								<Specification><![CDATA[(Sender's Reference)]]></Specification>
								<Description><![CDATA[Sender's Reference]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options> </Options>
						<Validations>
							<SubField Name="Sender's_Reference">
								<Validation>
									<Options> </Options>
									<ErrorCode>T26</ErrorCode>
									<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive slashes '//' (Error code(s): T26).]]></Comment>
									<ValidationPattern xsi:type="T26" Type="T26">
										<Type>T26</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="13C">
						<SwiftFieldDef Name="13">
							<Generic>false</Generic>
							<Description><![CDATA[Number Identification]]></Description>
							<Option Name="C">
								<Format><![CDATA[/8c/4!n1!x4!n]]></Format>
								<Specification><![CDATA[(Code)(Time indication)(Sign)(Time offset)]]></Specification>
								<Description><![CDATA[Time Indication]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>true</Repeating>
						<Presence>O</Presence>
						<Options>C</Options>
						<Validations>
							<SubField Name="Time_indication">
								<Validation>
									<Options>C</Options>
									<ErrorCode>T38</ErrorCode>
									<Comment><![CDATA[Time indication must be a valid time expressed as HHMM (Error code(s): T38).]]></Comment>
									<ValidationPattern xsi:type="DATE" Type="DATE">
										<Type>DATE</Type>
										<Format>HHmm</Format>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="Sign">
								<Validation>
									<Options>C</Options>
									<ErrorCode>T15</ErrorCode>
									<Comment><![CDATA[Sign is either "+" or "-" (Error code(s): T15).]]></Comment>
									<ValidationPattern xsi:type="CODE" Type="CODE">
										<Type>CODE</Type>
										<Codes>
											<Code Name="+">
											</Code>
											<Code Name="-">
											</Code>
										</Codes>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="Time_offset">
								<Validation>
									<Options>C</Options>
									<ErrorCode>T16</ErrorCode>
									<Comment><![CDATA[Time offset is expressed as HHMM, where the hour component, ie, 'HH', must be in the range of 00 through 13,and the minute component, ie, 'MM' must be in the range of 00 through 59. Any 'HH' or 'MM' component outside of these range checks will be disallowed (Error code(s): T16).]]></Comment>
									<ValidationPattern xsi:type="Time_Offset" Type="Time Offset">
										<Type>Time Offset</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="23B">
						<SwiftFieldDef Name="23">
							<Generic>false</Generic>
							<Description><![CDATA[Function of the Message]]></Description>
							<Option Name="B">
								<Format><![CDATA[4!c]]></Format>
								<Specification><![CDATA[(Type)]]></Specification>
								<Description><![CDATA[Bank Operation Code]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options>B</Options>
						<Validations>
							<SubField Name="Type">
								<Validation>
									<Options>B</Options>
									<ErrorCode>T36</ErrorCode>
									<Comment><![CDATA[One of the following codes must be used (Error code(s): T36):]]></Comment>
									<ValidationPattern xsi:type="CODE" Type="CODE">
										<Type>CODE</Type>
										<Codes>
											<Code Name="CRED">
												<DetailedName>Normal credit transfer</DetailedName>
												<Description>This message contains a credit transfer where there is no SWIFT Service Level involved.</Description>
											</Code>
											<Code Name="CRTS">
												<DetailedName>Test message</DetailedName>
												<Description>This message contains a credit transfer for test purposes.</Description>
											</Code>
											<Code Name="SPAY">
												<DetailedName>SWIFTPay</DetailedName>
												<Description>This message contains a credit transfer to be processed according to the SWIFTPay Service Level.</Description>
											</Code>
											<Code Name="SPRI">
												<DetailedName>Priority</DetailedName>
												<Description>This message contains a credit transfer to be processed according to the Priority Service Level.</Description>
											</Code>
											<Code Name="SSTD">
												<DetailedName>Standard</DetailedName>
												<Description>This message contains a credit transfer to be processed according to the Standard Service Level.</Description>
											</Code>
										</Codes>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="23E">
						<SwiftFieldDef Name="23">
							<Generic>false</Generic>
							<Description><![CDATA[Function of the Message]]></Description>
							<Option Name="E">
								<Format><![CDATA[4!c[/30x]]]></Format>
								<Specification><![CDATA[(Instruction Code)(Additional Information)]]></Specification>
								<Description><![CDATA[Instruction Code]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>true</Repeating>
						<Presence>O</Presence>
						<Options>E</Options>
						<Validations>
							<SubField Name="Instruction_Code">
								<Validation>
									<Options>E</Options>
									<ErrorCode>T47</ErrorCode>
									<Comment><![CDATA[Instruction Code must contain one of the following codes (Error code(s): T47):]]></Comment>
									<ValidationPattern xsi:type="CODE" Type="CODE">
										<Type>CODE</Type>
										<Codes>
											<Code Name="SDVA">
												<DetailedName>Same Day Value</DetailedName>
												<Description>Payment must be executed with same day value to the beneficiary.</Description>
											</Code>
											<Code Name="INTC">
												<DetailedName>Intra-Company Payment</DetailedName>
												<Description>A payment between two companies belonging to the same group.</Description>
											</Code>
											<Code Name="REPA">
												<DetailedName>Related Payment</DetailedName>
												<Description>Payment has a related e-Payments reference.</Description>
											</Code>
											<Code Name="CORT">
												<DetailedName>Corporate Trade</DetailedName>
												<Description>Payment is made in settlement of a trade, eg, foreign exchange deal, securities transaction.</Description>
											</Code>
											<Code Name="HOLD">
												<DetailedName>Hold</DetailedName>
												<Description>Beneficiary customer/claimant will call; pay upon identification.</Description>
											</Code>
											<Code Name="CHQB">
												<DetailedName>Cheque</DetailedName>
												<Description>Pay beneficiary customer by cheque only. The optional account number line in field 59a must not be used.</Description>
											</Code>
											<Code Name="PHOB">
												<DetailedName>Phone Beneficiary</DetailedName>
												<Description>Please advise/contact beneficiary/claimant by phone.</Description>
											</Code>
											<Code Name="TELB">
												<DetailedName>Telecommunication</DetailedName>
												<Description>Please advise/contact beneficiary/claimant by the most efficient means of telecommunication.</Description>
											</Code>
											<Code Name="PHON">
												<DetailedName>Telephone</DetailedName>
												<Description>Please advise account with institution by phone.</Description>
											</Code>
											<Code Name="TELE">
												<DetailedName>Telecommunication</DetailedName>
												<Description>Please advise the account with institution by the most efficient means of telecommunication.</Description>
											</Code>
											<Code Name="PHOI">
												<DetailedName>Phone Intermediary</DetailedName>
												<Description>Please advise the intermediary institution by phone.</Description>
											</Code>
											<Code Name="TELI">
												<DetailedName>Telecommunication</DetailedName>
												<Description>Please advise the intermediary institution by the most efficient means of telecommunication.</Description>
											</Code>
										</Codes>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="26T">
						<SwiftFieldDef Name="26">
							<Generic>false</Generic>
							<Option Name="T">
								<Format><![CDATA[3!c]]></Format>
								<Specification><![CDATA[(Type)]]></Specification>
								<Description><![CDATA[Transaction Type Code]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options>T</Options>
					</SwiftField>
					<SwiftField Name="32A">
						<SwiftFieldDef Name="32">
							<Generic>false</Generic>
							<Option Name="A">
								<Format><![CDATA[6!n3!a15d]]></Format>
								<Specification><![CDATA[(Date) (Currency) (Amount)]]></Specification>
								<Description><![CDATA[Value Date/Currency/Interbank Settled Amount]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options>A</Options>
						<Validations>
							<SubField Name="Date">
								<Validation>
									<Options>A</Options>
									<ErrorCode>T50</ErrorCode>
									<Comment><![CDATA[Date must be a valid date expressed as YYMMDD (Error code(s): T50).]]></Comment>
									<ValidationPattern xsi:type="DATE" Type="DATE">
										<Type>DATE</Type>
										<Format>yyMMdd</Format>
										<value-date>true</value-date>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="Currency">
								<Validation>
									<Options>A</Options>
									<ErrorCode>T52</ErrorCode>
									<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52).]]></Comment>
									<ValidationPattern xsi:type="Currency_Code" Type="Currency Code">
										<Type>Currency Code</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="Amount">
								<Validation>
									<Options>A</Options>
									<ErrorCode>C03</ErrorCode>
									<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency (Error code(s): C03,T40,T43).]]></Comment>
									<ValidationPattern xsi:type="Decimal" Type="Decimal">
										<Type>Decimal</Type>
										<currency-field>Currency</currency-field>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="33B">
						<SwiftFieldDef Name="33">
							<Generic>false</Generic>
							<Option Name="B">
								<Format><![CDATA[3!a15d]]></Format>
								<Specification><![CDATA[(Currency) (Amount)]]></Specification>
								<Description><![CDATA[Currency/Instructed Amount]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options>B</Options>
						<Validations>
							<SubField Name="Currency">
								<Validation>
									<Options>B</Options>
									<ErrorCode>T52</ErrorCode>
									<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52).]]></Comment>
									<ValidationPattern xsi:type="Currency_Code" Type="Currency Code">
										<Type>Currency Code</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="Amount">
								<Validation>
									<Options>B</Options>
									<ErrorCode>C03</ErrorCode>
									<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency (Error code(s): C03,T40,T43).]]></Comment>
									<ValidationPattern xsi:type="Decimal" Type="Decimal">
										<Type>Decimal</Type>
										<currency-field>Currency</currency-field>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="36">
						<SwiftFieldDef Name="36">
							<Generic>false</Generic>
							<Description><![CDATA[Quantity of Financial Instrument]]></Description>
							<Option Name="">
								<Format><![CDATA[12d]]></Format>
								<Specification><![CDATA[(Rate)]]></Specification>
								<Description><![CDATA[Exchange Rate]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options> </Options>
					</SwiftField>
					<SwiftField Name="50a">
						<SwiftFieldDef Name="50">
							<Generic>false</Generic>
							<Option Name="A">
								<Format><![CDATA[([/34xCRLF])(4!a2!a2!c[3!c])]]></Format>
								<Specification><![CDATA[(Account)(Identifier Code)]]></Specification>
								<Description><![CDATA[Ordering Customer]]></Description>
							</Option>
							<Option Name="F">
								<Format><![CDATA[35x(CRLF4*35x)]]></Format>
								<Specification><![CDATA[(Party Identifier)(Name & Address)]]></Specification>
								<Description><![CDATA[Ordering Customer]]></Description>
							</Option>
							<Option Name="K">
								<Format><![CDATA[([/34xCRLF])(4*35x)]]></Format>
								<Specification><![CDATA[(Account)(Name & Address)]]></Specification>
								<Description><![CDATA[Ordering Customer]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options>A, K, F</Options>
						<Validations>
							<SubField Name="Identifier_Code">
								<Validation>
									<Options>A</Options>
									<ErrorCode>T27, T28, T29, T45</ErrorCode>
									<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
									<ValidationPattern xsi:type="BIC" Type="BIC">
										<Type>BIC</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="51A">
						<SwiftFieldDef Name="51">
							<Generic>false</Generic>
							<Option Name="A">
								<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
								<Description><![CDATA[Sending Institution]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options>A</Options>
						<Validations>
							<SubField Name="CreditDebit">
								<Validation>
									<Options>A</Options>
									<ErrorCode>T51</ErrorCode>
									<Comment><![CDATA[CreditDebit should contain the following codes]]></Comment>
									<ValidationPattern xsi:type="CODE" Type="CODE">
										<Type>CODE</Type>
										<Codes>
											<Code Name="C">
												<DetailedName>Credit</DetailedName>
											</Code>
											<Code Name="D">
												<DetailedName>Debit</DetailedName>
											</Code>
										</Codes>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="52a">
						<SwiftFieldDef Name="52">
							<Generic>false</Generic>
							<Option Name="A">
								<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
								<Description><![CDATA[Ordering Institution]]></Description>
							</Option>
							<Option Name="D">
								<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address) | (Party Identifier)(Name & Address)]]></Specification>
								<Description><![CDATA[Ordering Institution]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options>A, D</Options>
						<Validations>
							<SubField Name="Identifier_Code">
								<Validation>
									<Options>A</Options>
									<ErrorCode>T27, T28, T29, T45</ErrorCode>
									<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
									<ValidationPattern xsi:type="BIC" Type="BIC">
										<Type>BIC</Type>
									</ValidationPattern>
								</Validation>
								<Validation>
									<Options>A</Options>
									<ErrorCode>C05</ErrorCode>
									<Comment><![CDATA[Identifier Code must not be a BEI, ie must not be of subtype BEID, MCCO, TESP or TRCO]]></Comment>
									<ValidationPattern xsi:type="C05" Type="C05">
										<Type>C05</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="CreditDebit">
								<Validation>
									<Options>A, D</Options>
									<ErrorCode>T51</ErrorCode>
									<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
									<ValidationPattern xsi:type="CODE" Type="CODE">
										<Type>CODE</Type>
										<Codes>
											<Code Name="C">
												<DetailedName>Credit</DetailedName>
											</Code>
											<Code Name="D">
												<DetailedName>Debit</DetailedName>
											</Code>
										</Codes>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="53a">
						<SwiftFieldDef Name="53">
							<Generic>false</Generic>
							<Option Name="A">
								<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
								<Description><![CDATA[Sender's Correspondent]]></Description>
							</Option>
							<Option Name="B">
								<Format><![CDATA[/1!a[/34x](CRLF35x) | /1!a[/34x] | [/34xCRLF]35x | /34x]]></Format>
								<Specification><![CDATA[(CreditDebit) (Party Identifier) (Location) | (CreditDebit)(Party Identifier) |(Party Identifier) (Location) | (Party Identifier)]]></Specification>
								<Description><![CDATA[Sender's Correspondent]]></Description>
							</Option>
							<Option Name="D">
								<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
								<Description><![CDATA[Sender's Correspondent]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options>A, B, D</Options>
						<Validations>
							<SubField Name="Identifier_Code">
								<Validation>
									<Options>A</Options>
									<ErrorCode>T27, T28, T29, T45</ErrorCode>
									<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
									<ValidationPattern xsi:type="BIC" Type="BIC">
										<Type>BIC</Type>
									</ValidationPattern>
								</Validation>
								<Validation>
									<Options>A</Options>
									<ErrorCode>C05</ErrorCode>
									<Comment><![CDATA[Identifier Code must not be a BEI, ie must not be of subtype BEID, MCCO, TESP or TRCO]]></Comment>
									<ValidationPattern xsi:type="C05" Type="C05">
										<Type>C05</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="CreditDebit">
								<Validation>
									<Options>A, B, D</Options>
									<ErrorCode>T51</ErrorCode>
									<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
									<ValidationPattern xsi:type="CODE" Type="CODE">
										<Type>CODE</Type>
										<Codes>
											<Code Name="C">
												<DetailedName>Credit</DetailedName>
											</Code>
											<Code Name="D">
												<DetailedName>Debit</DetailedName>
											</Code>
										</Codes>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="54a">
						<SwiftFieldDef Name="54">
							<Generic>false</Generic>
							<Option Name="A">
								<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
								<Description><![CDATA[Receiver's Correspondent]]></Description>
							</Option>
							<Option Name="B">
								<Format><![CDATA[/1!a[/34x](CRLF35x) | /1!a[/34x] | [/34xCRLF]35x | /34x]]></Format>
								<Specification><![CDATA[(CreditDebit) (Party Identifier) (Location) | (CreditDebit)(Party Identifier) |(Party Identifier) (Location) | (Party Identifier)]]></Specification>
								<Description><![CDATA[Receiver's Correspondent]]></Description>
							</Option>
							<Option Name="D">
								<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
								<Description><![CDATA[Receiver's Correspondent]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options>A, B, D</Options>
						<Validations>
							<SubField Name="Identifier_Code">
								<Validation>
									<Options>A</Options>
									<ErrorCode>T27, T28, T29, T45</ErrorCode>
									<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
									<ValidationPattern xsi:type="BIC" Type="BIC">
										<Type>BIC</Type>
									</ValidationPattern>
								</Validation>
								<Validation>
									<Options>A</Options>
									<ErrorCode>C05</ErrorCode>
									<Comment><![CDATA[Identifier Code must not be a BEI, ie must not be of subtype BEID, MCCO, TESP or TRCO]]></Comment>
									<ValidationPattern xsi:type="C05" Type="C05">
										<Type>C05</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="CreditDebit">
								<Validation>
									<Options>A, B, D</Options>
									<ErrorCode>T51</ErrorCode>
									<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
									<ValidationPattern xsi:type="CODE" Type="CODE">
										<Type>CODE</Type>
										<Codes>
											<Code Name="C">
												<DetailedName>Credit</DetailedName>
											</Code>
											<Code Name="D">
												<DetailedName>Debit</DetailedName>
											</Code>
										</Codes>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="55a">
						<SwiftFieldDef Name="55">
							<Generic>false</Generic>
							<Description><![CDATA[Third Reimbursement Institution]]></Description>
							<Option Name="A">
								<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
								<Description><![CDATA[Third Reimbursement Institution]]></Description>
							</Option>
							<Option Name="B">
								<Format><![CDATA[/1!a[/34x](CRLF35x) | /1!a[/34x] | [/34xCRLF]35x | /34x]]></Format>
								<Specification><![CDATA[(CreditDebit) (Party Identifier) (Location) | (CreditDebit)(Party Identifier) |(Party Identifier) (Location) | (Party Identifier)]]></Specification>
								<Description><![CDATA[Third Reimbursement Institution]]></Description>
							</Option>
							<Option Name="D">
								<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
								<Description><![CDATA[Third Reimbursement Institution]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options>A, B, D</Options>
						<Validations>
							<SubField Name="Identifier_Code">
								<Validation>
									<Options>A</Options>
									<ErrorCode>T27, T28, T29, T45</ErrorCode>
									<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
									<ValidationPattern xsi:type="BIC" Type="BIC">
										<Type>BIC</Type>
									</ValidationPattern>
								</Validation>
								<Validation>
									<Options>A</Options>
									<ErrorCode>C05</ErrorCode>
									<Comment><![CDATA[Identifier Code must not be a BEI, ie must not be of subtype BEID, MCCO, TESP or TRCO]]></Comment>
									<ValidationPattern xsi:type="C05" Type="C05">
										<Type>C05</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="CreditDebit">
								<Validation>
									<Options>A, B, D</Options>
									<ErrorCode>T51</ErrorCode>
									<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
									<ValidationPattern xsi:type="CODE" Type="CODE">
										<Type>CODE</Type>
										<Codes>
											<Code Name="C">
												<DetailedName>Credit</DetailedName>
											</Code>
											<Code Name="D">
												<DetailedName>Debit</DetailedName>
											</Code>
										</Codes>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="56a">
						<SwiftFieldDef Name="56">
							<Generic>false</Generic>
							<Option Name="A">
								<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
								<Description><![CDATA[Intermediary Institution]]></Description>
							</Option>
							<Option Name="C">
								<Format><![CDATA[/34x]]></Format>
								<Specification><![CDATA[(Party Identifier)]]></Specification>
								<Description><![CDATA[Intermediary Institution]]></Description>
							</Option>
							<Option Name="D">
								<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
								<Description><![CDATA[Intermediary Institution]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options>A, C, D</Options>
						<Validations>
							<SubField Name="Identifier_Code">
								<Validation>
									<Options>A</Options>
									<ErrorCode>T27, T28, T29, T45</ErrorCode>
									<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
									<ValidationPattern xsi:type="BIC" Type="BIC">
										<Type>BIC</Type>
									</ValidationPattern>
								</Validation>
								<Validation>
									<Options>A</Options>
									<ErrorCode>C05</ErrorCode>
									<Comment><![CDATA[Identifier Code must not be a BEI, ie must not be of subtype BEID, MCCO, TESP or TRCO]]></Comment>
									<ValidationPattern xsi:type="C05" Type="C05">
										<Type>C05</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="CreditDebit">
								<Validation>
									<Options>A, D</Options>
									<ErrorCode>T51</ErrorCode>
									<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
									<ValidationPattern xsi:type="CODE" Type="CODE">
										<Type>CODE</Type>
										<Codes>
											<Code Name="C">
												<DetailedName>Credit</DetailedName>
											</Code>
											<Code Name="D">
												<DetailedName>Debit</DetailedName>
											</Code>
										</Codes>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="57a">
						<SwiftFieldDef Name="57">
							<Generic>false</Generic>
							<Option Name="A">
								<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
								<Description><![CDATA[Account With Institution]]></Description>
							</Option>
							<Option Name="B">
								<Format><![CDATA[/1!a[/34x](CRLF35x) | /1!a[/34x] | [/34xCRLF]35x | /34x]]></Format>
								<Specification><![CDATA[(CreditDebit) (Party Identifier) (Location) | (CreditDebit)(Party Identifier) |(Party Identifier) (Location) | (Party Identifier)]]></Specification>
								<Description><![CDATA[Account With Institution]]></Description>
							</Option>
							<Option Name="C">
								<Format><![CDATA[/34x]]></Format>
								<Specification><![CDATA[(Party Identifier)]]></Specification>
								<Description><![CDATA[Account With Institution]]></Description>
							</Option>
							<Option Name="D">
								<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
								<Description><![CDATA[Account With Institution]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options>A, B, C, D</Options>
						<Validations>
							<SubField Name="Identifier_Code">
								<Validation>
									<Options>A</Options>
									<ErrorCode>T27, T28, T29, T45</ErrorCode>
									<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
									<ValidationPattern xsi:type="BIC" Type="BIC">
										<Type>BIC</Type>
									</ValidationPattern>
								</Validation>
								<Validation>
									<Options>A</Options>
									<ErrorCode>C05</ErrorCode>
									<Comment><![CDATA[Identifier Code must not be a BEI, ie must not be of subtype BEID, MCCO, TESP or TRCO]]></Comment>
									<ValidationPattern xsi:type="C05" Type="C05">
										<Type>C05</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="CreditDebit">
								<Validation>
									<Options>A, B, D</Options>
									<ErrorCode>T51</ErrorCode>
									<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
									<ValidationPattern xsi:type="CODE" Type="CODE">
										<Type>CODE</Type>
										<Codes>
											<Code Name="C">
												<DetailedName>Credit</DetailedName>
											</Code>
											<Code Name="D">
												<DetailedName>Debit</DetailedName>
											</Code>
										</Codes>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="59a">
						<SwiftFieldDef Name="59">
							<Generic>false</Generic>
							<Option Name="">
								<Format><![CDATA[[/34xCRLF]4*35x]]></Format>
								<Specification><![CDATA[(Account)(Name & Address)]]></Specification>
								<Description><![CDATA[Beneficiary Customer]]></Description>
							</Option>
							<Option Name="A">
								<Format><![CDATA[([/34xCRLF])(4!a2!a2!c[3!c])]]></Format>
								<Specification><![CDATA[(Account)(Identifier Code)]]></Specification>
								<Description><![CDATA[Beneficiary Customer]]></Description>
							</Option>
							<Option Name="F">
								<Format><![CDATA[[/34xCRLF]4*35x]]></Format>
								<Specification><![CDATA[(Account)(Name & Address Details)]]></Specification>
								<Description><![CDATA[Beneficiary Customer]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options>A,  , F</Options>
						<Validations>
							<SubField Name="Identifier_Code">
								<Validation>
									<Options>A</Options>
									<ErrorCode>T27, T28, T29, T45</ErrorCode>
									<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
									<ValidationPattern xsi:type="BIC" Type="BIC">
										<Type>BIC</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="71A">
						<SwiftFieldDef Name="71">
							<Generic>false</Generic>
							<Option Name="A">
								<Format><![CDATA[3!a]]></Format>
								<Specification><![CDATA[(Code)]]></Specification>
								<Description><![CDATA[Details of Charges]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options>A</Options>
						<Validations>
							<SubField Name="Code">
								<Validation>
									<Options>A</Options>
									<ErrorCode>T08</ErrorCode>
									<Comment><![CDATA[One of the following codes must be used (Error code(s): T08):]]></Comment>
									<ValidationPattern xsi:type="CODE" Type="CODE">
										<Type>CODE</Type>
										<Codes>
											<Code Name="BEN">
												<DetailedName>Beneficiary</DetailedName>
												<Description>All transaction charges are to be borne by the beneficiary customer.</Description>
											</Code>
											<Code Name="OUR">
												<DetailedName>Our customer charged</DetailedName>
												<Description>All transaction charges are to be borne by the ordering customer.</Description>
											</Code>
											<Code Name="SHA">
												<DetailedName>Shared charges</DetailedName>
												<Description>All transaction charges other than the charges of the financial institution servicing the ordering customer account are borne by the beneficiary customer.</Description>
											</Code>
										</Codes>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="71F">
						<SwiftFieldDef Name="71">
							<Generic>false</Generic>
							<Option Name="F">
								<Format><![CDATA[3!a15d]]></Format>
								<Specification><![CDATA[(Currency) (Amount)]]></Specification>
								<Description><![CDATA[Sender's Charges]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>true</Repeating>
						<Presence>O</Presence>
						<Options>F</Options>
						<Validations>
							<SubField Name="Currency">
								<Validation>
									<Options>F</Options>
									<ErrorCode>T52</ErrorCode>
									<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52).]]></Comment>
									<ValidationPattern xsi:type="Currency_Code" Type="Currency Code">
										<Type>Currency Code</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="Amount">
								<Validation>
									<Options>F</Options>
									<ErrorCode>C03</ErrorCode>
									<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency.]]></Comment>
									<ValidationPattern xsi:type="Decimal" Type="Decimal">
										<Type>Decimal</Type>
										<currency-field>Currency</currency-field>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="71G">
						<SwiftFieldDef Name="71">
							<Generic>false</Generic>
							<Option Name="G">
								<Format><![CDATA[3!a15d]]></Format>
								<Specification><![CDATA[(Currency) (Amount)]]></Specification>
								<Description><![CDATA[Receiver's Charges]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options>G</Options>
						<Validations>
							<SubField Name="Currency">
								<Validation>
									<Options>G</Options>
									<ErrorCode>T52</ErrorCode>
									<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52).]]></Comment>
									<ValidationPattern xsi:type="Currency_Code" Type="Currency Code">
										<Type>Currency Code</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="Amount">
								<Validation>
									<Options>G</Options>
									<ErrorCode>C03</ErrorCode>
									<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency (Error code(s): C03,T40,T43).]]></Comment>
									<ValidationPattern xsi:type="Decimal" Type="Decimal">
										<Type>Decimal</Type>
										<currency-field>Currency</currency-field>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="72">
						<SwiftFieldDef Name="72">
							<Generic>false</Generic>
							<Option Name="">
								<Format><![CDATA[6*35x]]></Format>
								<Specification><![CDATA[(Narrative - Structured Format)]]></Specification>
								<Description><![CDATA[Sender to Receiver Information]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options> </Options>
					</SwiftField>
					<SwiftField Name="77B">
						<SwiftFieldDef Name="77">
							<Generic>false</Generic>
							<Option Name="B">
								<Format><![CDATA[3*35x]]></Format>
								<Specification><![CDATA[(Narrative)]]></Specification>
								<Description><![CDATA[Regulatory Reporting]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options>B</Options>
					</SwiftField>
					<SwiftField Name="77T">
						<SwiftFieldDef Name="77">
							<Generic>false</Generic>
							<Option Name="T">
								<Format><![CDATA[9000z]]></Format>
								<Specification><![CDATA[(Envelope Contents)]]></Specification>
								<Description><![CDATA[Envelope Contents]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options>T</Options>
					</SwiftField>
				</Fields>
			</Data>
			<Trailer>
				<fields>
					<field>
						<name>Message Authentication Code</name>
						<description><![CDATA[Allows authentication by the receiving user. It is followed by an authentication result.

This trailer is mandatory for most user-to-user message categories within the FIN application. When the FIN Copy Service is used a PAC trailer, if present, follows the MAC trailer.

Format:

{MAC:<authentication-result>}

where <authentication-result> = 8!h

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>8</length>
						<tag>MAC</tag>
					</field>
					<field>
						<name>Proprietary Authentication Code</name>
						<description><![CDATA[The PAC is used within the FIN Copy service only, when using the double authentication option. The PAC is included in Block 5 of FIN user-to-user messages, immediately after the MAC trailer, if present.

This is calculated on the extracted fields of Block 4 of the message, the value of field 115, if present, and the <authentication-result> of the MAC trailer for Copy Services with double authentication.

Thus, the end-of-block indicator (CrLf-) is included in the PAC calculation, and the fields are defined as follows:

The first three characters are CrLf:

The field and the delimiter are present, that is, 32A:, 20:, and so on.

All subfields and their delimiters are present.

Format:

{PAC:[<authentication-result>]}

where <authentication-result> is mandatory on input messages only and <authentication-result> = 8!h

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>8</length>
						<tag>PAC</tag>
					</field>
					<field>
						<name>Checksum</name>
						<description><![CDATA[The checksum is computed based on the receiver's address (12 characters, with 9th character replaced by X) plus the Text Block. This trailer allows the system and the CBT to check that messages have not been corrupted due to a system malfunction or an undetected transmission error.

Format:

{CHK:<checksum-result>}

where <checksum-result> = 12!h

Note: This trailer is mandatory for FIN and GPA messages (Service Identifier 01).

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>12</length>
						<tag>CHK</tag>
					</field>
					<field>
						<name>System Originated Message</name>
						<description><![CDATA[The system message or service message which is generated by a system PLT has a SYS trailer. All solicited system messages (Service Identifier 01) contain the MIR of the request and may also contain the time.

Format:

{SYS:[<time><mir>]}

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>SYS</tag>
					</field>
					<field>
						<name>Test And Training Message</name>
						<description><![CDATA[Mandatory for FIN and GPA messages (Service Identifier 01) sent by, or delivered to, a Test & Training Logical Terminal (LT). This trailer has a tag only, and no value.

Format:

{TNG:}
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>0</length>
						<tag>TNG</tag>
					</field>
					<field>
						<name>Possible Duplicate Emission</name>
						<description><![CDATA[This trailer is used by the destination of the message. It only applies to FIN user-to-user messages (Service Identifier 01, message categories reserved for banking messages). There can be multiple PDEs. The system does not verify the order nor restrict the number (except for maximum message length).

Correctly formatted PDE trailers applied to user-to-system messages are accepted by the system, but not processed. This means that the system does not check to see if the original message exists. Therefore, a retrieval request sent with a PDE trailer may be processed twice if the original message was received by the system.

Format:

{PDE:[<time><mir>]}

where <time><mir> refers to the emission of the previous possible issue.

Note: It can be added automatically by a CBT or manually by a user. It may be followed by the MIR and the time of its previous possible messages.

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>PDE</tag>
					</field>
					<field>
						<name>Delayed Message</name>
						<description><![CDATA[This trailer is added to all FIN user-to-user output messages that have exceeded their obsolescence period. If this trailer appears in GPA or FIN system messages, it must be ignored. This trailer has a tag only, and no value.

The Obsolescence Period is:

U = 15 minutes

N = 100 minutes

Format:

{DLM:}

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>0</length>
						<tag>DLM</tag>
					</field>
					<field>
						<name>Possible Duplicate Message</name>
						<description><![CDATA[Added by the system to any output message (GPA and FIN Service Identifier 01) being resent because a prior delivery may be invalid. If a system PLT receives a report request with a PDM, the response has a plain PDM (without the optional delivery reference). Other PDMs may be added as a result of unsuccessful delivery attempts to the user. 
Format:
{PDM:[<time><mor>]}
where <time> and the Message Output Reference <mor> are that of the previous attempt.
Note: For messages recovered after a system failure, the optional fields may not be present.
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>PDM</tag>
					</field>
					<field>
						<name>Message Reference</name>
						<description><![CDATA[The MRF trailer is used to specify the message reference of the original user message in MT 096 FIN Copy to Central Institution Messages.
Format:
{MRF:<date><full-time><mir>}
where <mir> is that of the original user message whose fields are copied in the MT 096 FIN Copy to Central Institution Message.
Note: The MRF is specific to FIN Copy. The MRF trailer is automatically generated in the MT 096 FIN Copy to Central Institution Message and can only be reused in field 109 of the MT 096 FIN Copy to Central Institution Message to identify the MT 096 to which the MT 097 is a response. The format of the MRF is subject to change.
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>MRF</tag>
					</field>
				</fields>
			</Trailer>
		</SwiftFields>
		<validationrules name="Default">
			<hdrvalidationrules>
				<fieldvalidations>
					<fieldvalidation>
						<name>U08</name>
						<formula><![CDATA[if($this.Header.GetFieldIndex("User_Header") != -1) {
    def userHeader = $this.Header.GetSection("User_Header");
    if(userHeader.$size > 0 && userHeader[0].IsNotNull("Validation_Flag")) {
        if(userHeader[0].GetString("Validation_Flag") != "REMIT") {
            return false;
        }
    }
}
return true;
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U08</error-code>
						<actionmessage><![CDATA["Invalid syntax, format, code word in tag 119(Validation Flag). Allowed value is REMIT."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>U03</name>
						<fieldname>User Header</fieldname>
						<formula><![CDATA[Iff(IsNotNull(User_Header.Service_Type_Identifier), 
    IsNotNull(User_Header.Unique_End_To_End_Transaction_Reference))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U03</error-code>
						<actionmessage><![CDATA["When populating an end-to-end reference, both fields 111 and 121 must be populated: a message that contains only one of these two fields will not be accepted by FIN."]]></actionmessage>
					</fieldvalidation>
				</fieldvalidations>
			</hdrvalidationrules>
			<datavalidationrules>
				<fieldvalidations>
					<fieldvalidation>
						<name>C1-1</name>
						<fieldname>33B.Currency</fieldname>
						<formula><![CDATA[If($value == F32A[0].Currency, 
   F36.$size == 0, 
   F36.$size > 0)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D75</error-code>
						<actionmessage><![CDATA["If field 33B is present and the currency code is different from the currency code in field 32A, field 36 must be present, otherwise field 36 is not allowed."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C1-2</name>
						<fieldname>36</fieldname>
						<formula><![CDATA[F33B.$size > 0]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D75</error-code>
						<actionmessage><![CDATA["If field 33B is present and the currency code is different from the currency code in field 32A, field 36 must be present, otherwise field 36 is not allowed."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C2</name>
						<comment><![CDATA["If the country codes of the Sender's and the Receiver's BICs are within the following list: AD, AT, BE, BG, BV, CH, CY, CZ, DE, DK, ES, EE, FI, FR, GB, GF, GI, GP, GR, HU, IE, IS, IT, LI, LT, LU, LV, MC, MQ, MT, NL, NO, PL, PM, PT, RE, RO, SE, SI, SJ, SK, SM, TF and VA, then field 33B is mandatory, otherwise field 33B is optional."]]></comment>
						<formula><![CDATA[def header = $this.Header;
def appheader;
if(header.GetFieldCount() == 0 || (header.getfieldcount() > 0 && header.GetFieldIndex("Basic_Header") == -1)) {
	// No Header or FICC Header
	return true;
}
if(header.GetFieldCount() == 4) {
	// Input/output header
    appheader = If(header.GetSection(1).$size > 0, 
                   header.GetSection(1)[0], 
                   header.GetSection(2)[0]);
}
else {
    appheader = header.GetSection(1)[0];
}
def basicheader = header.GetSection(0)[0];
def ioIdentifier = appheader.GetString("Input_Output_Identifier");
def mir = (If(ioIdentifier == "O", 
           GetString(appheader, "Message Input Reference"), 
           ""));
def receiverAddress = (If(ioIdentifier == "I", 
                       GetString(appheader, "Receiver's Address"), 
                       ""));
def senderCountryCode = (If(ioIdentifier == "I", 
                         Mid(basicheader.GetString("LT Identifier"), 4, 2), 
                         Mid(mir, 10, 2)));
def receiverCountryCode = (If(ioIdentifier == "I", 
                           Mid(receiverAddress, 4, 2), 
                           Mid(basicheader.GetString("LT Identifier"), 4, 2)));
If(In(senderCountryCode, "AD", "AT", "BE", "BG", "BV", "CH", "CY", 
      "CZ", "DE", "DK", "EE", "ES", "FI", "FR", "GB", "GF", 
      "GI", "GP", "GR", "HU", "IE", "IS", "IT", "LI", "LT", 
      "LU", "LV", "MC", "MQ", "MT", "NL", "NO", "PL", "PM", 
      "PT", "RE", "RO", "SE", "SI", "SJ", "SK", "SM", "TF", "VA") && 
     In(receiverCountryCode, "AD", "AT", "BE", "BG", "BV", "CH", 
        "CY", "CZ", "DE", "DK", "EE", "ES", "FI", "FR", "GB", 
        "GF", "GI", "GP", "GR", "HU", "IE", "IS", "IT", "LI", 
        "LT", "LU", "LV", "MC", "MQ", "MT", "NL", "NO", "PL", 
        "PM", "PT", "RE", "RO", "SE", "SI", "SJ", "SK", "SM", "TF", 
        "VA"), 
   F33B.$size > 0, 
   true);
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D49</error-code>
						<actionmessage><![CDATA["If the country codes of the Sender's and the Receiver's BICs are within the following list: AD, AT, BE, BG, BV, CH, CY, CZ, DE, DK, ES, EE, FI, FR, GB, GF, GI, GP, GR, HU, IE, IS, IT, LI, LT, LU, LV, MC, MQ, MT, NL, NO, PL, PM, PT, RE, RO, SE, SI, SJ, SK, SM, TF and VA, then field 33B is mandatory, otherwise field 33B is optional."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C3-1</name>
						<fieldname>23E.Instruction_Code</fieldname>
						<formula><![CDATA[If(F23B[0].Type == "SPRI", 
   In($value, "SDVA", "TELB", "PHOB", "INTC"), 
   true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E01</error-code>
						<actionmessage><![CDATA["If field 23B contains the code SPRI, field 23E may contain only the codes SDVA, TELB, PHOB, INTC."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C3-2</name>
						<fieldname>23B.Type</fieldname>
						<formula><![CDATA[If(In($value, "SSTD", "SPAY"), F23E.$size == 0, true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E02</error-code>
						<actionmessage><![CDATA["If field 23B contains one of the codes SSTD or SPAY, field 23E must not be used."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C4</name>
						<fieldname>23B.Type</fieldname>
						<formula><![CDATA[If(In($value, "SPRI", "SSTD", "SPAY"), 
   If(F53a.$size > 0, F53a[0].FormatOption != 'D', true), 
   true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E03</error-code>
						<actionmessage><![CDATA["If field 23B contains one of the codes SPRI, SSTD or SPAY, field 53a must not be used with option D."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C5</name>
						<fieldname>23B.Type</fieldname>
						<formula><![CDATA[If(In($value, "SPRI", "SSTD", "SPAY"), 
   If(F53a.$size > 0 && F53a[0].FormatOption == 'B', 
      IsNotNull(F53a[0].Party_Identifier), 
      true), 
   true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E04</error-code>
						<actionmessage><![CDATA["If field 23B contains one of the codes SPRI, SSTD or SPAY and field 53a is present with option B, Party Identifier must be present in field 53B."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C6</name>
						<fieldname>23B.Type</fieldname>
						<formula><![CDATA[If(In($value, "SPRI", "SSTD", "SPAY"), 
   If(F54a.$size > 0, F54a[0].FormatOption == 'A', true), 
   true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E05</error-code>
						<actionmessage><![CDATA["If field 23B contains one of the codes SPRI, SSTD or SPAY, field 54a may be used with option A only."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C7</name>
						<fieldname>55a</fieldname>
						<formula><![CDATA[F53a.$size > 0 && F54a.$size > 0]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E06</error-code>
						<actionmessage><![CDATA["If field 55a is present, then both fields 53a and 54a must also be present."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C8</name>
						<fieldname>23B.Type</fieldname>
						<formula><![CDATA[If(In($value, "SPRI", "SSTD", "SPAY"), 
   If(F55a.$size > 0, F55a[0].FormatOption == 'A', true), 
   true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E07</error-code>
						<actionmessage><![CDATA["If field 23B contains one of the codes SPRI, SSTD or SPAY, field 55a may be used with option A only."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C9</name>
						<fieldname>56a</fieldname>
						<formula><![CDATA[F57a.$size > 0]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C81</error-code>
						<actionmessage><![CDATA["If field 56a is present, field 57a must also be present."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C10A</name>
						<fieldname>23B.Type</fieldname>
						<formula><![CDATA[If($value == "SPRI", F56a.$size == 0, true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E16</error-code>
						<actionmessage><![CDATA["If field 23B contains the code SPRI, field 56a must not be present."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C10B</name>
						<fieldname>23B.Type</fieldname>
						<formula><![CDATA[If(In($value, "SSTD", "SPAY"), 
   If(F56a.$size > 0, 
      F56a[0].FormatOption == 'A' || 
        (F56a[0].FormatOption == 'C' && 
           Length(F56a[0].Party_Identifier) >= 3 && 
           StartsWith(F56a[0].Party_Identifier, "/") && 
           In(Mid(F56a[0].Party_Identifier, 1, 2), "AT", 
              "AU", "BL", "CC", "CH", "CP", "ES", "FW", "GR", 
              "HK", "IE", "IN", "IT", "NZ", "PT", "RT", "RU", 
              "SC", "SW")), 
      true), 
   true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E17</error-code>
						<actionmessage><![CDATA["If field 23B contains one of the codes SSTD or SPAY, field 56a may be used with either option A or option C. If option C is used, it must contain a clearing code."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C11</name>
						<fieldname>23B.Type</fieldname>
						<formula><![CDATA[If(In($value, "SPRI", "SSTD", "SPAY"), 
   If(F57a.$size > 0, 
      In(F57a[0].FormatOption, 'A', 'C') || 
        (F57a[0].FormatOption == 'D' && 
           IsNotNull(F57a[0].Party_Identifier)), 
      true), 
   true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E09</error-code>
						<actionmessage><![CDATA["If field 23B contains one of the codes SPRI, SSTD or SPAY, field 57a may be used with option A, option C or option D. Subfield 1 (Party Identifier) in option D must be present."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C12</name>
						<fieldname>23B.Type</fieldname>
						<formula><![CDATA[If(In($value, "SPRI", "SSTD", "SPAY"), 
   IsNotNull(F59a[0].Account), 
   true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E10</error-code>
						<actionmessage><![CDATA["If field 23B contains one of the codes SPRI, SSTD or SPAY, subfield 1 (Account) in field 59a Beneficiary Customer is mandatory."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C13</name>
						<fieldname>23E.Instruction_Code</fieldname>
						<formula><![CDATA[If($value == "CHQB", IsNull(F59a[0].Account), true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E18</error-code>
						<actionmessage><![CDATA["If any field 23E contains the code CHQB, subfield 1 (Account) in field 59a Beneficiary Customer is not allowed."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C14A</name>
						<fieldname>71A.Code</fieldname>
						<formula><![CDATA[If($value == "OUR", F71F.$size == 0, true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E13</error-code>
						<actionmessage><![CDATA["If field 71A contains OUR, then field 71F is not allowed and field 71G is optional."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C14B</name>
						<fieldname>71A.Code</fieldname>
						<formula><![CDATA[If($value == "SHA", F71G.$size == 0, true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D50</error-code>
						<actionmessage><![CDATA["If field 71A contains SHA, then field(s) 71F is(are) optional and field 71G is not allowed."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C14C</name>
						<fieldname>71A.Code</fieldname>
						<formula><![CDATA[If($value == "BEN", F71F.$size > 0 && F71G.$size == 0, true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E15</error-code>
						<actionmessage><![CDATA["If field 71A contains BEN, then at least one occurrence of field 71F is mandatory and field 71G is not allowed."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C15</name>
						<formula><![CDATA[If(F71F.$size > 0 || F71G.$size > 0, F33B.$size > 0, true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D51</error-code>
						<actionmessage><![CDATA["If either field 71F (at least one occurrence) or field 71G is present, then field 33B is mandatory, otherwise field 33B is optional."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C16</name>
						<fieldname>23E.Instruction_Code</fieldname>
						<formula><![CDATA[If(In($value, "TELI", "PHOI"), F56a.$size > 0, true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E44</error-code>
						<actionmessage><![CDATA["If field 56a is not present, no field 23E may contain TELI or PHOI."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C17</name>
						<fieldname>23E.Instruction_Code</fieldname>
						<formula><![CDATA[If(In($value, "TELE", "PHON"), F57a.$size > 0, true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E45</error-code>
						<actionmessage><![CDATA["If field 57a is not present, no field 23E may contain TELE or PHON."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C18</name>
						<fieldname>71G.Currency</fieldname>
						<formula><![CDATA[$value == F32A[0].Currency]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C02</error-code>
						<actionmessage><![CDATA["The currency code in the fields 71G and 32A must be the same."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F23E-A</name>
						<fieldname>23E.Additional_Information</fieldname>
						<formula><![CDATA[In(F23E.Instruction_Code, "PHON", "PHOB", "PHOI", "TELE", "TELB", 
   "TELI", "HOLD", "REPA")]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D97</error-code>
						<actionmessage><![CDATA["Additional Information is only allowed when Instruction Code consists of one of the following codes: PHON, PHOB, PHOI, TELE, TELB, TELI, HOLD or REPA."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F23E-C</name>
						<fieldname>23E</fieldname>
						<formula><![CDATA[F23E.$size == SecGroup(F23E, "Instruction_Code").$size]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E46</error-code>
						<actionmessage><![CDATA["If this field is repeated, the same code word must not be present more than once."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F23E-B1</name>
						<fieldname>23E.Instruction_Code</fieldname>
						<formula><![CDATA[If(In($value, "SDVA", "INTC", "REPA", "CORT"), 
   !FieldValueExistsInAtLeastOne(F23E, "Instruction_Code", "HOLD"), 
   true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D67</error-code>
						<actionmessage><![CDATA["When field 23E is used more than once, the following combinations are not allowed: SDVA with HOLD, INTC with HOLD, REPA with HOLD, CORT with HOLD."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F23E-B2</name>
						<fieldname>23E.Instruction_Code</fieldname>
						<formula><![CDATA[If(In($value, "SDVA", "INTC", "REPA", "CORT", "HOLD"), 
   !FieldValueExistsInAtLeastOne(F23E, "Instruction_Code", "CHQB"), 
   true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D67</error-code>
						<actionmessage><![CDATA["When field 23E is used more than once, the following combinations are not allowed: SDVA with CHQB, INTC with CHQB, REPA with CHQB, CORT with CHQB, HOLD with CHQB."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F23E-B4</name>
						<fieldname>23E.Instruction_Code</fieldname>
						<formula><![CDATA[If($value == "REPA", 
   !FieldValueExistsInAtLeastOne(F23E, "Instruction_Code", "CORT"), 
   true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D67</error-code>
						<actionmessage><![CDATA["When field 23E is used more than once, the following combination is not allowed: REPA with CORT."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F23E-B5</name>
						<fieldname>23E.Instruction_Code</fieldname>
						<formula><![CDATA[If($value == "PHOB", 
   !FieldValueExistsInAtLeastOne(F23E, "Instruction_Code", "TELB"), 
   true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D67</error-code>
						<actionmessage><![CDATA["When field 23E is used more than once, the following combination is not allowed: PHOB with TELB."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F23E-B6</name>
						<fieldname>23E.Instruction_Code</fieldname>
						<formula><![CDATA[If($value == "PHON", 
   !FieldValueExistsInAtLeastOne(F23E, "Instruction_Code", "TELE"), 
   true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D67</error-code>
						<actionmessage><![CDATA["When field 23E is used more than once, the following combination is not allowed: PHON with TELE."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F23E-B7</name>
						<fieldname>23E.Instruction_Code</fieldname>
						<formula><![CDATA[If($value == "PHOI", 
   !FieldValueExistsInAtLeastOne(F23E, "Instruction_Code", "TELI"), 
   true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D67</error-code>
						<actionmessage><![CDATA["When field 23E is used more than once, the following combination is not allowed: PHOI with TELI."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F71G-A</name>
						<fieldname>71G.Amount</fieldname>
						<formula><![CDATA[$value > 0]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D57</error-code>
						<actionmessage><![CDATA["If field 71G is present, the amount must not equal '0'."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F51A-A</name>
						<formula><![CDATA[F51A.$size == 0]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D63</error-code>
						<actionmessage><![CDATA["Field 51A is only valid in IFT."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F72-A</name>
						<fieldname>72.Narrative_-_Structured_Format</fieldname>
						<formula><![CDATA[VerifyField72NarrativeText($value)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T32</error-code>
						<actionmessage><![CDATA["The first line of field 72 should be of the following format: /8c/[additional information]. The remaining lines (2 - 6) should be of the following format: [//continuation of additional information] or [/8c/[additional information]]."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F50a-A</name>
						<fieldname>50a.Party_Identifier</fieldname>
						<comment><![CDATA[F50a-A
With option F, subfield 1 (Party Identifier), one of the following line formats must be used (Error code(s): T54):
Line format 1 :/34x (Account)
Line format 2 :4!a/2!a/27x (Code)(Country Code)(Identifier)]]></comment>
						<formula><![CDATA[Implies(F50a.FormatOption == 'F', Verify50FPartyIdFormat($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T54</error-code>
						<actionmessage><![CDATA["Invalid 'Party Identifier' value. One of the following line formats must be used: /34x (Account) or 4!a/2!a/27x (Code)(Country Code)(Identifier)"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F50a-B</name>
						<fieldname>50a.Party_Identifier</fieldname>
						<comment><![CDATA[F50a-B
In option F, when subfield 1 Party Identifier is used with the (Code)(Country Code)(Identifier) format, one of the following codes must be used (Error code(s): T55): ARNU, CCPT, CUST, DRLC, EMPL, NIDN, SOSE and TXID."
]]></comment>
						<formula><![CDATA[Implies(F50a.FormatOption == 'F', Verify50FPartyIdCode($value))
/* get the code from party identifier if format is 4!a/2!a/27x */   ]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T55</error-code>
						<actionmessage><![CDATA["Invalid 'Party Identifier' value. When 'Party Identifier' is used with the format (Code)(Country Code)(Identifier), one of following codes must be used: ARNU, CCPT, CUST, DRLC, EMPL, NIDN, SOSE and TXID."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F50a-C</name>
						<fieldname>50a.Party_Identifier</fieldname>
						<comment><![CDATA[F50a-D
In option F, subfield 1 (Party Identifier) used with the (Code)(Country Code)(Identifier) format: Country Code must be a valid ISO country code (Error code(s): T73).
]]></comment>
						<formula><![CDATA[Implies(F50a.FormatOption == 'F', Verify50FPartyIdCountryCode($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T73</error-code>
						<actionmessage><![CDATA["Invalid 'Party Identifier' value. In option F, subfield 1 (Party Identifier) used with the (Code)(Country Code)(Identifier) format: Country Code must be a valid ISO country code."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F50a-D</name>
						<fieldname>50a.Name_&amp;_Address</fieldname>
						<comment><![CDATA[F50a-C
With option F, subfield 2 (Name and Address), the following line format must be used for all lines: 1!n/33x (Number)(Details). (Error code(s): T54).]]></comment>
						<formula><![CDATA[Implies(F50a.FormatOption == 'F', Verify50FNmandAdrFormat($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T54</error-code>
						<actionmessage><![CDATA["Invalid 'Name and Address' value. With option F, subfield 2 (Name and Address), the following line format must be used for all lines :1!n/33x (Number)(Details)."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F50a-E</name>
						<fieldname>50a.Name_&amp;_Address</fieldname>
						<comment><![CDATA[F50a-E
 With option F - subfield 2 (Name and Address), should start with Number 1 to 8 and it should follow the line formatting rules as specified in the SWIFT spec (Error code(s): T56).]]></comment>
						<formula><![CDATA[Implies(F50a.FormatOption == 'F', Verify50FNmandAdrLines2($value, F50a.Party_Identifier))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T56</error-code>
						<actionmessage><![CDATA["Invalid 'Name and Address' value. With option F - subfield 2 (Name and Address), should start with Number 1 to 8 and it should follow the line formatting rules as specified in the SWIFT spec."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F50a-F</name>
						<fieldname>50a.Name_&amp;_Address</fieldname>
						<comment><![CDATA[F50a-F
Number 4 must be followed by a valid date in the format YYYYMMDD and this date, local to the sender, must not be later than the date on which the message is successfully sent to SWIFT (Error code(s): T50).
]]></comment>
						<formula><![CDATA[Implies(F50a.FormatOption == 'F', Verify50FNmandAdrDate($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T50</error-code>
						<actionmessage><![CDATA["Invalid 'Name and Address' value. Number 4 must be followed by a valid date in the format YYYYMMDD and this date, local to the sender, must not be later than the date on which the message is successfully sent to SWIFT."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F50a-G</name>
						<fieldname>50a.Name_&amp;_Address</fieldname>
						<comment><![CDATA[F50a-G
Numbers 3, 5, 6 and 7 must be followed by a valid ISO country code
(Error code(s): T73).]]></comment>
						<formula><![CDATA[Implies(F50a.FormatOption == 'F',Verify50FNmandAdrCtryCode2($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T73</error-code>
						<actionmessage><![CDATA["Invalid 'Name and Address' value. Numbers 3, 5, 6 and 7 must be followed by a valid ISO country code."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F23E-D</name>
						<fieldname>23E</fieldname>
						<formula><![CDATA[$codesOrder = "SDVA,INTC,REPA,CORT,HOLD,CHQB,PHOB,TELB,PHON,TELE,PHOI,TELI";
$prevCodeIndex = -1;
for ($i=0; $i < F23E.$size; $i = $i + 1) {
   $codeIndex = FindFirst($codesOrder, F23E[$i].Instruction_Code);
   if ($codeIndex < $prevCodeIndex) {
      return false;
   }
   else {
      $prevCodeIndex = $codeIndex;
   }
} 
return true;]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D98</error-code>
						<actionmessage><![CDATA["If field 23E is repeated, the codes must appear in the following order: SDVA,INTC,REPA,CORT,BONL,HOLD,CHQB,PHOB,TELB,PHON,TELE,PHOI,TELI"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>ERI-1</name>
						<comment><![CDATA["For specific message types, an European currency must not be used as the currency of settlement after a cut-off date (Error Code: E76)."]]></comment>
						<formula><![CDATA[applyERIValidation(F32A[0], "Date", F32A[0], "Currency")]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E76</error-code>
						<actionmessage><![CDATA["For specific message types, an European currency must not be used as the currency of settlement after a cut-off date (Error Code: E76)."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>ERI-2</name>
						<fieldname>72.Narrative_-_Structured_Format</fieldname>
						<formula><![CDATA[ApplyERICodeValidationStructured($value);]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T47</error-code>
						<actionmessage><![CDATA["In an ERI field (i.e. fields 61, 72, 77A, 79, 86) the data part of a code word /OCMT/, or /CHGS/, is being validated, but the ending separator (i.e. third slash) is missing or the code words are duplicated."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F-72-B</name>
						<fieldname>72.Narrative_-_Structured_Format</fieldname>
						<formula><![CDATA[def ActualValue = Replace($value, "\r\n", "\n");
def lines = Split("\n", ActualValue);
def str = Left(ActualValue, 6);
def line1format = false;
def line3format = false;
def TREFformat = true;
def CHGSformat = true;
def TEXTformat = true;
def format = true;
def count = 0;
def TREFcount = 0;
def CHGScount = 0;
def TEXTcount = 0;
def i = lines.Length();
if(In(str, "/REJT/", "/RETN/")) {
    if(i <= 6) {
        //if '/REJT/' or '/RETN/' format of 1st line must be "6!x2!n[1a]['/'2c]" & format of 2nd line must be "('/'2!c 2!n'/')[29x]" or "('/X'1c2!n'/')[29x]"
        //if format of 2nd line is "('/'2!c 2!n'/')" then the 6 characters must be one of the codes given below
        line1format = (VerifyFormat(lines[0], "6!x2!n[1a]['/'2c]"));
        if(line1format && lines.Length() > 2) {
            if(!lines[1].StartsWith("/X")) {
                if(VerifyFormat(lines[1], "('/'2!c 2!n'/')[29x]")) {
                	def startStr = lines[1].Left(6);
                    if((!In(startStr, "/AC01/", "/AC02/", "/AC03/", "/AC04/", "/AC05/", "/AC06/", 
                            "/AM01/", "/AM02/", "/AM03/", "/AM04/", "/AM05/", "/AM06/", "/AM07/", 
                            "/AM08/", "/AG01/", "/AG02/", "/BE01/", "/BE02/", "/BE03/", "/BE04/", 
                            "/BE05/", "/DT01/", "/MS01/", "/PY01/", "/RC01/", "/RC02/", "/RC03/", 
                            "/RC04/", "/RF01/", "/TM01/", "/RR01/", "/RR02/", "/RR03/")))
                        return false;
                }
                else
                    return false;
            }
            else if(lines[1].StartsWith("/X") && !VerifyFormat(lines[1], "('/X'1c2!n'/')[29x]"))
                return false;
        }
        else
            return false;
        //Line3 is mandatory and should have the format "/MREF/16x". Lines 4, 5 and 6 are optional
        //If lines 4, 5 or 6 or any combination exists and if the first 6 characters starts with either '/TREF/' or '/CHGS/' or '/TEXT/' or '//'
        //it should satisfy the format given. Also if line starts with '//' it can appear a max of 2 times
        line3format = Equal(Left(lines[2], 6), "/MREF/") && 
                        VerifyFormat(Substring(lines[2], 6), "16x");
        if(line3format) {
            while(i > 3) {
                def str1 = Left(lines[i - 1], 6);
                def str2 = Substring(lines[i - 1], 6);
                if(In(str1, "/TREF/", "/CHGS/", "/TEXT/") || StartsWith(lines[i - 1], "//")) {
                    if(str1 == "/TREF/") {
                        TREFformat = VerifyFormat(str2, "16x");
                        TREFcount += 1;
                    }
                    else if(str1 == "/CHGS/") {
                        CHGSformat = (VerifyFormat(str2, "3!a15d") && 
                                        IsISOCurrencyCode(Substring(lines[i - 1], 6, 3)));
                        CHGScount += 1;
                    }
                    else if(str1 == "/TEXT/") {
                        TEXTformat = (VerifyFormat(str2, "29x"));
                        TEXTcount += 1;
                    }
                    else if(StartsWith(lines[i - 1], "//")) {
                        def str3 = Substring(lines[i - 1], 2);
                        format = (VerifyFormat(str3, "33x"));
                        count += 1;
                        if(!format || count > 2)
                            break;
                    }
                }
                else
                    return false;
                i = i - 1;
            }
        }
        else
            return false;
        if(!TREFformat || !CHGSformat || !TEXTformat || !format || count > 2 || TREFcount > 1 || 
             CHGScount > 1 || TEXTcount > 1)
            return false;
    }
    else
        return false;
}
return true;
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T80</error-code>
						<actionmessage><![CDATA["Field 72 Reject/Return: code word error, or mandatory code word missing, or code word not in the proper sequence, or format 6*35x not satisfied"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F-72-C</name>
						<fieldname>72.Narrative_-_Structured_Format</fieldname>
						<formula><![CDATA[def ActualValue = Replace($value, "\r\n", "\n");
def lines = Split("\n", ActualValue);
if(lines.Length() > 3) {
    for(def i = 0; i < lines.Length(); ++i) {
        if(lines[i].Substring(0, 6) == "/CHGS/") {
            def format = lines[i].Substring(6);
            def cur = format.Substring(0, 3);
            def amt = format.Substring(3);
            def Lastslash = FindFirst(amt, "/");
            if(Lastslash != -1)
                amt = amt.Left(Lastslash);
            def pos = FindFirst(amt, ",");
            amt = Replace(amt, ",", ".");
            def isvalid = IsValidDecimals(cur, amt);
            if(!isvalid)
                return false;

        }
    }
}
return true;
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C03</error-code>
						<actionmessage><![CDATA["Field 72 Reject/Return: The number of digits following the comma must not exceed the maximum number allowed for the currency specified."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F-32A</name>
						<fieldname>32A.Currency</fieldname>
						<formula><![CDATA[!In($value, "XAU", "XAG", "XPD", "XPT")]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C08</error-code>
						<actionmessage><![CDATA["The codes XAU, XAG, XPD and XPT are not allowed, as these are codes for commodities for which the category 6 commodities messages must be used."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F-59a-A</name>
						<fieldname>59a.Name_&amp;_Address_Details</fieldname>
						<formula><![CDATA[Implies(F59a.FormatOption == 'F', Verify59FNmandAdrDtlLines($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T56</error-code>
						<actionmessage><![CDATA["Invalid 'Name_and_Address_Details' value. With option F - subfield 2 (Name_and_Address_Details), should start with Number 1 to 3 and it should follow the line formatting rules as specified in the SWIFT spec for field 59F."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F-59a-B</name>
						<fieldname>59a.Name_&amp;_Address_Details</fieldname>
						<formula><![CDATA[Implies(F59a.FormatOption == 'F', Verify59FNmandAdrDtlFormat($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T56</error-code>
						<actionmessage><![CDATA["Invalid 'Name and Address Details' value. With option F, subfield 2 (Name and Address Details), the following line format must be used for all lines :1!n/33x (Number)(Name and Address Details)."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F-59a-C</name>
						<fieldname>59a.Name_&amp;_Address_Details</fieldname>
						<formula><![CDATA[Implies(F59a.FormatOption == 'F', Verify59FNmandAdrDtlCtryCode($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T73</error-code>
						<actionmessage><![CDATA["Invalid 'Name_and_Address_Details' value. Number 3 must be followed by a valid ISO country code."]]></actionmessage>
					</fieldvalidation>
				</fieldvalidations>
			</datavalidationrules>
			<tlrvalidationrules>
				<fieldvalidations>
				</fieldvalidations>
			</tlrvalidationrules>
		</validationrules>
		<elementproperties>
			<propertymap>
				<property name="codegen.java.properties">
					<value>
						<propertymap type="com.tplus.transform.design.PropertiesDef">
							<property name="Java Package Name" value="com.transform.external.%e"/>
							<property name="Jar Name" value="%c.jar"/>
							<property name="Manifest Entries" value="transformrt.jar swiftrt.jar swiftresources.jar"/>
							<property name="Data Source" value=""/>
						</propertymap>
					</value>
				</property>
			</propertymap>
		</elementproperties>
	</externalmessage>
	<externalmessage xsi:type="SwiftFormat" type="SwiftFormat" version="5.1.2" rulename="MT103STP_2016" formattype="SwiftFormat" >
		<description><![CDATA[This message type is sent by, or on behalf of, the financial institution of the ordering customer, directly or through (a) correspondent(s), to the financial institution of the beneficiary customer.

It is used to convey a funds transfer instruction in which the ordering customer or the beneficiary customer, or both, are non-financial institutions from the perspective of the Sender.

This message may only be used for clean payment instructions. It must not be used to advise the remitting bank of a payment for a clean, eg, cheque, collection, nor to provide the cover for a transaction whose completion was advised separately, eg, via an MT 400.]]></description>
		<standard>SWIFT</standard>
		<standard-name>MT103STP</standard-name>
		<standard-version>SRG 2016</standard-version>
		<standard-release-qualifier>20160308</standard-release-qualifier>
		<standard-category>Customer Payments &amp; Cheques</standard-category>
		<standard-detailed-name>Single Customer Credit Transfer</standard-detailed-name>
		<version>1.0</version>
		<SwiftFields>
			<customizable>true</customizable>
			<modifiable>false</modifiable>
			<SwiftMessageType>User</SwiftMessageType>
			<max-length>10000</max-length>
			<HeaderAndTrailerType>SWIFT_INPUT_OUTPUT_HEADER</HeaderAndTrailerType>
			<Header>
				<fields>
					<field>
						<name>Basic Header</name>
						<description><![CDATA[The Basic Header is given in Block 1 of a SWIFT message and is the only header that appears on all messages. The Basic Header provides the fundamental reference for any particular message and is almost always automatically built by the CBT.
The Basic Header has the same format for both input and output messages. However, the information contained in the Basic Header is relative to the sender when the message is input but relative to the receiver when the same message is output.]]></description>
						<datatype>Section</datatype>
						<required>true</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Application Identifier</name>
								<description><![CDATA[The Application Identifier identifies the application within which the message is being sent or received. The available options are:

F = FIN All user-to-user, FIN system and FIN service messages 
A = GPA Most GPA system and service messages 
L = GPA Certain GPA service messages, for example, LOGIN, LAKs, ABORT 

These values are automatically assigned by the SWIFT system and the user's CBT, but the user should be aware of their existence and significance
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Service Identifier</name>
								<description><![CDATA[The Service Identifier consists of 2 numeric characters. It identifies the type of data that is being sent or received and, in doing so, whether the message which follows is one of the following:

a user-to-user message

a system message

a service message, for example, a session control command, such as SELECT, or a logical acknowledgement, such as ACK/SAK/UAK

Users will be primarily concerned with identifier '01' which applies to all GPA and FIN system and user-to-user messages. Other values include: '21' for message acknowledgements such as ACK/NAK, UAK/UNK, '03' for SELECT commands, and 
so on]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>2</length>
							</field>
							<field>
								<name>LT Identifier</name>
								<description><![CDATA[This 12-character SWIFT address, given in the Basic Header Block, is the address of the sending LT for input messages or of the receiving LT for output messages, and includes the Branch Code.

In the Basic Header, the LT Code within the LT Identifier is specific to the LT that has established the session in which the message is being transmitted, that is the sending LT for input messages or the receiving LT for output messages.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>12</length>
							</field>
							<field>
								<name>Session Number</name>
								<description><![CDATA[The Session Number identifies the session in which the message was transmitted. Within the Basic Header, the 4-digit Session Number is the user's current GPA or FIN Session Number.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Sequence Number</name>
								<description><![CDATA[The sequence number always consists of 6 digits. It is the ISN of the sender's current input session or the OSN of the receiver's current output session.

Note: The sequence number is not present in those messages with an Application Identifier of 'L' (for example LOGIN). The sequence number is, however, a key element in the processing of retrievals. Therefore, LOGINs and attempted LOGINs are not retrievable
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>6</length>
							</field>
						</fields>
					</field>
					<field>
						<name>Application Header Input</name>
						<description><![CDATA[The Application Header of a SWIFT message provides information about the message itself.

The Application Header is given in Block 2 of a SWIFT message. It differs according to whether the message is a GPA or a FIN message and whether the Application Header is part of an input or an output message.

]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Input/Output Identifier</name>
								<description><![CDATA[For an input message, the Input/Output Identifier consists of the single letter 'I'.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Message Type</name>
								<description><![CDATA[The Message Type consists of 3 digits which define the MT number of the message being input. The example used above is for an MT 100 Customer Transfer]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>3</length>
							</field>
							<field>
								<name>Receiver's Address</name>
								<description><![CDATA[This address is the 12-character SWIFT address of the receiver of the message, but with a LT Code of 'X'. It defines the destination to which the message should be sent.

The system will replace the 'X' with a specific LT Code on delivery of the message according to the delivery control exercised by the receiving user.

The Branch Code is mandatory and will be validated. The default of 'XXX' may be used, as in the example above.

Unless otherwise documented, system messages addressed to the SWIFT system itself should be addressed to SWFTXXXXXXXX.

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>12</length>
							</field>
							<field>
								<name>Message Priority</name>
								<description><![CDATA[This character, used within FIN Application Headers only, defines the priority with which a message is delivered. The possible values are:

S = System

U = Urgent

N = Normal

Message Priority 'S' must be used for user-to-system messages; for user-to-user messages either 'U' or 'N' can be used. In the absence of user-specified delivery criteria, system messages are always delivered first, followed by urgent priority messages and then normal priority messages.

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Delivery Monitoring</name>
								<description><![CDATA[Delivery monitoring options apply only to FIN user-to-user messages, and allow the sender of a message to request:

automatic MT 011 Delivery Notification once the message has been delivered

automatic MT 010 Non-Delivery Warning if a message is not delivered within the specified obsolescence period (see below)

both, or neither, options. This may be requested on an individual message basis.

The chosen option is expressed as a single digit:

1 = Non-Delivery Warning

2 = Delivery Notification

3 = Non-Delivery Warning and Delivery Notification. 
If the message has priority 'U' then the user must request delivery monitoring option '1' or '3'. If the message has priority 'N', the user can request delivery monitoring option '2', or, by leaving the option blank, no delivery monitoring.
]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>1</length>
							</field>
							<field>
								<name>Obsolescence Period</name>
								<description><![CDATA[The obsolescence period defines the period of time after which a Delayed Message (DLM) trailer is added to a FIN user-to-user message when the message is delivered. For urgent priority messages, it is also the period of time after which, if the message remains undelivered, a Non-Delivery Warning is generated.

The values for the obsolescence period are 003 (15 minutes) for 'U' priority, and 020 (100 minutes) for 'N' priority. An obsolescence period can only be specified when delivery monitoring has been requested (option 1 or 3 for urgent priority messages, option 2 for normal priority messages). If no delivery monitoring has been requested, and an obsolescence period is specified, the message will be NAKed with error code H25.

GPA input Application Headers are similar to their FIN equivalents except that GPA messages do not specify priority, delivery monitoring, nor obsolescence period.

]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>3</length>
							</field>
						</fields>
					</field>
					<field>
						<name>Application Header Output</name>
						<description><![CDATA[The Application Header of a SWIFT message provides information about the message itself.

The Application Header is given in Block 2 of a SWIFT message. It differs according to whether the message is a GPA or a FIN message and whether the Application Header is part of an input or an output message.

]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Input/Output Identifier</name>
								<description><![CDATA[For an input message, the Input/Output Identifier consists of the single letter 'I'.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Message Type</name>
								<description><![CDATA[Three digits indicating the Message Type.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>3</length>
							</field>
							<field>
								<name>Input Time</name>
								<description><![CDATA[The first occurrence of the time field contains the system time and date. This is the generation time in Greenwich Mean Time (GMT).
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Message Input Reference</name>
								<description><![CDATA[The input MIR.

If the message is generated by the system, the input time is the generation time (in GMT) and the input MIR is the system MIR

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>28</length>
							</field>
							<field>
								<name>Output Date</name>
								<description><![CDATA[The output date, local to the receiver.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>6</length>
							</field>
							<field>
								<name>Output Time</name>
								<description><![CDATA[The second occurrence of the time field contains the output time and date. This is in a time local to the receiver.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Message Priority</name>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
						</fields>
					</field>
					<field>
						<name>User Header</name>
						<description><![CDATA[The User Header is an optional header available within FIN for user-to-user messages only. It appears in Block 3 of a SWIFT message, and allows users to provide their own reference within the headers for a particular message.

A User Header can only be assigned by the sender of a message and, if assigned, will always appear on the output message copy. Relevant parts of the User Header will be repeated in related system messages and acknowledgements.

Block 3 may contain tag 113, defining banking priorities, and tag 108, which is a user reference. The user reference part of the User Header may be used as one of the selection criteria when retrieving a message.

The optional field tags 103 and 115 are also used in Block 3 for the FIN Copy service. The order of tags, when present, is 103, 113, 108 and 115.

An optional field tag 119 can be included in Block 3 of certain messages to specify that different validation rules are to be applied. Agreed code words in field 119 indicate what validation rules SWIFT will apply. If field 119 is present, it should appear after field 108
]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Service Identifier</name>
								<description><![CDATA[For any message which the user submits to a FIN Copy service, Block 3 requires an additional field 103 which contains a three-character Service Identifier unique to a specific FIN Copy service. By using a unique identifier it is possible to support access to multiple services within the same CBT.
]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>3</length>
								<tag>103</tag>
							</field>
							<field>
								<name>Banking Priority</name>
								<description><![CDATA[Assigned by the sender of the message.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>4</length>
								<tag>113</tag>
							</field>
							<field>
								<name>Message User Reference</name>
								<description><![CDATA[Assigned by the sender of the message.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>16</length>
								<tag>108</tag>
							</field>
							<field>
								<name>Validation Flag</name>
								<description><![CDATA[Indicates whether a special validation needs to be performed by FIN. The following are examples of the values this field may take. Please note that this list is subject to change:

ISITC indicates validation of ISITC Standards. Only to be used with MT 521 and MT 523.

REMIT identifies the presence of field 77T. Only to be used in MT 103.

RFDD indicates that the message is a request for direct debit. Only to be used in MT 104.

STP indicates that the message is validated according to straight through processing principles. Only to be used in MT 103.

]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>119</tag>
							</field>
							<field>
								<name>Balance checkpoint date and time</name>
								<description><![CDATA[This field contains the balance checkpoint date and time consisting of a date (YYMMDD) and a time (HHMMSS[ss], where 'ss' indicates hundredths of a second). The MI that is subscribed to MIRS will always copy this reference from field tag 13G of the last MT298/091 that it sent into the related MT 298/093 or MT 097 that it generates. ]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>423</tag>
							</field>
							<field>
								<name>Message Input Reference</name>
								<description><![CDATA[This field contains the MIR of the payment message that is related to the notification messages in which this field is present. The MI that is subscribed to MIRS will copy it from the received payment message. In a FINCopy scenario, this field must contain the MIR of the related MT 096]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>106</tag>
							</field>
							<field>
								<name>Related Reference</name>
								<description><![CDATA[This field contains the reference of the payment that is related to the notification messages in which this field is present. The payment itself was not the result of a FIN message. The value of this field must correspond to the related reference (field 21) in the MT298/093. The format of field 424 is 16x.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>424</tag>
							</field>
							<field>
								<name>Service Type Identifier</name>
								<description><![CDATA[This field identifies the applicable global payment service type. The format of field 111 is 3!n.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>111</tag>
							</field>
							<field>
								<name>Unique End-To-End Transaction Reference</name>
								<description><![CDATA[This field provides an end-to-end reference across a payment transaction. The format of field 121 is 36!x.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>121</tag>
							</field>
							<field>
								<name>Addressee Information</name>
								<description><![CDATA[Tag 115 is only valid for output messages. Information from Central Institution to the receiver of payment message. Information is input in the MT 097 FIN Copy Message Authorisation/Refusal Notification in Y-Copy mode.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>115</tag>
							</field>
							<field>
								<name>Payment Release Information Receiver (FINInform Services)</name>
								<description><![CDATA[Tag 165 is only valid for output messages. This field contains information from the server destination to the receiver of payment message. It is only available for use in FINInform services that operate in Y-copy mode.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>165</tag>
							</field>
							<field>
								<name>Receiver Information</name>
								<description><![CDATA[Tag 433 is only valid for output messages. The screening service inputs information in the MT 097 FINCopy Message Authorisation/Refusal Notification, in Y-Copy mode. FINCopy copies the information to the receiver of the screened message.
				    The following values can be present in this field:
				      AOK: message automatically released by screening service
				      FPO: compliance officer has flagged the screening result as false positive
				      NOK: compliance officer has flagged the screened message as suspect
				    The code word can optionally be followed by additional information (up to 20 characters from the x character set).]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>433</tag>
							</field>
						</fields>
					</field>
				</fields>
			</Header>
			<Data>
				<Fields>
					<SwiftField Name="20">
						<SwiftFieldDef Name="20">
							<Generic>false</Generic>
							<Description><![CDATA[Reference]]></Description>
							<Option Name="">
								<Format><![CDATA[16x]]></Format>
								<Specification><![CDATA[(Sender's Reference)]]></Specification>
								<Description><![CDATA[Sender's Reference]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options> </Options>
						<Validations>
							<SubField Name="Sender's_Reference">
								<Validation>
									<Options> </Options>
									<ErrorCode>T26</ErrorCode>
									<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive slashes '//' (Error code(s): T26).]]></Comment>
									<ValidationPattern xsi:type="T26" Type="T26">
										<Type>T26</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="13C">
						<SwiftFieldDef Name="13">
							<Generic>false</Generic>
							<Description><![CDATA[Number Identification]]></Description>
							<Option Name="C">
								<Format><![CDATA[/8c/4!n1!x4!n]]></Format>
								<Specification><![CDATA[(Code)(Time indication)(Sign)(Time offset)]]></Specification>
								<Description><![CDATA[Time Indication]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>true</Repeating>
						<Presence>O</Presence>
						<Options>C</Options>
						<Validations>
							<SubField Name="Time_indication">
								<Validation>
									<Options>C</Options>
									<ErrorCode>T38</ErrorCode>
									<Comment><![CDATA[Time indication must be a valid time expressed as HHMM (Error code(s): T38).]]></Comment>
									<ValidationPattern xsi:type="DATE" Type="DATE">
										<Type>DATE</Type>
										<Format>HHmm</Format>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="Sign">
								<Validation>
									<Options>C</Options>
									<ErrorCode>T15</ErrorCode>
									<Comment><![CDATA[One of the following codes must be used in Sign (Error code(s): T15).]]></Comment>
									<ValidationPattern xsi:type="CODE" Type="CODE">
										<Type>CODE</Type>
										<Codes>
											<Code Name="+">
												<DetailedName>Plus</DetailedName>
												<Description>The + sign.</Description>
											</Code>
											<Code Name="-">
												<DetailedName>Minus</DetailedName>
												<Description>The - sign.</Description>
											</Code>
										</Codes>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="Time_offset">
								<Validation>
									<Options>C</Options>
									<ErrorCode>T16</ErrorCode>
									<Comment><![CDATA[Time offset is expressed as HHMM, where the hour component, ie, 'HH', must be in the range of 00 through 13,and the minute component, ie, 'MM' must be in the range of 00 through 59. Any 'HH' or 'MM' component outside of these range checks will be disallowed (Error code(s): T16).]]></Comment>
									<ValidationPattern xsi:type="Time_Offset" Type="Time Offset">
										<Type>Time Offset</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="23B">
						<SwiftFieldDef Name="23">
							<Generic>false</Generic>
							<Description><![CDATA[Function of the Message]]></Description>
							<Option Name="B">
								<Format><![CDATA[4!c]]></Format>
								<Specification><![CDATA[(Type)]]></Specification>
								<Description><![CDATA[Bank Operation Code]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options>B</Options>
						<Validations>
							<SubField Name="Type">
								<Validation>
									<Options>B</Options>
									<ErrorCode>T36</ErrorCode>
									<Comment><![CDATA[One of the following codes must be used (Error code(s): T36):]]></Comment>
									<ValidationPattern xsi:type="CODE" Type="CODE">
										<Type>CODE</Type>
										<Codes>
											<Code Name="CRED">
												<DetailedName>Normal credit transfer</DetailedName>
												<Description>This message contains a credit transfer where there is no SWIFT Service Level involved.</Description>
											</Code>
											<Code Name="CRTS">
												<DetailedName>Test message</DetailedName>
												<Description>This message contains a credit transfer for test purposes.</Description>
											</Code>
											<Code Name="SPAY">
												<DetailedName>SWIFTPay</DetailedName>
												<Description>This message contains a credit transfer to be processed according to the SWIFTPay Service Level.</Description>
											</Code>
											<Code Name="SPRI">
												<DetailedName>Priority</DetailedName>
												<Description>This message contains a credit transfer to be processed according to the Priority Service Level.</Description>
											</Code>
											<Code Name="SSTD">
												<DetailedName>Standard</DetailedName>
												<Description>This message contains a credit transfer to be processed according to the Standard Service Level.</Description>
											</Code>
										</Codes>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="23E">
						<SwiftFieldDef Name="23">
							<Generic>false</Generic>
							<Description><![CDATA[Function of the Message]]></Description>
							<Option Name="E">
								<Format><![CDATA[4!c[/30x]]]></Format>
								<Specification><![CDATA[(Instruction Code)(Additional Information)]]></Specification>
								<Description><![CDATA[Instruction Code]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>true</Repeating>
						<Presence>O</Presence>
						<Options>E</Options>
						<Validations>
							<SubField Name="Instruction_Code">
								<Validation>
									<Options>E</Options>
									<ErrorCode>T48</ErrorCode>
									<Comment><![CDATA[Instruction Code must contain one of the following codes (Error code(s): T48):]]></Comment>
									<ValidationPattern xsi:type="CODE" Type="CODE">
										<Type>CODE</Type>
										<Codes>
											<Code Name="SDVA">
												<DetailedName>Same Day Value</DetailedName>
												<Description>Payment must be executed with same day value to the beneficiary.</Description>
											</Code>
											<Code Name="INTC">
												<DetailedName>Intra-Company Payment</DetailedName>
												<Description>A payment between two companies belonging to the same group.</Description>
											</Code>
											<Code Name="REPA">
												<DetailedName>Related Payment</DetailedName>
												<Description>Payment has a related e-Payments reference.</Description>
											</Code>
											<Code Name="CORT">
												<DetailedName>Corporate Trade</DetailedName>
												<Description>Payment is made in settlement of a trade, eg, foreign exchange deal, securities transaction.</Description>
											</Code>
										</Codes>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="26T">
						<SwiftFieldDef Name="26">
							<Generic>false</Generic>
							<Option Name="T">
								<Format><![CDATA[3!c]]></Format>
								<Specification><![CDATA[(Type)]]></Specification>
								<Description><![CDATA[Transaction Type Code]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options>T</Options>
					</SwiftField>
					<SwiftField Name="32A">
						<SwiftFieldDef Name="32">
							<Generic>false</Generic>
							<Option Name="A">
								<Format><![CDATA[6!n3!a15d]]></Format>
								<Specification><![CDATA[(Date) (Currency) (Amount)]]></Specification>
								<Description><![CDATA[Value Date/Currency/Interbank Settled Amount]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options>A</Options>
						<Validations>
							<SubField Name="Date">
								<Validation>
									<Options>A</Options>
									<ErrorCode>T50</ErrorCode>
									<Comment><![CDATA[Date must be a valid date expressed as YYMMDD (Error code(s): T50).]]></Comment>
									<ValidationPattern xsi:type="DATE" Type="DATE">
										<Type>DATE</Type>
										<Format>yyMMdd</Format>
										<value-date>true</value-date>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="Currency">
								<Validation>
									<Options>A</Options>
									<ErrorCode>T52</ErrorCode>
									<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52).]]></Comment>
									<ValidationPattern xsi:type="Currency_Code" Type="Currency Code">
										<Type>Currency Code</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="Amount">
								<Validation>
									<Options>A</Options>
									<ErrorCode>C03</ErrorCode>
									<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency (Error code(s): C03,T40,T43).]]></Comment>
									<ValidationPattern xsi:type="Decimal" Type="Decimal">
										<Type>Decimal</Type>
										<currency-field>Currency</currency-field>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="33B">
						<SwiftFieldDef Name="33">
							<Generic>false</Generic>
							<Option Name="B">
								<Format><![CDATA[3!a15d]]></Format>
								<Specification><![CDATA[(Currency) (Amount)]]></Specification>
								<Description><![CDATA[Currency/Instructed Amount]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options>B</Options>
						<Validations>
							<SubField Name="Currency">
								<Validation>
									<Options>B</Options>
									<ErrorCode>T52</ErrorCode>
									<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52).]]></Comment>
									<ValidationPattern xsi:type="Currency_Code" Type="Currency Code">
										<Type>Currency Code</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="Amount">
								<Validation>
									<Options>B</Options>
									<ErrorCode>C03</ErrorCode>
									<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency (Error code(s): C03,T40,T43).]]></Comment>
									<ValidationPattern xsi:type="Decimal" Type="Decimal">
										<Type>Decimal</Type>
										<currency-field>Currency</currency-field>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="36">
						<SwiftFieldDef Name="36">
							<Generic>false</Generic>
							<Description><![CDATA[Quantity of Financial Instrument]]></Description>
							<Option Name="">
								<Format><![CDATA[12d]]></Format>
								<Specification><![CDATA[(Rate)]]></Specification>
								<Description><![CDATA[Exchange Rate]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options> </Options>
					</SwiftField>
					<SwiftField Name="50a">
						<SwiftFieldDef Name="50">
							<Generic>false</Generic>
							<Option Name="A">
								<Format><![CDATA[([/34xCRLF])(4!a2!a2!c[3!c])]]></Format>
								<Specification><![CDATA[(Account)(Identifier Code)]]></Specification>
								<Description><![CDATA[Ordering Customer]]></Description>
							</Option>
							<Option Name="F">
								<Format><![CDATA[35x(CRLF4*35x)]]></Format>
								<Specification><![CDATA[(Party Identifier)(Name & Address)]]></Specification>
								<Description><![CDATA[Ordering Customer]]></Description>
							</Option>
							<Option Name="K">
								<Format><![CDATA[([/34xCRLF])(4*35x)]]></Format>
								<Specification><![CDATA[(Account)(Name & Address)]]></Specification>
								<Description><![CDATA[Ordering Customer]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options>A, K, F</Options>
						<Validations>
							<SubField Name="Identifier_Code">
								<Validation>
									<Options>A</Options>
									<ErrorCode>T27, T28, T29, T45</ErrorCode>
									<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
									<ValidationPattern xsi:type="BIC" Type="BIC">
										<Type>BIC</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="52A">
						<SwiftFieldDef Name="52">
							<Generic>false</Generic>
							<Option Name="A">
								<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
								<Description><![CDATA[Ordering Institution]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options>A</Options>
						<Validations>
							<SubField Name="Identifier_Code">
								<Validation>
									<Options>A</Options>
									<ErrorCode>T27, T28, T29, T45</ErrorCode>
									<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
									<ValidationPattern xsi:type="BIC" Type="BIC">
										<Type>BIC</Type>
									</ValidationPattern>
								</Validation>
								<Validation>
									<Options>A</Options>
									<ErrorCode>C05</ErrorCode>
									<Comment><![CDATA[Identifier Code must not be a BEI, ie must not be of subtype BEID, MCCO, TESP or TRCO (Error code(s): C05).]]></Comment>
									<ValidationPattern xsi:type="C05" Type="C05">
										<Type>C05</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="CreditDebit">
								<Validation>
									<Options>A</Options>
									<ErrorCode>T51</ErrorCode>
									<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
									<ValidationPattern xsi:type="CODE" Type="CODE">
										<Type>CODE</Type>
										<Codes>
											<Code Name="C">
												<DetailedName>Credit</DetailedName>
											</Code>
											<Code Name="D">
												<DetailedName>Debit</DetailedName>
											</Code>
										</Codes>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="53a">
						<SwiftFieldDef Name="53">
							<Generic>false</Generic>
							<Option Name="A">
								<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
								<Description><![CDATA[Sender's Correspondent]]></Description>
							</Option>
							<Option Name="B">
								<Format><![CDATA[/1!a[/34x](CRLF35x) | /1!a[/34x] | [/34xCRLF]35x | /34x]]></Format>
								<Specification><![CDATA[(CreditDebit) (Party Identifier) (Location) | (CreditDebit)(Party Identifier) |(Party Identifier) (Location) | (Party Identifier)]]></Specification>
								<Description><![CDATA[Sender's Correspondent]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options>A, B</Options>
						<Validations>
							<SubField Name="Identifier_Code">
								<Validation>
									<Options>A</Options>
									<ErrorCode>T27, T28, T29, T45</ErrorCode>
									<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
									<ValidationPattern xsi:type="BIC" Type="BIC">
										<Type>BIC</Type>
									</ValidationPattern>
								</Validation>
								<Validation>
									<Options>A</Options>
									<ErrorCode>C05</ErrorCode>
									<Comment><![CDATA[Identifier Code must not be a BEI, ie must not be of subtype BEID, MCCO, TESP or TRCO (Error code(s): C05).]]></Comment>
									<ValidationPattern xsi:type="C05" Type="C05">
										<Type>C05</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="CreditDebit">
								<Validation>
									<Options>A, B</Options>
									<ErrorCode>T51</ErrorCode>
									<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
									<ValidationPattern xsi:type="CODE" Type="CODE">
										<Type>CODE</Type>
										<Codes>
											<Code Name="C">
												<DetailedName>Credit</DetailedName>
											</Code>
											<Code Name="D">
												<DetailedName>Debit</DetailedName>
											</Code>
										</Codes>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="54A">
						<SwiftFieldDef Name="54">
							<Generic>false</Generic>
							<Option Name="A">
								<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
								<Description><![CDATA[Receiver's Correspondent]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options>A</Options>
						<Validations>
							<SubField Name="Identifier_Code">
								<Validation>
									<Options>A</Options>
									<ErrorCode>T27, T28, T29, T45</ErrorCode>
									<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
									<ValidationPattern xsi:type="BIC" Type="BIC">
										<Type>BIC</Type>
									</ValidationPattern>
								</Validation>
								<Validation>
									<Options>A</Options>
									<ErrorCode>C05</ErrorCode>
									<Comment><![CDATA[Identifier Code must not be a BEI, ie must not be of subtype BEID, MCCO, TESP or TRCO (Error code(s): C05).]]></Comment>
									<ValidationPattern xsi:type="C05" Type="C05">
										<Type>C05</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="CreditDebit">
								<Validation>
									<Options>A</Options>
									<ErrorCode>T51</ErrorCode>
									<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
									<ValidationPattern xsi:type="CODE" Type="CODE">
										<Type>CODE</Type>
										<Codes>
											<Code Name="C">
												<DetailedName>Credit</DetailedName>
											</Code>
											<Code Name="D">
												<DetailedName>Debit</DetailedName>
											</Code>
										</Codes>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="55A">
						<SwiftFieldDef Name="55">
							<Generic>false</Generic>
							<Description><![CDATA[Third Reimbursement Institution]]></Description>
							<Option Name="A">
								<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
								<Description><![CDATA[Third Reimbursement Institution]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options>A</Options>
						<Validations>
							<SubField Name="Identifier_Code">
								<Validation>
									<Options>A</Options>
									<ErrorCode>T27, T28, T29, T45</ErrorCode>
									<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
									<ValidationPattern xsi:type="BIC" Type="BIC">
										<Type>BIC</Type>
									</ValidationPattern>
								</Validation>
								<Validation>
									<Options>A</Options>
									<ErrorCode>C05</ErrorCode>
									<Comment><![CDATA[Identifier Code must not be a BEI, ie must not be of subtype BEID, MCCO, TESP or TRCO (Error code(s): C05).]]></Comment>
									<ValidationPattern xsi:type="C05" Type="C05">
										<Type>C05</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="CreditDebit">
								<Validation>
									<Options>A</Options>
									<ErrorCode>T51</ErrorCode>
									<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
									<ValidationPattern xsi:type="CODE" Type="CODE">
										<Type>CODE</Type>
										<Codes>
											<Code Name="C">
												<DetailedName>Credit</DetailedName>
											</Code>
											<Code Name="D">
												<DetailedName>Debit</DetailedName>
											</Code>
										</Codes>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="56A">
						<SwiftFieldDef Name="56">
							<Generic>false</Generic>
							<Option Name="A">
								<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
								<Description><![CDATA[Intermediary Institution]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options>A</Options>
						<Validations>
							<SubField Name="Identifier_Code">
								<Validation>
									<Options>A</Options>
									<ErrorCode>T27, T28, T29, T45</ErrorCode>
									<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
									<ValidationPattern xsi:type="BIC" Type="BIC">
										<Type>BIC</Type>
									</ValidationPattern>
								</Validation>
								<Validation>
									<Options>A</Options>
									<ErrorCode>C05</ErrorCode>
									<Comment><![CDATA[Identifier Code must not be a BEI, ie must not be of subtype BEID, MCCO, TESP or TRCO (Error code(s): C05).]]></Comment>
									<ValidationPattern xsi:type="C05" Type="C05">
										<Type>C05</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="CreditDebit">
								<Validation>
									<Options>A</Options>
									<ErrorCode>T51</ErrorCode>
									<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
									<ValidationPattern xsi:type="CODE" Type="CODE">
										<Type>CODE</Type>
										<Codes>
											<Code Name="C">
												<DetailedName>Credit</DetailedName>
											</Code>
											<Code Name="D">
												<DetailedName>Debit</DetailedName>
											</Code>
										</Codes>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="57A">
						<SwiftFieldDef Name="57">
							<Generic>false</Generic>
							<Option Name="A">
								<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
								<Description><![CDATA[Account With Institution]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options>A</Options>
						<Validations>
							<SubField Name="Identifier_Code">
								<Validation>
									<Options>A</Options>
									<ErrorCode>T27, T28, T29, T45</ErrorCode>
									<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
									<ValidationPattern xsi:type="BIC" Type="BIC">
										<Type>BIC</Type>
									</ValidationPattern>
								</Validation>
								<Validation>
									<Options>A</Options>
									<ErrorCode>C05</ErrorCode>
									<Comment><![CDATA[Identifier Code must not be a BEI, ie must not be of subtype BEID, MCCO, TESP or TRCO (Error code(s): C05).]]></Comment>
									<ValidationPattern xsi:type="C05" Type="C05">
										<Type>C05</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="CreditDebit">
								<Validation>
									<Options>A</Options>
									<ErrorCode>T51</ErrorCode>
									<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
									<ValidationPattern xsi:type="CODE" Type="CODE">
										<Type>CODE</Type>
										<Codes>
											<Code Name="C">
												<DetailedName>Credit</DetailedName>
											</Code>
											<Code Name="D">
												<DetailedName>Debit</DetailedName>
											</Code>
										</Codes>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="59a">
						<SwiftFieldDef Name="59">
							<Generic>false</Generic>
							<Option Name="">
								<Format><![CDATA[[/34xCRLF]4*35x]]></Format>
								<Specification><![CDATA[(Account)(Name & Address)]]></Specification>
								<Description><![CDATA[Beneficiary Customer]]></Description>
							</Option>
							<Option Name="A">
								<Format><![CDATA[([/34xCRLF])(4!a2!a2!c[3!c])]]></Format>
								<Specification><![CDATA[(Account)(Identifier Code)]]></Specification>
								<Description><![CDATA[Beneficiary Customer]]></Description>
							</Option>
							<Option Name="F">
								<Format><![CDATA[[/34xCRLF]4*35x]]></Format>
								<Specification><![CDATA[(Account)(Name & Address Details)]]></Specification>
								<Description><![CDATA[Beneficiary Customer]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options>A,  , F</Options>
						<Validations>
							<SubField Name="Identifier_Code">
								<Validation>
									<Options>A</Options>
									<ErrorCode>T27, T28, T29, T45</ErrorCode>
									<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
									<ValidationPattern xsi:type="BIC" Type="BIC">
										<Type>BIC</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="70">
						<SwiftFieldDef Name="70">
							<Generic>false</Generic>
							<Description><![CDATA[Narrative]]></Description>
							<Option Name="">
								<Format><![CDATA[4*35x]]></Format>
								<Specification><![CDATA[(Narrative)]]></Specification>
								<Description><![CDATA[Remittance Information]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options> </Options>
					</SwiftField>
					<SwiftField Name="71A">
						<SwiftFieldDef Name="71">
							<Generic>false</Generic>
							<Option Name="A">
								<Format><![CDATA[3!a]]></Format>
								<Specification><![CDATA[(Code)]]></Specification>
								<Description><![CDATA[Details of Charges]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options>A</Options>
						<Validations>
							<SubField Name="Code">
								<Validation>
									<Options>A</Options>
									<ErrorCode>T08</ErrorCode>
									<Comment><![CDATA[One of the following codes must be used (Error code(s): T08):]]></Comment>
									<ValidationPattern xsi:type="CODE" Type="CODE">
										<Type>CODE</Type>
										<Codes>
											<Code Name="BEN">
												<DetailedName>Beneficiary</DetailedName>
												<Description>All transaction charges are to be borne by the beneficiary customer.</Description>
											</Code>
											<Code Name="OUR">
												<DetailedName>Our customer charged</DetailedName>
												<Description>All transaction charges are to be borne by the ordering customer.</Description>
											</Code>
											<Code Name="SHA">
												<DetailedName>Shared charges</DetailedName>
												<Description>All transaction charges other than the charges of the financial institution servicing the ordering customer account are borne by the beneficiary customer.</Description>
											</Code>
										</Codes>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="71F">
						<SwiftFieldDef Name="71">
							<Generic>false</Generic>
							<Option Name="F">
								<Format><![CDATA[3!a15d]]></Format>
								<Specification><![CDATA[(Currency) (Amount)]]></Specification>
								<Description><![CDATA[Sender's Charges]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>true</Repeating>
						<Presence>O</Presence>
						<Options>F</Options>
						<Validations>
							<SubField Name="Currency">
								<Validation>
									<Options>F</Options>
									<ErrorCode>T52</ErrorCode>
									<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52).]]></Comment>
									<ValidationPattern xsi:type="Currency_Code" Type="Currency Code">
										<Type>Currency Code</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="Amount">
								<Validation>
									<Options>F</Options>
									<ErrorCode>C03</ErrorCode>
									<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency (Error code(s): C03).]]></Comment>
									<ValidationPattern xsi:type="Decimal" Type="Decimal">
										<Type>Decimal</Type>
										<currency-field>Currency</currency-field>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="71G">
						<SwiftFieldDef Name="71">
							<Generic>false</Generic>
							<Option Name="G">
								<Format><![CDATA[3!a15d]]></Format>
								<Specification><![CDATA[(Currency) (Amount)]]></Specification>
								<Description><![CDATA[Receiver's Charges]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options>G</Options>
						<Validations>
							<SubField Name="Currency">
								<Validation>
									<Options>G</Options>
									<ErrorCode>T52</ErrorCode>
									<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52).]]></Comment>
									<ValidationPattern xsi:type="Currency_Code" Type="Currency Code">
										<Type>Currency Code</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="Amount">
								<Validation>
									<Options>G</Options>
									<ErrorCode>C03</ErrorCode>
									<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency (Error code(s): C03).]]></Comment>
									<ValidationPattern xsi:type="Decimal" Type="Decimal">
										<Type>Decimal</Type>
										<currency-field>Currency</currency-field>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="72">
						<SwiftFieldDef Name="72">
							<Generic>false</Generic>
							<Option Name="">
								<Format><![CDATA[6*35x]]></Format>
								<Specification><![CDATA[(Narrative - Structured Format)]]></Specification>
								<Description><![CDATA[Sender to Receiver Information]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options> </Options>
					</SwiftField>
					<SwiftField Name="77B">
						<SwiftFieldDef Name="77">
							<Generic>false</Generic>
							<Option Name="B">
								<Format><![CDATA[3*35x]]></Format>
								<Specification><![CDATA[(Narrative)]]></Specification>
								<Description><![CDATA[Regulatory Reporting]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options>B</Options>
					</SwiftField>
				</Fields>
			</Data>
			<Trailer>
				<fields>
					<field>
						<name>Message Authentication Code</name>
						<description><![CDATA[Allows authentication by the receiving user. It is followed by an authentication result.

This trailer is mandatory for most user-to-user message categories within the FIN application. When the FIN Copy Service is used a PAC trailer, if present, follows the MAC trailer.

Format:

{MAC:<authentication-result>}

where <authentication-result> = 8!h

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>8</length>
						<tag>MAC</tag>
					</field>
					<field>
						<name>Proprietary Authentication Code</name>
						<description><![CDATA[The PAC is used within the FIN Copy service only, when using the double authentication option. The PAC is included in Block 5 of FIN user-to-user messages, immediately after the MAC trailer, if present.

This is calculated on the extracted fields of Block 4 of the message, the value of field 115, if present, and the <authentication-result> of the MAC trailer for Copy Services with double authentication.

Thus, the end-of-block indicator (CrLf-) is included in the PAC calculation, and the fields are defined as follows:

The first three characters are CrLf:

The field and the delimiter are present, that is, 32A:, 20:, and so on.

All subfields and their delimiters are present.

Format:

{PAC:[<authentication-result>]}

where <authentication-result> is mandatory on input messages only and <authentication-result> = 8!h

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>8</length>
						<tag>PAC</tag>
					</field>
					<field>
						<name>Checksum</name>
						<description><![CDATA[The checksum is computed based on the receiver's address (12 characters, with 9th character replaced by X) plus the Text Block. This trailer allows the system and the CBT to check that messages have not been corrupted due to a system malfunction or an undetected transmission error.

Format:

{CHK:<checksum-result>}

where <checksum-result> = 12!h

Note: This trailer is mandatory for FIN and GPA messages (Service Identifier 01).

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>12</length>
						<tag>CHK</tag>
					</field>
					<field>
						<name>System Originated Message</name>
						<description><![CDATA[The system message or service message which is generated by a system PLT has a SYS trailer. All solicited system messages (Service Identifier 01) contain the MIR of the request and may also contain the time.

Format:

{SYS:[<time><mir>]}

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>SYS</tag>
					</field>
					<field>
						<name>Test And Training Message</name>
						<description><![CDATA[Mandatory for FIN and GPA messages (Service Identifier 01) sent by, or delivered to, a Test & Training Logical Terminal (LT). This trailer has a tag only, and no value.

Format:

{TNG:}
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>0</length>
						<tag>TNG</tag>
					</field>
					<field>
						<name>Possible Duplicate Emission</name>
						<description><![CDATA[This trailer is used by the destination of the message. It only applies to FIN user-to-user messages (Service Identifier 01, message categories reserved for banking messages). There can be multiple PDEs. The system does not verify the order nor restrict the number (except for maximum message length).

Correctly formatted PDE trailers applied to user-to-system messages are accepted by the system, but not processed. This means that the system does not check to see if the original message exists. Therefore, a retrieval request sent with a PDE trailer may be processed twice if the original message was received by the system.

Format:

{PDE:[<time><mir>]}

where <time><mir> refers to the emission of the previous possible issue.

Note: It can be added automatically by a CBT or manually by a user. It may be followed by the MIR and the time of its previous possible messages.

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>PDE</tag>
					</field>
					<field>
						<name>Delayed Message</name>
						<description><![CDATA[This trailer is added to all FIN user-to-user output messages that have exceeded their obsolescence period. If this trailer appears in GPA or FIN system messages, it must be ignored. This trailer has a tag only, and no value.

The Obsolescence Period is:

U = 15 minutes

N = 100 minutes

Format:

{DLM:}

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>0</length>
						<tag>DLM</tag>
					</field>
					<field>
						<name>Possible Duplicate Message</name>
						<description><![CDATA[Added by the system to any output message (GPA and FIN Service Identifier 01) being resent because a prior delivery may be invalid. If a system PLT receives a report request with a PDM, the response has a plain PDM (without the optional delivery reference). Other PDMs may be added as a result of unsuccessful delivery attempts to the user. 
Format:
{PDM:[<time><mor>]}
where <time> and the Message Output Reference <mor> are that of the previous attempt.
Note: For messages recovered after a system failure, the optional fields may not be present.
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>PDM</tag>
					</field>
					<field>
						<name>Message Reference</name>
						<description><![CDATA[The MRF trailer is used to specify the message reference of the original user message in MT 096 FIN Copy to Central Institution Messages.
Format:
{MRF:<date><full-time><mir>}
where <mir> is that of the original user message whose fields are copied in the MT 096 FIN Copy to Central Institution Message.
Note: The MRF is specific to FIN Copy. The MRF trailer is automatically generated in the MT 096 FIN Copy to Central Institution Message and can only be reused in field 109 of the MT 096 FIN Copy to Central Institution Message to identify the MT 096 to which the MT 097 is a response. The format of the MRF is subject to change.
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>MRF</tag>
					</field>
				</fields>
			</Trailer>
		</SwiftFields>
		<validationrules name="Default">
			<hdrvalidationrules>
				<fieldvalidations>
					<fieldvalidation>
						<name>U08</name>
						<formula><![CDATA[if($this.Header.GetFieldIndex("User_Header") != -1) {
    def userHeader = $this.Header.GetSection("User_Header");
    if(userHeader.$size == 0) {
        return false;
    }
    else
        if(userHeader[0].IsNull("Validation_Flag")) {
            return false;
        }
        else
            if(userHeader[0].GetString("Validation_Flag") != "STP") {
                return false;
            }


}
return true;
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U08</error-code>
						<actionmessage><![CDATA["Invalid syntax, format, code word in tag 119(Validation Flag), or field tag 119 is missing. Allowed value is STP."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>U03</name>
						<fieldname>User Header</fieldname>
						<formula><![CDATA[Iff(IsNotNull(User_Header.Service_Type_Identifier), 
    IsNotNull(User_Header.Unique_End_To_End_Transaction_Reference))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U03</error-code>
						<actionmessage><![CDATA["When populating an end-to-end reference, both fields 111 and 121 must be populated: a message that contains only one of these two fields will not be accepted by FIN."]]></actionmessage>
					</fieldvalidation>
				</fieldvalidations>
			</hdrvalidationrules>
			<datavalidationrules>
				<fieldvalidations>
					<fieldvalidation>
						<name>C1-1</name>
						<fieldname>33B.Currency</fieldname>
						<formula><![CDATA[If($value == F32A[0].Currency, 
   F36.$size == 0, 
   F36.$size > 0)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D75</error-code>
						<actionmessage><![CDATA["If field 33B is present and the currency code is different from the currency code in field 32A, field 36 must be present, otherwise field 36 is not allowed."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C1-2</name>
						<fieldname>36</fieldname>
						<formula><![CDATA[F33B.$size > 0]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D75</error-code>
						<actionmessage><![CDATA["If field 33B is present and the currency code is different from the currency code in field 32A, field 36 must be present, otherwise field 36 is not allowed."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C2</name>
						<comment><![CDATA["If the country codes of the Sender's and the Receiver's BICs are within the following list: AD, AT, BE, BG, BV, CH, CY, CZ, DE, DK, EE, ES, FI, FR, GB, GF, GI, GP, GR, HU, IE, IS, IT, LI, LT, LU, LV, MC, MQ, MT, NL, NO, PL, PM, PT, RE, RO, SE, SI, SJ, SK, SM, TF and VA, then field 33B is mandatory, otherwise field 33B is optional."]]></comment>
						<formula><![CDATA[def header = $this.Header;
def appheader;
if(header.GetFieldCount() == 0) {
	// No Header
	return true;
}
if(header.GetFieldType(0) != "Section"){
	// Custom header or FICC header
	return true;
}
else if(header.GetFieldCount() == 4) {
	// Input/output header
    appheader = If(header.GetSection(1).$size > 0, 
                   header.GetSection(1)[0], 
                   header.GetSection(2)[0]);
}
else {
    appheader = header.GetSection(1)[0];
}
def basicheader = header.GetSection(0)[0];
def ioIdentifier = appheader.GetString("Input_Output_Identifier");
def mir = (If(ioIdentifier == "O", 
           GetString(appheader, "Message Input Reference"), 
           ""));
def receiverAddress = (If(ioIdentifier == "I", 
                       GetString(appheader, "Receiver's Address"), 
                       ""));
def senderCountryCode = (If(ioIdentifier == "I", 
                         Mid(basicheader.GetString("LT Identifier"), 4, 2), 
                         Mid(mir, 10, 2)));
def receiverCountryCode = (If(ioIdentifier == "I", 
                           Mid(receiverAddress, 4, 2), 
                           Mid(basicheader.GetString("LT Identifier"), 4, 2)));
def countryList = ["AD", "AT", "BE", "BG", "BV", "CH", "CY", 
      "CZ", "DE", "DK", "EE", "ES", "FI", "FR", "GB", "GF", 
      "GI", "GP", "GR", "HU", "IE", "IS", "IT", "LI", "LT", 
      "LU", "LV", "MC", "MQ", "MT", "NL", "NO", "PL", "PM", 
      "PT", "RE", "RO", "SE", "SI", "SJ", "SK", "SM", "TF", "VA"];   
If(In(senderCountryCode, countryList) && 
     In(receiverCountryCode, countryList), 
   F33B.$size > 0, 
   true);]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D49</error-code>
						<actionmessage><![CDATA["If the country codes of the Sender's and the Receiver's BICs are within the following list: AD, AT, BE, BG, BV, CH, CY, CZ, DE, DK, EE, ES, FI, FR, GB, GF, GI, GP, GR, HU, IE, IS, IT, LI, LT, LU, LV, MC, MQ, MT, NL, NO, PL, PM, PT, RE, RO, SE, SI, SJ, SK, SM, TF and VA, then field 33B is mandatory, otherwise field 33B is optional."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C3-A</name>
						<fieldname>23E.Instruction_Code</fieldname>
						<formula><![CDATA[If(F23B[0].Type == "SPRI", In($value, "SDVA", "INTC"), true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E01</error-code>
						<actionmessage><![CDATA["If field 23B contains the code SPRI, field 23E may contain only the codes SDVA or INTC."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C3-B</name>
						<fieldname>23B.Type</fieldname>
						<formula><![CDATA[If(In($value, "SSTD", "SPAY"), F23E.$size == 0, true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E02</error-code>
						<actionmessage><![CDATA["If field 23B contains one of the codes SSTD or SPAY, field 23E must not be used."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C4</name>
						<fieldname>55A</fieldname>
						<formula><![CDATA[(F53a.$size > 0 && F53a[0].FormatOption == 'A') && 
  F54A.$size > 0]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E06</error-code>
						<actionmessage><![CDATA["If field 55A is present, both fields 53A and 54A must also be present."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C5</name>
						<fieldname>56A</fieldname>
						<formula><![CDATA[F57A.$size > 0]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C81</error-code>
						<actionmessage><![CDATA["If field 56A is present, field 57A must also be present."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C6</name>
						<fieldname>23B.Type</fieldname>
						<formula><![CDATA[If($value == "SPRI", F56A.$size == 0, true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E16</error-code>
						<actionmessage><![CDATA["If field 23B contains the code SPRI, field 56A must not be present."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C7-A</name>
						<fieldname>71A.Code</fieldname>
						<formula><![CDATA[If($value == "OUR", F71F.$size == 0, true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E13</error-code>
						<actionmessage><![CDATA["If field 71A contains OUR, then field 71F is not allowed and field 71G is optional."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C7-B</name>
						<fieldname>71A.Code</fieldname>
						<formula><![CDATA[If($value == "SHA", F71G.$size == 0, true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D50</error-code>
						<actionmessage><![CDATA["If field 71A contains SHA, then field(s) 71F is(are) optional and field 71G is not allowed."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C7-C</name>
						<fieldname>71A.Code</fieldname>
						<formula><![CDATA[If($value == "BEN", F71F.$size > 0 && F71G.$size == 0, true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E15</error-code>
						<actionmessage><![CDATA["If field 71A contains BEN, then at least one occurrence of field 71F is mandatory and field 71G is not allowed."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C8</name>
						<formula><![CDATA[If(F71F.$size > 0 || F71G.$size > 0, F33B.$size > 0, true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D51</error-code>
						<actionmessage><![CDATA["If either field 71F (at least one occurrence) or field 71G is present, then field 33B is mandatory, otherwise field 33B is optional."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C9</name>
						<fieldname>71G.Currency</fieldname>
						<formula><![CDATA[$value == F32A[0].Currency]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C02</error-code>
						<actionmessage><![CDATA["The currency code in the fields 71G and 32A must be the same."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C10</name>
						<fieldname>59a.Account</fieldname>
						<comment><![CDATA["If the country codes of the Sender's and the Receiver's BICs are within the following list: AD, AT, BE, BG, BV, CH, CY, CZ, DE, DK, EE, ES, FI, FR, GB, GF, GI, GP, GR, HU, IE, IL, IS, IT, LI, LT, LU, LV, MC, MQ, MT, NL, NO, PL, PM, PT, RE, RO, SE, SI, SJ, SK, SM, TF and VA, then the following apply: a) if field 57A is not present, the IBAN (ISO-13616) is mandatory in subfield Account of field 59a; b) if field 57A is present and the country code of the BIC in 57A is within the above list of country codes, the IBAN (ISO-13616) is mandatory in subfield Account of field 59a. In all other cases, the presence of the IBAN (ISO-13616) is optional and its format is not validated in subfield Account of field 59a."]]></comment>
						<formula><![CDATA[def header = $this.Header;
def appheader;

if(header.GetFieldCount() == 0) {
	// No Header
	return true;
}
if(header.GetFieldType(0) != "Section"){
	// Custom header or FICC header
	return true;
}
else if(header.GetFieldCount() == 4) {
	// Input/output header
    appheader = If(header.GetSection(1).$size > 0, 
                   header.GetSection(1)[0], 
                   header.GetSection(2)[0]);
}
else {
    appheader = header.GetSection(1)[0];
}
def basicheader = header.GetSection(0)[0];
def ioIdentifier = appheader.GetString("Input_Output_Identifier");
def mir = (If(ioIdentifier == "O", 
           GetString(appheader, "Message Input Reference"), 
           ""));
def receiverAddress = (If(ioIdentifier == "I", 
                       GetString(appheader, "Receiver's Address"), 
                       ""));
def senderCountryCode = (If(ioIdentifier == "I", 
                         Mid(basicheader.GetString("LT Identifier"), 4, 2), 
                         Mid(mir, 10, 2)));
def receiverCountryCode = (If(ioIdentifier == "I", 
                           Mid(receiverAddress, 4, 2), 
                           Mid(basicheader.GetString("LT Identifier"), 4, 2)));
def countryList = ["AD", "AT", "BE", "BG", "BV", "CH", "CY", 
      "CZ", "DE", "DK", "EE", "ES", "FI", "FR", "GB", "GF", 
      "GI", "GP", "GR", "HR", "HU", "IE", "IL", "IS", "IT", "LI", "LT", 
      "LU", "LV", "MC", "MQ", "MT", "NL", "NO", "PL", "PM", 
      "PT", "RE", "RO", "SE", "SI", "SJ", "SK", "SM", "TF", "VA"];                           
If(In(senderCountryCode, countryList) && 
     In(receiverCountryCode, countryList), 
   		If(F57A.$size==0 || In(Mid(F57A[0].Identifier_Code, 4, 2), countryList), IsISOIBAN($value), true), 
   true);
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D19</error-code>
						<actionmessage><![CDATA["If the country codes of the Sender's and the Receiver's BICs are within the following list: AD, AT, BE, BG, BV, CH, CY, CZ, DE, DK, EE, ES, FI, FR, GB, GF, GI, GP, GR, HR, HU, IE, IL, IS, IT, LI, LT, LU, LV, MC, MQ, MT, NL, NO, PL, PM, PT, RE, RO, SE, SI, SJ, SK, SM, TF and VA, then the following apply: a) if field 57A is not present, the IBAN (ISO-13616) is mandatory in subfield Account of field 59a; b) if field 57A is present and the country code of the BIC in 57A is within the above list of country codes, the IBAN (ISO-13616) is mandatory in subfield Account of field 59a. In all other cases, the presence of the IBAN (ISO-13616) is optional and its format is not validated in subfield Account of field 59a."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F23E-A</name>
						<fieldname>23E.Additional_Information</fieldname>
						<formula><![CDATA[F23E.Instruction_Code == "REPA"]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D97</error-code>
						<actionmessage><![CDATA["In field 23E, Additional Information is only allowed when Instruction Code consists of the following code: REPA."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F23E-B</name>
						<fieldname>23E.Instruction_Code</fieldname>
						<formula><![CDATA[If($value == "REPA", 
   !FieldValueExistsInAtLeastOne(F23E, "Instruction_Code", "CORT"), 
   true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D67</error-code>
						<actionmessage><![CDATA["When field 23E is used more than once, the following combination is not allowed: REPA with CORT."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F23E-C</name>
						<fieldname>23E</fieldname>
						<formula><![CDATA[F23E.$size == SecGroup(F23E, "Instruction_Code").$size]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E46</error-code>
						<actionmessage><![CDATA["If field 23E is repeated, the same code word must not be present more than once."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F53a-A</name>
						<fieldname>53a.FormatOption</fieldname>
						<formula><![CDATA[If($value == 'B', IsNotNull(F53a.Party_Identifier), true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E04</error-code>
						<actionmessage><![CDATA["If field 53a is present with option B, Party Identifier must be present in field 53B."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F59a-A</name>
						<fieldname>59a</fieldname>
						<formula><![CDATA[IsNotNull(F59a.Account)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E10</error-code>
						<actionmessage><![CDATA["In field 59a, Account must be present."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F71G-A</name>
						<fieldname>71G.Amount</fieldname>
						<formula><![CDATA[$value > 0]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D57</error-code>
						<actionmessage><![CDATA["If field 71G is present, the amount must not equal '0'."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F72-A</name>
						<fieldname>72.Narrative_-_Structured_Format</fieldname>
						<formula><![CDATA[VerifyField72NarrativeText($value)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T32</error-code>
						<actionmessage><![CDATA["The first line of field 72 should be of the following format: /8c/[additional information]. The remaining lines (2 - 6) should be of the following format: [//continuation of additional information] or [/8c/[additional information]]."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F72-B</name>
						<fieldname>72.Narrative_-_Structured_Format</fieldname>
						<formula><![CDATA[def ActualValue = replace($value, "\r\n", "\n");
$startIndex = (If(StartsWith(ActualValue, "/INS/"), 0, FindFirst(ActualValue, "\n/INS/")));
$codeLen = (If(StartsWith(ActualValue, "/INS/"), 5, 6));
$endIndex = (If($startIndex == -1, -1, FindFirst(ActualValue, "\n", $startIndex + $codeLen)));
$endIndex = (If(($startIndex > -1 && $endIndex == -1), Length(ActualValue), $endIndex));
If($startIndex > -1 && $endIndex > -1, 
   IsValidBIC(Mid(ActualValue, $startIndex + $codeLen, $endIndex - ($startIndex + $codeLen))), 
   true);]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T27</error-code>
						<actionmessage><![CDATA["In field 72, if the code /INS/ is used at the beginning of a line, it must be followed by a valid BIC and be the only information on that line."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F72-C</name>
						<fieldname>72.Narrative_-_Structured_Format</fieldname>
						<formula><![CDATA[def ActualValue = replace($value, "\r\n", "\n");
$index = FindFirst(ActualValue, "\n/INS/");
If(StartsWith(ActualValue, "/INS/"), 
   $index == -1, 
   If($index > -1, FindFirst(ActualValue, "\n/INS/", $index + 7) == -1, true));]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T47</error-code>
						<actionmessage><![CDATA["In field 72, if the code /INS/ is present at the beginning of a line, it must not be used again at the beginning of any other line."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F72-D</name>
						<fieldname>72.Narrative_-_Structured_Format</fieldname>
						<comment><![CDATA["In field 72, the codes /REJT/ or /RETN/ must not be used."]]></comment>
						<formula><![CDATA[def ActualValue = replace($value, "\r\n", "\n");
!StartsWith(ActualValue, "/REJT/") && 
  !StartsWith(ActualValue, "/RETN/") && 
  FindFirst(ActualValue, "\n/REJT/") == -1 && 
  FindFirst(ActualValue, "\n/RETN/") == -1]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T81</error-code>
						<actionmessage><![CDATA["In field 72, the codes /REJT/ or /RETN/ must not be used."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F72-E</name>
						<fieldname>72.Narrative_-_Structured_Format</fieldname>
						<comment><![CDATA["Field 72 must not include ERI, i.e. the codes /OCMT/ or /CHGS/ must not be used."]]></comment>
						<formula><![CDATA[def ActualValue = replace($value, "\r\n", "\n");
!StartsWith(ActualValue, "/OCMT/") && 
  !StartsWith(ActualValue, "/CHGS/") && 
  FindFirst(ActualValue, "\n/OCMT/") == -1 && 
  FindFirst(ActualValue, "\n/CHGS/") == -1]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T82</error-code>
						<actionmessage><![CDATA["Field 72 must not include ERI, i.e. the codes /OCMT/ or /CHGS/ must not be used."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F23E-D</name>
						<fieldname>23E</fieldname>
						<formula><![CDATA[$codesOrder = "SDVA,INTC,REPA,CORT";
$prevCodeIndex = -1;
for ($i=0; $i < F23E.$size; $i = $i + 1) {
   $codeIndex = FindFirst($codesOrder, F23E[$i].Instruction_Code);
   if ($codeIndex < $prevCodeIndex) {
      return false;
   }
   else {
      $prevCodeIndex = $codeIndex;
   }
} 
return true;]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D98</error-code>
						<actionmessage><![CDATA["If field 23E is repeated, the codes must appear in the following order: SDVA,INTC,REPA,CORT."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F50a-A</name>
						<fieldname>50a.Party_Identifier</fieldname>
						<comment><![CDATA[F50a-A
With option F, subfield 1 (Party Identifier), one of the following line formats must be used (Error code(s): T54):
Line format 1 :/34x (Account)
Line format 2 :4!a/2!a/27x (Code)(Country Code)(Identifier)]]></comment>
						<formula><![CDATA[Implies(F50a.FormatOption == 'F', Verify50FPartyIdFormat($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T54</error-code>
						<actionmessage><![CDATA["Invalid 'Party Identifier' value. One of the following line formats must be used: /34x (Account) or 4!a/2!a/27x (Code)(Country Code)(Identifier)"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F50a-B</name>
						<fieldname>50a.Party_Identifier</fieldname>
						<comment><![CDATA[F50a-B
In option F, when subfield 1 Party Identifier is used with the (Code)(Country Code)(Identifier) format, one of the following codes must be used (Error code(s): T55): ARNU, CCPT, CUST, DRLC, EMPL, NIDN, SOSE and TXID."
]]></comment>
						<formula><![CDATA[Implies(F50a.FormatOption == 'F', Verify50FPartyIdCode($value))
/* get the code from party identifier if format is 4!a/2!a/27x */   ]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T55</error-code>
						<actionmessage><![CDATA["Invalid 'Party Identifier' value. When 'Party Identifier' is used with the format (Code)(Country Code)(Identifier), one of following codes must be used: ARNU, CCPT, CUST, DRLC, EMPL, NIDN, SOSE and TXID."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F50a-C</name>
						<fieldname>50a.Party_Identifier</fieldname>
						<comment><![CDATA[F50a-D
In option F, subfield 1 (Party Identifier) used with the (Code)(Country Code)(Identifier) format: Country Code must be a valid ISO country code (Error code(s): T73).
]]></comment>
						<formula><![CDATA[Implies(F50a.FormatOption == 'F', Verify50FPartyIdCountryCode($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T73</error-code>
						<actionmessage><![CDATA["Invalid 'Party Identifier' value. In option F, subfield 1 (Party Identifier) used with the (Code)(Country Code)(Identifier) format: Country Code must be a valid ISO country code."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F50a-D</name>
						<fieldname>50a.Name_&amp;_Address</fieldname>
						<comment><![CDATA[F50a-C
With option F, subfield 2 (Name and Address), the following line format must be used for all lines: 1!n/33x (Number)(Details). (Error code(s): T54).]]></comment>
						<formula><![CDATA[Implies(F50a.FormatOption == 'F', Verify50FNmandAdrFormat($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T54</error-code>
						<actionmessage><![CDATA["Invalid 'Name and Address' value. With option F, subfield 2 (Name and Address), the following line format must be used for all lines :1!n/33x (Number)(Details)."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F50a-E</name>
						<fieldname>50a.Name_&amp;_Address</fieldname>
						<comment><![CDATA[F50a-E
 With option F - subfield 2 (Name and Address), should start with Number 1 to 8 and it should follow the line formatting rules as specified in the SWIFT spec (Error code(s): T56).]]></comment>
						<formula><![CDATA[Implies(F50a.FormatOption == 'F', Verify50FNmandAdrLines2($value, F50a.Party_Identifier))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T56</error-code>
						<actionmessage><![CDATA["Invalid 'Name and Address' value. With option F - subfield 2 (Name and Address), should start with Number 1 to 8 and it should follow the line formatting rules as specified in the SWIFT spec."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F50a-F</name>
						<fieldname>50a.Name_&amp;_Address</fieldname>
						<comment><![CDATA[F50a-F
Number 4 must be followed by a valid date in the format YYYYMMDD and this date, local to the sender, must not be later than the date on which the message is successfully sent to SWIFT (Error code(s): T50).
]]></comment>
						<formula><![CDATA[Implies(F50a.FormatOption == 'F', Verify50FNmandAdrDate($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T50</error-code>
						<actionmessage><![CDATA["Invalid 'Name and Address' value. Number 4 must be followed by a valid date in the format YYYYMMDD and this date, local to the sender, must not be later than the date on which the message is successfully sent to SWIFT."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F50a-G</name>
						<fieldname>50a.Name_&amp;_Address</fieldname>
						<comment><![CDATA[F50a-G
Numbers 3, 5, 6 and 7 must be followed by a valid ISO country code
(Error code(s): T73).]]></comment>
						<formula><![CDATA[Implies(F50a.FormatOption == 'F',Verify50FNmandAdrCtryCode2($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T73</error-code>
						<actionmessage><![CDATA["Invalid 'Name and Address' value. Numbers 3, 5, 6 and 7 must be followed by a valid ISO country code."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>ERI</name>
						<comment><![CDATA["For specific message types, an European currency must not be used as the currency of settlement after a cut-off date (Error Code: E76)."]]></comment>
						<formula><![CDATA[applyERIValidation(F32A[0], "Date", F32A[0], "Currency")]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E76</error-code>
						<actionmessage><![CDATA["For specific message types, an European currency must not be used as the currency of settlement after a cut-off date (Error Code: E76)."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F59a-B</name>
						<fieldname>59a.Account</fieldname>
						<comment><![CDATA[The IBAN must be a valid IBAN (ISO-13616) and Country Code must be a valid ISO country code]]></comment>
						<formula><![CDATA[def header = $this.Header;
def appheader;

if(header.GetFieldCount() == 0) {
	// No Header
	return true;
}
if(header.GetFieldType(0) != "Section"){
	// Custom header or FICC header
	return true;
}
else if(header.GetFieldCount() == 4) {
	// Input/output header
    appheader = If(header.GetSection(1).$size > 0, 
                   header.GetSection(1)[0], 
                   header.GetSection(2)[0]);
}
else {
    appheader = header.GetSection(1)[0];
}
def basicheader = header.GetSection(0)[0];
def ioIdentifier = appheader.GetString("Input_Output_Identifier");
def mir = (If(ioIdentifier == "O", 
           GetString(appheader, "Message Input Reference"), 
           ""));
def receiverAddress = (If(ioIdentifier == "I", 
                       GetString(appheader, "Receiver's Address"), 
                       ""));
def senderCountryCode = (If(ioIdentifier == "I", 
                         Mid(basicheader.GetString("LT Identifier"), 4, 2), 
                         Mid(mir, 10, 2)));
def receiverCountryCode = (If(ioIdentifier == "I", 
                           Mid(receiverAddress, 4, 2), 
                           Mid(basicheader.GetString("LT Identifier"), 4, 2)));
def countryList = ["AD", "AT", "BE", "BG", "BV", "CH", "CY", 
      "CZ", "DE", "DK", "EE", "ES", "FI", "FR", "GB", "GF", 
      "GI", "GP", "GR", "HR", "HU", "IE", "IS", "IT", "LI", "LT", 
      "LU", "LV", "MC", "MQ", "MT", "NL", "NO", "PL", "PM", 
      "PT", "RE", "RO", "SE", "SI", "SJ", "SK", "SM", "TF", "VA"];                           
If(In(senderCountryCode, countryList) && 
     In(receiverCountryCode, countryList), 
   		If(F57A.$size==0 || In(Mid(F57A[0].Identifier_Code, 4, 2), countryList), IsISOCountryCode(GetIBANCountryCode($value)), true), 
   true);
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T73</error-code>
						<actionmessage><![CDATA["The IBAN must be a valid IBAN (ISO-13616) and Country Code must be a valid ISO country code (Error code(s): T73)."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F-32A</name>
						<fieldname>32A.Currency</fieldname>
						<formula><![CDATA[!In($value, "XAU", "XAG", "XPD", "XPT")]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C08</error-code>
						<actionmessage><![CDATA["The codes XAU, XAG, XPD and XPT are not allowed, as these are codes for commodities for which the category 6 commodities messages must be used."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F-59a-A</name>
						<fieldname>59a.Name_&amp;_Address_Details</fieldname>
						<formula><![CDATA[Implies(F59a.FormatOption == 'F', Verify59FNmandAdrDtlLines($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T56</error-code>
						<actionmessage><![CDATA["Invalid 'Name_and_Address_Details' value. With option F - subfield 2 (Name_and_Address_Details), should start with Number 1 to 3 and it should follow the line formatting rules as specified in the SWIFT spec for field 59F."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F-59a-B</name>
						<fieldname>59a.Name_&amp;_Address_Details</fieldname>
						<formula><![CDATA[Implies(F59a.FormatOption == 'F', Verify59FNmandAdrDtlFormat($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T56</error-code>
						<actionmessage><![CDATA["Invalid 'Name and Address Details' value. With option F, subfield 2 (Name and Address Details), the following line format must be used for all lines :1!n/33x (Number)(Name and Address Details)."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F-59a-C</name>
						<fieldname>59a.Name_&amp;_Address_Details</fieldname>
						<formula><![CDATA[Implies(F59a.FormatOption == 'F', Verify59FNmandAdrDtlCtryCode($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T73</error-code>
						<actionmessage><![CDATA["Invalid 'Name_and_Address_Details' value. Number 3 must be followed by a valid ISO country code."]]></actionmessage>
					</fieldvalidation>
				</fieldvalidations>
			</datavalidationrules>
			<tlrvalidationrules>
				<fieldvalidations>
				</fieldvalidations>
			</tlrvalidationrules>
		</validationrules>
		<elementproperties>
			<propertymap>
				<property name="codegen.java.properties">
					<value>
						<propertymap type="com.tplus.transform.design.PropertiesDef">
							<property name="Java Package Name" value="com.transform.external.%e"/>
							<property name="Jar Name" value="%c.jar"/>
							<property name="Manifest Entries" value="transformrt.jar swiftrt.jar swiftresources.jar"/>
							<property name="Data Source" value=""/>
						</propertymap>
					</value>
				</property>
			</propertymap>
		</elementproperties>
	</externalmessage>
	<externalmessage xsi:type="SwiftFormat" type="SwiftFormat" version="5.1.2" rulename="MT104_2016" formattype="SwiftFormat" >
		<description><![CDATA[The MT 104 is used to convey customer direct debit instructions and can be: 

a) sent by a non-financial institution account owner, or a party authorised by the account owner, to a financial institution to request the direct debit of the debtor's account with the receiver or with another financial institution, and subsequently to credit the creditor's account maintained by the receiver or one of its branches. 

b) sent by the creditor's bank, or another financial institution, to the debtor's bank, or another financial institution, on behalf of the creditor/instructing party to order the debit of the debtor's account and to collect payment from this account. 

c) sent by a non-financial institution account owner, or a party authorised by the account owner, to a forwarding financial institution to request the direct debit of the debtor's account and subsequently to credit the creditor's account serviced by a financial institution in another country. 

d) sent between two financial institutions on behalf of a creditor/instructing party to request the direct debit of the debtor's account in the Receiver's country and subsequently to credit the creditor's account maintained by the Receiver or one of its branches. 

]]></description>
		<standard>SWIFT</standard>
		<standard-name>MT104</standard-name>
		<standard-version>SRG 2016</standard-version>
		<standard-release-qualifier>20160308</standard-release-qualifier>
		<standard-category>Customer Payments &amp; Cheques</standard-category>
		<standard-detailed-name>Direct Debit and Request for Debit Transfer Message</standard-detailed-name>
		<version>1.0</version>
		<SwiftFields>
			<customizable>true</customizable>
			<modifiable>false</modifiable>
			<SwiftMessageType>User</SwiftMessageType>
			<max-length>10000</max-length>
			<HeaderAndTrailerType>SWIFT_INPUT_OUTPUT_HEADER</HeaderAndTrailerType>
			<Header>
				<fields>
					<field>
						<name>Basic Header</name>
						<description><![CDATA[The Basic Header is given in Block 1 of a SWIFT message and is the only header that appears on all messages. The Basic Header provides the fundamental reference for any particular message and is almost always automatically built by the CBT.
The Basic Header has the same format for both input and output messages. However, the information contained in the Basic Header is relative to the sender when the message is input but relative to the receiver when the same message is output.]]></description>
						<datatype>Section</datatype>
						<required>true</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Application Identifier</name>
								<description><![CDATA[The Application Identifier identifies the application within which the message is being sent or received. The available options are:

F = FIN All user-to-user, FIN system and FIN service messages 
A = GPA Most GPA system and service messages 
L = GPA Certain GPA service messages, for example, LOGIN, LAKs, ABORT 

These values are automatically assigned by the SWIFT system and the user's CBT, but the user should be aware of their existence and significance
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Service Identifier</name>
								<description><![CDATA[The Service Identifier consists of 2 numeric characters. It identifies the type of data that is being sent or received and, in doing so, whether the message which follows is one of the following:

a user-to-user message

a system message

a service message, for example, a session control command, such as SELECT, or a logical acknowledgement, such as ACK/SAK/UAK

Users will be primarily concerned with identifier '01' which applies to all GPA and FIN system and user-to-user messages. Other values include: '21' for message acknowledgements such as ACK/NAK, UAK/UNK, '03' for SELECT commands, and 
so on]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>2</length>
							</field>
							<field>
								<name>LT Identifier</name>
								<description><![CDATA[This 12-character SWIFT address, given in the Basic Header Block, is the address of the sending LT for input messages or of the receiving LT for output messages, and includes the Branch Code.

In the Basic Header, the LT Code within the LT Identifier is specific to the LT that has established the session in which the message is being transmitted, that is the sending LT for input messages or the receiving LT for output messages.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>12</length>
							</field>
							<field>
								<name>Session Number</name>
								<description><![CDATA[The Session Number identifies the session in which the message was transmitted. Within the Basic Header, the 4-digit Session Number is the user's current GPA or FIN Session Number.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Sequence Number</name>
								<description><![CDATA[The sequence number always consists of 6 digits. It is the ISN of the sender's current input session or the OSN of the receiver's current output session.

Note: The sequence number is not present in those messages with an Application Identifier of 'L' (for example LOGIN). The sequence number is, however, a key element in the processing of retrievals. Therefore, LOGINs and attempted LOGINs are not retrievable
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>6</length>
							</field>
						</fields>
					</field>
					<field>
						<name>Application Header Input</name>
						<description><![CDATA[The Application Header of a SWIFT message provides information about the message itself.

The Application Header is given in Block 2 of a SWIFT message. It differs according to whether the message is a GPA or a FIN message and whether the Application Header is part of an input or an output message.

]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Input/Output Identifier</name>
								<description><![CDATA[For an input message, the Input/Output Identifier consists of the single letter 'I'.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Message Type</name>
								<description><![CDATA[The Message Type consists of 3 digits which define the MT number of the message being input. The example used above is for an MT 100 Customer Transfer]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>3</length>
							</field>
							<field>
								<name>Receiver's Address</name>
								<description><![CDATA[This address is the 12-character SWIFT address of the receiver of the message, but with a LT Code of 'X'. It defines the destination to which the message should be sent.

The system will replace the 'X' with a specific LT Code on delivery of the message according to the delivery control exercised by the receiving user.

The Branch Code is mandatory and will be validated. The default of 'XXX' may be used, as in the example above.

Unless otherwise documented, system messages addressed to the SWIFT system itself should be addressed to SWFTXXXXXXXX.

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>12</length>
							</field>
							<field>
								<name>Message Priority</name>
								<description><![CDATA[This character, used within FIN Application Headers only, defines the priority with which a message is delivered. The possible values are:

S = System

U = Urgent

N = Normal

Message Priority 'S' must be used for user-to-system messages; for user-to-user messages either 'U' or 'N' can be used. In the absence of user-specified delivery criteria, system messages are always delivered first, followed by urgent priority messages and then normal priority messages.

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Delivery Monitoring</name>
								<description><![CDATA[Delivery monitoring options apply only to FIN user-to-user messages, and allow the sender of a message to request:

automatic MT 011 Delivery Notification once the message has been delivered

automatic MT 010 Non-Delivery Warning if a message is not delivered within the specified obsolescence period (see below)

both, or neither, options. This may be requested on an individual message basis.

The chosen option is expressed as a single digit:

1 = Non-Delivery Warning

2 = Delivery Notification

3 = Non-Delivery Warning and Delivery Notification. 
If the message has priority 'U' then the user must request delivery monitoring option '1' or '3'. If the message has priority 'N', the user can request delivery monitoring option '2', or, by leaving the option blank, no delivery monitoring.
]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>1</length>
							</field>
							<field>
								<name>Obsolescence Period</name>
								<description><![CDATA[The obsolescence period defines the period of time after which a Delayed Message (DLM) trailer is added to a FIN user-to-user message when the message is delivered. For urgent priority messages, it is also the period of time after which, if the message remains undelivered, a Non-Delivery Warning is generated.

The values for the obsolescence period are 003 (15 minutes) for 'U' priority, and 020 (100 minutes) for 'N' priority. An obsolescence period can only be specified when delivery monitoring has been requested (option 1 or 3 for urgent priority messages, option 2 for normal priority messages). If no delivery monitoring has been requested, and an obsolescence period is specified, the message will be NAKed with error code H25.

GPA input Application Headers are similar to their FIN equivalents except that GPA messages do not specify priority, delivery monitoring, nor obsolescence period.

]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>3</length>
							</field>
						</fields>
					</field>
					<field>
						<name>Application Header Output</name>
						<description><![CDATA[The Application Header of a SWIFT message provides information about the message itself.

The Application Header is given in Block 2 of a SWIFT message. It differs according to whether the message is a GPA or a FIN message and whether the Application Header is part of an input or an output message.

]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Input/Output Identifier</name>
								<description><![CDATA[For an input message, the Input/Output Identifier consists of the single letter 'I'.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Message Type</name>
								<description><![CDATA[Three digits indicating the Message Type.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>3</length>
							</field>
							<field>
								<name>Input Time</name>
								<description><![CDATA[The first occurrence of the time field contains the system time and date. This is the generation time in Greenwich Mean Time (GMT).
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Message Input Reference</name>
								<description><![CDATA[The input MIR.

If the message is generated by the system, the input time is the generation time (in GMT) and the input MIR is the system MIR

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>28</length>
							</field>
							<field>
								<name>Output Date</name>
								<description><![CDATA[The output date, local to the receiver.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>6</length>
							</field>
							<field>
								<name>Output Time</name>
								<description><![CDATA[The second occurrence of the time field contains the output time and date. This is in a time local to the receiver.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Message Priority</name>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
						</fields>
					</field>
					<field>
						<name>User Header</name>
						<description><![CDATA[The User Header is an optional header available within FIN for user-to-user messages only. It appears in Block 3 of a SWIFT message, and allows users to provide their own reference within the headers for a particular message.

A User Header can only be assigned by the sender of a message and, if assigned, will always appear on the output message copy. Relevant parts of the User Header will be repeated in related system messages and acknowledgements.

Block 3 may contain tag 113, defining banking priorities, and tag 108, which is a user reference. The user reference part of the User Header may be used as one of the selection criteria when retrieving a message.

The optional field tags 103 and 115 are also used in Block 3 for the FIN Copy service. The order of tags, when present, is 103, 113, 108 and 115.

An optional field tag 119 can be included in Block 3 of certain messages to specify that different validation rules are to be applied. Agreed code words in field 119 indicate what validation rules SWIFT will apply. If field 119 is present, it should appear after field 108
]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Service Identifier</name>
								<description><![CDATA[For any message which the user submits to a FIN Copy service, Block 3 requires an additional field 103 which contains a three-character Service Identifier unique to a specific FIN Copy service. By using a unique identifier it is possible to support access to multiple services within the same CBT.
]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>3</length>
								<tag>103</tag>
							</field>
							<field>
								<name>Banking Priority</name>
								<description><![CDATA[Assigned by the sender of the message.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>4</length>
								<tag>113</tag>
							</field>
							<field>
								<name>Message User Reference</name>
								<description><![CDATA[Assigned by the sender of the message.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>16</length>
								<tag>108</tag>
							</field>
							<field>
								<name>Validation Flag</name>
								<description><![CDATA[Indicates whether a special validation needs to be performed by FIN. The following are examples of the values this field may take. Please note that this list is subject to change:

ISITC indicates validation of ISITC Standards. Only to be used with MT 521 and MT 523.

REMIT identifies the presence of field 77T. Only to be used in MT 103.

RFDD indicates that the message is a request for direct debit. Only to be used in MT 104.

STP indicates that the message is validated according to straight through processing principles. Only to be used in MT 103.

]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>119</tag>
							</field>
							<field>
								<name>Balance checkpoint date and time</name>
								<description><![CDATA[This field contains the balance checkpoint date and time consisting of a date (YYMMDD) and a time (HHMMSS[ss], where 'ss' indicates hundredths of a second). The MI that is subscribed to MIRS will always copy this reference from field tag 13G of the last MT298/091 that it sent into the related MT 298/093 or MT 097 that it generates. ]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>423</tag>
							</field>
							<field>
								<name>Message Input Reference</name>
								<description><![CDATA[This field contains the MIR of the payment message that is related to the notification messages in which this field is present. The MI that is subscribed to MIRS will copy it from the received payment message. In a FINCopy scenario, this field must contain the MIR of the related MT 096]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>106</tag>
							</field>
							<field>
								<name>Related Reference</name>
								<description><![CDATA[This field contains the reference of the payment that is related to the notification messages in which this field is present. The payment itself was not the result of a FIN message. The value of this field must correspond to the related reference (field 21) in the MT298/093. The format of field 424 is 16x.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>424</tag>
							</field>
							<field>
								<name>Service Type Identifier</name>
								<description><![CDATA[This field identifies the applicable global payment service type. The format of field 111 is 3!n.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>111</tag>
							</field>
							<field>
								<name>Unique End-To-End Transaction Reference</name>
								<description><![CDATA[This field provides an end-to-end reference across a payment transaction. The format of field 121 is 36!x.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>121</tag>
							</field>
							<field>
								<name>Addressee Information</name>
								<description><![CDATA[Tag 115 is only valid for output messages. Information from Central Institution to the receiver of payment message. Information is input in the MT 097 FIN Copy Message Authorisation/Refusal Notification in Y-Copy mode.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>115</tag>
							</field>
							<field>
								<name>Payment Release Information Receiver (FINInform Services)</name>
								<description><![CDATA[Tag 165 is only valid for output messages. This field contains information from the server destination to the receiver of payment message. It is only available for use in FINInform services that operate in Y-copy mode.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>165</tag>
							</field>
							<field>
								<name>Receiver Information</name>
								<description><![CDATA[Tag 433 is only valid for output messages. The screening service inputs information in the MT 097 FINCopy Message Authorisation/Refusal Notification, in Y-Copy mode. FINCopy copies the information to the receiver of the screened message.
				    The following values can be present in this field:
				      AOK: message automatically released by screening service
				      FPO: compliance officer has flagged the screening result as false positive
				      NOK: compliance officer has flagged the screened message as suspect
				    The code word can optionally be followed by additional information (up to 20 characters from the x character set).]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>433</tag>
							</field>
						</fields>
					</field>
				</fields>
			</Header>
			<Data>
				<Fields>
					<SwiftSequence Name="A">
						<Name>A</Name>
						<Description><![CDATA[General Information]]></Description>
						<Mandatory>true</Mandatory>
						<Repeating>false</Repeating>
						<Fields>
							<SwiftField Name="20">
								<SwiftFieldDef Name="20">
									<Generic>false</Generic>
									<Description><![CDATA[Sender's Reference]]></Description>
									<Option Name="">
										<Format><![CDATA[16x]]></Format>
										<Specification><![CDATA[(Reference)]]></Specification>
										<Description><![CDATA[Sender's Reference]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options> </Options>
								<Validations>
									<SubField Name="Reference">
										<Validation>
											<Options> </Options>
											<ErrorCode>T26</ErrorCode>
											<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive slashes '//' (Error code(s): T26) .]]></Comment>
											<ValidationPattern xsi:type="T26" Type="T26">
												<Type>T26</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="21R">
								<SwiftFieldDef Name="21">
									<Generic>false</Generic>
									<Description><![CDATA[Customer Specified Reference]]></Description>
									<Option Name="R">
										<Format><![CDATA[16x]]></Format>
										<Specification><![CDATA[(Reference)]]></Specification>
										<Description><![CDATA[Customer Specified Reference]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>R</Options>
								<Validations>
									<SubField Name="Reference">
										<Validation>
											<Options>R</Options>
											<ErrorCode>T26</ErrorCode>
											<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive slashes '//' (Error code(s): T26) .]]></Comment>
											<ValidationPattern xsi:type="T26" Type="T26">
												<Type>T26</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="23E">
								<SwiftFieldDef Name="23">
									<Generic>false</Generic>
									<Description><![CDATA[Instruction Code]]></Description>
									<Option Name="E">
										<Format><![CDATA[4!c[/30x]]]></Format>
										<Specification><![CDATA[(Type) (Additional Information)]]></Specification>
										<Description><![CDATA[Instruction Code]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>E</Options>
								<Validations>
									<SubField Name="Type">
										<Validation>
											<Options>E</Options>
											<ErrorCode>T47</ErrorCode>
											<Comment><![CDATA[Type must contain one of the following codes (Error code(s): T47) :]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="AUTH">
														<DetailedName>Pre-authorised direct debit</DetailedName>
														<Description>This message contains pre-authorised direct debit instructions to be processed according to the terms and conditions of the direct debit contract and/or mandate.</Description>
													</Code>
													<Code Name="NAUT">
														<DetailedName>Non pre-authorised</DetailedName>
														<Description>This message contains non pre-authorised direct debit instructions.</Description>
													</Code>
													<Code Name="OTHR">
														<DetailedName>Other</DetailedName>
														<Description>Used for bilaterally agreed codes/information. The actual bilateral code/information will be specified in the second subfield.</Description>
													</Code>
													<Code Name="RFDD">
														<DetailedName>Request for Direct Debit</DetailedName>
														<Description>This message contains request for direct debit instructions.</Description>
													</Code>
													<Code Name="RTND">
														<DetailedName>Returned</DetailedName>
														<Description>A previously sent MT 104 is being returned, ie, rejected, reversed or revoked.</Description>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="21E">
								<SwiftFieldDef Name="21">
									<Generic>false</Generic>
									<Description><![CDATA[Registration Reference]]></Description>
									<Option Name="E">
										<Format><![CDATA[35x]]></Format>
										<Specification><![CDATA[(Reference)]]></Specification>
										<Description><![CDATA[Registration Reference]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>E</Options>
							</SwiftField>
							<SwiftField Name="30">
								<SwiftFieldDef Name="30">
									<Generic>false</Generic>
									<Description><![CDATA[Requested Execution Date]]></Description>
									<Option Name="">
										<Format><![CDATA[6!n]]></Format>
										<Specification><![CDATA[(Date)]]></Specification>
										<Description><![CDATA[Requested Execution Date]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options> </Options>
								<Validations>
									<SubField Name="Date">
										<Validation>
											<Options> </Options>
											<ErrorCode>T50</ErrorCode>
											<Comment><![CDATA[Date must be a valid date expressed as YYMMDD (Error code(s): T50) .]]></Comment>
											<ValidationPattern xsi:type="DATE" Type="DATE">
												<Type>DATE</Type>
												<Format>yyMMdd</Format>
												<value-date>true</value-date>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="51A">
								<SwiftFieldDef Name="51">
									<Generic>false</Generic>
									<Description><![CDATA[Sending Institution]]></Description>
									<Option Name="A">
										<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
										<Description><![CDATA[Sending Institution]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>A</Options>
								<Validations>
									<SubField Name="CreditDebit">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T51</ErrorCode>
											<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="C">
														<DetailedName>Credit</DetailedName>
													</Code>
													<Code Name="D">
														<DetailedName>Debit</DetailedName>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="50a">
								<SwiftFieldDef Name="50">
									<Generic>false</Generic>
									<Description><![CDATA[Instructing Party]]></Description>
									<Option Name="C">
										<Format><![CDATA[(4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(Identifier Code)]]></Specification>
										<Description><![CDATA[Instructing Party]]></Description>
									</Option>
									<Option Name="L">
										<Format><![CDATA[35x]]></Format>
										<Specification><![CDATA[(Party Identifier)]]></Specification>
										<Description><![CDATA[Instructing Party]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>C, L</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>C</Options>
											<ErrorCode>T27, T28, T29, T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="50b">
								<SwiftFieldDef Name="50">
									<Generic>false</Generic>
									<Description><![CDATA[Creditor]]></Description>
									<Option Name="A">
										<Format><![CDATA[([/34xCRLF])(4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(Account) (Identifier Code)]]></Specification>
										<Description><![CDATA[Creditor]]></Description>
									</Option>
									<Option Name="K">
										<Format><![CDATA[([/34xCRLF])(4*35x)]]></Format>
										<Specification><![CDATA[(Account) (Name & Address)]]></Specification>
										<Description><![CDATA[Creditor]]></Description>
									</Option>
								</SwiftFieldDef>
								<Suffix>b</Suffix>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>A, K</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27, T28, T29, T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="52a">
								<SwiftFieldDef Name="52">
									<Generic>false</Generic>
									<Description><![CDATA[Creditor's Bank]]></Description>
									<Option Name="A">
										<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
										<Description><![CDATA[Creditor's Bank]]></Description>
									</Option>
									<Option Name="C">
										<Format><![CDATA[/34x]]></Format>
										<Specification><![CDATA[(Party Identifier)]]></Specification>
										<Description><![CDATA[Creditor's Bank]]></Description>
									</Option>
									<Option Name="D">
										<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
										<Description><![CDATA[Creditor's Bank]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>A, C, D</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27, T28, T29, T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
										<Validation>
											<Options>A</Options>
											<ErrorCode>C05</ErrorCode>
											<Comment><![CDATA[Identifier Code must not be a BEI. Please refer to the latest version of the BIC Directory - Corporations for more information about BEIs. This error code applies to all types of BICs referenced in a FIN message including SWIFT BICs, non-SWIFT BICs, Masters, Synonyms, Live destinations and Test & Training destinations . (Error code(s): C05) .]]></Comment>
											<ValidationPattern xsi:type="C05" Type="C05">
												<Type>C05</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="CreditDebit">
										<Validation>
											<Options>A, D</Options>
											<ErrorCode>T51</ErrorCode>
											<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="C">
														<DetailedName>Credit</DetailedName>
													</Code>
													<Code Name="D">
														<DetailedName>Debit</DetailedName>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="26T">
								<SwiftFieldDef Name="26">
									<Generic>false</Generic>
									<Description><![CDATA[Transaction Type Code]]></Description>
									<Option Name="T">
										<Format><![CDATA[3!c]]></Format>
										<Specification><![CDATA[(Type)]]></Specification>
										<Description><![CDATA[Transaction Type Code]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>T</Options>
							</SwiftField>
							<SwiftField Name="77B">
								<SwiftFieldDef Name="77">
									<Generic>false</Generic>
									<Description><![CDATA[Regulatory Reporting]]></Description>
									<Option Name="B">
										<Format><![CDATA[3*35x]]></Format>
										<Specification><![CDATA[(Narrative)]]></Specification>
										<Description><![CDATA[Regulatory Reporting]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>B</Options>
							</SwiftField>
							<SwiftField Name="71A">
								<SwiftFieldDef Name="71">
									<Generic>false</Generic>
									<Description><![CDATA[Details of Charges]]></Description>
									<Option Name="A">
										<Format><![CDATA[3!a]]></Format>
										<Specification><![CDATA[(Code)]]></Specification>
										<Description><![CDATA[Details of Charges]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>A</Options>
								<Validations>
									<SubField Name="Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T08</ErrorCode>
											<Comment><![CDATA[One of the following codes must be used (Error code(s): T08) :]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="BEN">
														<DetailedName>Debtor</DetailedName>
														<Description>All transaction charges are to be borne by the debtor.</Description>
													</Code>
													<Code Name="OUR">
														<DetailedName>Our customer charged</DetailedName>
														<Description>All transaction charges are to be borne by the creditor.</Description>
													</Code>
													<Code Name="SHA">
														<DetailedName>Shared charges</DetailedName>
														<Description>Under the Direct Debit scenario, the following definition applies:Transaction charges on the Sender's side are to be borne by the creditor, transaction charges on the Receiver's side are to be borne by the debtor. The Sender and the Receiver should be understood as the Sender and the Receiver of the MT 104.Under the Request for Direct Debit scenario, the following definition applies:All transaction charges other than the charges of the Receiver servicing the creditor's account are borne by the debtor. Receiver should be understood as Receiver of the MT 104 (RFDD).</Description>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="72">
								<SwiftFieldDef Name="72">
									<Generic>false</Generic>
									<Description><![CDATA[Sender to Receiver Information]]></Description>
									<Option Name="">
										<Format><![CDATA[6*35x]]></Format>
										<Specification><![CDATA[(Narrative-Structured Format)]]></Specification>
										<Description><![CDATA[Sender to Receiver Information]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options> </Options>
							</SwiftField>
						</Fields>
					</SwiftSequence>
					<SwiftSequence Name="B">
						<Name>B</Name>
						<Description><![CDATA[Transaction Details]]></Description>
						<Mandatory>true</Mandatory>
						<Repeating>true</Repeating>
						<Fields>
							<SwiftField Name="21">
								<SwiftFieldDef Name="21">
									<Generic>false</Generic>
									<Description><![CDATA[Transaction Reference]]></Description>
									<Option Name="">
										<Format><![CDATA[16x]]></Format>
										<Specification><![CDATA[(Reference)]]></Specification>
										<Description><![CDATA[Transaction Reference]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options> </Options>
								<Validations>
									<SubField Name="Reference">
										<Validation>
											<Options> </Options>
											<ErrorCode>T26</ErrorCode>
											<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive slashes '//' (Error code(s): T26) .]]></Comment>
											<ValidationPattern xsi:type="T26" Type="T26">
												<Type>T26</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="23E">
								<SwiftFieldDef Name="23">
									<Generic>false</Generic>
									<Description><![CDATA[Instruction Code]]></Description>
									<Option Name="E">
										<Format><![CDATA[4!c[/30x]]]></Format>
										<Specification><![CDATA[(Type) (Additional Information)]]></Specification>
										<Description><![CDATA[Instruction Code]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>E</Options>
								<Validations>
									<SubField Name="Type">
										<Validation>
											<Options>E</Options>
											<ErrorCode>T47</ErrorCode>
											<Comment><![CDATA[One of the following codes must be used (Error code(s): T47) .]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="AUTH">
														<DetailedName>Pre-authorised direct debit</DetailedName>
														<Description>This occurrence of sequence B contains a pre-authorised direct debit instruction to be processed according to the terms and conditions of the direct debit contract and/or mandate.</Description>
													</Code>
													<Code Name="NAUT">
														<DetailedName>Non pre-authorised</DetailedName>
														<Description>This occurrence of sequence B contains a non pre-authorised direct debit instruction.</Description>
													</Code>
													<Code Name="OTHR">
														<DetailedName>Other</DetailedName>
														<Description>Used for bilaterally agreed codes/information. The actual bilateral code/information will be specified in the second subfield.</Description>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="21C">
								<SwiftFieldDef Name="21">
									<Generic>false</Generic>
									<Description><![CDATA[Mandate Reference]]></Description>
									<Option Name="C">
										<Format><![CDATA[35x]]></Format>
										<Specification><![CDATA[(Reference)]]></Specification>
										<Description><![CDATA[Mandate Reference]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>C</Options>
							</SwiftField>
							<SwiftField Name="21D">
								<SwiftFieldDef Name="21">
									<Generic>false</Generic>
									<Description><![CDATA[Direct Debit Reference]]></Description>
									<Option Name="D">
										<Format><![CDATA[35x]]></Format>
										<Specification><![CDATA[(Reference)]]></Specification>
										<Description><![CDATA[Direct Debit Reference]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>D</Options>
							</SwiftField>
							<SwiftField Name="21E">
								<SwiftFieldDef Name="21">
									<Generic>false</Generic>
									<Description><![CDATA[Registration Reference]]></Description>
									<Option Name="E">
										<Format><![CDATA[35x]]></Format>
										<Specification><![CDATA[(Reference)]]></Specification>
										<Description><![CDATA[Registration Reference]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>E</Options>
							</SwiftField>
							<SwiftField Name="32B">
								<SwiftFieldDef Name="32">
									<Generic>false</Generic>
									<Description><![CDATA[Currency and Transaction Amount]]></Description>
									<Option Name="B">
										<Format><![CDATA[3!a15d]]></Format>
										<Specification><![CDATA[(Currency) (Amount)]]></Specification>
										<Description><![CDATA[Currency and Transaction Amount]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options>B</Options>
								<Validations>
									<SubField Name="Amount">
										<Validation>
											<Options>B</Options>
											<ErrorCode>C03</ErrorCode>
											<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency (Error code(s): C03, T40, T43) .]]></Comment>
											<ValidationPattern xsi:type="Decimal" Type="Decimal">
												<Type>Decimal</Type>
												<currency-field>Currency</currency-field>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="Currency">
										<Validation>
											<Options>B</Options>
											<ErrorCode>T52</ErrorCode>
											<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52) .]]></Comment>
											<ValidationPattern xsi:type="Currency_Code" Type="Currency Code">
												<Type>Currency Code</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="50a">
								<SwiftFieldDef Name="50">
									<Generic>false</Generic>
									<Description><![CDATA[Instructing Party]]></Description>
									<Option Name="C">
										<Format><![CDATA[(4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(Identifier Code)]]></Specification>
										<Description><![CDATA[Instructing Party]]></Description>
									</Option>
									<Option Name="L">
										<Format><![CDATA[35x]]></Format>
										<Specification><![CDATA[(Party Identifier)]]></Specification>
										<Description><![CDATA[Instructing Party]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>C, L</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>C</Options>
											<ErrorCode>T27, T28, T29, T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="50b">
								<SwiftFieldDef Name="50">
									<Generic>false</Generic>
									<Description><![CDATA[Creditor]]></Description>
									<Option Name="A">
										<Format><![CDATA[([/34xCRLF])(4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(Account) (Identifier Code)]]></Specification>
										<Description><![CDATA[Creditor]]></Description>
									</Option>
									<Option Name="K">
										<Format><![CDATA[([/34xCRLF])(4*35x)]]></Format>
										<Specification><![CDATA[(Party Identifier) (Name & Address)]]></Specification>
										<Description><![CDATA[Creditor]]></Description>
									</Option>
								</SwiftFieldDef>
								<Suffix>b</Suffix>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>A, K</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27, T28, T29, T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="52a">
								<SwiftFieldDef Name="52">
									<Generic>false</Generic>
									<Description><![CDATA[Creditor's Bank]]></Description>
									<Option Name="A">
										<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
										<Description><![CDATA[Creditor's Bank]]></Description>
									</Option>
									<Option Name="C">
										<Format><![CDATA[/34x]]></Format>
										<Specification><![CDATA[(Party Identifier)]]></Specification>
										<Description><![CDATA[Creditor's Bank]]></Description>
									</Option>
									<Option Name="D">
										<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
										<Description><![CDATA[Creditor's Bank]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>A, C, D</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27, T28, T29, T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
										<Validation>
											<Options>A</Options>
											<ErrorCode>C05</ErrorCode>
											<Comment><![CDATA[Identifier Code must not be a BEI. Please refer to the latest version of the BIC Directory - Corporations for more information about BEIs. This error code applies to all types of BICs referenced in a FIN message including SWIFT BICs, non-SWIFT BICs, Masters, Synonyms, Live destinations and Test & Training destinations . (Error code(s): C05) .]]></Comment>
											<ValidationPattern xsi:type="C05" Type="C05">
												<Type>C05</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="CreditDebit">
										<Validation>
											<Options>A, D</Options>
											<ErrorCode>T51</ErrorCode>
											<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="C">
														<DetailedName>Credit</DetailedName>
													</Code>
													<Code Name="D">
														<DetailedName>Debit</DetailedName>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="57a">
								<SwiftFieldDef Name="57">
									<Generic>false</Generic>
									<Description><![CDATA[Debtor's Bank]]></Description>
									<Option Name="A">
										<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
										<Description><![CDATA[Debtor's Bank]]></Description>
									</Option>
									<Option Name="C">
										<Format><![CDATA[/34x]]></Format>
										<Specification><![CDATA[(Party Identifier)]]></Specification>
										<Description><![CDATA[Debtor's Bank]]></Description>
									</Option>
									<Option Name="D">
										<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
										<Description><![CDATA[Debtor's Bank]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>A, C, D</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27, T28, T29, T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
										<Validation>
											<Options>A</Options>
											<ErrorCode>C05</ErrorCode>
											<Comment><![CDATA[Identifier Code must not be a BEI. Please refer to the latest version of the BIC Directory - Corporations for more information about BEIs. This error code applies to all types of BICs referenced in a FIN message including SWIFT BICs, non-SWIFT BICs, Masters, Synonyms, Live destinations and Test & Training destinations . (Error code(s): C05) .]]></Comment>
											<ValidationPattern xsi:type="C05" Type="C05">
												<Type>C05</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="CreditDebit">
										<Validation>
											<Options>A, D</Options>
											<ErrorCode>T51</ErrorCode>
											<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="C">
														<DetailedName>Credit</DetailedName>
													</Code>
													<Code Name="D">
														<DetailedName>Debit</DetailedName>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="59a">
								<SwiftFieldDef Name="59">
									<Generic>false</Generic>
									<Description><![CDATA[Debtor]]></Description>
									<Option Name="">
										<Format><![CDATA[[/34xCRLF]4*35x]]></Format>
										<Specification><![CDATA[(Account) (Name & Address)]]></Specification>
										<Description><![CDATA[Debtor]]></Description>
									</Option>
									<Option Name="A">
										<Format><![CDATA[([/34xCRLF])(4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(Account) (Identifier Code)]]></Specification>
										<Description><![CDATA[Debtor]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options> , A</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27, T28, T29, T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="70">
								<SwiftFieldDef Name="70">
									<Generic>false</Generic>
									<Description><![CDATA[Remittance Information]]></Description>
									<Option Name="">
										<Format><![CDATA[4*35x]]></Format>
										<Specification><![CDATA[(Narrative)]]></Specification>
										<Description><![CDATA[Remittance Information]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options> </Options>
							</SwiftField>
							<SwiftField Name="26T">
								<SwiftFieldDef Name="26">
									<Generic>false</Generic>
									<Description><![CDATA[Transaction Type Code]]></Description>
									<Option Name="T">
										<Format><![CDATA[3!c]]></Format>
										<Specification><![CDATA[(Type)]]></Specification>
										<Description><![CDATA[Transaction Type Code]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>T</Options>
							</SwiftField>
							<SwiftField Name="77B">
								<SwiftFieldDef Name="77">
									<Generic>false</Generic>
									<Description><![CDATA[Regulatory Reporting]]></Description>
									<Option Name="B">
										<Format><![CDATA[3*35x]]></Format>
										<Specification><![CDATA[(Narrative)]]></Specification>
										<Description><![CDATA[Regulatory Reporting]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>B</Options>
							</SwiftField>
							<SwiftField Name="33B">
								<SwiftFieldDef Name="33">
									<Generic>false</Generic>
									<Description><![CDATA[Currency/Original Ordered Amount]]></Description>
									<Option Name="B">
										<Format><![CDATA[3!a15d]]></Format>
										<Specification><![CDATA[(Currency) (Amount)]]></Specification>
										<Description><![CDATA[Currency/Original Ordered Amount]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>B</Options>
								<Validations>
									<SubField Name="Amount">
										<Validation>
											<Options>B</Options>
											<ErrorCode>C03</ErrorCode>
											<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency (Error code(s): C03, T40, T43) .]]></Comment>
											<ValidationPattern xsi:type="Decimal" Type="Decimal">
												<Type>Decimal</Type>
												<currency-field>Currency</currency-field>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="Currency">
										<Validation>
											<Options>B</Options>
											<ErrorCode>T52</ErrorCode>
											<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52) .]]></Comment>
											<ValidationPattern xsi:type="Currency_Code" Type="Currency Code">
												<Type>Currency Code</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="71A">
								<SwiftFieldDef Name="71">
									<Generic>false</Generic>
									<Description><![CDATA[Details of Charges]]></Description>
									<Option Name="A">
										<Format><![CDATA[3!a]]></Format>
										<Specification><![CDATA[(Code)]]></Specification>
										<Description><![CDATA[Details of Charges]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>A</Options>
								<Validations>
									<SubField Name="Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T08</ErrorCode>
											<Comment><![CDATA[One of the following codes must be used (Error code(s): T08) :]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="BEN">
														<DetailedName>Debtor</DetailedName>
														<Description>All transaction charges are to be borne by the debtor.</Description>
													</Code>
													<Code Name="OUR">
														<DetailedName>Our customer charged</DetailedName>
														<Description>All transaction charges are to be borne by the creditor.</Description>
													</Code>
													<Code Name="SHA">
														<DetailedName>Shared charges</DetailedName>
														<Description>Under the Direct Debit scenario, the following definition applies:Transaction charges on the Sender's side are to be borne by the creditor, transaction charges on the Receiver's side are to be borne by the debtor. The Sender and the Receiver should be understood as the Sender and the Receiver of the MT 104.Under the Request for Direct Debit scenario, the following definition applies:All transaction charges other than the charges of the Receiver servicing the creditor's account are borne by the debtor. Receiver should be understood as Receiver of the MT 104 (RFDD).</Description>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="71F">
								<SwiftFieldDef Name="71">
									<Generic>false</Generic>
									<Description><![CDATA[Sender's Charges]]></Description>
									<Option Name="F">
										<Format><![CDATA[3!a15d]]></Format>
										<Specification><![CDATA[(Currency) (Amount)]]></Specification>
										<Description><![CDATA[Sender's Charges]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>F</Options>
								<Validations>
									<SubField Name="Amount">
										<Validation>
											<Options>F</Options>
											<ErrorCode>C03</ErrorCode>
											<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency (Error code(s): C03, T40, T43) .]]></Comment>
											<ValidationPattern xsi:type="Decimal" Type="Decimal">
												<Type>Decimal</Type>
												<currency-field>Currency</currency-field>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="Currency">
										<Validation>
											<Options>F</Options>
											<ErrorCode>T52</ErrorCode>
											<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52) .]]></Comment>
											<ValidationPattern xsi:type="Currency_Code" Type="Currency Code">
												<Type>Currency Code</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="71G">
								<SwiftFieldDef Name="71">
									<Generic>false</Generic>
									<Description><![CDATA[Receiver's Charges]]></Description>
									<Option Name="G">
										<Format><![CDATA[3!a15d]]></Format>
										<Specification><![CDATA[(Currency) (Amount)]]></Specification>
										<Description><![CDATA[Receiver's Charges]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>G</Options>
								<Validations>
									<SubField Name="Amount">
										<Validation>
											<Options>G</Options>
											<ErrorCode>C03</ErrorCode>
											<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency (Error code(s): C03, T40, T43) .]]></Comment>
											<ValidationPattern xsi:type="Decimal" Type="Decimal">
												<Type>Decimal</Type>
												<currency-field>Currency</currency-field>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="Currency">
										<Validation>
											<Options>G</Options>
											<ErrorCode>T52</ErrorCode>
											<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52) .]]></Comment>
											<ValidationPattern xsi:type="Currency_Code" Type="Currency Code">
												<Type>Currency Code</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="36">
								<SwiftFieldDef Name="36">
									<Generic>false</Generic>
									<Description><![CDATA[Exchange Rate]]></Description>
									<Option Name="">
										<Format><![CDATA[12d]]></Format>
										<Specification><![CDATA[(Rate)]]></Specification>
										<Description><![CDATA[Exchange Rate]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options> </Options>
							</SwiftField>
						</Fields>
					</SwiftSequence>
					<SwiftSequence Name="C">
						<Name>C</Name>
						<Description><![CDATA[Settlement Details]]></Description>
						<Mandatory>false</Mandatory>
						<Repeating>false</Repeating>
						<Fields>
							<SwiftField Name="32B">
								<SwiftFieldDef Name="32">
									<Generic>false</Generic>
									<Description><![CDATA[Currency and Settlement Amount]]></Description>
									<Option Name="B">
										<Format><![CDATA[3!a15d]]></Format>
										<Specification><![CDATA[(Currency) (Amount)]]></Specification>
										<Description><![CDATA[Currency and Settlement Amount]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options>B</Options>
								<Validations>
									<SubField Name="Amount">
										<Validation>
											<Options>B</Options>
											<ErrorCode>C03</ErrorCode>
											<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency (Error code(s): C03, T40, T43) .]]></Comment>
											<ValidationPattern xsi:type="Decimal" Type="Decimal">
												<Type>Decimal</Type>
												<currency-field>Currency</currency-field>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="Currency">
										<Validation>
											<Options>B</Options>
											<ErrorCode>T52</ErrorCode>
											<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52) .]]></Comment>
											<ValidationPattern xsi:type="Currency_Code" Type="Currency Code">
												<Type>Currency Code</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="19">
								<SwiftFieldDef Name="19">
									<Generic>false</Generic>
									<Description><![CDATA[Sum of Amounts]]></Description>
									<Option Name="">
										<Format><![CDATA[17d]]></Format>
										<Specification><![CDATA[(Amount)]]></Specification>
										<Description><![CDATA[Sum of Amounts]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options> </Options>
							</SwiftField>
							<SwiftField Name="71F">
								<SwiftFieldDef Name="71">
									<Generic>false</Generic>
									<Description><![CDATA[Sum of Sender's Charges]]></Description>
									<Option Name="F">
										<Format><![CDATA[3!a15d]]></Format>
										<Specification><![CDATA[(Currency) (Amount)]]></Specification>
										<Description><![CDATA[Sum of Sender's Charges]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>F</Options>
								<Validations>
									<SubField Name="Amount">
										<Validation>
											<Options>F</Options>
											<ErrorCode>C03</ErrorCode>
											<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency (Error code(s): C03, T40, T43) .]]></Comment>
											<ValidationPattern xsi:type="Decimal" Type="Decimal">
												<Type>Decimal</Type>
												<currency-field>Currency</currency-field>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="Currency">
										<Validation>
											<Options>F</Options>
											<ErrorCode>T52</ErrorCode>
											<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52) .]]></Comment>
											<ValidationPattern xsi:type="Currency_Code" Type="Currency Code">
												<Type>Currency Code</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="71G">
								<SwiftFieldDef Name="71">
									<Generic>false</Generic>
									<Description><![CDATA[Sum of Receiver's Charges]]></Description>
									<Option Name="G">
										<Format><![CDATA[3!a15d]]></Format>
										<Specification><![CDATA[(Currency) (Amount)]]></Specification>
										<Description><![CDATA[Sum of Receiver's Charges]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>G</Options>
								<Validations>
									<SubField Name="Amount">
										<Validation>
											<Options>G</Options>
											<ErrorCode>C03</ErrorCode>
											<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency (Error code(s): C03, T40, T43) .]]></Comment>
											<ValidationPattern xsi:type="Decimal" Type="Decimal">
												<Type>Decimal</Type>
												<currency-field>Currency</currency-field>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="Currency">
										<Validation>
											<Options>G</Options>
											<ErrorCode>T52</ErrorCode>
											<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52) .]]></Comment>
											<ValidationPattern xsi:type="Currency_Code" Type="Currency Code">
												<Type>Currency Code</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="53a">
								<SwiftFieldDef Name="53">
									<Generic>false</Generic>
									<Description><![CDATA[Sender's Correspondent]]></Description>
									<Option Name="A">
										<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
										<Description><![CDATA[Sender's Correspondent]]></Description>
									</Option>
									<Option Name="B">
										<Format><![CDATA[/1!a[/34x](CRLF35x) | /1!a[/34x] | [/34xCRLF]35x | /34x]]></Format>
										<Specification><![CDATA[(CreditDebit) (Party Identifier) (Location) | (CreditDebit)(Party Identifier) |(Party Identifier) (Location) | (Party Identifier)]]></Specification>
										<Description><![CDATA[Sender's Correspondent]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>A, B</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27, T28, T29, T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
										<Validation>
											<Options>A</Options>
											<ErrorCode>C05</ErrorCode>
											<Comment><![CDATA[Identifier Code must not be a BEI. Please refer to the latest version of the BIC Directory - Corporations for more information about BEIs. This error code applies to all types of BICs referenced in a FIN message including SWIFT BICs, non-SWIFT BICs, Masters, Synonyms, Live destinations and Test & Training destinations . (Error code(s): C05) .]]></Comment>
											<ValidationPattern xsi:type="C05" Type="C05">
												<Type>C05</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="CreditDebit">
										<Validation>
											<Options>A, B</Options>
											<ErrorCode>T51</ErrorCode>
											<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="C">
														<DetailedName>Credit</DetailedName>
													</Code>
													<Code Name="D">
														<DetailedName>Debit</DetailedName>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
						</Fields>
					</SwiftSequence>
				</Fields>
			</Data>
			<Trailer>
				<fields>
					<field>
						<name>Message Authentication Code</name>
						<description><![CDATA[Allows authentication by the receiving user. It is followed by an authentication result.

This trailer is mandatory for most user-to-user message categories within the FIN application. When the FIN Copy Service is used a PAC trailer, if present, follows the MAC trailer.

Format:

{MAC:<authentication-result>}

where <authentication-result> = 8!h

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>8</length>
						<tag>MAC</tag>
					</field>
					<field>
						<name>Proprietary Authentication Code</name>
						<description><![CDATA[The PAC is used within the FIN Copy service only, when using the double authentication option. The PAC is included in Block 5 of FIN user-to-user messages, immediately after the MAC trailer, if present.

This is calculated on the extracted fields of Block 4 of the message, the value of field 115, if present, and the <authentication-result> of the MAC trailer for Copy Services with double authentication.

Thus, the end-of-block indicator (CrLf-) is included in the PAC calculation, and the fields are defined as follows:

The first three characters are CrLf:

The field and the delimiter are present, that is, 32A:, 20:, and so on.

All subfields and their delimiters are present.

Format:

{PAC:[<authentication-result>]}

where <authentication-result> is mandatory on input messages only and <authentication-result> = 8!h

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>8</length>
						<tag>PAC</tag>
					</field>
					<field>
						<name>Checksum</name>
						<description><![CDATA[The checksum is computed based on the receiver's address (12 characters, with 9th character replaced by X) plus the Text Block. This trailer allows the system and the CBT to check that messages have not been corrupted due to a system malfunction or an undetected transmission error.

Format:

{CHK:<checksum-result>}

where <checksum-result> = 12!h

Note: This trailer is mandatory for FIN and GPA messages (Service Identifier 01).

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>12</length>
						<tag>CHK</tag>
					</field>
					<field>
						<name>System Originated Message</name>
						<description><![CDATA[The system message or service message which is generated by a system PLT has a SYS trailer. All solicited system messages (Service Identifier 01) contain the MIR of the request and may also contain the time.

Format:

{SYS:[<time><mir>]}

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>SYS</tag>
					</field>
					<field>
						<name>Test And Training Message</name>
						<description><![CDATA[Mandatory for FIN and GPA messages (Service Identifier 01) sent by, or delivered to, a Test & Training Logical Terminal (LT). This trailer has a tag only, and no value.

Format:

{TNG:}
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>0</length>
						<tag>TNG</tag>
					</field>
					<field>
						<name>Possible Duplicate Emission</name>
						<description><![CDATA[This trailer is used by the destination of the message. It only applies to FIN user-to-user messages (Service Identifier 01, message categories reserved for banking messages). There can be multiple PDEs. The system does not verify the order nor restrict the number (except for maximum message length).

Correctly formatted PDE trailers applied to user-to-system messages are accepted by the system, but not processed. This means that the system does not check to see if the original message exists. Therefore, a retrieval request sent with a PDE trailer may be processed twice if the original message was received by the system.

Format:

{PDE:[<time><mir>]}

where <time><mir> refers to the emission of the previous possible issue.

Note: It can be added automatically by a CBT or manually by a user. It may be followed by the MIR and the time of its previous possible messages.

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>PDE</tag>
					</field>
					<field>
						<name>Delayed Message</name>
						<description><![CDATA[This trailer is added to all FIN user-to-user output messages that have exceeded their obsolescence period. If this trailer appears in GPA or FIN system messages, it must be ignored. This trailer has a tag only, and no value.

The Obsolescence Period is:

U = 15 minutes

N = 100 minutes

Format:

{DLM:}

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>0</length>
						<tag>DLM</tag>
					</field>
					<field>
						<name>Possible Duplicate Message</name>
						<description><![CDATA[Added by the system to any output message (GPA and FIN Service Identifier 01) being resent because a prior delivery may be invalid. If a system PLT receives a report request with a PDM, the response has a plain PDM (without the optional delivery reference). Other PDMs may be added as a result of unsuccessful delivery attempts to the user. 
Format:
{PDM:[<time><mor>]}
where <time> and the Message Output Reference <mor> are that of the previous attempt.
Note: For messages recovered after a system failure, the optional fields may not be present.
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>PDM</tag>
					</field>
					<field>
						<name>Message Reference</name>
						<description><![CDATA[The MRF trailer is used to specify the message reference of the original user message in MT 096 FIN Copy to Central Institution Messages.
Format:
{MRF:<date><full-time><mir>}
where <mir> is that of the original user message whose fields are copied in the MT 096 FIN Copy to Central Institution Message.
Note: The MRF is specific to FIN Copy. The MRF trailer is automatically generated in the MT 096 FIN Copy to Central Institution Message and can only be reused in field 109 of the MT 096 FIN Copy to Central Institution Message to identify the MT 096 to which the MT 097 is a response. The format of the MRF is subject to change.
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>MRF</tag>
					</field>
				</fields>
			</Trailer>
		</SwiftFields>
		<validationrules name="Default">
			<hdrvalidationrules>
				<fieldvalidations>
					<fieldvalidation>
						<name>U08</name>
						<formula><![CDATA[if($this.Header.GetFieldIndex("User_Header") != -1) {
    def userHeader = $this.Header.GetSection("User_Header");
    if(userHeader.$size > 0 && userHeader[0].IsNotNull("Validation_Flag")) {
        if(userHeader[0].GetString("Validation_Flag") != "RFDD") {
            return false;
        }
    }
}
return true;
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U08</error-code>
						<actionmessage><![CDATA["Invalid syntax, format, code word in tag 119(Validation Flag). Allowed value is RFDD."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>U03</name>
						<fieldname>User Header</fieldname>
						<formula><![CDATA[Iff(IsNotNull(User_Header.Service_Type_Identifier), 
    IsNotNull(User_Header.Unique_End_To_End_Transaction_Reference))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U03</error-code>
						<actionmessage><![CDATA["When populating an end-to-end reference, both fields 111 and 121 must be populated: a message that contains only one of these two fields will not be accepted by FIN."]]></actionmessage>
					</fieldvalidation>
				</fieldvalidations>
			</hdrvalidationrules>
			<datavalidationrules>
				<fieldvalidations>
					<fieldvalidation>
						<name>C1-1</name>
						<comment><![CDATA[C1-1
If field 23E is present in sequence A and contains RFDD then field 23E must be present in all occurrences of sequence B. If field 23E is not present in sequence A then field 23E must be present in all occurrences of sequence B (Error code(s): C75)
]]></comment>
						<formula><![CDATA[If(A[0].F23E.$size == 0 || A[0].F23E[0].Type == "RFDD", SecExistsInAll(B, "F23E"), true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C75</error-code>
						<actionmessage><![CDATA["If field 23E is present in sequence A and contains RFDD then field 23E must be present in all occurrences of sequence B. If field 23E is not present in sequence A then field 23E must be present in all occurrences of sequence B"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C1-2</name>
						<comment><![CDATA[C1-2
If field 23E is present in sequence A and does not contain RFDD then field 23E must not be present in any occurrence of sequence B (Error code(s): C75).
]]></comment>
						<formula><![CDATA[If(A[0].F23E.$size > 0 && A[0].F23E[0].Type != "RFDD", !SecExistsInAtLeastOne(B, "F23E"), true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C75</error-code>
						<actionmessage><![CDATA["If field 23E is present in sequence A and does not contain RFDD then field 23E must not be present in any occurrence of sequence B."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C2</name>
						<fieldname>B</fieldname>
						<comment><![CDATA[C2
Field 50a (option A or K), must be present in either sequence A (index 8) or in each occurrence of sequence B (index 21), but must never be present in both sequences, nor be absent from both sequences (Error code(s): C76).]]></comment>
						<formula><![CDATA[If(A.F50b.$size > 0 && In(A[0].F50b[0].FormatOption, 'A', 'K'), 
   Implies($value.F50b.$size > 0, !In($value.F50b.FormatOption, 'A', 'K')), 
   $value.F50b.$size > 0 && In($value.F50b.FormatOption, 'A', 'K'))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C76</error-code>
						<actionmessage><![CDATA["Field 50a (option A or K), must be present in either sequence A (index 8) or in each occurrence of sequence B (index 21), but must never be present in both sequences, nor be absent from both sequences"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C3-1</name>
						<comment><![CDATA[C3-1
When present in sequence A, field 26T must, independently of each other, not be present in any occurrence of sequence B. When present in one or more occurrences of sequence B, field  26T must not be present in sequence A]]></comment>
						<formula><![CDATA[If(A[0].F26T.$size > 0, !SecExistsInAtLeastOne(B, "F26T"), true) && 
  If(SecExistsInAtLeastOne(B, "F26T"), A[0].F26T.$size == 0, true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D73</error-code>
						<actionmessage><![CDATA["When present in sequence A, field 26T must, independently of each other, not be present in any occurrence of sequence B. When present in one or more occurrences of sequence B, field  26T must not be present in sequence A"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C3-2</name>
						<comment><![CDATA[C3-2
When present in sequence A, field 77B must, independently of each other, not be present in any occurrence of sequence B. When present in one or more occurrences of sequence B, field 77B must not be present in sequence A]]></comment>
						<formula><![CDATA[If(A[0].F77B.$size > 0, !SecExistsInAtLeastOne(B, "F77B"), true) && 
  If(SecExistsInAtLeastOne(B, "F77B"), A[0].F77B.$size == 0, true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D73</error-code>
						<actionmessage><![CDATA["When present in sequence A, field 77B must, independently of each other, not be present in any occurrence of sequence B. When present in one or more occurrences of sequence B, field 77B must not be present in sequence A"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C3-3</name>
						<comment><![CDATA[C3-3
When present in sequence A, field 71A must, independently of each other, not be present in any occurrence of sequence B. When present in one or more occurrences of sequence B, field 71A must not be present in sequence A]]></comment>
						<formula><![CDATA[If(A[0].F71A.$size > 0, !SecExistsInAtLeastOne(B, "F71A"), true) && 
  If(SecExistsInAtLeastOne(B, "F71A"), A[0].F71A.$size == 0, true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D73</error-code>
						<actionmessage><![CDATA["When present in sequence A, field 71A must, independently of each other, not be present in any occurrence of sequence B. When present in one or more occurrences of sequence B, field 71A must not be present in sequence A"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C3-4</name>
						<comment><![CDATA[C3-4
When present in sequence A, field 52a must, independently of each other, not be present in any occurrence of sequence B. When present in one or more occurrences of sequence B, field 52a must not be present in sequence A
]]></comment>
						<formula><![CDATA[If(A[0].F52a.$size > 0, !SecExistsInAtLeastOne(B, "F52a"), true) && 
  If(SecExistsInAtLeastOne(B, "F52a"), A[0].F52a.$size == 0, true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D73</error-code>
						<actionmessage><![CDATA["When present in sequence A, field 52a must, independently of each other, not be present in any occurrence of sequence B. When present in one or more occurrences of sequence B, field 52a must not be present in sequence A"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C3-5</name>
						<comment><![CDATA[C3-5
When present in sequence A, field 21E must, independently of each other, not be present in any occurrence of sequence B. When present in one or more occurrences of sequence B, fields 21E must not be present in sequence A
]]></comment>
						<formula><![CDATA[If(A[0].F21E.$size > 0, !SecExistsInAtLeastOne(B, "F21E"), true) && 
  If(SecExistsInAtLeastOne(B, "F21E"), A[0].F21E.$size == 0, true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D73</error-code>
						<actionmessage><![CDATA["When present in sequence A, field 21E must, independently of each other, not be present in any occurrence of sequence B. When present in one or more occurrences of sequence B, fields 21E must not be present in sequence A"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C3-6</name>
						<fieldname>B.50a</fieldname>
						<comment><![CDATA[C3-6
When present in sequence A, field 50a (option C or L) must, independently of each other, not be present in any occurrence of sequence B. When present in one or more occurrences of sequence B, field 50a (option C or L) must not be present in sequence A
]]></comment>
						<formula><![CDATA[Implies(In($value.FormatOption, 'C', 'L') && A.F50a.$size > 0, 
        !In(A[0].F50a[0].FormatOption, 'C', 'L'))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D73</error-code>
						<actionmessage><![CDATA["When present in sequence A, field 50a (option C or L) must, independently of each other, not be present in any occurrence of sequence B. When present in one or more occurrences of sequence B, field 50a (option C or L) must not be present in sequence A"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C4-1</name>
						<fieldname>A</fieldname>
						<comment><![CDATA[C4-1
If field 21E is present in sequence A, then the second occurrence of field 50a (option A or K), must also be present in sequence A.
]]></comment>
						<formula><![CDATA[If($value.F21E.$size > 0, $value.F50b.$size > 0 && In($value.F50b.FormatOption, 'A', 'K'), true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D77</error-code>
						<actionmessage><![CDATA["If field 21E is present in sequence A, then the second occurrence of field 50a (option A or K), must also be present in sequence A."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C4-2</name>
						<fieldname>B</fieldname>
						<comment><![CDATA[C4-2
In each occurrence of sequence B, if field 21E is present, then the second occurrence of field 50a (option A or K), must also be present in the same occurrence]]></comment>
						<formula><![CDATA[If($value.F21E.$size > 0, $value.F50b.$size > 0 && In($value.F50b.FormatOption, 'A', 'K'), true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D77</error-code>
						<actionmessage><![CDATA["In each occurrence of sequence B, if field 21E is present, then the second occurrence of field 50a (option A or K), must also be present in the same occurrence"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C5</name>
						<fieldname>A</fieldname>
						<comment><![CDATA[C5
In sequence A, if field 23E is present and contains RTND then field 72 must be present, in all other cases - ie field 23E not present, or field 23E does not contain RTND - field 72 is not allowed (Error code(s): C82).
]]></comment>
						<formula><![CDATA[If(A[0].F23E.$size > 0, 
   If(A[0].F23E[0].Type == "RTND", A[0].F72.$size > 0, A[0].F72.$size == 0), 
   A[0].F72.$size == 0)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C82</error-code>
						<actionmessage><![CDATA["In sequence A, if field 23E is present and contains RTND then field 72 must be present, in all other cases - ie field 23E not present, or field 23E does not contain RTND - field 72 is not allowed"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C6-1</name>
						<comment><![CDATA[C6-1
If field 71F is present in one or more occurrence of sequence B, then it must also be present in Sequence C, and vice-versa (Error code(s): D79).
]]></comment>
						<formula><![CDATA[SecExistsInAtLeastOne(B, "F71F") == SecExistsInAtLeastOne(C, "F71F")]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D79</error-code>
						<actionmessage><![CDATA["If field 71F is present in one or more occurrence of sequence B, then it must also be present in Sequence C, and vice-versa"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C6-2</name>
						<comment><![CDATA[C6-2
If field 71G is present in one or more occurrence of sequence B, then it must also be present in sequence C, and vice-versa (Error code(s): D79).
]]></comment>
						<formula><![CDATA[SecExistsInAtLeastOne(B, "F71G") == SecExistsInAtLeastOne(C, "F71G")]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D79</error-code>
						<actionmessage><![CDATA["If field 71G is present in one or more occurrence of sequence B, then it must also be present in sequence C, and vice-versa"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C7</name>
						<fieldname>B</fieldname>
						<comment><![CDATA[C7
In each occurrence of sequence B, if field 33B is present then the currency code or the amount, or both, must be different between fields 33B and 32B (Error code(s): D21).
]]></comment>
						<formula><![CDATA[If(B.F33B.$size > 0, 
   B.F32B[0].Currency != B.F33B[0].Currency || 
     B.F32B[0].Amount != B.F33B[0].Amount, 
   true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D21</error-code>
						<actionmessage><![CDATA["In each occurrence of sequence B, if field 33B is present then the currency code or the amount, or both, must be different between fields 33B and 32B"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C8</name>
						<fieldname>B.33B</fieldname>
						<comment><![CDATA[C8
In any occurrence of sequence B, if field 33B is present and the currency codes in fields 32B and 33B are different, then field 36 must be present. Otherwise, field 36 must not be present (Error code(s): D75).
]]></comment>
						<formula><![CDATA[If(B.F32B[0].Currency != B.F33B[0].Currency, 
   B.F36.$size > 0, 
   B.F36.$size == 0)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D75</error-code>
						<actionmessage><![CDATA["In any occurrence of sequence B, if field 33B is present and the currency codes in fields 32B and 33B are different, then field 36 must be present. Otherwise, field 36 must not be present"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C9</name>
						<fieldname>C</fieldname>
						<comment><![CDATA[C9
If sequence C is present and if the amount in field 32B of sequence C is equal to the sum of the amounts of the fields 32B of sequence B, then field 19 must not be present. Otherwise field 19 must be present (Error code(s): D80). ]]></comment>
						<formula><![CDATA[If(Abs(C.F32B[0].Amount - SecSumDouble(B, "F32B.Amount")) < 1.0E-4, 
   C.F19.$size == 0, 
   C.F19.$size > 0)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D80</error-code>
						<actionmessage><![CDATA["If sequence C is present and if the amount in field 32B of sequence C is equal to the sum of the amounts of the fields 32B of sequence B, then field 19 must not be present. Otherwise field 19 must be present"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C10</name>
						<fieldname>C.19.Amount</fieldname>
						<comment><![CDATA[C10
If field 19 is present in sequence C then it must be equal to the sum of the amounts in all occurrences of field 32B in sequence B (Error code(s): C01).]]></comment>
						<formula><![CDATA[Abs($value - SecSumDouble(B, "F32B.Amount")) < 1.0E-4]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C01</error-code>
						<actionmessage><![CDATA["If field 19 is present in sequence C then it must be equal to the sum of the amounts in all occurrences of field 32B in sequence B"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C11-1</name>
						<fieldname>B</fieldname>
						<comment><![CDATA[C11-1
The currency code in fields 32B and 71G in sequences B and C must be the same for all occurrences of these fields in the message (Error code(s): C02).]]></comment>
						<formula><![CDATA[$firstCurrency = B[0].F32B[0].Currency;
return B.F32B[0].Currency == $firstCurrency && 
         (B.F71G.$size == 0 || B.F71G[0].Currency == $firstCurrency) && 
         (C.$size == 0 || 
            (C[0].F71G.$size == 0 && C[0].F32B[0].Currency == $firstCurrency) || 
            (C[0].F32B[0].Currency == $firstCurrency && 
               C[0].F71G[0].Currency == $firstCurrency));
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C02</error-code>
						<actionmessage><![CDATA["The currency code in fields 32B and 71G in sequences B and C must be the same for all occurrences of these fields in the message"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C11-2</name>
						<comment><![CDATA[C11-2
The currency code in the charges fields 71F in sequences B and C must be the same for all occurrences of these fields in the message (Error code(s): C02).]]></comment>
						<formula><![CDATA[def prevCurrency = "";
foreach(def b in B) {
    if(b.F71F.$size > 0) {
        if(prevCurrency != "" && b.F71F[0].Currency != prevCurrency) {
            return false;
        }
        prevCurrency = b.F71F[0].Currency;
    }
}
if(C.$size > 0) {
    if(C[0].F71F.$size > 0) {
        if(prevCurrency != "" && C[0].F71F[0].Currency != prevCurrency) {
            return false;
        }
    }
}
return true;
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C02</error-code>
						<actionmessage><![CDATA["The currency code in the charges fields 71F in sequences B and C must be the same for all occurrences of these fields in the message"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C12</name>
						<fieldname>B</fieldname>
						<comment><![CDATA[C12
In sequence A, if field 23E is present and contains RFDD, then:
a)in sequence A field 21R is optional
b)and in sequence B the fields 21E, 50a (option A or K), 52a, 71F,71G     must not be present
c)and sequence C must not be present.]]></comment>
						<formula><![CDATA[If(A[0].F23E.$size > 0 && A[0].F23E[0].Type == "RFDD", 
   B.F21E.$size == 0 && Implies(B.F50b.$size > 0, !In($value.F50b[0].FormatOption, 'A', 'K')) && 
     B.F52a.$size == 0 && B.F71F.$size == 0 && B.F71G.$size == 0 && C.$size == 0, 
   A[0].F21R.$size == 0 && C.$size > 0)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C96</error-code>
						<actionmessage><![CDATA["In sequence A, if field 23E is present and contains RFDD, then: (a)in sequence A field 21R is optional (b)and in sequence B the fields 21E, 50a (option A or K), 52a, 71F,71G must not be present (c)and sequence C must not be present."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C13</name>
						<fieldname>A</fieldname>
						<comment><![CDATA[C13
If field 23E in sequence A is present and contains RFDD, then field 119 of User Header must be present and contain RFDD. If field 23E in sequence A is not present or does not contain RFDD, then field 119 of User Header must not be present]]></comment>
						<formula><![CDATA[if($this.Header.GetFieldIndex("User_Header") != -1){
    def userHeader = $this.Header.GetSection("User_Header");
	if(A[0].F23E.$size > 0 && A[0].F23E[0].Type == "RFDD")
	      return (userHeader.$size > 0 && userHeader[0].IsNotNull("Validation_Flag") && userHeader[0].GetString("Validation_Flag") == "RFDD");
	else if(A[0].F23E.$size == 0 || (A[0].F23E.$size > 0 && A[0].F23E[0].Type != "RFDD")){
	      if(userHeader.$size > 0)
	      	return userHeader[0].IsNull("Validation_Flag");
	}
}
return true;]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C94</error-code>
						<actionmessage><![CDATA["If field 23E in sequence A is present and contains RFDD, then field 119 of User Header must be present and contain RFDD. If field 23E in sequence A is not present or does not contain RFDD, then field 119 of User Header must not be present"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FA-51A</name>
						<comment><![CDATA[FA-51A
Field 51A is only valid in FileAct (Error code(s): D63). ]]></comment>
						<formula><![CDATA[A[0].F51A.$size == 0]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D63</error-code>
						<actionmessage><![CDATA["Field 51A is only valid in FileAct."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FA-23E</name>
						<fieldname>A.23E.Additional_Information</fieldname>
						<comment><![CDATA[FA-23E
The narrative second subfield can only be used in combination with OTHR (Error code(s): D81).
]]></comment>
						<formula><![CDATA[A.F23E.Type == "OTHR"]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D81</error-code>
						<actionmessage><![CDATA["In field 23E of sequence A, Narrative may only be used in combination with 'OTHR'."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-23E</name>
						<fieldname>B.23E.Additional_Information</fieldname>
						<comment><![CDATA[FB-23E
The narrative second subfield can only be used in combination with OTHR (Error code(s): D81).]]></comment>
						<formula><![CDATA[B.F23E.Type == "OTHR"]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D81</error-code>
						<actionmessage><![CDATA["In field 23E of sequence B, Narrative may only be used in combination with 'OTHR'."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FA-72-A</name>
						<fieldname>A.72.Narrative-Structured_Format</fieldname>
						<comment><![CDATA[FA-72-A
The first line of field 72 should be of the following format: /8c/[additional information]. The remaining lines (2 - 6) should be of the following format: [//continuation of additional information] or [/8c/[additional information]].]]></comment>
						<formula><![CDATA[VerifyField72NarrativeText($value)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T32</error-code>
						<actionmessage><![CDATA["The first line of field 72 should be of the following format: /8c/[additional information]. The remaining lines (2 - 6) should be of the following format: [//continuation of additional information] or [/8c/[additional information]]."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FA-72-B</name>
						<fieldname>A.72.Narrative-Structured_Format</fieldname>
						<comment><![CDATA[The first element in line 1 must contain either code /RETN/ or /REJT/]]></comment>
						<formula><![CDATA[StartsWith($value, "/REJT/") || StartsWith($value, "/RETN/")]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D82</error-code>
						<actionmessage><![CDATA["The first element in line 1 must contain either code /RETN/ or /REJT/"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-59a-A</name>
						<fieldname>B.59a</fieldname>
						<comment><![CDATA[FB-59a-A
Although the presence of Account is optional in the field format, for the purpose of this message the Account of the debtor must be present (Error code(s): E10). 
]]></comment>
						<formula><![CDATA[IsNotNull(B.F59a.Account)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E10</error-code>
						<actionmessage><![CDATA["Although the presence of Account is optional in the field format, for the purpose of this message the Account of the debtor must be present"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FC-71G-A</name>
						<fieldname>C.71G.Amount</fieldname>
						<comment><![CDATA[FC-71G-A
If field 71G is present in sequence C, the amount must not equal '0' (Error code(s): D57).]]></comment>
						<formula><![CDATA[C.F71G.Amount != ToDouble(0)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D57</error-code>
						<actionmessage><![CDATA["If field 71G is present in sequence C, the amount must not equal 0"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FC-19</name>
						<fieldname>C.32B.Currency</fieldname>
						<comment><![CDATA[F-19
The number of digits following the comma must not exceed the maximum number allowed for the currency specified in field 32B (Error code(s): C03,T40,T43).]]></comment>
						<formula><![CDATA[If(C[0].F19.$size>0, isValidDecimals($value,C.F19[0].Amount), true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C03</error-code>
						<actionmessage><![CDATA["The number of digits following the comma must not exceed the maximum number allowed for the currency specified in field 32B."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>ERI-1</name>
						<fieldname>B.32B</fieldname>
						<comment><![CDATA["For specific message types, an European currency must not be used as the currency of settlement after a cut-off date (Error Code: E76)."]]></comment>
						<formula><![CDATA[applyERIValidation(A[0].F30[0], "Date", B.F32B[0], "Currency")]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E76</error-code>
						<actionmessage><![CDATA["For specific message types, an European currency must not be used as the currency of settlement after a cut-off date (Error Code: E76)."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>ERI-2</name>
						<fieldname>C.32B</fieldname>
						<comment><![CDATA["For specific message types, an European currency must not be used as the currency of settlement after a cut-off date (Error Code: E76)."]]></comment>
						<formula><![CDATA[applyERIValidation(A[0].F30[0], "Date", C.F32B[0], "Currency")]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E76</error-code>
						<actionmessage><![CDATA["For specific message types, an European currency must not be used as the currency of settlement after a cut-off date (Error Code: E76)."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FA-52a-A</name>
						<fieldname>A.52a.Party_Identifier</fieldname>
						<comment><![CDATA[FA-52a-A
The value specified for Party Identifier should indicate a national clearing system code.]]></comment>
						<formula><![CDATA[VerifyPartyIdentifier($value, A.F52a.FormatOption, false, false);]]></formula>
						<enabled>false</enabled>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>FA-52a-A</error-code>
						<actionmessage><![CDATA["Party Identifier is not valid. The value following the national clearing system code does not conform to the format specified for that code."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-52a-A</name>
						<fieldname>B.52a.Party_Identifier</fieldname>
						<comment><![CDATA[FB-52a-A
The value specified for Party Identifier should indicate a national clearing system code.]]></comment>
						<formula><![CDATA[VerifyPartyIdentifier($value, B.F52a.FormatOption, false, false);]]></formula>
						<enabled>false</enabled>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>FB-52a-A</error-code>
						<actionmessage><![CDATA["Party Identifier is not valid. The value following the national clearing system code does not conform to the format specified for that code."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-57a-A</name>
						<fieldname>B.57a.Party_Identifier</fieldname>
						<comment><![CDATA[FB-57a-A
The value specified for Party Identifier should indicate a national clearing system code.]]></comment>
						<formula><![CDATA[VerifyPartyIdentifier($value, B.F57a.FormatOption, true, false);]]></formula>
						<enabled>false</enabled>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>FB-57a-A</error-code>
						<actionmessage><![CDATA["Party Identifier is not valid. The value following the national clearing system code does not conform to the format specified for that code."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FA-72-C</name>
						<fieldname>A.72.Narrative-Structured_Format</fieldname>
						<formula><![CDATA[def Actualvalue = replace($value, "\r\n", "\n");
def lines = Split("\n", Actualvalue);
def str = Left(Actualvalue, 6);
def line1format = false;
def line3format = false;
def TREFformat = true;
def CHGSformat = true;
def TEXTformat = true;
def format = true;
def count = 0;
def TREFcount = 0;
def CHGScount = 0;
def TEXTcount = 0;
def i = lines.Length();
if(In(str, "/REJT/", "/RETN/")) {
    if(i <= 6) {
        //if '/REJT/' or '/RETN/' format of 1st line must be "6!x2!n[1a]['/'2c]" & format of 2nd line must be "('/'2!c 2!n'/')[29x]" or "('/X'1c2!n'/')[29x]"
        //if format of 2nd line is "('/'2!c 2!n'/')" then the 6 characters must be one of the codes given below
        line1format = (VerifyFormat(lines[0], "6!x2!n[1a]['/'2c]"));
        if(line1format && lines.Length() > 2) {
            if(!lines[1].StartsWith("/X")) {
                if(VerifyFormat(lines[1], "('/'2!c 2!n'/')[29x]")) {
                	def startStr = lines[1].Left(6);
                    if((!In(startStr, "/AC01/", "/AC02/", "/AC03/", "/AC04/", "/AC05/", "/AC06/", 
                            "/AM01/", "/AM02/", "/AM03/", "/AM04/", "/AM05/", "/AM06/", "/AM07/", 
                            "/AM08/", "/AG01/", "/AG02/", "/BE01/", "/BE02/", "/BE03/", "/BE04/", 
                            "/BE05/", "/DT01/", "/MS01/", "/PY01/", "/RC01/", "/RC02/", "/RC03/", 
                            "/RC04/", "/RF01/", "/TM01/", "/RR01/", "/RR02/", "/RR03/")))
                        return false;
                }
                else
                    return false;
            }
            else if(lines[1].StartsWith("/X") && !VerifyFormat(lines[1], "('/X'1c2!n'/')[29x]"))
                return false;
        }
        else
            return false;
        //Line3 is mandatory and should have the format "/MREF/16x". Lines 4, 5 and 6 are optional
        //If lines 4, 5 or 6 or any combination exists and if the first 6 characters starts with either '/TREF/' or '/CHGS/' or '/TEXT/' or '//'
        //it should satisfy the format given. Also if line starts with '//' it can appear a max of 2 times
        line3format = Equal(Left(lines[2], 6), "/MREF/") && 
                        VerifyFormat(Substring(lines[2], 6), "16x");
        if(line3format) {
            while(i > 3) {
                def str1 = Left(lines[i - 1], 6);
                def str2 = Substring(lines[i - 1], 6);
                if(In(str1, "/TREF/", "/CHGS/", "/TEXT/") || StartsWith(lines[i - 1], "//")) {
                    if(str1 == "/TREF/") {
                        TREFformat = VerifyFormat(str2, "16x");
                        TREFcount += 1;
                    }
                    else if(str1 == "/CHGS/") {
                        CHGSformat = (VerifyFormat(str2, "3!a15d") && 
                                        IsISOCurrencyCode(Substring(lines[i - 1], 6, 3)));
                        CHGScount += 1;
                    }
                    else if(str1 == "/TEXT/") {
                        TEXTformat = (VerifyFormat(str2, "29x"));
                        TEXTcount += 1;
                    }
                    else if(StartsWith(lines[i - 1], "//")) {
                        def str3 = Substring(lines[i - 1], 2);
                        format = (VerifyFormat(str3, "33x"));
                        count += 1;
                        if(!format || count > 2)
                            break;
                    }
                }
                else
                    return false;
                i = i - 1;
            }
        }
        else
            return false;
        if(!TREFformat || !CHGSformat || !TEXTformat || !format || count > 2 || TREFcount > 1 || 
             CHGScount > 1 || TEXTcount > 1)
            return false;
    }
    else
        return false;
}
return true;
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T80</error-code>
						<actionmessage><![CDATA["Field 72 Reject/Return: code word error, or mandatory code word missing, or code word not in the proper sequence, or format 6*35x not satisfied"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FC-72-D</name>
						<fieldname>A.72.Narrative-Structured_Format</fieldname>
						<formula><![CDATA[def Actualvalue = replace($value, "\r\n", "\n");
def lines = Split("\n", Actualvalue);
if(lines.Length() > 3) {
    for(def i = 0; i < lines.Length(); ++i) {
        if(lines[i].Substring(0, 6) == "/CHGS/") {
            def format = lines[i].Substring(6);
            def cur = format.Substring(0, 3);
            def amt = format.Substring(3);
            def Lastslash = FindFirst(amt, "/");
            if(Lastslash != -1)
            	amt = amt.left(Lastslash);
            def pos = FindFirst(amt, ",");
            amt = Replace(amt, ",", ".");
            def isvalid = IsValidDecimals(cur, amt);
            if(!isvalid)
                return false;

        }
    }
}
return true;
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C03</error-code>
						<actionmessage><![CDATA["Field 72 Reject/Return: The number of digits following the comma must not exceed the maximum number allowed for the currency specified."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FA-72-E</name>
						<fieldname>A.72.Narrative-Structured_Format</fieldname>
						<formula><![CDATA[ApplyERICodeValidationStructured($value)]]></formula>
						<enabled>false</enabled>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T47</error-code>
						<actionmessage><![CDATA["In an ERI field (i.e. fields 61, 72, 77A, 79, 86) the data part of a code word /OCMT/, or /CHGS/, is being validated, but the ending separator (i.e. third slash) is missing or the code words are duplicated."]]></actionmessage>
					</fieldvalidation>
				</fieldvalidations>
			</datavalidationrules>
			<tlrvalidationrules>
				<fieldvalidations>
				</fieldvalidations>
			</tlrvalidationrules>
		</validationrules>
		<elementproperties>
			<propertymap>
				<property name="codegen.java.properties">
					<value>
						<propertymap type="com.tplus.transform.design.PropertiesDef">
							<property name="Java Package Name" value="com.transform.external.%e"/>
							<property name="Jar Name" value="%c.jar"/>
							<property name="Manifest Entries" value="transformrt.jar swiftrt.jar swiftresources.jar"/>
							<property name="Data Source" value=""/>
						</propertymap>
					</value>
				</property>
			</propertymap>
		</elementproperties>
	</externalmessage>
	<externalmessage xsi:type="SwiftFormat" type="SwiftFormat" version="5.1.2" rulename="MT105_2016" formattype="SwiftFormat" >
		<description><![CDATA[This message is sent by a financial institution to another financial institution. It is used as an envelope to convey an EDIFACT message.]]></description>
		<standard>SWIFT</standard>
		<standard-name>MT105</standard-name>
		<standard-version>SRG 2016</standard-version>
		<standard-release-qualifier>20160308</standard-release-qualifier>
		<standard-category>Customer Payments &amp; Cheques</standard-category>
		<standard-detailed-name>EDIFACT Envelope</standard-detailed-name>
		<version>1.0</version>
		<SwiftFields>
			<customizable>true</customizable>
			<modifiable>false</modifiable>
			<SwiftMessageType>User</SwiftMessageType>
			<max-length>2000</max-length>
			<HeaderAndTrailerType>SWIFT_INPUT_OUTPUT_HEADER</HeaderAndTrailerType>
			<Header>
				<fields>
					<field>
						<name>Basic Header</name>
						<description><![CDATA[The Basic Header is given in Block 1 of a SWIFT message and is the only header that appears on all messages. The Basic Header provides the fundamental reference for any particular message and is almost always automatically built by the CBT.
The Basic Header has the same format for both input and output messages. However, the information contained in the Basic Header is relative to the sender when the message is input but relative to the receiver when the same message is output.]]></description>
						<datatype>Section</datatype>
						<required>true</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Application Identifier</name>
								<description><![CDATA[The Application Identifier identifies the application within which the message is being sent or received. The available options are:

F = FIN All user-to-user, FIN system and FIN service messages 
A = GPA Most GPA system and service messages 
L = GPA Certain GPA service messages, for example, LOGIN, LAKs, ABORT 

These values are automatically assigned by the SWIFT system and the user's CBT, but the user should be aware of their existence and significance
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Service Identifier</name>
								<description><![CDATA[The Service Identifier consists of 2 numeric characters. It identifies the type of data that is being sent or received and, in doing so, whether the message which follows is one of the following:

a user-to-user message

a system message

a service message, for example, a session control command, such as SELECT, or a logical acknowledgement, such as ACK/SAK/UAK

Users will be primarily concerned with identifier '01' which applies to all GPA and FIN system and user-to-user messages. Other values include: '21' for message acknowledgements such as ACK/NAK, UAK/UNK, '03' for SELECT commands, and 
so on]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>2</length>
							</field>
							<field>
								<name>LT Identifier</name>
								<description><![CDATA[This 12-character SWIFT address, given in the Basic Header Block, is the address of the sending LT for input messages or of the receiving LT for output messages, and includes the Branch Code.

In the Basic Header, the LT Code within the LT Identifier is specific to the LT that has established the session in which the message is being transmitted, that is the sending LT for input messages or the receiving LT for output messages.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>12</length>
							</field>
							<field>
								<name>Session Number</name>
								<description><![CDATA[The Session Number identifies the session in which the message was transmitted. Within the Basic Header, the 4-digit Session Number is the user's current GPA or FIN Session Number.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Sequence Number</name>
								<description><![CDATA[The sequence number always consists of 6 digits. It is the ISN of the sender's current input session or the OSN of the receiver's current output session.

Note: The sequence number is not present in those messages with an Application Identifier of 'L' (for example LOGIN). The sequence number is, however, a key element in the processing of retrievals. Therefore, LOGINs and attempted LOGINs are not retrievable
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>6</length>
							</field>
						</fields>
					</field>
					<field>
						<name>Application Header Input</name>
						<description><![CDATA[The Application Header of a SWIFT message provides information about the message itself.

The Application Header is given in Block 2 of a SWIFT message. It differs according to whether the message is a GPA or a FIN message and whether the Application Header is part of an input or an output message.

]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Input/Output Identifier</name>
								<description><![CDATA[For an input message, the Input/Output Identifier consists of the single letter 'I'.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Message Type</name>
								<description><![CDATA[The Message Type consists of 3 digits which define the MT number of the message being input. The example used above is for an MT 100 Customer Transfer]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>3</length>
							</field>
							<field>
								<name>Receiver's Address</name>
								<description><![CDATA[This address is the 12-character SWIFT address of the receiver of the message, but with a LT Code of 'X'. It defines the destination to which the message should be sent.

The system will replace the 'X' with a specific LT Code on delivery of the message according to the delivery control exercised by the receiving user.

The Branch Code is mandatory and will be validated. The default of 'XXX' may be used, as in the example above.

Unless otherwise documented, system messages addressed to the SWIFT system itself should be addressed to SWFTXXXXXXXX.

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>12</length>
							</field>
							<field>
								<name>Message Priority</name>
								<description><![CDATA[This character, used within FIN Application Headers only, defines the priority with which a message is delivered. The possible values are:

S = System

U = Urgent

N = Normal

Message Priority 'S' must be used for user-to-system messages; for user-to-user messages either 'U' or 'N' can be used. In the absence of user-specified delivery criteria, system messages are always delivered first, followed by urgent priority messages and then normal priority messages.

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Delivery Monitoring</name>
								<description><![CDATA[Delivery monitoring options apply only to FIN user-to-user messages, and allow the sender of a message to request:

automatic MT 011 Delivery Notification once the message has been delivered

automatic MT 010 Non-Delivery Warning if a message is not delivered within the specified obsolescence period (see below)

both, or neither, options. This may be requested on an individual message basis.

The chosen option is expressed as a single digit:

1 = Non-Delivery Warning

2 = Delivery Notification

3 = Non-Delivery Warning and Delivery Notification. 
If the message has priority 'U' then the user must request delivery monitoring option '1' or '3'. If the message has priority 'N', the user can request delivery monitoring option '2', or, by leaving the option blank, no delivery monitoring.
]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>1</length>
							</field>
							<field>
								<name>Obsolescence Period</name>
								<description><![CDATA[The obsolescence period defines the period of time after which a Delayed Message (DLM) trailer is added to a FIN user-to-user message when the message is delivered. For urgent priority messages, it is also the period of time after which, if the message remains undelivered, a Non-Delivery Warning is generated.

The values for the obsolescence period are 003 (15 minutes) for 'U' priority, and 020 (100 minutes) for 'N' priority. An obsolescence period can only be specified when delivery monitoring has been requested (option 1 or 3 for urgent priority messages, option 2 for normal priority messages). If no delivery monitoring has been requested, and an obsolescence period is specified, the message will be NAKed with error code H25.

GPA input Application Headers are similar to their FIN equivalents except that GPA messages do not specify priority, delivery monitoring, nor obsolescence period.

]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>3</length>
							</field>
						</fields>
					</field>
					<field>
						<name>Application Header Output</name>
						<description><![CDATA[The Application Header of a SWIFT message provides information about the message itself.

The Application Header is given in Block 2 of a SWIFT message. It differs according to whether the message is a GPA or a FIN message and whether the Application Header is part of an input or an output message.

]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Input/Output Identifier</name>
								<description><![CDATA[For an input message, the Input/Output Identifier consists of the single letter 'I'.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Message Type</name>
								<description><![CDATA[Three digits indicating the Message Type.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>3</length>
							</field>
							<field>
								<name>Input Time</name>
								<description><![CDATA[The first occurrence of the time field contains the system time and date. This is the generation time in Greenwich Mean Time (GMT).
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Message Input Reference</name>
								<description><![CDATA[The input MIR.

If the message is generated by the system, the input time is the generation time (in GMT) and the input MIR is the system MIR

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>28</length>
							</field>
							<field>
								<name>Output Date</name>
								<description><![CDATA[The output date, local to the receiver.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>6</length>
							</field>
							<field>
								<name>Output Time</name>
								<description><![CDATA[The second occurrence of the time field contains the output time and date. This is in a time local to the receiver.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Message Priority</name>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
						</fields>
					</field>
					<field>
						<name>User Header</name>
						<description><![CDATA[The User Header is an optional header available within FIN for user-to-user messages only. It appears in Block 3 of a SWIFT message, and allows users to provide their own reference within the headers for a particular message.

A User Header can only be assigned by the sender of a message and, if assigned, will always appear on the output message copy. Relevant parts of the User Header will be repeated in related system messages and acknowledgements.

Block 3 may contain tag 113, defining banking priorities, and tag 108, which is a user reference. The user reference part of the User Header may be used as one of the selection criteria when retrieving a message.

The optional field tags 103 and 115 are also used in Block 3 for the FIN Copy service. The order of tags, when present, is 103, 113, 108 and 115.

An optional field tag 119 can be included in Block 3 of certain messages to specify that different validation rules are to be applied. Agreed code words in field 119 indicate what validation rules SWIFT will apply. If field 119 is present, it should appear after field 108
]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Service Identifier</name>
								<description><![CDATA[For any message which the user submits to a FIN Copy service, Block 3 requires an additional field 103 which contains a three-character Service Identifier unique to a specific FIN Copy service. By using a unique identifier it is possible to support access to multiple services within the same CBT.
]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>3</length>
								<tag>103</tag>
							</field>
							<field>
								<name>Banking Priority</name>
								<description><![CDATA[Assigned by the sender of the message.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>4</length>
								<tag>113</tag>
							</field>
							<field>
								<name>Message User Reference</name>
								<description><![CDATA[Assigned by the sender of the message.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>16</length>
								<tag>108</tag>
							</field>
							<field>
								<name>Validation Flag</name>
								<description><![CDATA[Indicates whether a special validation needs to be performed by FIN. The following are examples of the values this field may take. Please note that this list is subject to change:

ISITC indicates validation of ISITC Standards. Only to be used with MT 521 and MT 523.

REMIT identifies the presence of field 77T. Only to be used in MT 103.

RFDD indicates that the message is a request for direct debit. Only to be used in MT 104.

STP indicates that the message is validated according to straight through processing principles. Only to be used in MT 103.

]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>119</tag>
							</field>
							<field>
								<name>Balance checkpoint date and time</name>
								<description><![CDATA[This field contains the balance checkpoint date and time consisting of a date (YYMMDD) and a time (HHMMSS[ss], where 'ss' indicates hundredths of a second). The MI that is subscribed to MIRS will always copy this reference from field tag 13G of the last MT298/091 that it sent into the related MT 298/093 or MT 097 that it generates. ]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>423</tag>
							</field>
							<field>
								<name>Message Input Reference</name>
								<description><![CDATA[This field contains the MIR of the payment message that is related to the notification messages in which this field is present. The MI that is subscribed to MIRS will copy it from the received payment message. In a FINCopy scenario, this field must contain the MIR of the related MT 096]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>106</tag>
							</field>
							<field>
								<name>Related Reference</name>
								<description><![CDATA[This field contains the reference of the payment that is related to the notification messages in which this field is present. The payment itself was not the result of a FIN message. The value of this field must correspond to the related reference (field 21) in the MT298/093. The format of field 424 is 16x.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>424</tag>
							</field>
							<field>
								<name>Service Type Identifier</name>
								<description><![CDATA[This field identifies the applicable global payment service type. The format of field 111 is 3!n.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>111</tag>
							</field>
							<field>
								<name>Unique End-To-End Transaction Reference</name>
								<description><![CDATA[This field provides an end-to-end reference across a payment transaction. The format of field 121 is 36!x.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>121</tag>
							</field>
							<field>
								<name>Addressee Information</name>
								<description><![CDATA[Tag 115 is only valid for output messages. Information from Central Institution to the receiver of payment message. Information is input in the MT 097 FIN Copy Message Authorisation/Refusal Notification in Y-Copy mode.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>115</tag>
							</field>
							<field>
								<name>Payment Release Information Receiver (FINInform Services)</name>
								<description><![CDATA[Tag 165 is only valid for output messages. This field contains information from the server destination to the receiver of payment message. It is only available for use in FINInform services that operate in Y-copy mode.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>165</tag>
							</field>
							<field>
								<name>Receiver Information</name>
								<description><![CDATA[Tag 433 is only valid for output messages. The screening service inputs information in the MT 097 FINCopy Message Authorisation/Refusal Notification, in Y-Copy mode. FINCopy copies the information to the receiver of the screened message.
				    The following values can be present in this field:
				      AOK: message automatically released by screening service
				      FPO: compliance officer has flagged the screening result as false positive
				      NOK: compliance officer has flagged the screened message as suspect
				    The code word can optionally be followed by additional information (up to 20 characters from the x character set).]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>433</tag>
							</field>
						</fields>
					</field>
				</fields>
			</Header>
			<Data>
				<Fields>
					<SwiftField Name="27">
						<SwiftFieldDef Name="27">
							<Generic>false</Generic>
							<Description><![CDATA[Sequence of Total]]></Description>
							<Option Name="">
								<Format><![CDATA[1!n/1!n]]></Format>
								<Specification><![CDATA[(Message Number) (Sequence Number)]]></Specification>
								<Description><![CDATA[Sequence of Total]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options> </Options>
					</SwiftField>
					<SwiftField Name="20">
						<SwiftFieldDef Name="20">
							<Generic>false</Generic>
							<Description><![CDATA[Transaction Reference Number]]></Description>
							<Option Name="">
								<Format><![CDATA[16x]]></Format>
								<Specification><![CDATA[(Reference)]]></Specification>
								<Description><![CDATA[Transaction Reference Number]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options> </Options>
						<Validations>
							<SubField Name="Reference">
								<Validation>
									<Options> </Options>
									<ErrorCode>T26</ErrorCode>
									<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive slashes '//' (Error code(s): T26) .]]></Comment>
									<ValidationPattern xsi:type="T26" Type="T26">
										<Type>T26</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="21">
						<SwiftFieldDef Name="21">
							<Generic>false</Generic>
							<Description><![CDATA[Related Reference]]></Description>
							<Option Name="">
								<Format><![CDATA[16x]]></Format>
								<Specification><![CDATA[(Related Reference)]]></Specification>
								<Description><![CDATA[Related Reference]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options> </Options>
						<Validations>
							<SubField Name="Related_Reference">
								<Validation>
									<Options> </Options>
									<ErrorCode>T26</ErrorCode>
									<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive slashes '//' (Error code(s): T26) .]]></Comment>
									<ValidationPattern xsi:type="T26" Type="T26">
										<Type>T26</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="12">
						<SwiftFieldDef Name="12">
							<Generic>false</Generic>
							<Description><![CDATA[Sub-Message Type]]></Description>
							<Option Name="">
								<Format><![CDATA[3!n]]></Format>
								<Specification><![CDATA[(MT Number)]]></Specification>
								<Description><![CDATA[Sub-Message Type]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options> </Options>
					</SwiftField>
					<SwiftField Name="77F">
						<SwiftFieldDef Name="77">
							<Generic>false</Generic>
							<Description><![CDATA[EDIFACT Message]]></Description>
							<Option Name="F">
								<Format><![CDATA[1800y]]></Format>
								<Specification><![CDATA[(EDIFACT Message)]]></Specification>
								<Description><![CDATA[EDIFACT Message]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options>F</Options>
					</SwiftField>
				</Fields>
			</Data>
			<Trailer>
				<fields>
					<field>
						<name>Message Authentication Code</name>
						<description><![CDATA[Allows authentication by the receiving user. It is followed by an authentication result.

This trailer is mandatory for most user-to-user message categories within the FIN application. When the FIN Copy Service is used a PAC trailer, if present, follows the MAC trailer.

Format:

{MAC:<authentication-result>}

where <authentication-result> = 8!h

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>8</length>
						<tag>MAC</tag>
					</field>
					<field>
						<name>Proprietary Authentication Code</name>
						<description><![CDATA[The PAC is used within the FIN Copy service only, when using the double authentication option. The PAC is included in Block 5 of FIN user-to-user messages, immediately after the MAC trailer, if present.

This is calculated on the extracted fields of Block 4 of the message, the value of field 115, if present, and the <authentication-result> of the MAC trailer for Copy Services with double authentication.

Thus, the end-of-block indicator (CrLf-) is included in the PAC calculation, and the fields are defined as follows:

The first three characters are CrLf:

The field and the delimiter are present, that is, 32A:, 20:, and so on.

All subfields and their delimiters are present.

Format:

{PAC:[<authentication-result>]}

where <authentication-result> is mandatory on input messages only and <authentication-result> = 8!h

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>8</length>
						<tag>PAC</tag>
					</field>
					<field>
						<name>Checksum</name>
						<description><![CDATA[The checksum is computed based on the receiver's address (12 characters, with 9th character replaced by X) plus the Text Block. This trailer allows the system and the CBT to check that messages have not been corrupted due to a system malfunction or an undetected transmission error.

Format:

{CHK:<checksum-result>}

where <checksum-result> = 12!h

Note: This trailer is mandatory for FIN and GPA messages (Service Identifier 01).

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>12</length>
						<tag>CHK</tag>
					</field>
					<field>
						<name>System Originated Message</name>
						<description><![CDATA[The system message or service message which is generated by a system PLT has a SYS trailer. All solicited system messages (Service Identifier 01) contain the MIR of the request and may also contain the time.

Format:

{SYS:[<time><mir>]}

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>SYS</tag>
					</field>
					<field>
						<name>Test And Training Message</name>
						<description><![CDATA[Mandatory for FIN and GPA messages (Service Identifier 01) sent by, or delivered to, a Test & Training Logical Terminal (LT). This trailer has a tag only, and no value.

Format:

{TNG:}
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>0</length>
						<tag>TNG</tag>
					</field>
					<field>
						<name>Possible Duplicate Emission</name>
						<description><![CDATA[This trailer is used by the destination of the message. It only applies to FIN user-to-user messages (Service Identifier 01, message categories reserved for banking messages). There can be multiple PDEs. The system does not verify the order nor restrict the number (except for maximum message length).

Correctly formatted PDE trailers applied to user-to-system messages are accepted by the system, but not processed. This means that the system does not check to see if the original message exists. Therefore, a retrieval request sent with a PDE trailer may be processed twice if the original message was received by the system.

Format:

{PDE:[<time><mir>]}

where <time><mir> refers to the emission of the previous possible issue.

Note: It can be added automatically by a CBT or manually by a user. It may be followed by the MIR and the time of its previous possible messages.

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>PDE</tag>
					</field>
					<field>
						<name>Delayed Message</name>
						<description><![CDATA[This trailer is added to all FIN user-to-user output messages that have exceeded their obsolescence period. If this trailer appears in GPA or FIN system messages, it must be ignored. This trailer has a tag only, and no value.

The Obsolescence Period is:

U = 15 minutes

N = 100 minutes

Format:

{DLM:}

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>0</length>
						<tag>DLM</tag>
					</field>
					<field>
						<name>Possible Duplicate Message</name>
						<description><![CDATA[Added by the system to any output message (GPA and FIN Service Identifier 01) being resent because a prior delivery may be invalid. If a system PLT receives a report request with a PDM, the response has a plain PDM (without the optional delivery reference). Other PDMs may be added as a result of unsuccessful delivery attempts to the user. 
Format:
{PDM:[<time><mor>]}
where <time> and the Message Output Reference <mor> are that of the previous attempt.
Note: For messages recovered after a system failure, the optional fields may not be present.
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>PDM</tag>
					</field>
					<field>
						<name>Message Reference</name>
						<description><![CDATA[The MRF trailer is used to specify the message reference of the original user message in MT 096 FIN Copy to Central Institution Messages.
Format:
{MRF:<date><full-time><mir>}
where <mir> is that of the original user message whose fields are copied in the MT 096 FIN Copy to Central Institution Message.
Note: The MRF is specific to FIN Copy. The MRF trailer is automatically generated in the MT 096 FIN Copy to Central Institution Message and can only be reused in field 109 of the MT 096 FIN Copy to Central Institution Message to identify the MT 096 to which the MT 097 is a response. The format of the MRF is subject to change.
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>MRF</tag>
					</field>
				</fields>
			</Trailer>
		</SwiftFields>
		<validationrules name="Default">
			<hdrvalidationrules>
				<fieldvalidations>
					<fieldvalidation>
						<name>U09</name>
						<formula><![CDATA[if($this.Header.GetFieldIndex("User_Header") != -1) {
    def userHeader = $this.Header.GetSection("User_Header");
    if(userHeader.$size > 0 && userHeader[0].IsNotNull("Validation_Flag")) {
        return false;
    }
}
return true;
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U09</error-code>
						<actionmessage><![CDATA["User has used tag 119 in a message that is not a candidate for special processing"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>U03</name>
						<fieldname>User Header</fieldname>
						<formula><![CDATA[Iff(IsNotNull(User_Header.Service_Type_Identifier), 
    IsNotNull(User_Header.Unique_End_To_End_Transaction_Reference))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U03</error-code>
						<actionmessage><![CDATA["When populating an end-to-end reference, both fields 111 and 121 must be populated: a message that contains only one of these two fields will not be accepted by FIN."]]></actionmessage>
					</fieldvalidation>
				</fieldvalidations>
			</hdrvalidationrules>
			<datavalidationrules>
				<fieldvalidations>
					<fieldvalidation>
						<name>F-12</name>
						<fieldname>12.MT_Number</fieldname>
						<comment><![CDATA[F-12
Field 12 must have the format 3!n, and must be within the range 100-999.]]></comment>
						<formula><![CDATA[return Between($value, 100, 999)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T18</error-code>
						<actionmessage><![CDATA["Field 12 must have the format 3!n, and must be within the range 100-999."]]></actionmessage>
					</fieldvalidation>
				</fieldvalidations>
			</datavalidationrules>
			<tlrvalidationrules>
				<fieldvalidations>
				</fieldvalidations>
			</tlrvalidationrules>
		</validationrules>
		<elementproperties>
			<propertymap>
				<property name="codegen.java.properties">
					<value>
						<propertymap type="com.tplus.transform.design.PropertiesDef">
							<property name="Java Package Name" value="com.transform.external.%e"/>
							<property name="Jar Name" value="%c.jar"/>
							<property name="Manifest Entries" value="transformrt.jar swiftrt.jar swiftresources.jar"/>
							<property name="Data Source" value=""/>
						</propertymap>
					</value>
				</property>
			</propertymap>
		</elementproperties>
	</externalmessage>
	<externalmessage xsi:type="SwiftFormat" type="SwiftFormat" version="5.1.2" rulename="MT107_2016" formattype="SwiftFormat" >
		<description><![CDATA[This message is sent by the creditor's financial institution or another financial institution, to the debtor's financial Institution or another financial institution, on behalf of the creditor, to order the debit of the debtor's account and to collect payment from this account.]]></description>
		<standard>SWIFT</standard>
		<standard-name>MT107</standard-name>
		<standard-version>SRG 2016</standard-version>
		<standard-release-qualifier>20160308</standard-release-qualifier>
		<standard-category>Customer Payments &amp; Cheques</standard-category>
		<standard-detailed-name>General Direct Debit Message</standard-detailed-name>
		<version>1.0</version>
		<SwiftFields>
			<customizable>true</customizable>
			<modifiable>false</modifiable>
			<SwiftMessageType>User</SwiftMessageType>
			<max-length>10000</max-length>
			<HeaderAndTrailerType>SWIFT_INPUT_OUTPUT_HEADER</HeaderAndTrailerType>
			<Header>
				<fields>
					<field>
						<name>Basic Header</name>
						<description><![CDATA[The Basic Header is given in Block 1 of a SWIFT message and is the only header that appears on all messages. The Basic Header provides the fundamental reference for any particular message and is almost always automatically built by the CBT.
The Basic Header has the same format for both input and output messages. However, the information contained in the Basic Header is relative to the sender when the message is input but relative to the receiver when the same message is output.]]></description>
						<datatype>Section</datatype>
						<required>true</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Application Identifier</name>
								<description><![CDATA[The Application Identifier identifies the application within which the message is being sent or received. The available options are:

F = FIN All user-to-user, FIN system and FIN service messages 
A = GPA Most GPA system and service messages 
L = GPA Certain GPA service messages, for example, LOGIN, LAKs, ABORT 

These values are automatically assigned by the SWIFT system and the user's CBT, but the user should be aware of their existence and significance
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Service Identifier</name>
								<description><![CDATA[The Service Identifier consists of 2 numeric characters. It identifies the type of data that is being sent or received and, in doing so, whether the message which follows is one of the following:

a user-to-user message

a system message

a service message, for example, a session control command, such as SELECT, or a logical acknowledgement, such as ACK/SAK/UAK

Users will be primarily concerned with identifier '01' which applies to all GPA and FIN system and user-to-user messages. Other values include: '21' for message acknowledgements such as ACK/NAK, UAK/UNK, '03' for SELECT commands, and 
so on]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>2</length>
							</field>
							<field>
								<name>LT Identifier</name>
								<description><![CDATA[This 12-character SWIFT address, given in the Basic Header Block, is the address of the sending LT for input messages or of the receiving LT for output messages, and includes the Branch Code.

In the Basic Header, the LT Code within the LT Identifier is specific to the LT that has established the session in which the message is being transmitted, that is the sending LT for input messages or the receiving LT for output messages.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>12</length>
							</field>
							<field>
								<name>Session Number</name>
								<description><![CDATA[The Session Number identifies the session in which the message was transmitted. Within the Basic Header, the 4-digit Session Number is the user's current GPA or FIN Session Number.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Sequence Number</name>
								<description><![CDATA[The sequence number always consists of 6 digits. It is the ISN of the sender's current input session or the OSN of the receiver's current output session.

Note: The sequence number is not present in those messages with an Application Identifier of 'L' (for example LOGIN). The sequence number is, however, a key element in the processing of retrievals. Therefore, LOGINs and attempted LOGINs are not retrievable
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>6</length>
							</field>
						</fields>
					</field>
					<field>
						<name>Application Header Input</name>
						<description><![CDATA[The Application Header of a SWIFT message provides information about the message itself.

The Application Header is given in Block 2 of a SWIFT message. It differs according to whether the message is a GPA or a FIN message and whether the Application Header is part of an input or an output message.

]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Input/Output Identifier</name>
								<description><![CDATA[For an input message, the Input/Output Identifier consists of the single letter 'I'.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Message Type</name>
								<description><![CDATA[The Message Type consists of 3 digits which define the MT number of the message being input. The example used above is for an MT 100 Customer Transfer]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>3</length>
							</field>
							<field>
								<name>Receiver's Address</name>
								<description><![CDATA[This address is the 12-character SWIFT address of the receiver of the message, but with a LT Code of 'X'. It defines the destination to which the message should be sent.

The system will replace the 'X' with a specific LT Code on delivery of the message according to the delivery control exercised by the receiving user.

The Branch Code is mandatory and will be validated. The default of 'XXX' may be used, as in the example above.

Unless otherwise documented, system messages addressed to the SWIFT system itself should be addressed to SWFTXXXXXXXX.

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>12</length>
							</field>
							<field>
								<name>Message Priority</name>
								<description><![CDATA[This character, used within FIN Application Headers only, defines the priority with which a message is delivered. The possible values are:

S = System

U = Urgent

N = Normal

Message Priority 'S' must be used for user-to-system messages; for user-to-user messages either 'U' or 'N' can be used. In the absence of user-specified delivery criteria, system messages are always delivered first, followed by urgent priority messages and then normal priority messages.

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Delivery Monitoring</name>
								<description><![CDATA[Delivery monitoring options apply only to FIN user-to-user messages, and allow the sender of a message to request:

automatic MT 011 Delivery Notification once the message has been delivered

automatic MT 010 Non-Delivery Warning if a message is not delivered within the specified obsolescence period (see below)

both, or neither, options. This may be requested on an individual message basis.

The chosen option is expressed as a single digit:

1 = Non-Delivery Warning

2 = Delivery Notification

3 = Non-Delivery Warning and Delivery Notification. 
If the message has priority 'U' then the user must request delivery monitoring option '1' or '3'. If the message has priority 'N', the user can request delivery monitoring option '2', or, by leaving the option blank, no delivery monitoring.
]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>1</length>
							</field>
							<field>
								<name>Obsolescence Period</name>
								<description><![CDATA[The obsolescence period defines the period of time after which a Delayed Message (DLM) trailer is added to a FIN user-to-user message when the message is delivered. For urgent priority messages, it is also the period of time after which, if the message remains undelivered, a Non-Delivery Warning is generated.

The values for the obsolescence period are 003 (15 minutes) for 'U' priority, and 020 (100 minutes) for 'N' priority. An obsolescence period can only be specified when delivery monitoring has been requested (option 1 or 3 for urgent priority messages, option 2 for normal priority messages). If no delivery monitoring has been requested, and an obsolescence period is specified, the message will be NAKed with error code H25.

GPA input Application Headers are similar to their FIN equivalents except that GPA messages do not specify priority, delivery monitoring, nor obsolescence period.

]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>3</length>
							</field>
						</fields>
					</field>
					<field>
						<name>Application Header Output</name>
						<description><![CDATA[The Application Header of a SWIFT message provides information about the message itself.

The Application Header is given in Block 2 of a SWIFT message. It differs according to whether the message is a GPA or a FIN message and whether the Application Header is part of an input or an output message.

]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Input/Output Identifier</name>
								<description><![CDATA[For an input message, the Input/Output Identifier consists of the single letter 'I'.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Message Type</name>
								<description><![CDATA[Three digits indicating the Message Type.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>3</length>
							</field>
							<field>
								<name>Input Time</name>
								<description><![CDATA[The first occurrence of the time field contains the system time and date. This is the generation time in Greenwich Mean Time (GMT).
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Message Input Reference</name>
								<description><![CDATA[The input MIR.

If the message is generated by the system, the input time is the generation time (in GMT) and the input MIR is the system MIR

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>28</length>
							</field>
							<field>
								<name>Output Date</name>
								<description><![CDATA[The output date, local to the receiver.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>6</length>
							</field>
							<field>
								<name>Output Time</name>
								<description><![CDATA[The second occurrence of the time field contains the output time and date. This is in a time local to the receiver.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Message Priority</name>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
						</fields>
					</field>
					<field>
						<name>User Header</name>
						<description><![CDATA[The User Header is an optional header available within FIN for user-to-user messages only. It appears in Block 3 of a SWIFT message, and allows users to provide their own reference within the headers for a particular message.

A User Header can only be assigned by the sender of a message and, if assigned, will always appear on the output message copy. Relevant parts of the User Header will be repeated in related system messages and acknowledgements.

Block 3 may contain tag 113, defining banking priorities, and tag 108, which is a user reference. The user reference part of the User Header may be used as one of the selection criteria when retrieving a message.

The optional field tags 103 and 115 are also used in Block 3 for the FIN Copy service. The order of tags, when present, is 103, 113, 108 and 115.

An optional field tag 119 can be included in Block 3 of certain messages to specify that different validation rules are to be applied. Agreed code words in field 119 indicate what validation rules SWIFT will apply. If field 119 is present, it should appear after field 108
]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Service Identifier</name>
								<description><![CDATA[For any message which the user submits to a FIN Copy service, Block 3 requires an additional field 103 which contains a three-character Service Identifier unique to a specific FIN Copy service. By using a unique identifier it is possible to support access to multiple services within the same CBT.
]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>3</length>
								<tag>103</tag>
							</field>
							<field>
								<name>Banking Priority</name>
								<description><![CDATA[Assigned by the sender of the message.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>4</length>
								<tag>113</tag>
							</field>
							<field>
								<name>Message User Reference</name>
								<description><![CDATA[Assigned by the sender of the message.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>16</length>
								<tag>108</tag>
							</field>
							<field>
								<name>Validation Flag</name>
								<description><![CDATA[Indicates whether a special validation needs to be performed by FIN. The following are examples of the values this field may take. Please note that this list is subject to change:

ISITC indicates validation of ISITC Standards. Only to be used with MT 521 and MT 523.

REMIT identifies the presence of field 77T. Only to be used in MT 103.

RFDD indicates that the message is a request for direct debit. Only to be used in MT 104.

STP indicates that the message is validated according to straight through processing principles. Only to be used in MT 103.

]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>119</tag>
							</field>
							<field>
								<name>Balance checkpoint date and time</name>
								<description><![CDATA[This field contains the balance checkpoint date and time consisting of a date (YYMMDD) and a time (HHMMSS[ss], where 'ss' indicates hundredths of a second). The MI that is subscribed to MIRS will always copy this reference from field tag 13G of the last MT298/091 that it sent into the related MT 298/093 or MT 097 that it generates. ]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>423</tag>
							</field>
							<field>
								<name>Message Input Reference</name>
								<description><![CDATA[This field contains the MIR of the payment message that is related to the notification messages in which this field is present. The MI that is subscribed to MIRS will copy it from the received payment message. In a FINCopy scenario, this field must contain the MIR of the related MT 096]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>106</tag>
							</field>
							<field>
								<name>Related Reference</name>
								<description><![CDATA[This field contains the reference of the payment that is related to the notification messages in which this field is present. The payment itself was not the result of a FIN message. The value of this field must correspond to the related reference (field 21) in the MT298/093. The format of field 424 is 16x.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>424</tag>
							</field>
							<field>
								<name>Service Type Identifier</name>
								<description><![CDATA[This field identifies the applicable global payment service type. The format of field 111 is 3!n.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>111</tag>
							</field>
							<field>
								<name>Unique End-To-End Transaction Reference</name>
								<description><![CDATA[This field provides an end-to-end reference across a payment transaction. The format of field 121 is 36!x.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>121</tag>
							</field>
							<field>
								<name>Addressee Information</name>
								<description><![CDATA[Tag 115 is only valid for output messages. Information from Central Institution to the receiver of payment message. Information is input in the MT 097 FIN Copy Message Authorisation/Refusal Notification in Y-Copy mode.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>115</tag>
							</field>
							<field>
								<name>Payment Release Information Receiver (FINInform Services)</name>
								<description><![CDATA[Tag 165 is only valid for output messages. This field contains information from the server destination to the receiver of payment message. It is only available for use in FINInform services that operate in Y-copy mode.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>165</tag>
							</field>
							<field>
								<name>Receiver Information</name>
								<description><![CDATA[Tag 433 is only valid for output messages. The screening service inputs information in the MT 097 FINCopy Message Authorisation/Refusal Notification, in Y-Copy mode. FINCopy copies the information to the receiver of the screened message.
				    The following values can be present in this field:
				      AOK: message automatically released by screening service
				      FPO: compliance officer has flagged the screening result as false positive
				      NOK: compliance officer has flagged the screened message as suspect
				    The code word can optionally be followed by additional information (up to 20 characters from the x character set).]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>433</tag>
							</field>
						</fields>
					</field>
				</fields>
			</Header>
			<Data>
				<Fields>
					<SwiftSequence Name="A">
						<Name>A</Name>
						<Description><![CDATA[General Information]]></Description>
						<Mandatory>true</Mandatory>
						<Repeating>false</Repeating>
						<Fields>
							<SwiftField Name="20">
								<SwiftFieldDef Name="20">
									<Generic>false</Generic>
									<Description><![CDATA[Sender's Reference]]></Description>
									<Option Name="">
										<Format><![CDATA[16x]]></Format>
										<Specification><![CDATA[(Reference)]]></Specification>
										<Description><![CDATA[Sender's Reference]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options> </Options>
								<Validations>
									<SubField Name="Reference">
										<Validation>
											<Options> </Options>
											<ErrorCode>T26</ErrorCode>
											<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive slashes '//' (Error code(s): T26) .]]></Comment>
											<ValidationPattern xsi:type="T26" Type="T26">
												<Type>T26</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="23E">
								<SwiftFieldDef Name="23">
									<Generic>false</Generic>
									<Description><![CDATA[Instruction Code]]></Description>
									<Option Name="E">
										<Format><![CDATA[4!c[/30x]]]></Format>
										<Specification><![CDATA[(Type) (Additional Information)]]></Specification>
										<Description><![CDATA[Instruction Code]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>E</Options>
								<Validations>
									<SubField Name="Type">
										<Validation>
											<Options>E</Options>
											<ErrorCode>T47</ErrorCode>
											<Comment><![CDATA[Type must contain one of the following codes (Error code(s): T47) :]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="AUTH">
														<DetailedName>Pre-authorised direct debit</DetailedName>
														<Description>This message contains pre-authorised direct debit instructions to be processed according to the terms and conditions of the direct debit contract and/or mandate.</Description>
													</Code>
													<Code Name="NAUT">
														<DetailedName>Non pre-authorised</DetailedName>
														<Description>This message contains non pre-authorised direct debit instructions.</Description>
													</Code>
													<Code Name="OTHR">
														<DetailedName>Other</DetailedName>
														<Description>Used for bilaterally agreed codes/information. The actual bilateral code/information will be specified in the second subfield.</Description>
													</Code>
													<Code Name="RTND">
														<DetailedName>Returned</DetailedName>
														<Description>A previously sent MT 107 is being returned, ie, rejected, reversed or revoked.</Description>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="21E">
								<SwiftFieldDef Name="21">
									<Generic>false</Generic>
									<Description><![CDATA[Registration Reference]]></Description>
									<Option Name="E">
										<Format><![CDATA[35x]]></Format>
										<Specification><![CDATA[(Drawee's Reference)]]></Specification>
										<Description><![CDATA[Registration Reference]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>E</Options>
							</SwiftField>
							<SwiftField Name="30">
								<SwiftFieldDef Name="30">
									<Generic>false</Generic>
									<Description><![CDATA[Requested Execution Date]]></Description>
									<Option Name="">
										<Format><![CDATA[6!n]]></Format>
										<Specification><![CDATA[(Date)]]></Specification>
										<Description><![CDATA[Requested Execution Date]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options> </Options>
								<Validations>
									<SubField Name="Date">
										<Validation>
											<Options> </Options>
											<ErrorCode>T50</ErrorCode>
											<Comment><![CDATA[Date must be a valid date expressed as YYMMDD . (Error code(s): T50) .]]></Comment>
											<ValidationPattern xsi:type="DATE" Type="DATE">
												<Type>DATE</Type>
												<Format>yyMMdd</Format>
												<value-date>true</value-date>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="51A">
								<SwiftFieldDef Name="51">
									<Generic>false</Generic>
									<Description><![CDATA[Sending Institution]]></Description>
									<Option Name="A">
										<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
										<Description><![CDATA[Sending Institution]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>A</Options>
								<Validations>
									<SubField Name="CreditDebit">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T51</ErrorCode>
											<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="C">
														<DetailedName>Credit</DetailedName>
													</Code>
													<Code Name="D">
														<DetailedName>Debit</DetailedName>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="50a">
								<SwiftFieldDef Name="50">
									<Generic>false</Generic>
									<Description><![CDATA[Instructing Party]]></Description>
									<Option Name="C">
										<Format><![CDATA[(4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(Identifier Code)]]></Specification>
										<Description><![CDATA[Instructing Party]]></Description>
									</Option>
									<Option Name="L">
										<Format><![CDATA[35x]]></Format>
										<Specification><![CDATA[(Party Identifier)]]></Specification>
										<Description><![CDATA[Instructing Party]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>C, L</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>C</Options>
											<ErrorCode>T27,T28,T29,T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="50b">
								<SwiftFieldDef Name="50">
									<Generic>false</Generic>
									<Description><![CDATA[Creditor]]></Description>
									<Option Name="A">
										<Format><![CDATA[([/34xCRLF])(4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(Account) (Identifier Code)]]></Specification>
										<Description><![CDATA[Creditor]]></Description>
									</Option>
									<Option Name="K">
										<Format><![CDATA[([/34xCRLF])(4*35x)]]></Format>
										<Specification><![CDATA[(Account) (Name & Address)]]></Specification>
										<Description><![CDATA[Creditor]]></Description>
									</Option>
								</SwiftFieldDef>
								<Suffix>b</Suffix>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>A, K</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27,T28,T29,T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="52a">
								<SwiftFieldDef Name="52">
									<Generic>false</Generic>
									<Description><![CDATA[Creditor's Bank]]></Description>
									<Option Name="A">
										<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
										<Description><![CDATA[Creditor's Bank]]></Description>
									</Option>
									<Option Name="C">
										<Format><![CDATA[/34x]]></Format>
										<Specification><![CDATA[(Party Identifier)]]></Specification>
										<Description><![CDATA[Creditor's Bank]]></Description>
									</Option>
									<Option Name="D">
										<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
										<Description><![CDATA[Creditor's Bank]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>A, C, D</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27,T28,T29,T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
										<Validation>
											<Options>A</Options>
											<ErrorCode>C05</ErrorCode>
											<Comment><![CDATA[Identifier Code must not be a BEI. Please refer to the latest version of the BIC Directory - Corporations for more information about BEIs. This error code applies to all types of BICs referenced in a FIN message including SWIFT BICs, non-SWIFT BICs, Masters, Synonyms, Live destinations and Test & Training destinations. (Error code(s): C05) .]]></Comment>
											<ValidationPattern xsi:type="C05" Type="C05">
												<Type>C05</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="CreditDebit">
										<Validation>
											<Options>A, D</Options>
											<ErrorCode>T51</ErrorCode>
											<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="C">
														<DetailedName>Credit</DetailedName>
													</Code>
													<Code Name="D">
														<DetailedName>Debit</DetailedName>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="26T">
								<SwiftFieldDef Name="26">
									<Generic>false</Generic>
									<Description><![CDATA[Transaction Type Code]]></Description>
									<Option Name="T">
										<Format><![CDATA[3!c]]></Format>
										<Specification><![CDATA[(Type)]]></Specification>
										<Description><![CDATA[Transaction Type Code]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>T</Options>
							</SwiftField>
							<SwiftField Name="77B">
								<SwiftFieldDef Name="77">
									<Generic>false</Generic>
									<Description><![CDATA[Regulatory Reporting]]></Description>
									<Option Name="B">
										<Format><![CDATA[3*35x]]></Format>
										<Specification><![CDATA[(Narrative)]]></Specification>
										<Description><![CDATA[Regulatory Reporting]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>B</Options>
							</SwiftField>
							<SwiftField Name="71A">
								<SwiftFieldDef Name="71">
									<Generic>false</Generic>
									<Description><![CDATA[Details of Charges]]></Description>
									<Option Name="A">
										<Format><![CDATA[3!a]]></Format>
										<Specification><![CDATA[(Code)]]></Specification>
										<Description><![CDATA[Details of Charges]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>A</Options>
								<Validations>
									<SubField Name="Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T08</ErrorCode>
											<Comment><![CDATA[One of the following codes must be used (Error code(s): T08)]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="BEN">
														<DetailedName>Debtor</DetailedName>
														<Description>All transaction charges are to be borne by the debtor.</Description>
													</Code>
													<Code Name="OUR">
														<DetailedName>Our customer charged</DetailedName>
														<Description>All transaction charges are to be borne by the creditor.</Description>
													</Code>
													<Code Name="SHA">
														<DetailedName>Shared charges</DetailedName>
														<Description>Transaction charges on the Sender's side are to be borne by the creditor, transaction charges on the Receiver's side are to be borne by the debtor. The Sender and the Receiver should be understood as the Sender and the Receiver of the MT 107.</Description>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="72">
								<SwiftFieldDef Name="72">
									<Generic>false</Generic>
									<Description><![CDATA[Sender to Receiver Information]]></Description>
									<Option Name="">
										<Format><![CDATA[6*35x]]></Format>
										<Specification><![CDATA[(Narrative - Structured Format)]]></Specification>
										<Description><![CDATA[Sender to Receiver Information]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options> </Options>
							</SwiftField>
						</Fields>
					</SwiftSequence>
					<SwiftSequence Name="B">
						<Name>B</Name>
						<Description><![CDATA[Transaction Details]]></Description>
						<Mandatory>true</Mandatory>
						<Repeating>true</Repeating>
						<Fields>
							<SwiftField Name="21">
								<SwiftFieldDef Name="21">
									<Generic>false</Generic>
									<Description><![CDATA[Transaction Reference]]></Description>
									<Option Name="">
										<Format><![CDATA[16x]]></Format>
										<Specification><![CDATA[(Related Reference)]]></Specification>
										<Description><![CDATA[Transaction Reference]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options> </Options>
								<Validations>
									<SubField Name="Related_Reference">
										<Validation>
											<Options> </Options>
											<ErrorCode>T26</ErrorCode>
											<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive slashes '//' (Error code(s): T26) .]]></Comment>
											<ValidationPattern xsi:type="T26" Type="T26">
												<Type>T26</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="23E">
								<SwiftFieldDef Name="23">
									<Generic>false</Generic>
									<Description><![CDATA[Instruction Code]]></Description>
									<Option Name="E">
										<Format><![CDATA[4!c[/30x]]]></Format>
										<Specification><![CDATA[(Type) (Additional Information)]]></Specification>
										<Description><![CDATA[Instruction Code]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>E</Options>
								<Validations>
									<SubField Name="Type">
										<Validation>
											<Options>E</Options>
											<ErrorCode>T47</ErrorCode>
											<Comment><![CDATA[One of the following codes must be used (Error code(s): T47) .]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="AUTH">
														<DetailedName>Pre-authorised direct debit</DetailedName>
														<Description>This occurrence of sequence B contains a pre-authorised direct debit instruction to be processed according to the terms and conditions of the direct debit contract and/or mandate.</Description>
													</Code>
													<Code Name="NAUT">
														<DetailedName>Non pre-authorised</DetailedName>
														<Description>This occurrence of sequence B contains a non pre-authorised direct debit instruction.</Description>
													</Code>
													<Code Name="OTHR">
														<DetailedName>Other</DetailedName>
														<Description>Used for bilaterally agreed codes/information. The actual bilateral code/information will be specified in the second subfield.</Description>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="21C">
								<SwiftFieldDef Name="21">
									<Generic>false</Generic>
									<Description><![CDATA[Mandate Reference]]></Description>
									<Option Name="C">
										<Format><![CDATA[35x]]></Format>
										<Specification><![CDATA[(Principal's Reference)]]></Specification>
										<Description><![CDATA[Mandate Reference]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>C</Options>
							</SwiftField>
							<SwiftField Name="21D">
								<SwiftFieldDef Name="21">
									<Generic>false</Generic>
									<Description><![CDATA[Direct Debit Reference]]></Description>
									<Option Name="D">
										<Format><![CDATA[35x]]></Format>
										<Specification><![CDATA[(Remitting Bank's Reference)]]></Specification>
										<Description><![CDATA[Direct Debit Reference]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>D</Options>
							</SwiftField>
							<SwiftField Name="21E">
								<SwiftFieldDef Name="21">
									<Generic>false</Generic>
									<Description><![CDATA[Registration Reference]]></Description>
									<Option Name="E">
										<Format><![CDATA[35x]]></Format>
										<Specification><![CDATA[(Drawee's Reference)]]></Specification>
										<Description><![CDATA[Registration Reference]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>E</Options>
							</SwiftField>
							<SwiftField Name="32B">
								<SwiftFieldDef Name="32">
									<Generic>false</Generic>
									<Description><![CDATA[Currency and Transaction Amount]]></Description>
									<Option Name="B">
										<Format><![CDATA[3!a15d]]></Format>
										<Specification><![CDATA[(Currency) (Amount)]]></Specification>
										<Description><![CDATA[Currency and Transaction Amount]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options>B</Options>
								<Validations>
									<SubField Name="Amount">
										<Validation>
											<Options>B</Options>
											<ErrorCode>C03</ErrorCode>
											<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency (Error code(s): C03,T40,T43) .]]></Comment>
											<ValidationPattern xsi:type="Decimal" Type="Decimal">
												<Type>Decimal</Type>
												<currency-field>Currency</currency-field>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="Currency">
										<Validation>
											<Options>B</Options>
											<ErrorCode>T52</ErrorCode>
											<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52) .]]></Comment>
											<ValidationPattern xsi:type="Currency_Code" Type="Currency Code">
												<Type>Currency Code</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="50a">
								<SwiftFieldDef Name="50">
									<Generic>false</Generic>
									<Description><![CDATA[Instructing Party]]></Description>
									<Option Name="C">
										<Format><![CDATA[(4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(Identifier Code)]]></Specification>
										<Description><![CDATA[Instructing Party]]></Description>
									</Option>
									<Option Name="L">
										<Format><![CDATA[35x]]></Format>
										<Specification><![CDATA[(Party Identifier)]]></Specification>
										<Description><![CDATA[Instructing Party]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>C, L</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>C</Options>
											<ErrorCode>T27,T28,T29,T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="50b">
								<SwiftFieldDef Name="50">
									<Generic>false</Generic>
									<Description><![CDATA[Creditor]]></Description>
									<Option Name="A">
										<Format><![CDATA[([/34xCRLF])(4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(Account) (Identifier Code)]]></Specification>
										<Description><![CDATA[Creditor]]></Description>
									</Option>
									<Option Name="K">
										<Format><![CDATA[([/34xCRLF])(4*35x)]]></Format>
										<Specification><![CDATA[(Account) (Name & Address)]]></Specification>
										<Description><![CDATA[Creditor]]></Description>
									</Option>
								</SwiftFieldDef>
								<Suffix>b</Suffix>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>A, K</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27,T28,T29,T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="52a">
								<SwiftFieldDef Name="52">
									<Generic>false</Generic>
									<Description><![CDATA[Creditor's Bank]]></Description>
									<Option Name="A">
										<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
										<Description><![CDATA[Creditor's Bank]]></Description>
									</Option>
									<Option Name="C">
										<Format><![CDATA[/34x]]></Format>
										<Specification><![CDATA[(Party Identifier)]]></Specification>
										<Description><![CDATA[Creditor's Bank]]></Description>
									</Option>
									<Option Name="D">
										<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
										<Description><![CDATA[Creditor's Bank]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>A, C, D</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27,T28,T29,T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
										<Validation>
											<Options>A</Options>
											<ErrorCode>C05</ErrorCode>
											<Comment><![CDATA[Identifier Code must not be a BEI. Please refer to the latest version of the BIC Directory - Corporations for more information about BEIs. This error code applies to all types of BICs referenced in a FIN message including SWIFT BICs, non-SWIFT BICs, Masters, Synonyms, Live destinations and Test & Training destinations . (Error code(s): C05) .]]></Comment>
											<ValidationPattern xsi:type="C05" Type="C05">
												<Type>C05</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="CreditDebit">
										<Validation>
											<Options>A, D</Options>
											<ErrorCode>T51</ErrorCode>
											<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="C">
														<DetailedName>Credit</DetailedName>
													</Code>
													<Code Name="D">
														<DetailedName>Debit</DetailedName>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="57a">
								<SwiftFieldDef Name="57">
									<Generic>false</Generic>
									<Description><![CDATA[Debtor's Bank]]></Description>
									<Option Name="A">
										<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
										<Description><![CDATA[Debtor's Bank]]></Description>
									</Option>
									<Option Name="C">
										<Format><![CDATA[/34x]]></Format>
										<Specification><![CDATA[(Party Identifier)]]></Specification>
										<Description><![CDATA[Debtor's Bank]]></Description>
									</Option>
									<Option Name="D">
										<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
										<Description><![CDATA[Debtor's Bank]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>A, C, D</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27,T28,T29,T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
										<Validation>
											<Options>A</Options>
											<ErrorCode>C05</ErrorCode>
											<Comment><![CDATA[Identifier Code must not be a BEI. Please refer to the latest version of the BIC Directory - Corporations for more information about BEIs. This error code applies to all types of BICs referenced in a FIN message including SWIFT BICs, non-SWIFT BICs, Masters, Synonyms, Live destinations and Test & Training destinations . (Error code(s): C05) .]]></Comment>
											<ValidationPattern xsi:type="C05" Type="C05">
												<Type>C05</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="CreditDebit">
										<Validation>
											<Options>A, D</Options>
											<ErrorCode>T51</ErrorCode>
											<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="C">
														<DetailedName>Credit</DetailedName>
													</Code>
													<Code Name="D">
														<DetailedName>Debit</DetailedName>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="59a">
								<SwiftFieldDef Name="59">
									<Generic>false</Generic>
									<Description><![CDATA[Debtor]]></Description>
									<Option Name="">
										<Format><![CDATA[[/34xCRLF]4*35x]]></Format>
										<Specification><![CDATA[(Account) (Name & Address)]]></Specification>
										<Description><![CDATA[Debtor]]></Description>
									</Option>
									<Option Name="A">
										<Format><![CDATA[([/34xCRLF])(4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(Account) (Identifier Code)]]></Specification>
										<Description><![CDATA[Debtor]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options> , A</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27,T28,T29,T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="70">
								<SwiftFieldDef Name="70">
									<Generic>false</Generic>
									<Description><![CDATA[Remittance Information]]></Description>
									<Option Name="">
										<Format><![CDATA[4*35x]]></Format>
										<Specification><![CDATA[(Narrative)]]></Specification>
										<Description><![CDATA[Remittance Information]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options> </Options>
							</SwiftField>
							<SwiftField Name="26T">
								<SwiftFieldDef Name="26">
									<Generic>false</Generic>
									<Description><![CDATA[Transaction Type Code]]></Description>
									<Option Name="T">
										<Format><![CDATA[3!c]]></Format>
										<Specification><![CDATA[(Type)]]></Specification>
										<Description><![CDATA[Transaction Type Code]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>T</Options>
							</SwiftField>
							<SwiftField Name="77B">
								<SwiftFieldDef Name="77">
									<Generic>false</Generic>
									<Description><![CDATA[Regulatory Reporting]]></Description>
									<Option Name="B">
										<Format><![CDATA[3*35x]]></Format>
										<Specification><![CDATA[(Narrative)]]></Specification>
										<Description><![CDATA[Regulatory Reporting]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>B</Options>
							</SwiftField>
							<SwiftField Name="33B">
								<SwiftFieldDef Name="33">
									<Generic>false</Generic>
									<Description><![CDATA[Currency/Original Ordered Amount]]></Description>
									<Option Name="B">
										<Format><![CDATA[3!a15d]]></Format>
										<Specification><![CDATA[(Currency) (Amount)]]></Specification>
										<Description><![CDATA[Currency/Original Ordered Amount]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>B</Options>
								<Validations>
									<SubField Name="Amount">
										<Validation>
											<Options>B</Options>
											<ErrorCode>C03</ErrorCode>
											<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency (Error code(s): C03,T40,T43) .]]></Comment>
											<ValidationPattern xsi:type="Decimal" Type="Decimal">
												<Type>Decimal</Type>
												<currency-field>Currency</currency-field>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="Currency">
										<Validation>
											<Options>B</Options>
											<ErrorCode>T52</ErrorCode>
											<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52) .]]></Comment>
											<ValidationPattern xsi:type="Currency_Code" Type="Currency Code">
												<Type>Currency Code</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="71A">
								<SwiftFieldDef Name="71">
									<Generic>false</Generic>
									<Description><![CDATA[Details of Charges]]></Description>
									<Option Name="A">
										<Format><![CDATA[3!a]]></Format>
										<Specification><![CDATA[(Code)]]></Specification>
										<Description><![CDATA[Details of Charges]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>A</Options>
								<Validations>
									<SubField Name="Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T08</ErrorCode>
											<Comment><![CDATA[One of the following codes must be used (Error code(s): T08) :]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="BEN">
														<DetailedName>Debtor</DetailedName>
														<Description>All transaction charges are to be borne by the debtor.</Description>
													</Code>
													<Code Name="OUR">
														<DetailedName>Our customer charged</DetailedName>
														<Description>All transaction charges are to be borne by the creditor.</Description>
													</Code>
													<Code Name="SHA">
														<DetailedName>Shared charges</DetailedName>
														<Description>Transaction charges on the Sender's side are to be borne by the creditor, transaction charges on the Receiver's side are to be borne by the debtor. The Sender and the Receiver should be understood as the Sender and the Receiver of the MT 107.</Description>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="71F">
								<SwiftFieldDef Name="71">
									<Generic>false</Generic>
									<Description><![CDATA[Sender's Charges]]></Description>
									<Option Name="F">
										<Format><![CDATA[3!a15d]]></Format>
										<Specification><![CDATA[(Currency) (Amount)]]></Specification>
										<Description><![CDATA[Sender's Charges]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>F</Options>
								<Validations>
									<SubField Name="Amount">
										<Validation>
											<Options>F</Options>
											<ErrorCode>C03</ErrorCode>
											<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency (Error code(s): C03,T40,T43) .]]></Comment>
											<ValidationPattern xsi:type="Decimal" Type="Decimal">
												<Type>Decimal</Type>
												<currency-field>Currency</currency-field>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="Currency">
										<Validation>
											<Options>F</Options>
											<ErrorCode>T52</ErrorCode>
											<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52) .]]></Comment>
											<ValidationPattern xsi:type="Currency_Code" Type="Currency Code">
												<Type>Currency Code</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="71G">
								<SwiftFieldDef Name="71">
									<Generic>false</Generic>
									<Description><![CDATA[Receiver's Charges]]></Description>
									<Option Name="G">
										<Format><![CDATA[3!a15d]]></Format>
										<Specification><![CDATA[(Currency) (Amount)]]></Specification>
										<Description><![CDATA[Receiver's Charges]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>G</Options>
								<Validations>
									<SubField Name="Amount">
										<Validation>
											<Options>G</Options>
											<ErrorCode>C03</ErrorCode>
											<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency (Error code(s): C03,T40,T43) .]]></Comment>
											<ValidationPattern xsi:type="Decimal" Type="Decimal">
												<Type>Decimal</Type>
												<currency-field>Currency</currency-field>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="Currency">
										<Validation>
											<Options>G</Options>
											<ErrorCode>T52</ErrorCode>
											<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52) .]]></Comment>
											<ValidationPattern xsi:type="Currency_Code" Type="Currency Code">
												<Type>Currency Code</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="36">
								<SwiftFieldDef Name="36">
									<Generic>false</Generic>
									<Description><![CDATA[Exchange Rate]]></Description>
									<Option Name="">
										<Format><![CDATA[12d]]></Format>
										<Specification><![CDATA[(Rate)]]></Specification>
										<Description><![CDATA[Exchange Rate]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options> </Options>
							</SwiftField>
						</Fields>
					</SwiftSequence>
					<SwiftSequence Name="C">
						<Name>C</Name>
						<Description><![CDATA[Settlement Details]]></Description>
						<Mandatory>true</Mandatory>
						<Repeating>false</Repeating>
						<Fields>
							<SwiftField Name="32B">
								<SwiftFieldDef Name="32">
									<Generic>false</Generic>
									<Description><![CDATA[Currency and Settlement Amount]]></Description>
									<Option Name="B">
										<Format><![CDATA[3!a15d]]></Format>
										<Specification><![CDATA[(Currency) (Amount)]]></Specification>
										<Description><![CDATA[Currency and Settlement Amount]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options>B</Options>
								<Validations>
									<SubField Name="Amount">
										<Validation>
											<Options>B</Options>
											<ErrorCode>C03</ErrorCode>
											<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency (Error code(s): C03,T40,T43) .]]></Comment>
											<ValidationPattern xsi:type="Decimal" Type="Decimal">
												<Type>Decimal</Type>
												<currency-field>Currency</currency-field>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="Currency">
										<Validation>
											<Options>B</Options>
											<ErrorCode>T52</ErrorCode>
											<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52) .]]></Comment>
											<ValidationPattern xsi:type="Currency_Code" Type="Currency Code">
												<Type>Currency Code</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="19">
								<SwiftFieldDef Name="19">
									<Generic>false</Generic>
									<Description><![CDATA[Sum of Amounts]]></Description>
									<Option Name="">
										<Format><![CDATA[17d]]></Format>
										<Specification><![CDATA[(Amount)]]></Specification>
										<Description><![CDATA[Sum of Amounts]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options> </Options>
							</SwiftField>
							<SwiftField Name="71F">
								<SwiftFieldDef Name="71">
									<Generic>false</Generic>
									<Description><![CDATA[Sum of Sender's Charges]]></Description>
									<Option Name="F">
										<Format><![CDATA[3!a15d]]></Format>
										<Specification><![CDATA[(Currency) (Amount)]]></Specification>
										<Description><![CDATA[Sum of Sender's Charges]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>F</Options>
								<Validations>
									<SubField Name="Amount">
										<Validation>
											<Options>F</Options>
											<ErrorCode>C03</ErrorCode>
											<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency (Error code(s): C03,T40,T43) .]]></Comment>
											<ValidationPattern xsi:type="Decimal" Type="Decimal">
												<Type>Decimal</Type>
												<currency-field>Currency</currency-field>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="Currency">
										<Validation>
											<Options>F</Options>
											<ErrorCode>T52</ErrorCode>
											<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52) .]]></Comment>
											<ValidationPattern xsi:type="Currency_Code" Type="Currency Code">
												<Type>Currency Code</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="71G">
								<SwiftFieldDef Name="71">
									<Generic>false</Generic>
									<Description><![CDATA[Sum of Receiver's Charges]]></Description>
									<Option Name="G">
										<Format><![CDATA[3!a15d]]></Format>
										<Specification><![CDATA[(Currency) (Amount)]]></Specification>
										<Description><![CDATA[Sum of Receiver's Charges]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>G</Options>
								<Validations>
									<SubField Name="Amount">
										<Validation>
											<Options>G</Options>
											<ErrorCode>C03</ErrorCode>
											<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency (Error code(s): C03,T40,T43) .]]></Comment>
											<ValidationPattern xsi:type="Decimal" Type="Decimal">
												<Type>Decimal</Type>
												<currency-field>Currency</currency-field>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="Currency">
										<Validation>
											<Options>G</Options>
											<ErrorCode>T52</ErrorCode>
											<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52) .]]></Comment>
											<ValidationPattern xsi:type="Currency_Code" Type="Currency Code">
												<Type>Currency Code</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="53a">
								<SwiftFieldDef Name="53">
									<Generic>false</Generic>
									<Description><![CDATA[Sender's Correspondent]]></Description>
									<Option Name="A">
										<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
										<Description><![CDATA[Sender's Correspondent]]></Description>
									</Option>
									<Option Name="B">
										<Format><![CDATA[/1!a[/34x](CRLF35x) | /1!a[/34x] | [/34xCRLF]35x | /34x]]></Format>
										<Specification><![CDATA[(CreditDebit) (Party Identifier) (Location) | (CreditDebit)(Party Identifier) |(Party Identifier) (Location) | (Party Identifier)]]></Specification>
										<Description><![CDATA[Sender's Correspondent]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>A, B</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27,T28,T29,T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
										<Validation>
											<Options>A</Options>
											<ErrorCode>C05</ErrorCode>
											<Comment><![CDATA[Identifier Code must not be a BEI. Please refer to the latest version of the BIC Directory - Corporations for more information about BEIs. This error code applies to all types of BICs referenced in a FIN message including SWIFT BICs, non-SWIFT BICs, Masters, Synonyms, Live destinations and Test & Training destinations . (Error code(s): C05) .]]></Comment>
											<ValidationPattern xsi:type="C05" Type="C05">
												<Type>C05</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="CreditDebit">
										<Validation>
											<Options>A, B</Options>
											<ErrorCode>T51</ErrorCode>
											<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="C">
														<DetailedName>Credit</DetailedName>
													</Code>
													<Code Name="D">
														<DetailedName>Debit</DetailedName>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
						</Fields>
					</SwiftSequence>
				</Fields>
			</Data>
			<Trailer>
				<fields>
					<field>
						<name>Message Authentication Code</name>
						<description><![CDATA[Allows authentication by the receiving user. It is followed by an authentication result.

This trailer is mandatory for most user-to-user message categories within the FIN application. When the FIN Copy Service is used a PAC trailer, if present, follows the MAC trailer.

Format:

{MAC:<authentication-result>}

where <authentication-result> = 8!h

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>8</length>
						<tag>MAC</tag>
					</field>
					<field>
						<name>Proprietary Authentication Code</name>
						<description><![CDATA[The PAC is used within the FIN Copy service only, when using the double authentication option. The PAC is included in Block 5 of FIN user-to-user messages, immediately after the MAC trailer, if present.

This is calculated on the extracted fields of Block 4 of the message, the value of field 115, if present, and the <authentication-result> of the MAC trailer for Copy Services with double authentication.

Thus, the end-of-block indicator (CrLf-) is included in the PAC calculation, and the fields are defined as follows:

The first three characters are CrLf:

The field and the delimiter are present, that is, 32A:, 20:, and so on.

All subfields and their delimiters are present.

Format:

{PAC:[<authentication-result>]}

where <authentication-result> is mandatory on input messages only and <authentication-result> = 8!h

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>8</length>
						<tag>PAC</tag>
					</field>
					<field>
						<name>Checksum</name>
						<description><![CDATA[The checksum is computed based on the receiver's address (12 characters, with 9th character replaced by X) plus the Text Block. This trailer allows the system and the CBT to check that messages have not been corrupted due to a system malfunction or an undetected transmission error.

Format:

{CHK:<checksum-result>}

where <checksum-result> = 12!h

Note: This trailer is mandatory for FIN and GPA messages (Service Identifier 01).

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>12</length>
						<tag>CHK</tag>
					</field>
					<field>
						<name>System Originated Message</name>
						<description><![CDATA[The system message or service message which is generated by a system PLT has a SYS trailer. All solicited system messages (Service Identifier 01) contain the MIR of the request and may also contain the time.

Format:

{SYS:[<time><mir>]}

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>SYS</tag>
					</field>
					<field>
						<name>Test And Training Message</name>
						<description><![CDATA[Mandatory for FIN and GPA messages (Service Identifier 01) sent by, or delivered to, a Test & Training Logical Terminal (LT). This trailer has a tag only, and no value.

Format:

{TNG:}
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>0</length>
						<tag>TNG</tag>
					</field>
					<field>
						<name>Possible Duplicate Emission</name>
						<description><![CDATA[This trailer is used by the destination of the message. It only applies to FIN user-to-user messages (Service Identifier 01, message categories reserved for banking messages). There can be multiple PDEs. The system does not verify the order nor restrict the number (except for maximum message length).

Correctly formatted PDE trailers applied to user-to-system messages are accepted by the system, but not processed. This means that the system does not check to see if the original message exists. Therefore, a retrieval request sent with a PDE trailer may be processed twice if the original message was received by the system.

Format:

{PDE:[<time><mir>]}

where <time><mir> refers to the emission of the previous possible issue.

Note: It can be added automatically by a CBT or manually by a user. It may be followed by the MIR and the time of its previous possible messages.

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>PDE</tag>
					</field>
					<field>
						<name>Delayed Message</name>
						<description><![CDATA[This trailer is added to all FIN user-to-user output messages that have exceeded their obsolescence period. If this trailer appears in GPA or FIN system messages, it must be ignored. This trailer has a tag only, and no value.

The Obsolescence Period is:

U = 15 minutes

N = 100 minutes

Format:

{DLM:}

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>0</length>
						<tag>DLM</tag>
					</field>
					<field>
						<name>Possible Duplicate Message</name>
						<description><![CDATA[Added by the system to any output message (GPA and FIN Service Identifier 01) being resent because a prior delivery may be invalid. If a system PLT receives a report request with a PDM, the response has a plain PDM (without the optional delivery reference). Other PDMs may be added as a result of unsuccessful delivery attempts to the user. 
Format:
{PDM:[<time><mor>]}
where <time> and the Message Output Reference <mor> are that of the previous attempt.
Note: For messages recovered after a system failure, the optional fields may not be present.
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>PDM</tag>
					</field>
					<field>
						<name>Message Reference</name>
						<description><![CDATA[The MRF trailer is used to specify the message reference of the original user message in MT 096 FIN Copy to Central Institution Messages.
Format:
{MRF:<date><full-time><mir>}
where <mir> is that of the original user message whose fields are copied in the MT 096 FIN Copy to Central Institution Message.
Note: The MRF is specific to FIN Copy. The MRF trailer is automatically generated in the MT 096 FIN Copy to Central Institution Message and can only be reused in field 109 of the MT 096 FIN Copy to Central Institution Message to identify the MT 096 to which the MT 097 is a response. The format of the MRF is subject to change.
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>MRF</tag>
					</field>
				</fields>
			</Trailer>
		</SwiftFields>
		<validationrules name="Default">
			<hdrvalidationrules>
				<fieldvalidations>
					<fieldvalidation>
						<name>U09</name>
						<formula><![CDATA[if($this.Header.GetFieldIndex("User_Header") != -1) {
    def userHeader = $this.Header.GetSection("User_Header");
    if(userHeader.$size > 0 && userHeader[0].IsNotNull("Validation_Flag")) {
        return false;
    }
}
return true;
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U09</error-code>
						<actionmessage><![CDATA["User has used tag 119 in a message that is not a candidate for special processing"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>U03</name>
						<fieldname>User Header</fieldname>
						<formula><![CDATA[Iff(IsNotNull(User_Header.Service_Type_Identifier), 
    IsNotNull(User_Header.Unique_End_To_End_Transaction_Reference))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U03</error-code>
						<actionmessage><![CDATA["When populating an end-to-end reference, both fields 111 and 121 must be populated: a message that contains only one of these two fields will not be accepted by FIN."]]></actionmessage>
					</fieldvalidation>
				</fieldvalidations>
			</hdrvalidationrules>
			<datavalidationrules>
				<fieldvalidations>
					<fieldvalidation>
						<name>C1-1</name>
						<comment><![CDATA[C1-1
Fields 23E  must be present either in sequence A or in each occurrence of sequence B, but not in both]]></comment>
						<formula><![CDATA[(A.F23E.$size > 0 && !SecExistsInAtLeastOne(B, "23E")) || 
  (A.F23E.$size == 0 && SecExistsInAll(B, "23E"))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D86</error-code>
						<actionmessage><![CDATA["Fields 23E  must be present either in sequence A or in each occurrence of sequence B, but not in both (Error code(s): D86)"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C1-2</name>
						<fieldname>B</fieldname>
						<comment><![CDATA[C1-2
Field 50a (option A or K) must be present either in sequence A or in each occurrence of sequence B, but not in both
]]></comment>
						<formula><![CDATA[If(A.F50b.$size > 0 && In(A[0].F50b[0].FormatOption, 'A', 'K'), 
   Implies($value.F50b.$size > 0, !In($value.F50b.FormatOption, 'A', 'K')), 
   $value.F50b.$size > 0 && In($value.F50b.FormatOption, 'A', 'K'))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D86</error-code>
						<actionmessage><![CDATA["Field 50a (option A or K) must be present either in sequence A or in each occurrence of sequence B, but not in both (Error code(s): D86)"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C2-1</name>
						<comment><![CDATA[C2-1
"When present in sequence A, fields 21E must, not be present in any occurrence of sequence B. When present in one or more occurrences of sequence B, fields 21E must not be present in sequence A"
]]></comment>
						<formula><![CDATA[If(A.F21E.$size > 0, !SecExistsInAtLeastOne(B, "21E"), true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D73</error-code>
						<actionmessage><![CDATA["When present in sequence A, field 21E must, not be present in any occurrence of sequence B. When present in one or more occurrences of sequence B, field 21E must not be present in sequence A (Error code(s): D73)."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C2-2</name>
						<comment><![CDATA[C2-2
"When present in sequence A, fields 26T must, not be present in any occurrence of sequence B. When present in one or more occurrences of sequence B, fields 26T must not be present in sequence A"
]]></comment>
						<formula><![CDATA[If(A.F26T.$size > 0, !SecExistsInAtLeastOne(B, "26T"), true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D73</error-code>
						<actionmessage><![CDATA["When present in sequence A, field 26T must, not be present in any occurrence of sequence B. When present in one or more occurrences of sequence B, field 26T must not be present in sequence A (Error code(s): D73)."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C2-3</name>
						<comment><![CDATA[C2-3
"When present in sequence A, fields 77B must, not be present in any occurrence of sequence B. When present in one or more occurrences of sequence B, fields 77B must not be present in sequence A"
]]></comment>
						<formula><![CDATA[If(A.F77B.$size > 0, !SecExistsInAtLeastOne(B, "77B"), true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D73</error-code>
						<actionmessage><![CDATA["When present in sequence A, field 77B must, not be present in any occurrence of sequence B. When present in one or more occurrences of sequence B, field 77B must not be present in sequence A (Error code(s): D73)."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C2-4</name>
						<comment><![CDATA[C2-4
"When present in sequence A, fields 71A must, not be present in any occurrence of sequence B. When present in one or more occurrences of sequence B, fields 71A must not be present in sequence A"
]]></comment>
						<formula><![CDATA[If(A.F71A.$size > 0, !SecExistsInAtLeastOne(B, "71A"), true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D73</error-code>
						<actionmessage><![CDATA["When present in sequence A, field 71A must, not be present in any occurrence of sequence B. When present in one or more occurrences of sequence B, field 71A must not be present in sequence A (Error code(s): D73)."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C2-5</name>
						<comment><![CDATA[C2-5
"When present in sequence A, fields 71A must, not be present in any occurrence of sequence B. When present in one or more occurrences of sequence B, fields 71A must not be present in sequence A"
]]></comment>
						<formula><![CDATA[If(A.F52a.$size > 0, !SecExistsInAtLeastOne(B, "52a"), true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D73</error-code>
						<actionmessage><![CDATA["When present in sequence A, field 52a must, not be present in any occurrence of sequence B. When present in one or more occurrences of sequence B, field 52a must not be present in sequence A (Error code(s): D73)."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C2-6</name>
						<fieldname>B.50a</fieldname>
						<comment><![CDATA[C2-6
"When present in sequence A, fields 50a must, not be present in any occurrence of sequence B. When present in one or more occurrences of sequence B, fields 50a must not be present in sequence A"
]]></comment>
						<formula><![CDATA[Implies(In($value.FormatOption, 'C', 'L') && A.F50a.$size > 0, 
        !In(A[0].F50a[0].FormatOption, 'C', 'L'))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D73</error-code>
						<actionmessage><![CDATA["When present in sequence A, field 50a must, not be present in any occurrence of sequence B. When present in one or more occurrences of sequence B, field 50a must not be present in sequence A (Error code(s): D73)."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C3-1</name>
						<fieldname>A</fieldname>
						<comment><![CDATA[C3-1
If field 21E is present in sequence A, then field 50b, must also be present in sequence A
]]></comment>
						<formula><![CDATA[If($value.F21E.$size > 0, $value.F50b.$size > 0 && In($value.F50b.FormatOption, 'A', 'K'), true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D77</error-code>
						<actionmessage><![CDATA["If field 21E is present in sequence A, then field 50b must also be present in sequence A (Error code(s): D77)"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C3-2</name>
						<fieldname>B</fieldname>
						<comment><![CDATA[C3-2
In each occurrence of sequence B, if field 21E is present, then field 50b must also be present in the same occurrence
]]></comment>
						<formula><![CDATA[If($value.F21E.$size > 0, $value.F50b.$size > 0 && In($value.F50b.FormatOption, 'A', 'K'), true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D77</error-code>
						<actionmessage><![CDATA["In each occurrence of sequence B, if field 21E is present, then field 50b must also be present in the same occurrence (Error code(s): D77)"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C4</name>
						<fieldname>A</fieldname>
						<comment><![CDATA[C4
In sequence A, if field 23E is present and contains RTND then field 72 must be present, in all other cases - ie, field 23E not present, or field 23E does not contain RTND - field 72 is not allowed]]></comment>
						<formula><![CDATA[If($value.F23E.$size > 0 && $value.F23E.Type == "RTND", 
   $value.F72.$size > 0, 
   $value.F72.$size == 0)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C82</error-code>
						<actionmessage><![CDATA["In sequence A, if field 23E is present and contains RTND then field 72 must be present, in all other cases - ie, field 23E not present, or field 23E does not contain RTND - field 72 is not allowed (Error code(s): C82)"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C5-1</name>
						<comment><![CDATA[C5-1
If field 71F is present in one or more occurrence of sequence B, then they must also be present in sequence C, and vice versa
]]></comment>
						<formula><![CDATA[SecExists(B, "F71F") == C.F71F.$size>0]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D79</error-code>
						<actionmessage><![CDATA["If field 71F is present in one or more occurrence of sequence B, then they must also be present in sequence C, and vice versa (Error code(s): D79)"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C5-2</name>
						<comment><![CDATA[C5-2
If field 71F is present in one or more occurrence of sequence B, then they must also be present in sequence C, and vice versa]]></comment>
						<formula><![CDATA[SecExists(B, "F71G") == C.F71G.$size>0]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D79</error-code>
						<actionmessage><![CDATA["If field 71G is present in one or more occurrence of sequence B, then they must also be present in sequence C, and vice versa (Error code(s): D79)"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C6</name>
						<fieldname>B</fieldname>
						<comment><![CDATA[C6
In each occurrence of sequence B, if field 33B is present, then the currency code or the amount, or both, must be different between fields 33B and 32B]]></comment>
						<formula><![CDATA[If($value.F33B.$size > 0, 
   B.F32B[0].Currency != B.F33B[0].Currency || 
     B.F32B[0].Amount != B.F33B[0].Amount, 
   true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D21</error-code>
						<actionmessage><![CDATA["In each occurrence of sequence B, if field 33B is present, then the currency code or the amount, or both, must be different between fields 33B and 32B (Error code(s): D21)."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C7</name>
						<fieldname>B.33B</fieldname>
						<comment><![CDATA[C7
In any occurrence of sequence B, if field 33B is present and the currency codes in fields 32B and 33B are different, then field 36 must be present. Otherwise, field 36 must not be present]]></comment>
						<formula><![CDATA[If(B.F32B[0].Currency != $value.Currency, 
   B.F36.$size > 0, 
   B.F36.$size == 0)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D75</error-code>
						<actionmessage><![CDATA["In any occurrence of sequence B, if field 33B is present and the currency codes in fields 32B and 33B are different, then field 36 must be present. Otherwise, field 36 must not be present (Error code(s): D75)."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C8-1</name>
						<fieldname>C</fieldname>
						<comment><![CDATA[C8-1
If the amount in field 32B of sequence C is equal to the sum of the amounts of the fields 32B of sequence B then field 19 must not be present; otherwise, field 19 must be present.]]></comment>
						<formula><![CDATA[If(Abs(C.F32B[0].Amount - SecSumDouble(B, "F32B.Amount")) < 1.0E-4, 
   $value.F19.$size == 0, 
   $value.F19.$size > 0)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D80</error-code>
						<actionmessage><![CDATA["If the amount in field 32B of sequence C is equal to the sum of the amounts of the fields 32B of sequence B then field 19 must not be present; otherwise, field 19 must be present"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C8-2</name>
						<fieldname>C.19.Amount</fieldname>
						<comment><![CDATA[C8-2
Field 19 must equal the sum of the amounts in all occurrences of field 32B in sequence B.
]]></comment>
						<formula><![CDATA[Abs($value - SecSumDouble(B, "F32B.Amount")) < 1.0E-4]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C01</error-code>
						<actionmessage><![CDATA["Field 19 must equal the sum of the amounts in all occurrences of field 32B in sequence B (Error code(s): C01)."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C9-1</name>
						<fieldname>B</fieldname>
						<comment><![CDATA[C9-1
The currency code in fields 32B and 71G in sequences B and C must be the same for all occurrences of these fields in the message (Error code(s): C02).]]></comment>
						<formula><![CDATA[$firstCurrency = B[0].F32B[0].Currency;
return B.F32B[0].Currency == $firstCurrency && 
         (B.F71G.$size == 0 || B.F71G[0].Currency == $firstCurrency) && 
         ((C[0].F71G.$size == 0 && C[0].F32B[0].Currency == $firstCurrency) || 
            (C[0].F32B[0].Currency == $firstCurrency && 
               C[0].F71G[0].Currency == $firstCurrency));
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C02</error-code>
						<actionmessage><![CDATA["The currency code in fields 32B and 71G in sequences B and C must be the same for all occurrences of these fields in the message"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C9-2</name>
						<comment><![CDATA[C9-2
The currency code in the charges fields 71F in sequences B and C must be the same for all occurrences of these fields in the message (Error code(s): C02).]]></comment>
						<formula><![CDATA[def prevCurrency = "";
foreach(def b in B) {
    if(b.F71F.$size > 0) {
        if(prevCurrency != "" && b.F71F[0].Currency != prevCurrency) {
            return false;
        }
        prevCurrency = b.F71F[0].Currency;
    }
}
if(C[0].F71F.$size > 0) {
        if(prevCurrency != "" && C[0].F71F[0].Currency != prevCurrency) {
            return false;
        }
}
return true;
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C02</error-code>
						<actionmessage><![CDATA["The currency code in the charges fields 71F in sequences B and C must be the same for all occurrences of these fields in the message"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FA-23E</name>
						<fieldname>A.23E.Additional_Information</fieldname>
						<comment><![CDATA[FA-23E
The narrative second subfield can only be used in combination with OTHR (Error code(s): D81).
]]></comment>
						<formula><![CDATA[A.F23E.Type == "OTHR"]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D81</error-code>
						<actionmessage><![CDATA["In field 23E of sequence A, Narrative may only be used in combination with 'OTHR'."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FA-51A</name>
						<comment><![CDATA[FA-51A
Field 51A is only valid in FileAct (Error code(s): D63). ]]></comment>
						<formula><![CDATA[A[0].F51A.$size == 0]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D63</error-code>
						<actionmessage><![CDATA["Field 51A is only valid in FileAct."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FA-72-A</name>
						<fieldname>A.72.Narrative_-_Structured_Format</fieldname>
						<comment><![CDATA[FA-72-A
The first line of field 72 should be of the following format: /8c/[additional information]. The remaining lines (2 - 6) should be of the following format: [//continuation of additional information] or [/8c/[additional information]].]]></comment>
						<formula><![CDATA[VerifyField72NarrativeText($value)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T32</error-code>
						<actionmessage><![CDATA["The first line of field 72 should be of the following format: /8c/[additional information]. The remaining lines (2 - 6) should be of the following format: [//continuation of additional information] or [/8c/[additional information]]."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FA-72-B</name>
						<fieldname>A.72.Narrative_-_Structured_Format</fieldname>
						<comment><![CDATA[FA-72-B
The first element in line 1 must contain either code /RETN/ or /REJT/]]></comment>
						<formula><![CDATA[StartsWith($value, "/REJT/") || StartsWith($value, "/RETN/")]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D82</error-code>
						<actionmessage><![CDATA["The first element in line 1 must contain either code /RETN/ or /REJT/"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-23E</name>
						<fieldname>B.23E.Additional_Information</fieldname>
						<comment><![CDATA[FB-23E
The narrative second subfield can only be used in combination with OTHR (Error code(s): D81).]]></comment>
						<formula><![CDATA[B.F23E.Type == "OTHR"]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D81</error-code>
						<actionmessage><![CDATA["In field 23E of sequence B, Narrative may only be used in combination with 'OTHR'."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-59a-A</name>
						<fieldname>B.59a</fieldname>
						<comment><![CDATA[FB-59a-A
 Account of the debtor 59a must be present . 
]]></comment>
						<formula><![CDATA[IsNotNull(B.F59a.Account)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E10</error-code>
						<actionmessage><![CDATA["Account of the debtor 59a must be present (Error code(s): E10)."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FC-19</name>
						<fieldname>C.32B.Currency</fieldname>
						<comment><![CDATA[FC-19
The number of digits following the comma must not exceed the maximum number allowed for the currency specified in field 32B (Error code(s): C03,T40,T43).]]></comment>
						<formula><![CDATA[If(C[0].F19.$size>0, isValidDecimals($value,C.F19[0].Amount), true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C03</error-code>
						<actionmessage><![CDATA["The number of digits following the comma must not exceed the maximum number allowed for the currency specified in field 32B."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FC-71G-A</name>
						<fieldname>C.71G.Amount</fieldname>
						<comment><![CDATA[FC-71G-A
If field 71G is present in sequence C, the amount must not equal '0' (Error code(s): D57).]]></comment>
						<formula><![CDATA[C.F71G.Amount != ToDouble(0)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D57</error-code>
						<actionmessage><![CDATA["If field 71G is present in sequence C, the amount must not equal 0"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>ERI-1</name>
						<fieldname>C</fieldname>
						<comment><![CDATA[ERI
"For specific message types, an European currency must not be used as the currency of settlement after a cut-off date (Error Code: E76)."]]></comment>
						<formula><![CDATA[applyERIValidation(A[0].F30[0], "Date", C.F32B[0], "Currency")]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E76</error-code>
						<actionmessage><![CDATA["For specific message types, an European currency must not be used as the currency of settlement after a cut-off date (Error Code: E76)."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>ERI-2</name>
						<fieldname>A.72.Narrative_-_Structured_Format</fieldname>
						<formula><![CDATA[ApplyERICodeValidationstructured($value);]]></formula>
						<enabled>false</enabled>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T47</error-code>
						<actionmessage><![CDATA["In an ERI field (i.e. fields 61, 72, 77A, 79, 86) the data part of a code word /OCMT/, or /CHGS/, is being validated, but the ending separator (i.e. third slash) is missing or the code words are duplicated."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FA-72-C</name>
						<fieldname>A.72.Narrative_-_Structured_Format</fieldname>
						<formula><![CDATA[def Actualvalue = replace($value, "\r\n", "\n");
def lines = Split("\n", Actualvalue);
def str = Left(Actualvalue, 6);
def line1format = false;
def line3format = false;
def TREFformat = true;
def CHGSformat = true;
def TEXTformat = true;
def format = true;
def count = 0;
def TREFcount = 0;
def CHGScount = 0;
def TEXTcount = 0;
def i = lines.Length();
if(In(str, "/REJT/", "/RETN/")) {
    if(i <= 6) {
        //if '/REJT/' or '/RETN/' format of 1st line must be "6!x2!n[1a]['/'2c]" & format of 2nd line must be "('/'2!c 2!n'/')[29x]" or "('/X'1c2!n'/')[29x]"
        //if format of 2nd line is "('/'2!c 2!n'/')" then the 6 characters must be one of the codes given below
        line1format = (VerifyFormat(lines[0], "6!x2!n[1a]['/'2c]"));
        if(line1format && lines.Length() > 2) {
            if(!lines[1].StartsWith("/X")) {
                if(VerifyFormat(lines[1], "('/'2!c 2!n'/')[29x]")) {
                	def startStr = lines[1].Left(6);
                    if((!In(startStr, "/AC01/", "/AC02/", "/AC03/", "/AC04/", "/AC05/", "/AC06/", 
                            "/AM01/", "/AM02/", "/AM03/", "/AM04/", "/AM05/", "/AM06/", "/AM07/", 
                            "/AM08/", "/AG01/", "/AG02/", "/BE01/", "/BE02/", "/BE03/", "/BE04/", 
                            "/BE05/", "/DT01/", "/MS01/", "/PY01/", "/RC01/", "/RC02/", "/RC03/", 
                            "/RC04/", "/RF01/", "/TM01/", "/RR01/", "/RR02/", "/RR03/")))
                        return false;
                }
                else
                    return false;
            }
            else if(lines[1].StartsWith("/X") && !VerifyFormat(lines[1], "('/X'1c2!n'/')[29x]"))
                return false;
        }
        else
            return false;
        //Line3 is mandatory and should have the format "/MREF/16x". Lines 4, 5 and 6 are optional
        //If lines 4, 5 or 6 or any combination exists and if the first 6 characters starts with either '/TREF/' or '/CHGS/' or '/TEXT/' or '//'
        //it should satisfy the format given. Also if line starts with '//' it can appear a max of 2 times
        line3format = Equal(Left(lines[2], 6), "/MREF/") && 
                        VerifyFormat(Substring(lines[2], 6), "16x");
        if(line3format) {
            while(i > 3) {
                def str1 = Left(lines[i - 1], 6);
                def str2 = Substring(lines[i - 1], 6);
                if(In(str1, "/TREF/", "/CHGS/", "/TEXT/") || StartsWith(lines[i - 1], "//")) {
                    if(str1 == "/TREF/") {
                        TREFformat = VerifyFormat(str2, "16x");
                        TREFcount += 1;
                    }
                    else if(str1 == "/CHGS/") {
                        CHGSformat = (VerifyFormat(str2, "3!a15d") && 
                                        IsISOCurrencyCode(Substring(lines[i - 1], 6, 3)));
                        CHGScount += 1;
                    }
                    else if(str1 == "/TEXT/") {
                        TEXTformat = (VerifyFormat(str2, "29x"));
                        TEXTcount += 1;
                    }
                    else if(StartsWith(lines[i - 1], "//")) {
                        def str3 = Substring(lines[i - 1], 2);
                        format = (VerifyFormat(str3, "33x"));
                        count += 1;
                        if(!format || count > 2)
                            break;
                    }
                }
                else
                    return false;
                i = i - 1;
            }
        }
        else
            return false;
        if(!TREFformat || !CHGSformat || !TEXTformat || !format || count > 2 || TREFcount > 1 || 
             CHGScount > 1 || TEXTcount > 1)
            return false;
    }
    else
        return false;
}
return true;
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T80</error-code>
						<actionmessage><![CDATA["Field 72 Reject/Return: code word error, or mandatory code word missing, or code word not in the proper sequence, or format 6*35x not satisfied"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FC-72-D</name>
						<fieldname>A.72.Narrative_-_Structured_Format</fieldname>
						<formula><![CDATA[def Actualvalue = replace($value, "\r\n", "\n");
def lines = Split("\n", Actualvalue);
if(lines.Length() > 3) {
    for(def i = 0; i < lines.Length(); ++i) {
        if(lines[i].Substring(0, 6) == "/CHGS/") {
            def format = lines[i].Substring(6);
            def cur = format.Substring(0, 3);
            def amt = format.Substring(3);
            def Lastslash = FindFirst(amt, "/");
            if(Lastslash != -1)
            	amt = amt.left(Lastslash);
            def pos = FindFirst(amt, ",");
            amt = Replace(amt, ",", ".");
            def isvalid = IsValidDecimals(cur, amt);
            if(!isvalid)
                return false;

        }
    }
}
return true;
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C03</error-code>
						<actionmessage><![CDATA["Field 72 Reject/Return: The number of digits following the comma must not exceed the maximum number allowed for the currency specified."]]></actionmessage>
					</fieldvalidation>
				</fieldvalidations>
			</datavalidationrules>
			<tlrvalidationrules>
				<fieldvalidations>
				</fieldvalidations>
			</tlrvalidationrules>
		</validationrules>
		<elementproperties>
			<propertymap>
				<property name="codegen.java.properties">
					<value>
						<propertymap type="com.tplus.transform.design.PropertiesDef">
							<property name="Java Package Name" value="com.transform.external.%e"/>
							<property name="Jar Name" value="%c.jar"/>
							<property name="Manifest Entries" value="transformrt.jar swiftrt.jar swiftresources.jar"/>
							<property name="Data Source" value=""/>
						</propertymap>
					</value>
				</property>
			</propertymap>
		</elementproperties>
	</externalmessage>
	<externalmessage xsi:type="SwiftFormat" type="SwiftFormat" version="5.1.2" rulename="MT110_2016" formattype="SwiftFormat" >
		<description><![CDATA[This multiple message is sent by a drawer bank, or a bank acting on behalf of the drawer bank to the bank on which a/several cheque(s) has been drawn (the drawee bank).

It is used to advise the drawee bank, or confirm to an enquiring bank, the details concerning the cheque(s) referred to in the message.]]></description>
		<standard>SWIFT</standard>
		<standard-name>MT110</standard-name>
		<standard-version>SRG 2016</standard-version>
		<standard-release-qualifier>20160308</standard-release-qualifier>
		<standard-category>Customer Payments &amp; Cheques</standard-category>
		<standard-detailed-name>Advice of Cheque(s)</standard-detailed-name>
		<version>1.0</version>
		<SwiftFields>
			<customizable>true</customizable>
			<modifiable>false</modifiable>
			<SwiftMessageType>User</SwiftMessageType>
			<max-length>2000</max-length>
			<HeaderAndTrailerType>SWIFT_INPUT_OUTPUT_HEADER</HeaderAndTrailerType>
			<Header>
				<fields>
					<field>
						<name>Basic Header</name>
						<description><![CDATA[The Basic Header is given in Block 1 of a SWIFT message and is the only header that appears on all messages. The Basic Header provides the fundamental reference for any particular message and is almost always automatically built by the CBT.
The Basic Header has the same format for both input and output messages. However, the information contained in the Basic Header is relative to the sender when the message is input but relative to the receiver when the same message is output.]]></description>
						<datatype>Section</datatype>
						<required>true</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Application Identifier</name>
								<description><![CDATA[The Application Identifier identifies the application within which the message is being sent or received. The available options are:

F = FIN All user-to-user, FIN system and FIN service messages 
A = GPA Most GPA system and service messages 
L = GPA Certain GPA service messages, for example, LOGIN, LAKs, ABORT 

These values are automatically assigned by the SWIFT system and the user's CBT, but the user should be aware of their existence and significance
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Service Identifier</name>
								<description><![CDATA[The Service Identifier consists of 2 numeric characters. It identifies the type of data that is being sent or received and, in doing so, whether the message which follows is one of the following:

a user-to-user message

a system message

a service message, for example, a session control command, such as SELECT, or a logical acknowledgement, such as ACK/SAK/UAK

Users will be primarily concerned with identifier '01' which applies to all GPA and FIN system and user-to-user messages. Other values include: '21' for message acknowledgements such as ACK/NAK, UAK/UNK, '03' for SELECT commands, and 
so on]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>2</length>
							</field>
							<field>
								<name>LT Identifier</name>
								<description><![CDATA[This 12-character SWIFT address, given in the Basic Header Block, is the address of the sending LT for input messages or of the receiving LT for output messages, and includes the Branch Code.

In the Basic Header, the LT Code within the LT Identifier is specific to the LT that has established the session in which the message is being transmitted, that is the sending LT for input messages or the receiving LT for output messages.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>12</length>
							</field>
							<field>
								<name>Session Number</name>
								<description><![CDATA[The Session Number identifies the session in which the message was transmitted. Within the Basic Header, the 4-digit Session Number is the user's current GPA or FIN Session Number.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Sequence Number</name>
								<description><![CDATA[The sequence number always consists of 6 digits. It is the ISN of the sender's current input session or the OSN of the receiver's current output session.

Note: The sequence number is not present in those messages with an Application Identifier of 'L' (for example LOGIN). The sequence number is, however, a key element in the processing of retrievals. Therefore, LOGINs and attempted LOGINs are not retrievable
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>6</length>
							</field>
						</fields>
					</field>
					<field>
						<name>Application Header Input</name>
						<description><![CDATA[The Application Header of a SWIFT message provides information about the message itself.

The Application Header is given in Block 2 of a SWIFT message. It differs according to whether the message is a GPA or a FIN message and whether the Application Header is part of an input or an output message.

]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Input/Output Identifier</name>
								<description><![CDATA[For an input message, the Input/Output Identifier consists of the single letter 'I'.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Message Type</name>
								<description><![CDATA[The Message Type consists of 3 digits which define the MT number of the message being input. The example used above is for an MT 100 Customer Transfer]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>3</length>
							</field>
							<field>
								<name>Receiver's Address</name>
								<description><![CDATA[This address is the 12-character SWIFT address of the receiver of the message, but with a LT Code of 'X'. It defines the destination to which the message should be sent.

The system will replace the 'X' with a specific LT Code on delivery of the message according to the delivery control exercised by the receiving user.

The Branch Code is mandatory and will be validated. The default of 'XXX' may be used, as in the example above.

Unless otherwise documented, system messages addressed to the SWIFT system itself should be addressed to SWFTXXXXXXXX.

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>12</length>
							</field>
							<field>
								<name>Message Priority</name>
								<description><![CDATA[This character, used within FIN Application Headers only, defines the priority with which a message is delivered. The possible values are:

S = System

U = Urgent

N = Normal

Message Priority 'S' must be used for user-to-system messages; for user-to-user messages either 'U' or 'N' can be used. In the absence of user-specified delivery criteria, system messages are always delivered first, followed by urgent priority messages and then normal priority messages.

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Delivery Monitoring</name>
								<description><![CDATA[Delivery monitoring options apply only to FIN user-to-user messages, and allow the sender of a message to request:

automatic MT 011 Delivery Notification once the message has been delivered

automatic MT 010 Non-Delivery Warning if a message is not delivered within the specified obsolescence period (see below)

both, or neither, options. This may be requested on an individual message basis.

The chosen option is expressed as a single digit:

1 = Non-Delivery Warning

2 = Delivery Notification

3 = Non-Delivery Warning and Delivery Notification. 
If the message has priority 'U' then the user must request delivery monitoring option '1' or '3'. If the message has priority 'N', the user can request delivery monitoring option '2', or, by leaving the option blank, no delivery monitoring.
]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>1</length>
							</field>
							<field>
								<name>Obsolescence Period</name>
								<description><![CDATA[The obsolescence period defines the period of time after which a Delayed Message (DLM) trailer is added to a FIN user-to-user message when the message is delivered. For urgent priority messages, it is also the period of time after which, if the message remains undelivered, a Non-Delivery Warning is generated.

The values for the obsolescence period are 003 (15 minutes) for 'U' priority, and 020 (100 minutes) for 'N' priority. An obsolescence period can only be specified when delivery monitoring has been requested (option 1 or 3 for urgent priority messages, option 2 for normal priority messages). If no delivery monitoring has been requested, and an obsolescence period is specified, the message will be NAKed with error code H25.

GPA input Application Headers are similar to their FIN equivalents except that GPA messages do not specify priority, delivery monitoring, nor obsolescence period.

]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>3</length>
							</field>
						</fields>
					</field>
					<field>
						<name>Application Header Output</name>
						<description><![CDATA[The Application Header of a SWIFT message provides information about the message itself.

The Application Header is given in Block 2 of a SWIFT message. It differs according to whether the message is a GPA or a FIN message and whether the Application Header is part of an input or an output message.

]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Input/Output Identifier</name>
								<description><![CDATA[For an input message, the Input/Output Identifier consists of the single letter 'I'.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Message Type</name>
								<description><![CDATA[Three digits indicating the Message Type.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>3</length>
							</field>
							<field>
								<name>Input Time</name>
								<description><![CDATA[The first occurrence of the time field contains the system time and date. This is the generation time in Greenwich Mean Time (GMT).
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Message Input Reference</name>
								<description><![CDATA[The input MIR.

If the message is generated by the system, the input time is the generation time (in GMT) and the input MIR is the system MIR

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>28</length>
							</field>
							<field>
								<name>Output Date</name>
								<description><![CDATA[The output date, local to the receiver.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>6</length>
							</field>
							<field>
								<name>Output Time</name>
								<description><![CDATA[The second occurrence of the time field contains the output time and date. This is in a time local to the receiver.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Message Priority</name>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
						</fields>
					</field>
					<field>
						<name>User Header</name>
						<description><![CDATA[The User Header is an optional header available within FIN for user-to-user messages only. It appears in Block 3 of a SWIFT message, and allows users to provide their own reference within the headers for a particular message.

A User Header can only be assigned by the sender of a message and, if assigned, will always appear on the output message copy. Relevant parts of the User Header will be repeated in related system messages and acknowledgements.

Block 3 may contain tag 113, defining banking priorities, and tag 108, which is a user reference. The user reference part of the User Header may be used as one of the selection criteria when retrieving a message.

The optional field tags 103 and 115 are also used in Block 3 for the FIN Copy service. The order of tags, when present, is 103, 113, 108 and 115.

An optional field tag 119 can be included in Block 3 of certain messages to specify that different validation rules are to be applied. Agreed code words in field 119 indicate what validation rules SWIFT will apply. If field 119 is present, it should appear after field 108
]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Service Identifier</name>
								<description><![CDATA[For any message which the user submits to a FIN Copy service, Block 3 requires an additional field 103 which contains a three-character Service Identifier unique to a specific FIN Copy service. By using a unique identifier it is possible to support access to multiple services within the same CBT.
]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>3</length>
								<tag>103</tag>
							</field>
							<field>
								<name>Banking Priority</name>
								<description><![CDATA[Assigned by the sender of the message.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>4</length>
								<tag>113</tag>
							</field>
							<field>
								<name>Message User Reference</name>
								<description><![CDATA[Assigned by the sender of the message.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>16</length>
								<tag>108</tag>
							</field>
							<field>
								<name>Validation Flag</name>
								<description><![CDATA[Indicates whether a special validation needs to be performed by FIN. The following are examples of the values this field may take. Please note that this list is subject to change:

ISITC indicates validation of ISITC Standards. Only to be used with MT 521 and MT 523.

REMIT identifies the presence of field 77T. Only to be used in MT 103.

RFDD indicates that the message is a request for direct debit. Only to be used in MT 104.

STP indicates that the message is validated according to straight through processing principles. Only to be used in MT 103.

]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>119</tag>
							</field>
							<field>
								<name>Balance checkpoint date and time</name>
								<description><![CDATA[This field contains the balance checkpoint date and time consisting of a date (YYMMDD) and a time (HHMMSS[ss], where 'ss' indicates hundredths of a second). The MI that is subscribed to MIRS will always copy this reference from field tag 13G of the last MT298/091 that it sent into the related MT 298/093 or MT 097 that it generates. ]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>423</tag>
							</field>
							<field>
								<name>Message Input Reference</name>
								<description><![CDATA[This field contains the MIR of the payment message that is related to the notification messages in which this field is present. The MI that is subscribed to MIRS will copy it from the received payment message. In a FINCopy scenario, this field must contain the MIR of the related MT 096]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>106</tag>
							</field>
							<field>
								<name>Related Reference</name>
								<description><![CDATA[This field contains the reference of the payment that is related to the notification messages in which this field is present. The payment itself was not the result of a FIN message. The value of this field must correspond to the related reference (field 21) in the MT298/093. The format of field 424 is 16x.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>424</tag>
							</field>
							<field>
								<name>Service Type Identifier</name>
								<description><![CDATA[This field identifies the applicable global payment service type. The format of field 111 is 3!n.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>111</tag>
							</field>
							<field>
								<name>Unique End-To-End Transaction Reference</name>
								<description><![CDATA[This field provides an end-to-end reference across a payment transaction. The format of field 121 is 36!x.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>121</tag>
							</field>
							<field>
								<name>Addressee Information</name>
								<description><![CDATA[Tag 115 is only valid for output messages. Information from Central Institution to the receiver of payment message. Information is input in the MT 097 FIN Copy Message Authorisation/Refusal Notification in Y-Copy mode.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>115</tag>
							</field>
							<field>
								<name>Payment Release Information Receiver (FINInform Services)</name>
								<description><![CDATA[Tag 165 is only valid for output messages. This field contains information from the server destination to the receiver of payment message. It is only available for use in FINInform services that operate in Y-copy mode.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>165</tag>
							</field>
							<field>
								<name>Receiver Information</name>
								<description><![CDATA[Tag 433 is only valid for output messages. The screening service inputs information in the MT 097 FINCopy Message Authorisation/Refusal Notification, in Y-Copy mode. FINCopy copies the information to the receiver of the screened message.
				    The following values can be present in this field:
				      AOK: message automatically released by screening service
				      FPO: compliance officer has flagged the screening result as false positive
				      NOK: compliance officer has flagged the screened message as suspect
				    The code word can optionally be followed by additional information (up to 20 characters from the x character set).]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>433</tag>
							</field>
						</fields>
					</field>
				</fields>
			</Header>
			<Data>
				<Fields>
					<SwiftSequence Name="A">
						<Name>A</Name>
						<Description><![CDATA[Sequence A]]></Description>
						<Mandatory>true</Mandatory>
						<Repeating>false</Repeating>
						<Fields>
							<SwiftField Name="20">
								<SwiftFieldDef Name="20">
									<Generic>false</Generic>
									<Description><![CDATA[Reference]]></Description>
									<Option Name="">
										<Format><![CDATA[16x]]></Format>
										<Specification><![CDATA[(Sender's Reference)]]></Specification>
										<Description><![CDATA[Sender's Reference]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options> </Options>
								<Validations>
									<SubField Name="Sender's_Reference">
										<Validation>
											<Options> </Options>
											<ErrorCode>T26</ErrorCode>
											<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive slashes '//' (Error code(s): T26).]]></Comment>
											<ValidationPattern xsi:type="T26" Type="T26">
												<Type>T26</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="53a">
								<SwiftFieldDef Name="53">
									<Generic>false</Generic>
									<Option Name="A">
										<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
										<Description><![CDATA[Sender's Correspondent]]></Description>
									</Option>
									<Option Name="B">
										<Format><![CDATA[/1!a[/34x](CRLF35x) | /1!a[/34x] | [/34xCRLF]35x | /34x]]></Format>
										<Specification><![CDATA[(CreditDebit) (Party Identifier) (Location) | (CreditDebit)(Party Identifier) |(Party Identifier) (Location) | (Party Identifier)]]></Specification>
										<Description><![CDATA[Sender's Correspondent]]></Description>
									</Option>
									<Option Name="D">
										<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
										<Description><![CDATA[Sender's Correspondent]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>A, B, D</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27, T28, T29, T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
										<Validation>
											<Options>A</Options>
											<ErrorCode>C05</ErrorCode>
											<Comment><![CDATA[Identifier Code must not be a BEI, ie must not be of subtype BEID, MCCO, TESP or TRCO]]></Comment>
											<ValidationPattern xsi:type="C05" Type="C05">
												<Type>C05</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="CreditDebit">
										<Validation>
											<Options>A, B, D</Options>
											<ErrorCode>T51</ErrorCode>
											<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="C">
														<DetailedName>Credit</DetailedName>
													</Code>
													<Code Name="D">
														<DetailedName>Debit</DetailedName>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="54a">
								<SwiftFieldDef Name="54">
									<Generic>false</Generic>
									<Option Name="A">
										<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
										<Description><![CDATA[Receiver's Correspondent]]></Description>
									</Option>
									<Option Name="B">
										<Format><![CDATA[/1!a[/34x](CRLF35x) | /1!a[/34x] | [/34xCRLF]35x | /34x]]></Format>
										<Specification><![CDATA[(CreditDebit) (Party Identifier) (Location) | (CreditDebit)(Party Identifier) |(Party Identifier) (Location) | (Party Identifier)]]></Specification>
										<Description><![CDATA[Receiver's Correspondent]]></Description>
									</Option>
									<Option Name="D">
										<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
										<Description><![CDATA[Receiver's Correspondent]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>A, B, D</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27, T28, T29, T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
										<Validation>
											<Options>A</Options>
											<ErrorCode>C05</ErrorCode>
											<Comment><![CDATA[Identifier Code must not be a BEI, ie must not be of subtype BEID, MCCO, TESP or TRCO]]></Comment>
											<ValidationPattern xsi:type="C05" Type="C05">
												<Type>C05</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="CreditDebit">
										<Validation>
											<Options>A, B, D</Options>
											<ErrorCode>T51</ErrorCode>
											<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="C">
														<DetailedName>Credit</DetailedName>
													</Code>
													<Code Name="D">
														<DetailedName>Debit</DetailedName>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="72">
								<SwiftFieldDef Name="72">
									<Generic>false</Generic>
									<Description><![CDATA[Sender to Receiver Information]]></Description>
									<Option Name="">
										<Format><![CDATA[6*35x]]></Format>
										<Specification><![CDATA[(Narrative)]]></Specification>
										<Description><![CDATA[Sender to Receiver Information]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options> </Options>
							</SwiftField>
						</Fields>
					</SwiftSequence>
					<SwiftSequence Name="B">
						<Name>B</Name>
						<Description><![CDATA[Sequence B]]></Description>
						<Mandatory>true</Mandatory>
						<Repeating>true</Repeating>
						<Fields>
							<SwiftField Name="21">
								<SwiftFieldDef Name="21">
									<Generic>false</Generic>
									<Option Name="">
										<Format><![CDATA[16x]]></Format>
										<Specification><![CDATA[(Cheque Number)]]></Specification>
										<Description><![CDATA[Cheque Number]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options> </Options>
								<Validations>
									<SubField Name="Cheque_Number">
										<Validation>
											<Options> </Options>
											<ErrorCode>T26</ErrorCode>
											<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive slashes '//'(Error code(s): T26).]]></Comment>
											<ValidationPattern xsi:type="T26" Type="T26">
												<Type>T26</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="30">
								<SwiftFieldDef Name="30">
									<Generic>false</Generic>
									<Option Name="">
										<Format><![CDATA[6!n]]></Format>
										<Specification><![CDATA[(Date)]]></Specification>
										<Description><![CDATA[Date of Issue]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options> </Options>
								<Validations>
									<SubField Name="Date">
										<Validation>
											<Options> </Options>
											<ErrorCode>T50</ErrorCode>
											<Comment><![CDATA[Date must be a valid date expressed as YYMMDD (Error code(s): T50).]]></Comment>
											<ValidationPattern xsi:type="DATE" Type="DATE">
												<Type>DATE</Type>
												<Format>yyMMdd</Format>
												<value-date>true</value-date>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="32a">
								<SwiftFieldDef Name="32">
									<Generic>false</Generic>
									<Description><![CDATA[Amount]]></Description>
									<Option Name="A">
										<Format><![CDATA[6!n3!a15d]]></Format>
										<Specification><![CDATA[(Date) (Currency) (Amount)]]></Specification>
										<Description><![CDATA[Amount]]></Description>
									</Option>
									<Option Name="B">
										<Format><![CDATA[3!a15d]]></Format>
										<Specification><![CDATA[(Currency) (Amount)]]></Specification>
										<Description><![CDATA[Amount]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options>A, B</Options>
								<Validations>
									<SubField Name="Date">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T50</ErrorCode>
											<Comment><![CDATA[Date must be a valid date expressed as YYMMDD (Error code(s): T50).]]></Comment>
											<ValidationPattern xsi:type="DATE" Type="DATE">
												<Type>DATE</Type>
												<Format>yyMMdd</Format>
												<value-date>true</value-date>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="Currency">
										<Validation>
											<Options>A, B</Options>
											<ErrorCode>T52</ErrorCode>
											<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52).]]></Comment>
											<ValidationPattern xsi:type="Currency_Code" Type="Currency Code">
												<Type>Currency Code</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="Amount">
										<Validation>
											<Options>A, B</Options>
											<ErrorCode>C03</ErrorCode>
											<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency.]]></Comment>
											<ValidationPattern xsi:type="Decimal" Type="Decimal">
												<Type>Decimal</Type>
												<currency-field>Currency</currency-field>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="52a">
								<SwiftFieldDef Name="52">
									<Generic>false</Generic>
									<Description><![CDATA[Drawer Bank]]></Description>
									<Option Name="A">
										<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
										<Description><![CDATA[Drawer Bank]]></Description>
									</Option>
									<Option Name="B">
										<Format><![CDATA[/1!a([/34x])(CRLF35x) | /1!a[/34x] | [/34xCRLF]35x | /34x]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Location) | (CreditDebit)(Party Identifier) | (Party Identifier)(Location) | (Party Identifier)]]></Specification>
										<Description><![CDATA[Drawer Bank]]></Description>
									</Option>
									<Option Name="D">
										<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address) | (Party Identifier)(Name & Address)]]></Specification>
										<Description><![CDATA[Drawer Bank]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>A, B, D</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27, T28, T29, T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
										<Validation>
											<Options>A</Options>
											<ErrorCode>C05</ErrorCode>
											<Comment><![CDATA[Identifier Code must not be a BEI, ie must not be of subtype BEID, MCCO, TESP or TRCO]]></Comment>
											<ValidationPattern xsi:type="C05" Type="C05">
												<Type>C05</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="CreditDebit">
										<Validation>
											<Options>A, B, D</Options>
											<ErrorCode>T51</ErrorCode>
											<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="C">
														<DetailedName>Credit</DetailedName>
													</Code>
													<Code Name="D">
														<DetailedName>Debit</DetailedName>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="59">
								<SwiftFieldDef Name="59">
									<Generic>false</Generic>
									<Option Name="">
										<Format><![CDATA[[/34xCRLF]4*35x]]></Format>
										<Specification><![CDATA[(Account)(Name & Address)]]></Specification>
										<Description><![CDATA[Payee]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options> </Options>
							</SwiftField>
						</Fields>
					</SwiftSequence>
				</Fields>
			</Data>
			<Trailer>
				<fields>
					<field>
						<name>Message Authentication Code</name>
						<description><![CDATA[Allows authentication by the receiving user. It is followed by an authentication result.

This trailer is mandatory for most user-to-user message categories within the FIN application. When the FIN Copy Service is used a PAC trailer, if present, follows the MAC trailer.

Format:

{MAC:<authentication-result>}

where <authentication-result> = 8!h

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>8</length>
						<tag>MAC</tag>
					</field>
					<field>
						<name>Proprietary Authentication Code</name>
						<description><![CDATA[The PAC is used within the FIN Copy service only, when using the double authentication option. The PAC is included in Block 5 of FIN user-to-user messages, immediately after the MAC trailer, if present.

This is calculated on the extracted fields of Block 4 of the message, the value of field 115, if present, and the <authentication-result> of the MAC trailer for Copy Services with double authentication.

Thus, the end-of-block indicator (CrLf-) is included in the PAC calculation, and the fields are defined as follows:

The first three characters are CrLf:

The field and the delimiter are present, that is, 32A:, 20:, and so on.

All subfields and their delimiters are present.

Format:

{PAC:[<authentication-result>]}

where <authentication-result> is mandatory on input messages only and <authentication-result> = 8!h

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>8</length>
						<tag>PAC</tag>
					</field>
					<field>
						<name>Checksum</name>
						<description><![CDATA[The checksum is computed based on the receiver's address (12 characters, with 9th character replaced by X) plus the Text Block. This trailer allows the system and the CBT to check that messages have not been corrupted due to a system malfunction or an undetected transmission error.

Format:

{CHK:<checksum-result>}

where <checksum-result> = 12!h

Note: This trailer is mandatory for FIN and GPA messages (Service Identifier 01).

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>12</length>
						<tag>CHK</tag>
					</field>
					<field>
						<name>System Originated Message</name>
						<description><![CDATA[The system message or service message which is generated by a system PLT has a SYS trailer. All solicited system messages (Service Identifier 01) contain the MIR of the request and may also contain the time.

Format:

{SYS:[<time><mir>]}

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>SYS</tag>
					</field>
					<field>
						<name>Test And Training Message</name>
						<description><![CDATA[Mandatory for FIN and GPA messages (Service Identifier 01) sent by, or delivered to, a Test & Training Logical Terminal (LT). This trailer has a tag only, and no value.

Format:

{TNG:}
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>0</length>
						<tag>TNG</tag>
					</field>
					<field>
						<name>Possible Duplicate Emission</name>
						<description><![CDATA[This trailer is used by the destination of the message. It only applies to FIN user-to-user messages (Service Identifier 01, message categories reserved for banking messages). There can be multiple PDEs. The system does not verify the order nor restrict the number (except for maximum message length).

Correctly formatted PDE trailers applied to user-to-system messages are accepted by the system, but not processed. This means that the system does not check to see if the original message exists. Therefore, a retrieval request sent with a PDE trailer may be processed twice if the original message was received by the system.

Format:

{PDE:[<time><mir>]}

where <time><mir> refers to the emission of the previous possible issue.

Note: It can be added automatically by a CBT or manually by a user. It may be followed by the MIR and the time of its previous possible messages.

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>PDE</tag>
					</field>
					<field>
						<name>Delayed Message</name>
						<description><![CDATA[This trailer is added to all FIN user-to-user output messages that have exceeded their obsolescence period. If this trailer appears in GPA or FIN system messages, it must be ignored. This trailer has a tag only, and no value.

The Obsolescence Period is:

U = 15 minutes

N = 100 minutes

Format:

{DLM:}

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>0</length>
						<tag>DLM</tag>
					</field>
					<field>
						<name>Possible Duplicate Message</name>
						<description><![CDATA[Added by the system to any output message (GPA and FIN Service Identifier 01) being resent because a prior delivery may be invalid. If a system PLT receives a report request with a PDM, the response has a plain PDM (without the optional delivery reference). Other PDMs may be added as a result of unsuccessful delivery attempts to the user. 
Format:
{PDM:[<time><mor>]}
where <time> and the Message Output Reference <mor> are that of the previous attempt.
Note: For messages recovered after a system failure, the optional fields may not be present.
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>PDM</tag>
					</field>
					<field>
						<name>Message Reference</name>
						<description><![CDATA[The MRF trailer is used to specify the message reference of the original user message in MT 096 FIN Copy to Central Institution Messages.
Format:
{MRF:<date><full-time><mir>}
where <mir> is that of the original user message whose fields are copied in the MT 096 FIN Copy to Central Institution Message.
Note: The MRF is specific to FIN Copy. The MRF trailer is automatically generated in the MT 096 FIN Copy to Central Institution Message and can only be reused in field 109 of the MT 096 FIN Copy to Central Institution Message to identify the MT 096 to which the MT 097 is a response. The format of the MRF is subject to change.
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>MRF</tag>
					</field>
				</fields>
			</Trailer>
		</SwiftFields>
		<validationrules name="Default">
			<hdrvalidationrules>
				<fieldvalidations>
					<fieldvalidation>
						<name>U09</name>
						<formula><![CDATA[if($this.Header.GetFieldIndex("User_Header") != -1) {
    def userHeader = $this.Header.GetSection("User_Header");
    if(userHeader.$size > 0 && userHeader[0].IsNotNull("Validation_Flag")) {
        return false;
    }
}
return true;
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U09</error-code>
						<actionmessage><![CDATA["User has used tag 119 in a message that is not a candidate for special processing"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>U03</name>
						<fieldname>User Header</fieldname>
						<formula><![CDATA[Iff(IsNotNull(User_Header.Service_Type_Identifier), 
    IsNotNull(User_Header.Unique_End_To_End_Transaction_Reference))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U03</error-code>
						<actionmessage><![CDATA["When populating an end-to-end reference, both fields 111 and 121 must be populated: a message that contains only one of these two fields will not be accepted by FIN."]]></actionmessage>
					</fieldvalidation>
				</fieldvalidations>
			</hdrvalidationrules>
			<datavalidationrules>
				<fieldvalidations>
					<fieldvalidation>
						<name>C1</name>
						<formula><![CDATA[B.$size <= 10]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T10</error-code>
						<actionmessage><![CDATA["The repetitive sequence (Sequence B) must not be present more than ten times."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C2</name>
						<fieldname>B.32a.Currency</fieldname>
						<formula><![CDATA[$value == B[0].F32a[0].Currency]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C02</error-code>
						<actionmessage><![CDATA["The currency code in the amount field 32a must be the same for all occurrences of this field in the message."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>ERI</name>
						<fieldname>A.72.Narrative</fieldname>
						<formula><![CDATA[ApplyERICodeValidationStructured($value);]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T47</error-code>
						<actionmessage><![CDATA["In an ERI field (i.e. fields 61, 72, 77A, 79, 86) the data part of a code word /OCMT/, or /CHGS/, is being validated, but the ending separator (i.e. third slash) is missing or the code words are duplicated."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-52a-A</name>
						<fieldname>B.52a.Party_Identifier</fieldname>
						<comment><![CDATA[FB-52a-A
The value specified for Party Identifier should indicate a national clearing system code.]]></comment>
						<formula><![CDATA[// Fake option B as D VerifyPartyIdentifier check for A, C and D
def formatOption = B.F52a.FormatOption == 'B' ? 'D' : B.F52a.FormatOption; 
VerifyPartyIdentifier($value, formatOption, false, false);]]></formula>
						<enabled>false</enabled>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>FB-52a-A</error-code>
						<actionmessage><![CDATA["Party Identifier is not valid. The value following the national clearing system code does not conform to the format specified for that code."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FA-72</name>
						<fieldname>A.72.Narrative</fieldname>
						<formula><![CDATA[def Actualvalue = replace($value, "\r\n", "\n");
def lines = Split("\n", Actualvalue);
def str = Left(Actualvalue, 6);
def line1format = false;
def line3format = false;
def TREFformat = true;
def CHGSformat = true;
def TEXTformat = true;
def format = true;
def count = 0;
def TREFcount = 0;
def CHGScount = 0;
def TEXTcount = 0;
def i = lines.Length();
if(In(str, "/REJT/", "/RETN/")) {
    if(i <= 6) {
        //if '/REJT/' or '/RETN/' format of 1st line must be "6!x2!n[1a]['/'2c]" & format of 2nd line must be "('/'2!c 2!n'/')[29x]" or "('/X'1c2!n'/')[29x]"
        //if format of 2nd line is "('/'2!c 2!n'/')" then the 6 characters must be one of the codes given below
        line1format = (VerifyFormat(lines[0], "6!x2!n[1a]['/'2c]"));
        if(line1format && lines.Length() > 2) {
            if(!lines[1].StartsWith("/X")) {
                if(VerifyFormat(lines[1], "('/'2!c 2!n'/')[29x]")) {
                	def startStr = lines[1].Left(6);
                    if((!In(startStr, "/AC01/", "/AC02/", "/AC03/", "/AC04/", "/AC05/", "/AC06/", 
                            "/AM01/", "/AM02/", "/AM03/", "/AM04/", "/AM05/", "/AM06/", "/AM07/", 
                            "/AM08/", "/AG01/", "/AG02/", "/BE01/", "/BE02/", "/BE03/", "/BE04/", 
                            "/BE05/", "/DT01/", "/MS01/", "/PY01/", "/RC01/", "/RC02/", "/RC03/", 
                            "/RC04/", "/RF01/", "/TM01/", "/RR01/", "/RR02/", "/RR03/")))
                        return false;
                }
                else
                    return false;
            }
            else if(lines[1].StartsWith("/X") && !VerifyFormat(lines[1], "('/X'1c2!n'/')[29x]"))
                return false;
        }
        else
            return false;
        //Line3 is mandatory and should have the format "/MREF/16x". Lines 4, 5 and 6 are optional
        //If lines 4, 5 or 6 or any combination exists and if the first 6 characters starts with either '/TREF/' or '/CHGS/' or '/TEXT/' or '//'
        //it should satisfy the format given. Also if line starts with '//' it can appear a max of 2 times
        line3format = Equal(Left(lines[2], 6), "/MREF/") && 
                        VerifyFormat(Substring(lines[2], 6), "16x");
        if(line3format) {
            while(i > 3) {
                def str1 = Left(lines[i - 1], 6);
                def str2 = Substring(lines[i - 1], 6);
                if(In(str1, "/TREF/", "/CHGS/", "/TEXT/") || StartsWith(lines[i - 1], "//")) {
                    if(str1 == "/TREF/") {
                        TREFformat = VerifyFormat(str2, "16x");
                        TREFcount += 1;
                    }
                    else if(str1 == "/CHGS/") {
                        CHGSformat = (VerifyFormat(str2, "3!a15d") && 
                                        IsISOCurrencyCode(Substring(lines[i - 1], 6, 3)));
                        CHGScount += 1;
                    }
                    else if(str1 == "/TEXT/") {
                        TEXTformat = (VerifyFormat(str2, "29x"));
                        TEXTcount += 1;
                    }
                    else if(StartsWith(lines[i - 1], "//")) {
                        def str3 = Substring(lines[i - 1], 2);
                        format = (VerifyFormat(str3, "33x"));
                        count += 1;
                        if(!format || count > 2)
                            break;
                    }
                }
                else
                    return false;
                i = i - 1;
            }
        }
        else
            return false;
        if(!TREFformat || !CHGSformat || !TEXTformat || !format || count > 2 || TREFcount > 1 || 
             CHGScount > 1 || TEXTcount > 1)
            return false;
    }
    else
        return false;
}
return true;
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T80</error-code>
						<actionmessage><![CDATA["Field 72 Reject/Return: code word error, or mandatory code word missing, or code word not in the proper sequence, or format 6*35x not satisfied"]]></actionmessage>
					</fieldvalidation>
				</fieldvalidations>
			</datavalidationrules>
			<tlrvalidationrules>
				<fieldvalidations>
				</fieldvalidations>
			</tlrvalidationrules>
		</validationrules>
		<elementproperties>
			<propertymap>
				<property name="codegen.java.properties">
					<value>
						<propertymap type="com.tplus.transform.design.PropertiesDef">
							<property name="Java Package Name" value="com.transform.external.%e"/>
							<property name="Jar Name" value="%c.jar"/>
							<property name="Manifest Entries" value="transformrt.jar swiftrt.jar swiftresources.jar"/>
							<property name="Data Source" value=""/>
						</propertymap>
					</value>
				</property>
			</propertymap>
		</elementproperties>
	</externalmessage>
	<externalmessage xsi:type="SwiftFormat" type="SwiftFormat" version="5.1.2" rulename="MT111_2016" formattype="SwiftFormat" >
		<description><![CDATA[This single message type is sent by a drawer bank, or a bank acting on behalf of the drawer bank, to the bank on which a cheque has been drawn (the drawee bank).

It is used to request stop payment of the cheque referred to in the message.]]></description>
		<standard>SWIFT</standard>
		<standard-name>MT111</standard-name>
		<standard-version>SRG 2016</standard-version>
		<standard-release-qualifier>20160308</standard-release-qualifier>
		<standard-category>Customer Payments &amp; Cheques</standard-category>
		<standard-detailed-name>Request for Stop Payment of a Cheque</standard-detailed-name>
		<version>1.0</version>
		<SwiftFields>
			<customizable>true</customizable>
			<modifiable>false</modifiable>
			<SwiftMessageType>User</SwiftMessageType>
			<max-length>2000</max-length>
			<HeaderAndTrailerType>SWIFT_INPUT_OUTPUT_HEADER</HeaderAndTrailerType>
			<Header>
				<fields>
					<field>
						<name>Basic Header</name>
						<description><![CDATA[The Basic Header is given in Block 1 of a SWIFT message and is the only header that appears on all messages. The Basic Header provides the fundamental reference for any particular message and is almost always automatically built by the CBT.
The Basic Header has the same format for both input and output messages. However, the information contained in the Basic Header is relative to the sender when the message is input but relative to the receiver when the same message is output.]]></description>
						<datatype>Section</datatype>
						<required>true</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Application Identifier</name>
								<description><![CDATA[The Application Identifier identifies the application within which the message is being sent or received. The available options are:

F = FIN All user-to-user, FIN system and FIN service messages 
A = GPA Most GPA system and service messages 
L = GPA Certain GPA service messages, for example, LOGIN, LAKs, ABORT 

These values are automatically assigned by the SWIFT system and the user's CBT, but the user should be aware of their existence and significance
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Service Identifier</name>
								<description><![CDATA[The Service Identifier consists of 2 numeric characters. It identifies the type of data that is being sent or received and, in doing so, whether the message which follows is one of the following:

a user-to-user message

a system message

a service message, for example, a session control command, such as SELECT, or a logical acknowledgement, such as ACK/SAK/UAK

Users will be primarily concerned with identifier '01' which applies to all GPA and FIN system and user-to-user messages. Other values include: '21' for message acknowledgements such as ACK/NAK, UAK/UNK, '03' for SELECT commands, and 
so on]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>2</length>
							</field>
							<field>
								<name>LT Identifier</name>
								<description><![CDATA[This 12-character SWIFT address, given in the Basic Header Block, is the address of the sending LT for input messages or of the receiving LT for output messages, and includes the Branch Code.

In the Basic Header, the LT Code within the LT Identifier is specific to the LT that has established the session in which the message is being transmitted, that is the sending LT for input messages or the receiving LT for output messages.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>12</length>
							</field>
							<field>
								<name>Session Number</name>
								<description><![CDATA[The Session Number identifies the session in which the message was transmitted. Within the Basic Header, the 4-digit Session Number is the user's current GPA or FIN Session Number.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Sequence Number</name>
								<description><![CDATA[The sequence number always consists of 6 digits. It is the ISN of the sender's current input session or the OSN of the receiver's current output session.

Note: The sequence number is not present in those messages with an Application Identifier of 'L' (for example LOGIN). The sequence number is, however, a key element in the processing of retrievals. Therefore, LOGINs and attempted LOGINs are not retrievable
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>6</length>
							</field>
						</fields>
					</field>
					<field>
						<name>Application Header Input</name>
						<description><![CDATA[The Application Header of a SWIFT message provides information about the message itself.

The Application Header is given in Block 2 of a SWIFT message. It differs according to whether the message is a GPA or a FIN message and whether the Application Header is part of an input or an output message.

]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Input/Output Identifier</name>
								<description><![CDATA[For an input message, the Input/Output Identifier consists of the single letter 'I'.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Message Type</name>
								<description><![CDATA[The Message Type consists of 3 digits which define the MT number of the message being input. The example used above is for an MT 100 Customer Transfer]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>3</length>
							</field>
							<field>
								<name>Receiver's Address</name>
								<description><![CDATA[This address is the 12-character SWIFT address of the receiver of the message, but with a LT Code of 'X'. It defines the destination to which the message should be sent.

The system will replace the 'X' with a specific LT Code on delivery of the message according to the delivery control exercised by the receiving user.

The Branch Code is mandatory and will be validated. The default of 'XXX' may be used, as in the example above.

Unless otherwise documented, system messages addressed to the SWIFT system itself should be addressed to SWFTXXXXXXXX.

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>12</length>
							</field>
							<field>
								<name>Message Priority</name>
								<description><![CDATA[This character, used within FIN Application Headers only, defines the priority with which a message is delivered. The possible values are:

S = System

U = Urgent

N = Normal

Message Priority 'S' must be used for user-to-system messages; for user-to-user messages either 'U' or 'N' can be used. In the absence of user-specified delivery criteria, system messages are always delivered first, followed by urgent priority messages and then normal priority messages.

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Delivery Monitoring</name>
								<description><![CDATA[Delivery monitoring options apply only to FIN user-to-user messages, and allow the sender of a message to request:

automatic MT 011 Delivery Notification once the message has been delivered

automatic MT 010 Non-Delivery Warning if a message is not delivered within the specified obsolescence period (see below)

both, or neither, options. This may be requested on an individual message basis.

The chosen option is expressed as a single digit:

1 = Non-Delivery Warning

2 = Delivery Notification

3 = Non-Delivery Warning and Delivery Notification. 
If the message has priority 'U' then the user must request delivery monitoring option '1' or '3'. If the message has priority 'N', the user can request delivery monitoring option '2', or, by leaving the option blank, no delivery monitoring.
]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>1</length>
							</field>
							<field>
								<name>Obsolescence Period</name>
								<description><![CDATA[The obsolescence period defines the period of time after which a Delayed Message (DLM) trailer is added to a FIN user-to-user message when the message is delivered. For urgent priority messages, it is also the period of time after which, if the message remains undelivered, a Non-Delivery Warning is generated.

The values for the obsolescence period are 003 (15 minutes) for 'U' priority, and 020 (100 minutes) for 'N' priority. An obsolescence period can only be specified when delivery monitoring has been requested (option 1 or 3 for urgent priority messages, option 2 for normal priority messages). If no delivery monitoring has been requested, and an obsolescence period is specified, the message will be NAKed with error code H25.

GPA input Application Headers are similar to their FIN equivalents except that GPA messages do not specify priority, delivery monitoring, nor obsolescence period.

]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>3</length>
							</field>
						</fields>
					</field>
					<field>
						<name>Application Header Output</name>
						<description><![CDATA[The Application Header of a SWIFT message provides information about the message itself.

The Application Header is given in Block 2 of a SWIFT message. It differs according to whether the message is a GPA or a FIN message and whether the Application Header is part of an input or an output message.

]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Input/Output Identifier</name>
								<description><![CDATA[For an input message, the Input/Output Identifier consists of the single letter 'I'.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Message Type</name>
								<description><![CDATA[Three digits indicating the Message Type.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>3</length>
							</field>
							<field>
								<name>Input Time</name>
								<description><![CDATA[The first occurrence of the time field contains the system time and date. This is the generation time in Greenwich Mean Time (GMT).
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Message Input Reference</name>
								<description><![CDATA[The input MIR.

If the message is generated by the system, the input time is the generation time (in GMT) and the input MIR is the system MIR

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>28</length>
							</field>
							<field>
								<name>Output Date</name>
								<description><![CDATA[The output date, local to the receiver.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>6</length>
							</field>
							<field>
								<name>Output Time</name>
								<description><![CDATA[The second occurrence of the time field contains the output time and date. This is in a time local to the receiver.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Message Priority</name>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
						</fields>
					</field>
					<field>
						<name>User Header</name>
						<description><![CDATA[The User Header is an optional header available within FIN for user-to-user messages only. It appears in Block 3 of a SWIFT message, and allows users to provide their own reference within the headers for a particular message.

A User Header can only be assigned by the sender of a message and, if assigned, will always appear on the output message copy. Relevant parts of the User Header will be repeated in related system messages and acknowledgements.

Block 3 may contain tag 113, defining banking priorities, and tag 108, which is a user reference. The user reference part of the User Header may be used as one of the selection criteria when retrieving a message.

The optional field tags 103 and 115 are also used in Block 3 for the FIN Copy service. The order of tags, when present, is 103, 113, 108 and 115.

An optional field tag 119 can be included in Block 3 of certain messages to specify that different validation rules are to be applied. Agreed code words in field 119 indicate what validation rules SWIFT will apply. If field 119 is present, it should appear after field 108
]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Service Identifier</name>
								<description><![CDATA[For any message which the user submits to a FIN Copy service, Block 3 requires an additional field 103 which contains a three-character Service Identifier unique to a specific FIN Copy service. By using a unique identifier it is possible to support access to multiple services within the same CBT.
]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>3</length>
								<tag>103</tag>
							</field>
							<field>
								<name>Banking Priority</name>
								<description><![CDATA[Assigned by the sender of the message.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>4</length>
								<tag>113</tag>
							</field>
							<field>
								<name>Message User Reference</name>
								<description><![CDATA[Assigned by the sender of the message.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>16</length>
								<tag>108</tag>
							</field>
							<field>
								<name>Validation Flag</name>
								<description><![CDATA[Indicates whether a special validation needs to be performed by FIN. The following are examples of the values this field may take. Please note that this list is subject to change:

ISITC indicates validation of ISITC Standards. Only to be used with MT 521 and MT 523.

REMIT identifies the presence of field 77T. Only to be used in MT 103.

RFDD indicates that the message is a request for direct debit. Only to be used in MT 104.

STP indicates that the message is validated according to straight through processing principles. Only to be used in MT 103.

]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>119</tag>
							</field>
							<field>
								<name>Balance checkpoint date and time</name>
								<description><![CDATA[This field contains the balance checkpoint date and time consisting of a date (YYMMDD) and a time (HHMMSS[ss], where 'ss' indicates hundredths of a second). The MI that is subscribed to MIRS will always copy this reference from field tag 13G of the last MT298/091 that it sent into the related MT 298/093 or MT 097 that it generates. ]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>423</tag>
							</field>
							<field>
								<name>Message Input Reference</name>
								<description><![CDATA[This field contains the MIR of the payment message that is related to the notification messages in which this field is present. The MI that is subscribed to MIRS will copy it from the received payment message. In a FINCopy scenario, this field must contain the MIR of the related MT 096]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>106</tag>
							</field>
							<field>
								<name>Related Reference</name>
								<description><![CDATA[This field contains the reference of the payment that is related to the notification messages in which this field is present. The payment itself was not the result of a FIN message. The value of this field must correspond to the related reference (field 21) in the MT298/093. The format of field 424 is 16x.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>424</tag>
							</field>
							<field>
								<name>Service Type Identifier</name>
								<description><![CDATA[This field identifies the applicable global payment service type. The format of field 111 is 3!n.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>111</tag>
							</field>
							<field>
								<name>Unique End-To-End Transaction Reference</name>
								<description><![CDATA[This field provides an end-to-end reference across a payment transaction. The format of field 121 is 36!x.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>121</tag>
							</field>
							<field>
								<name>Addressee Information</name>
								<description><![CDATA[Tag 115 is only valid for output messages. Information from Central Institution to the receiver of payment message. Information is input in the MT 097 FIN Copy Message Authorisation/Refusal Notification in Y-Copy mode.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>115</tag>
							</field>
							<field>
								<name>Payment Release Information Receiver (FINInform Services)</name>
								<description><![CDATA[Tag 165 is only valid for output messages. This field contains information from the server destination to the receiver of payment message. It is only available for use in FINInform services that operate in Y-copy mode.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>165</tag>
							</field>
							<field>
								<name>Receiver Information</name>
								<description><![CDATA[Tag 433 is only valid for output messages. The screening service inputs information in the MT 097 FINCopy Message Authorisation/Refusal Notification, in Y-Copy mode. FINCopy copies the information to the receiver of the screened message.
				    The following values can be present in this field:
				      AOK: message automatically released by screening service
				      FPO: compliance officer has flagged the screening result as false positive
				      NOK: compliance officer has flagged the screened message as suspect
				    The code word can optionally be followed by additional information (up to 20 characters from the x character set).]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>433</tag>
							</field>
						</fields>
					</field>
				</fields>
			</Header>
			<Data>
				<Fields>
					<SwiftField Name="20">
						<SwiftFieldDef Name="20">
							<Generic>false</Generic>
							<Option Name="">
								<Format><![CDATA[16x]]></Format>
								<Specification><![CDATA[(Reference)]]></Specification>
								<Description><![CDATA[Sender's Reference]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options> </Options>
						<Validations>
							<SubField Name="Reference">
								<Validation>
									<Options> </Options>
									<ErrorCode>T26</ErrorCode>
									<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive slashes '//' (Error code(s): T26).]]></Comment>
									<ValidationPattern xsi:type="T26" Type="T26">
										<Type>T26</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="21">
						<SwiftFieldDef Name="21">
							<Generic>false</Generic>
							<Option Name="">
								<Format><![CDATA[16x]]></Format>
								<Specification><![CDATA[(Cheque Number)]]></Specification>
								<Description><![CDATA[Cheque Number]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options> </Options>
						<Validations>
							<SubField Name="Cheque_Number">
								<Validation>
									<Options> </Options>
									<ErrorCode>T26</ErrorCode>
									<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive slashes '//' (Error code(s): T26).]]></Comment>
									<ValidationPattern xsi:type="T26" Type="T26">
										<Type>T26</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="30">
						<SwiftFieldDef Name="30">
							<Generic>false</Generic>
							<Option Name="">
								<Format><![CDATA[6!n]]></Format>
								<Specification><![CDATA[(Date)]]></Specification>
								<Description><![CDATA[Date of Issue]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options> </Options>
						<Validations>
							<SubField Name="Date">
								<Validation>
									<Options> </Options>
									<ErrorCode>T50</ErrorCode>
									<Comment><![CDATA[Date must be a valid date expressed as YYMMDD (Error code(s): T50).]]></Comment>
									<ValidationPattern xsi:type="DATE" Type="DATE">
										<Type>DATE</Type>
										<Format>yyMMdd</Format>
										<value-date>true</value-date>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="32a">
						<SwiftFieldDef Name="32">
							<Generic>false</Generic>
							<Option Name="A">
								<Format><![CDATA[6!n3!a15d]]></Format>
								<Specification><![CDATA[(Date) (Currency) (Amount)]]></Specification>
								<Description><![CDATA[Amount]]></Description>
							</Option>
							<Option Name="B">
								<Format><![CDATA[3!a15d]]></Format>
								<Specification><![CDATA[(Currency)(Amount)]]></Specification>
								<Description><![CDATA[Amount]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options>A, B</Options>
						<Validations>
							<SubField Name="Date">
								<Validation>
									<Options>A</Options>
									<ErrorCode>T50</ErrorCode>
									<Comment><![CDATA[Date must be a valid date expressed as YYMMDD (Error code(s): T50).]]></Comment>
									<ValidationPattern xsi:type="DATE" Type="DATE">
										<Type>DATE</Type>
										<Format>yyMMdd</Format>
										<value-date>true</value-date>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="Currency">
								<Validation>
									<Options>A, B</Options>
									<ErrorCode>T52</ErrorCode>
									<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52).]]></Comment>
									<ValidationPattern xsi:type="Currency_Code" Type="Currency Code">
										<Type>Currency Code</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="Amount">
								<Validation>
									<Options>A, B</Options>
									<ErrorCode>C03</ErrorCode>
									<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency(Error code(s): C03).]]></Comment>
									<ValidationPattern xsi:type="Decimal" Type="Decimal">
										<Type>Decimal</Type>
										<currency-field>Currency</currency-field>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="52a">
						<SwiftFieldDef Name="52">
							<Generic>false</Generic>
							<Option Name="A">
								<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
								<Description><![CDATA[Drawer Bank]]></Description>
							</Option>
							<Option Name="B">
								<Format><![CDATA[/1!a([/34x])(CRLF35x) | /1!a[/34x] | [/34xCRLF]35x | /34x]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Location) | (CreditDebit)(Party Identifier) | (Party Identifier)(Location) | (Party Identifier)]]></Specification>
								<Description><![CDATA[Drawer Bank]]></Description>
							</Option>
							<Option Name="D">
								<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
								<Description><![CDATA[Drawer Bank]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options>A, B, D</Options>
						<Validations>
							<SubField Name="Identifier_Code">
								<Validation>
									<Options>A</Options>
									<ErrorCode>T27, T28, T29, T45</ErrorCode>
									<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
									<ValidationPattern xsi:type="BIC" Type="BIC">
										<Type>BIC</Type>
									</ValidationPattern>
								</Validation>
								<Validation>
									<Options>A</Options>
									<ErrorCode>C05</ErrorCode>
									<Comment><![CDATA[Identifier Code must not be a BEI.This error code applies to all types of BICs referenced in a FIN message including SWIFT BICs, non-SWIFT BICs, Masters, Synonyms, Live destinations and Test & Training destinations. (Error code(s): C05).]]></Comment>
									<ValidationPattern xsi:type="C05" Type="C05">
										<Type>C05</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="CreditDebit">
								<Validation>
									<Options>A, B, D</Options>
									<ErrorCode>T51</ErrorCode>
									<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
									<ValidationPattern xsi:type="CODE" Type="CODE">
										<Type>CODE</Type>
										<Codes>
											<Code Name="C">
												<DetailedName>Credit</DetailedName>
											</Code>
											<Code Name="D">
												<DetailedName>Debit</DetailedName>
											</Code>
										</Codes>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="59">
						<SwiftFieldDef Name="59">
							<Generic>false</Generic>
							<Option Name="">
								<Format><![CDATA[[/34xCRLF]4*35x]]></Format>
								<Specification><![CDATA[(Account)(Name & Address)]]></Specification>
								<Description><![CDATA[Payee]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options> </Options>
					</SwiftField>
					<SwiftField Name="75">
						<SwiftFieldDef Name="75">
							<Generic>false</Generic>
							<Option Name="">
								<Format><![CDATA[6*35x]]></Format>
								<Specification><![CDATA[(Narrative)]]></Specification>
								<Description><![CDATA[Queries]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options> </Options>
					</SwiftField>
				</Fields>
			</Data>
			<Trailer>
				<fields>
					<field>
						<name>Message Authentication Code</name>
						<description><![CDATA[Allows authentication by the receiving user. It is followed by an authentication result.

This trailer is mandatory for most user-to-user message categories within the FIN application. When the FIN Copy Service is used a PAC trailer, if present, follows the MAC trailer.

Format:

{MAC:<authentication-result>}

where <authentication-result> = 8!h

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>8</length>
						<tag>MAC</tag>
					</field>
					<field>
						<name>Proprietary Authentication Code</name>
						<description><![CDATA[The PAC is used within the FIN Copy service only, when using the double authentication option. The PAC is included in Block 5 of FIN user-to-user messages, immediately after the MAC trailer, if present.

This is calculated on the extracted fields of Block 4 of the message, the value of field 115, if present, and the <authentication-result> of the MAC trailer for Copy Services with double authentication.

Thus, the end-of-block indicator (CrLf-) is included in the PAC calculation, and the fields are defined as follows:

The first three characters are CrLf:

The field and the delimiter are present, that is, 32A:, 20:, and so on.

All subfields and their delimiters are present.

Format:

{PAC:[<authentication-result>]}

where <authentication-result> is mandatory on input messages only and <authentication-result> = 8!h

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>8</length>
						<tag>PAC</tag>
					</field>
					<field>
						<name>Checksum</name>
						<description><![CDATA[The checksum is computed based on the receiver's address (12 characters, with 9th character replaced by X) plus the Text Block. This trailer allows the system and the CBT to check that messages have not been corrupted due to a system malfunction or an undetected transmission error.

Format:

{CHK:<checksum-result>}

where <checksum-result> = 12!h

Note: This trailer is mandatory for FIN and GPA messages (Service Identifier 01).

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>12</length>
						<tag>CHK</tag>
					</field>
					<field>
						<name>System Originated Message</name>
						<description><![CDATA[The system message or service message which is generated by a system PLT has a SYS trailer. All solicited system messages (Service Identifier 01) contain the MIR of the request and may also contain the time.

Format:

{SYS:[<time><mir>]}

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>SYS</tag>
					</field>
					<field>
						<name>Test And Training Message</name>
						<description><![CDATA[Mandatory for FIN and GPA messages (Service Identifier 01) sent by, or delivered to, a Test & Training Logical Terminal (LT). This trailer has a tag only, and no value.

Format:

{TNG:}
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>0</length>
						<tag>TNG</tag>
					</field>
					<field>
						<name>Possible Duplicate Emission</name>
						<description><![CDATA[This trailer is used by the destination of the message. It only applies to FIN user-to-user messages (Service Identifier 01, message categories reserved for banking messages). There can be multiple PDEs. The system does not verify the order nor restrict the number (except for maximum message length).

Correctly formatted PDE trailers applied to user-to-system messages are accepted by the system, but not processed. This means that the system does not check to see if the original message exists. Therefore, a retrieval request sent with a PDE trailer may be processed twice if the original message was received by the system.

Format:

{PDE:[<time><mir>]}

where <time><mir> refers to the emission of the previous possible issue.

Note: It can be added automatically by a CBT or manually by a user. It may be followed by the MIR and the time of its previous possible messages.

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>PDE</tag>
					</field>
					<field>
						<name>Delayed Message</name>
						<description><![CDATA[This trailer is added to all FIN user-to-user output messages that have exceeded their obsolescence period. If this trailer appears in GPA or FIN system messages, it must be ignored. This trailer has a tag only, and no value.

The Obsolescence Period is:

U = 15 minutes

N = 100 minutes

Format:

{DLM:}

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>0</length>
						<tag>DLM</tag>
					</field>
					<field>
						<name>Possible Duplicate Message</name>
						<description><![CDATA[Added by the system to any output message (GPA and FIN Service Identifier 01) being resent because a prior delivery may be invalid. If a system PLT receives a report request with a PDM, the response has a plain PDM (without the optional delivery reference). Other PDMs may be added as a result of unsuccessful delivery attempts to the user. 
Format:
{PDM:[<time><mor>]}
where <time> and the Message Output Reference <mor> are that of the previous attempt.
Note: For messages recovered after a system failure, the optional fields may not be present.
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>PDM</tag>
					</field>
					<field>
						<name>Message Reference</name>
						<description><![CDATA[The MRF trailer is used to specify the message reference of the original user message in MT 096 FIN Copy to Central Institution Messages.
Format:
{MRF:<date><full-time><mir>}
where <mir> is that of the original user message whose fields are copied in the MT 096 FIN Copy to Central Institution Message.
Note: The MRF is specific to FIN Copy. The MRF trailer is automatically generated in the MT 096 FIN Copy to Central Institution Message and can only be reused in field 109 of the MT 096 FIN Copy to Central Institution Message to identify the MT 096 to which the MT 097 is a response. The format of the MRF is subject to change.
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>MRF</tag>
					</field>
				</fields>
			</Trailer>
		</SwiftFields>
		<validationrules name="Default">
			<hdrvalidationrules>
				<fieldvalidations>
					<fieldvalidation>
						<name>U09</name>
						<formula><![CDATA[if($this.Header.GetFieldIndex("User_Header") != -1) {
    def userHeader = $this.Header.GetSection("User_Header");
    if(userHeader.$size > 0 && userHeader[0].IsNotNull("Validation_Flag")) {
        return false;
    }
}
return true;
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U09</error-code>
						<actionmessage><![CDATA["User has used tag 119 in a message that is not a candidate for special processing"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>U03</name>
						<fieldname>User Header</fieldname>
						<formula><![CDATA[Iff(IsNotNull(User_Header.Service_Type_Identifier), 
    IsNotNull(User_Header.Unique_End_To_End_Transaction_Reference))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U03</error-code>
						<actionmessage><![CDATA["When populating an end-to-end reference, both fields 111 and 121 must be populated: a message that contains only one of these two fields will not be accepted by FIN."]]></actionmessage>
					</fieldvalidation>
				</fieldvalidations>
			</hdrvalidationrules>
			<datavalidationrules>
				<fieldvalidations>
					<fieldvalidation>
						<name>F52a-A</name>
						<fieldname>52a.Party_Identifier</fieldname>
						<comment><![CDATA[F52a-A
The value specified for Party Identifier should indicate a national clearing system code.]]></comment>
						<formula><![CDATA[// Fake option B as D VerifyPartyIdentifier check for A, C and D
def formatOption = F52a.FormatOption == 'B' ? 'D' : F52a.FormatOption; 
VerifyPartyIdentifier($value, formatOption, false, false);]]></formula>
						<enabled>false</enabled>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>F52a-A</error-code>
						<actionmessage><![CDATA["Party Identifier is not valid. The value following the national clearing system code does not conform to the format specified for that code."]]></actionmessage>
					</fieldvalidation>
				</fieldvalidations>
			</datavalidationrules>
			<tlrvalidationrules>
				<fieldvalidations>
				</fieldvalidations>
			</tlrvalidationrules>
		</validationrules>
		<elementproperties>
			<propertymap>
				<property name="codegen.java.properties">
					<value>
						<propertymap type="com.tplus.transform.design.PropertiesDef">
							<property name="Java Package Name" value="com.transform.external.%e"/>
							<property name="Jar Name" value="%c.jar"/>
							<property name="Manifest Entries" value="transformrt.jar swiftrt.jar swiftresources.jar"/>
							<property name="Data Source" value=""/>
						</propertymap>
					</value>
				</property>
			</propertymap>
		</elementproperties>
	</externalmessage>
	<externalmessage xsi:type="SwiftFormat" type="SwiftFormat" version="5.1.2" rulename="MT112_2016" formattype="SwiftFormat" >
		<description><![CDATA[This message type is sent by the drawee bank (on which a cheque is drawn) to the drawer bank or the bank acting on behalf of the drawer bank.

It is used to indicate what actions have been taken in attempting to stop payment of the cheque referred to in the message.]]></description>
		<standard>SWIFT</standard>
		<standard-name>MT112</standard-name>
		<standard-version>SRG 2016</standard-version>
		<standard-release-qualifier>20160308</standard-release-qualifier>
		<standard-category>Customer Payments &amp; Cheques</standard-category>
		<standard-detailed-name>Status of a Request for Stop Payment of a Cheque</standard-detailed-name>
		<version>1.0</version>
		<SwiftFields>
			<customizable>true</customizable>
			<modifiable>false</modifiable>
			<SwiftMessageType>User</SwiftMessageType>
			<max-length>2000</max-length>
			<HeaderAndTrailerType>SWIFT_INPUT_OUTPUT_HEADER</HeaderAndTrailerType>
			<Header>
				<fields>
					<field>
						<name>Basic Header</name>
						<description><![CDATA[The Basic Header is given in Block 1 of a SWIFT message and is the only header that appears on all messages. The Basic Header provides the fundamental reference for any particular message and is almost always automatically built by the CBT.
The Basic Header has the same format for both input and output messages. However, the information contained in the Basic Header is relative to the sender when the message is input but relative to the receiver when the same message is output.]]></description>
						<datatype>Section</datatype>
						<required>true</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Application Identifier</name>
								<description><![CDATA[The Application Identifier identifies the application within which the message is being sent or received. The available options are:

F = FIN All user-to-user, FIN system and FIN service messages 
A = GPA Most GPA system and service messages 
L = GPA Certain GPA service messages, for example, LOGIN, LAKs, ABORT 

These values are automatically assigned by the SWIFT system and the user's CBT, but the user should be aware of their existence and significance
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Service Identifier</name>
								<description><![CDATA[The Service Identifier consists of 2 numeric characters. It identifies the type of data that is being sent or received and, in doing so, whether the message which follows is one of the following:

a user-to-user message

a system message

a service message, for example, a session control command, such as SELECT, or a logical acknowledgement, such as ACK/SAK/UAK

Users will be primarily concerned with identifier '01' which applies to all GPA and FIN system and user-to-user messages. Other values include: '21' for message acknowledgements such as ACK/NAK, UAK/UNK, '03' for SELECT commands, and 
so on]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>2</length>
							</field>
							<field>
								<name>LT Identifier</name>
								<description><![CDATA[This 12-character SWIFT address, given in the Basic Header Block, is the address of the sending LT for input messages or of the receiving LT for output messages, and includes the Branch Code.

In the Basic Header, the LT Code within the LT Identifier is specific to the LT that has established the session in which the message is being transmitted, that is the sending LT for input messages or the receiving LT for output messages.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>12</length>
							</field>
							<field>
								<name>Session Number</name>
								<description><![CDATA[The Session Number identifies the session in which the message was transmitted. Within the Basic Header, the 4-digit Session Number is the user's current GPA or FIN Session Number.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Sequence Number</name>
								<description><![CDATA[The sequence number always consists of 6 digits. It is the ISN of the sender's current input session or the OSN of the receiver's current output session.

Note: The sequence number is not present in those messages with an Application Identifier of 'L' (for example LOGIN). The sequence number is, however, a key element in the processing of retrievals. Therefore, LOGINs and attempted LOGINs are not retrievable
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>6</length>
							</field>
						</fields>
					</field>
					<field>
						<name>Application Header Input</name>
						<description><![CDATA[The Application Header of a SWIFT message provides information about the message itself.

The Application Header is given in Block 2 of a SWIFT message. It differs according to whether the message is a GPA or a FIN message and whether the Application Header is part of an input or an output message.

]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Input/Output Identifier</name>
								<description><![CDATA[For an input message, the Input/Output Identifier consists of the single letter 'I'.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Message Type</name>
								<description><![CDATA[The Message Type consists of 3 digits which define the MT number of the message being input. The example used above is for an MT 100 Customer Transfer]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>3</length>
							</field>
							<field>
								<name>Receiver's Address</name>
								<description><![CDATA[This address is the 12-character SWIFT address of the receiver of the message, but with a LT Code of 'X'. It defines the destination to which the message should be sent.

The system will replace the 'X' with a specific LT Code on delivery of the message according to the delivery control exercised by the receiving user.

The Branch Code is mandatory and will be validated. The default of 'XXX' may be used, as in the example above.

Unless otherwise documented, system messages addressed to the SWIFT system itself should be addressed to SWFTXXXXXXXX.

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>12</length>
							</field>
							<field>
								<name>Message Priority</name>
								<description><![CDATA[This character, used within FIN Application Headers only, defines the priority with which a message is delivered. The possible values are:

S = System

U = Urgent

N = Normal

Message Priority 'S' must be used for user-to-system messages; for user-to-user messages either 'U' or 'N' can be used. In the absence of user-specified delivery criteria, system messages are always delivered first, followed by urgent priority messages and then normal priority messages.

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Delivery Monitoring</name>
								<description><![CDATA[Delivery monitoring options apply only to FIN user-to-user messages, and allow the sender of a message to request:

automatic MT 011 Delivery Notification once the message has been delivered

automatic MT 010 Non-Delivery Warning if a message is not delivered within the specified obsolescence period (see below)

both, or neither, options. This may be requested on an individual message basis.

The chosen option is expressed as a single digit:

1 = Non-Delivery Warning

2 = Delivery Notification

3 = Non-Delivery Warning and Delivery Notification. 
If the message has priority 'U' then the user must request delivery monitoring option '1' or '3'. If the message has priority 'N', the user can request delivery monitoring option '2', or, by leaving the option blank, no delivery monitoring.
]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>1</length>
							</field>
							<field>
								<name>Obsolescence Period</name>
								<description><![CDATA[The obsolescence period defines the period of time after which a Delayed Message (DLM) trailer is added to a FIN user-to-user message when the message is delivered. For urgent priority messages, it is also the period of time after which, if the message remains undelivered, a Non-Delivery Warning is generated.

The values for the obsolescence period are 003 (15 minutes) for 'U' priority, and 020 (100 minutes) for 'N' priority. An obsolescence period can only be specified when delivery monitoring has been requested (option 1 or 3 for urgent priority messages, option 2 for normal priority messages). If no delivery monitoring has been requested, and an obsolescence period is specified, the message will be NAKed with error code H25.

GPA input Application Headers are similar to their FIN equivalents except that GPA messages do not specify priority, delivery monitoring, nor obsolescence period.

]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>3</length>
							</field>
						</fields>
					</field>
					<field>
						<name>Application Header Output</name>
						<description><![CDATA[The Application Header of a SWIFT message provides information about the message itself.

The Application Header is given in Block 2 of a SWIFT message. It differs according to whether the message is a GPA or a FIN message and whether the Application Header is part of an input or an output message.

]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Input/Output Identifier</name>
								<description><![CDATA[For an input message, the Input/Output Identifier consists of the single letter 'I'.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Message Type</name>
								<description><![CDATA[Three digits indicating the Message Type.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>3</length>
							</field>
							<field>
								<name>Input Time</name>
								<description><![CDATA[The first occurrence of the time field contains the system time and date. This is the generation time in Greenwich Mean Time (GMT).
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Message Input Reference</name>
								<description><![CDATA[The input MIR.

If the message is generated by the system, the input time is the generation time (in GMT) and the input MIR is the system MIR

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>28</length>
							</field>
							<field>
								<name>Output Date</name>
								<description><![CDATA[The output date, local to the receiver.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>6</length>
							</field>
							<field>
								<name>Output Time</name>
								<description><![CDATA[The second occurrence of the time field contains the output time and date. This is in a time local to the receiver.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Message Priority</name>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
						</fields>
					</field>
					<field>
						<name>User Header</name>
						<description><![CDATA[The User Header is an optional header available within FIN for user-to-user messages only. It appears in Block 3 of a SWIFT message, and allows users to provide their own reference within the headers for a particular message.

A User Header can only be assigned by the sender of a message and, if assigned, will always appear on the output message copy. Relevant parts of the User Header will be repeated in related system messages and acknowledgements.

Block 3 may contain tag 113, defining banking priorities, and tag 108, which is a user reference. The user reference part of the User Header may be used as one of the selection criteria when retrieving a message.

The optional field tags 103 and 115 are also used in Block 3 for the FIN Copy service. The order of tags, when present, is 103, 113, 108 and 115.

An optional field tag 119 can be included in Block 3 of certain messages to specify that different validation rules are to be applied. Agreed code words in field 119 indicate what validation rules SWIFT will apply. If field 119 is present, it should appear after field 108
]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Service Identifier</name>
								<description><![CDATA[For any message which the user submits to a FIN Copy service, Block 3 requires an additional field 103 which contains a three-character Service Identifier unique to a specific FIN Copy service. By using a unique identifier it is possible to support access to multiple services within the same CBT.
]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>3</length>
								<tag>103</tag>
							</field>
							<field>
								<name>Banking Priority</name>
								<description><![CDATA[Assigned by the sender of the message.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>4</length>
								<tag>113</tag>
							</field>
							<field>
								<name>Message User Reference</name>
								<description><![CDATA[Assigned by the sender of the message.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>16</length>
								<tag>108</tag>
							</field>
							<field>
								<name>Validation Flag</name>
								<description><![CDATA[Indicates whether a special validation needs to be performed by FIN. The following are examples of the values this field may take. Please note that this list is subject to change:

ISITC indicates validation of ISITC Standards. Only to be used with MT 521 and MT 523.

REMIT identifies the presence of field 77T. Only to be used in MT 103.

RFDD indicates that the message is a request for direct debit. Only to be used in MT 104.

STP indicates that the message is validated according to straight through processing principles. Only to be used in MT 103.

]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>119</tag>
							</field>
							<field>
								<name>Balance checkpoint date and time</name>
								<description><![CDATA[This field contains the balance checkpoint date and time consisting of a date (YYMMDD) and a time (HHMMSS[ss], where 'ss' indicates hundredths of a second). The MI that is subscribed to MIRS will always copy this reference from field tag 13G of the last MT298/091 that it sent into the related MT 298/093 or MT 097 that it generates. ]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>423</tag>
							</field>
							<field>
								<name>Message Input Reference</name>
								<description><![CDATA[This field contains the MIR of the payment message that is related to the notification messages in which this field is present. The MI that is subscribed to MIRS will copy it from the received payment message. In a FINCopy scenario, this field must contain the MIR of the related MT 096]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>106</tag>
							</field>
							<field>
								<name>Related Reference</name>
								<description><![CDATA[This field contains the reference of the payment that is related to the notification messages in which this field is present. The payment itself was not the result of a FIN message. The value of this field must correspond to the related reference (field 21) in the MT298/093. The format of field 424 is 16x.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>424</tag>
							</field>
							<field>
								<name>Service Type Identifier</name>
								<description><![CDATA[This field identifies the applicable global payment service type. The format of field 111 is 3!n.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>111</tag>
							</field>
							<field>
								<name>Unique End-To-End Transaction Reference</name>
								<description><![CDATA[This field provides an end-to-end reference across a payment transaction. The format of field 121 is 36!x.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>121</tag>
							</field>
							<field>
								<name>Addressee Information</name>
								<description><![CDATA[Tag 115 is only valid for output messages. Information from Central Institution to the receiver of payment message. Information is input in the MT 097 FIN Copy Message Authorisation/Refusal Notification in Y-Copy mode.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>115</tag>
							</field>
							<field>
								<name>Payment Release Information Receiver (FINInform Services)</name>
								<description><![CDATA[Tag 165 is only valid for output messages. This field contains information from the server destination to the receiver of payment message. It is only available for use in FINInform services that operate in Y-copy mode.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>165</tag>
							</field>
							<field>
								<name>Receiver Information</name>
								<description><![CDATA[Tag 433 is only valid for output messages. The screening service inputs information in the MT 097 FINCopy Message Authorisation/Refusal Notification, in Y-Copy mode. FINCopy copies the information to the receiver of the screened message.
				    The following values can be present in this field:
				      AOK: message automatically released by screening service
				      FPO: compliance officer has flagged the screening result as false positive
				      NOK: compliance officer has flagged the screened message as suspect
				    The code word can optionally be followed by additional information (up to 20 characters from the x character set).]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>433</tag>
							</field>
						</fields>
					</field>
				</fields>
			</Header>
			<Data>
				<Fields>
					<SwiftField Name="20">
						<SwiftFieldDef Name="20">
							<Generic>false</Generic>
							<Option Name="">
								<Format><![CDATA[16x]]></Format>
								<Specification><![CDATA[(Reference)]]></Specification>
								<Description><![CDATA[Transaction Reference Number]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options> </Options>
						<Validations>
							<SubField Name="Reference">
								<Validation>
									<Options> </Options>
									<ErrorCode>T26</ErrorCode>
									<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive slashes '//' (Error code(s): T26).]]></Comment>
									<ValidationPattern xsi:type="T26" Type="T26">
										<Type>T26</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="21">
						<SwiftFieldDef Name="21">
							<Generic>false</Generic>
							<Option Name="">
								<Format><![CDATA[16x]]></Format>
								<Specification><![CDATA[(Cheque Number)]]></Specification>
								<Description><![CDATA[Cheque Number]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options> </Options>
						<Validations>
							<SubField Name="Cheque_Number">
								<Validation>
									<Options> </Options>
									<ErrorCode>T26</ErrorCode>
									<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive slashes '//' (Error code(s): T26).]]></Comment>
									<ValidationPattern xsi:type="T26" Type="T26">
										<Type>T26</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="30">
						<SwiftFieldDef Name="30">
							<Generic>false</Generic>
							<Option Name="">
								<Format><![CDATA[6!n]]></Format>
								<Specification><![CDATA[(Date)]]></Specification>
								<Description><![CDATA[Date of Issue]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options> </Options>
						<Validations>
							<SubField Name="Date">
								<Validation>
									<Options> </Options>
									<ErrorCode>T50</ErrorCode>
									<Comment><![CDATA[Date must be a valid date expressed as YYMMDD (Error code(s): T50).]]></Comment>
									<ValidationPattern xsi:type="DATE" Type="DATE">
										<Type>DATE</Type>
										<Format>yyMMdd</Format>
										<value-date>true</value-date>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="32a">
						<SwiftFieldDef Name="32">
							<Generic>false</Generic>
							<Option Name="A">
								<Format><![CDATA[6!n3!a15d]]></Format>
								<Specification><![CDATA[(Date) (Currency) (Amount)]]></Specification>
								<Description><![CDATA[Amount]]></Description>
							</Option>
							<Option Name="B">
								<Format><![CDATA[3!a15d]]></Format>
								<Specification><![CDATA[(Currency)(Amount)]]></Specification>
								<Description><![CDATA[Amount]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options>A, B</Options>
						<Validations>
							<SubField Name="Date">
								<Validation>
									<Options>A</Options>
									<ErrorCode>T50</ErrorCode>
									<Comment><![CDATA[Date must be a valid date expressed as YYMMDD (Error code(s): T50).]]></Comment>
									<ValidationPattern xsi:type="DATE" Type="DATE">
										<Type>DATE</Type>
										<Format>yyMMdd</Format>
										<value-date>true</value-date>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="Currency">
								<Validation>
									<Options>A, B</Options>
									<ErrorCode>T52</ErrorCode>
									<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52).]]></Comment>
									<ValidationPattern xsi:type="Currency_Code" Type="Currency Code">
										<Type>Currency Code</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="Amount">
								<Validation>
									<Options>A, B</Options>
									<ErrorCode>C03</ErrorCode>
									<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency(Error code(s): C03).]]></Comment>
									<ValidationPattern xsi:type="Decimal" Type="Decimal">
										<Type>Decimal</Type>
										<currency-field>Currency</currency-field>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="52a">
						<SwiftFieldDef Name="52">
							<Generic>false</Generic>
							<Option Name="A">
								<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
								<Description><![CDATA[Drawer Bank]]></Description>
							</Option>
							<Option Name="B">
								<Format><![CDATA[/1!a([/34x])(CRLF35x) | /1!a[/34x] | [/34xCRLF]35x | /34x]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Location) | (CreditDebit)(Party Identifier) | (Party Identifier)(Location) | (Party Identifier)]]></Specification>
								<Description><![CDATA[Drawer Bank]]></Description>
							</Option>
							<Option Name="D">
								<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
								<Description><![CDATA[Drawer Bank]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options>A, B, D</Options>
						<Validations>
							<SubField Name="Identifier_Code">
								<Validation>
									<Options>A</Options>
									<ErrorCode>T27, T28, T29, T45</ErrorCode>
									<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
									<ValidationPattern xsi:type="BIC" Type="BIC">
										<Type>BIC</Type>
									</ValidationPattern>
								</Validation>
								<Validation>
									<Options>A</Options>
									<ErrorCode>C05</ErrorCode>
									<Comment><![CDATA[Identifier Code must not be a BEI.This error code applies to all types of BICs referenced in a FIN message including SWIFT BICs, non-SWIFT BICs,Masters, Synonyms, Live destinations and Test & Training destinations.(Error code(s): C05).]]></Comment>
									<ValidationPattern xsi:type="C05" Type="C05">
										<Type>C05</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="CreditDebit">
								<Validation>
									<Options>A, B, D</Options>
									<ErrorCode>T51</ErrorCode>
									<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
									<ValidationPattern xsi:type="CODE" Type="CODE">
										<Type>CODE</Type>
										<Codes>
											<Code Name="C">
												<DetailedName>Credit</DetailedName>
											</Code>
											<Code Name="D">
												<DetailedName>Debit</DetailedName>
											</Code>
										</Codes>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="59">
						<SwiftFieldDef Name="59">
							<Generic>false</Generic>
							<Option Name="">
								<Format><![CDATA[[/34xCRLF]4*35x]]></Format>
								<Specification><![CDATA[(Account)(Name & Address)]]></Specification>
								<Description><![CDATA[Payee]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options> </Options>
					</SwiftField>
					<SwiftField Name="76">
						<SwiftFieldDef Name="76">
							<Generic>false</Generic>
							<Option Name="">
								<Format><![CDATA[6*35x]]></Format>
								<Specification><![CDATA[(Narrative)]]></Specification>
								<Description><![CDATA[Answers]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options> </Options>
					</SwiftField>
				</Fields>
			</Data>
			<Trailer>
				<fields>
					<field>
						<name>Message Authentication Code</name>
						<description><![CDATA[Allows authentication by the receiving user. It is followed by an authentication result.

This trailer is mandatory for most user-to-user message categories within the FIN application. When the FIN Copy Service is used a PAC trailer, if present, follows the MAC trailer.

Format:

{MAC:<authentication-result>}

where <authentication-result> = 8!h

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>8</length>
						<tag>MAC</tag>
					</field>
					<field>
						<name>Proprietary Authentication Code</name>
						<description><![CDATA[The PAC is used within the FIN Copy service only, when using the double authentication option. The PAC is included in Block 5 of FIN user-to-user messages, immediately after the MAC trailer, if present.

This is calculated on the extracted fields of Block 4 of the message, the value of field 115, if present, and the <authentication-result> of the MAC trailer for Copy Services with double authentication.

Thus, the end-of-block indicator (CrLf-) is included in the PAC calculation, and the fields are defined as follows:

The first three characters are CrLf:

The field and the delimiter are present, that is, 32A:, 20:, and so on.

All subfields and their delimiters are present.

Format:

{PAC:[<authentication-result>]}

where <authentication-result> is mandatory on input messages only and <authentication-result> = 8!h

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>8</length>
						<tag>PAC</tag>
					</field>
					<field>
						<name>Checksum</name>
						<description><![CDATA[The checksum is computed based on the receiver's address (12 characters, with 9th character replaced by X) plus the Text Block. This trailer allows the system and the CBT to check that messages have not been corrupted due to a system malfunction or an undetected transmission error.

Format:

{CHK:<checksum-result>}

where <checksum-result> = 12!h

Note: This trailer is mandatory for FIN and GPA messages (Service Identifier 01).

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>12</length>
						<tag>CHK</tag>
					</field>
					<field>
						<name>System Originated Message</name>
						<description><![CDATA[The system message or service message which is generated by a system PLT has a SYS trailer. All solicited system messages (Service Identifier 01) contain the MIR of the request and may also contain the time.

Format:

{SYS:[<time><mir>]}

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>SYS</tag>
					</field>
					<field>
						<name>Test And Training Message</name>
						<description><![CDATA[Mandatory for FIN and GPA messages (Service Identifier 01) sent by, or delivered to, a Test & Training Logical Terminal (LT). This trailer has a tag only, and no value.

Format:

{TNG:}
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>0</length>
						<tag>TNG</tag>
					</field>
					<field>
						<name>Possible Duplicate Emission</name>
						<description><![CDATA[This trailer is used by the destination of the message. It only applies to FIN user-to-user messages (Service Identifier 01, message categories reserved for banking messages). There can be multiple PDEs. The system does not verify the order nor restrict the number (except for maximum message length).

Correctly formatted PDE trailers applied to user-to-system messages are accepted by the system, but not processed. This means that the system does not check to see if the original message exists. Therefore, a retrieval request sent with a PDE trailer may be processed twice if the original message was received by the system.

Format:

{PDE:[<time><mir>]}

where <time><mir> refers to the emission of the previous possible issue.

Note: It can be added automatically by a CBT or manually by a user. It may be followed by the MIR and the time of its previous possible messages.

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>PDE</tag>
					</field>
					<field>
						<name>Delayed Message</name>
						<description><![CDATA[This trailer is added to all FIN user-to-user output messages that have exceeded their obsolescence period. If this trailer appears in GPA or FIN system messages, it must be ignored. This trailer has a tag only, and no value.

The Obsolescence Period is:

U = 15 minutes

N = 100 minutes

Format:

{DLM:}

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>0</length>
						<tag>DLM</tag>
					</field>
					<field>
						<name>Possible Duplicate Message</name>
						<description><![CDATA[Added by the system to any output message (GPA and FIN Service Identifier 01) being resent because a prior delivery may be invalid. If a system PLT receives a report request with a PDM, the response has a plain PDM (without the optional delivery reference). Other PDMs may be added as a result of unsuccessful delivery attempts to the user. 
Format:
{PDM:[<time><mor>]}
where <time> and the Message Output Reference <mor> are that of the previous attempt.
Note: For messages recovered after a system failure, the optional fields may not be present.
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>PDM</tag>
					</field>
					<field>
						<name>Message Reference</name>
						<description><![CDATA[The MRF trailer is used to specify the message reference of the original user message in MT 096 FIN Copy to Central Institution Messages.
Format:
{MRF:<date><full-time><mir>}
where <mir> is that of the original user message whose fields are copied in the MT 096 FIN Copy to Central Institution Message.
Note: The MRF is specific to FIN Copy. The MRF trailer is automatically generated in the MT 096 FIN Copy to Central Institution Message and can only be reused in field 109 of the MT 096 FIN Copy to Central Institution Message to identify the MT 096 to which the MT 097 is a response. The format of the MRF is subject to change.
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>MRF</tag>
					</field>
				</fields>
			</Trailer>
		</SwiftFields>
		<validationrules name="Default">
			<hdrvalidationrules>
				<fieldvalidations>
					<fieldvalidation>
						<name>U09</name>
						<formula><![CDATA[if($this.Header.GetFieldIndex("User_Header") != -1) {
    def userHeader = $this.Header.GetSection("User_Header");
    if(userHeader.$size > 0 && userHeader[0].IsNotNull("Validation_Flag")) {
        return false;
    }
}
return true;
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U09</error-code>
						<actionmessage><![CDATA["User has used tag 119 in a message that is not a candidate for special processing"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>U03</name>
						<fieldname>User Header</fieldname>
						<formula><![CDATA[Iff(IsNotNull(User_Header.Service_Type_Identifier), 
    IsNotNull(User_Header.Unique_End_To_End_Transaction_Reference))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U03</error-code>
						<actionmessage><![CDATA["When populating an end-to-end reference, both fields 111 and 121 must be populated: a message that contains only one of these two fields will not be accepted by FIN."]]></actionmessage>
					</fieldvalidation>
				</fieldvalidations>
			</hdrvalidationrules>
			<datavalidationrules>
				<fieldvalidations>
					<fieldvalidation>
						<name>F52a-A</name>
						<fieldname>52a.Party_Identifier</fieldname>
						<comment><![CDATA[F52a-A
The value specified for Party Identifier should indicate a national clearing system code.]]></comment>
						<formula><![CDATA[// Fake option B as D VerifyPartyIdentifier check for A, C and D
def formatOption = F52a.FormatOption == 'B' ? 'D' : F52a.FormatOption; 
VerifyPartyIdentifier($value, formatOption, false, false);]]></formula>
						<enabled>false</enabled>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>F52a-A</error-code>
						<actionmessage><![CDATA["Party Identifier is not valid. The value following the national clearing system code does not conform to the format specified for that code."]]></actionmessage>
					</fieldvalidation>
				</fieldvalidations>
			</datavalidationrules>
			<tlrvalidationrules>
				<fieldvalidations>
				</fieldvalidations>
			</tlrvalidationrules>
		</validationrules>
		<elementproperties>
			<propertymap>
				<property name="codegen.java.properties">
					<value>
						<propertymap type="com.tplus.transform.design.PropertiesDef">
							<property name="Java Package Name" value="com.transform.external.%e"/>
							<property name="Jar Name" value="%c.jar"/>
							<property name="Manifest Entries" value="transformrt.jar swiftrt.jar swiftresources.jar"/>
							<property name="Data Source" value=""/>
						</propertymap>
					</value>
				</property>
			</propertymap>
		</elementproperties>
	</externalmessage>
	<externalmessage xsi:type="SwiftFormat" type="SwiftFormat" version="5.1.2" rulename="MT190_2016" formattype="SwiftFormat" >
		<description><![CDATA[This message type is sent by an account servicing institution to the account owner.

It is used to advise charges, interest or other adjustments which have been debited or credited to the account owner's account. It provides details of charges which are previously unknown to the Receiver.]]></description>
		<standard>SWIFT</standard>
		<standard-name>MT190</standard-name>
		<standard-version>SRG 2016</standard-version>
		<standard-release-qualifier>20160308</standard-release-qualifier>
		<standard-category>Customer Payments &amp; Cheques</standard-category>
		<standard-detailed-name>Advice of Charges, Interest and Other Adjustments</standard-detailed-name>
		<version>1.0</version>
		<SwiftFields>
			<customizable>true</customizable>
			<modifiable>false</modifiable>
			<SwiftMessageType>User</SwiftMessageType>
			<max-length>2000</max-length>
			<HeaderAndTrailerType>SWIFT_INPUT_OUTPUT_HEADER</HeaderAndTrailerType>
			<Header>
				<fields>
					<field>
						<name>Basic Header</name>
						<description><![CDATA[The Basic Header is given in Block 1 of a SWIFT message and is the only header that appears on all messages. The Basic Header provides the fundamental reference for any particular message and is almost always automatically built by the CBT.
The Basic Header has the same format for both input and output messages. However, the information contained in the Basic Header is relative to the sender when the message is input but relative to the receiver when the same message is output.]]></description>
						<datatype>Section</datatype>
						<required>true</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Application Identifier</name>
								<description><![CDATA[The Application Identifier identifies the application within which the message is being sent or received. The available options are:

F = FIN All user-to-user, FIN system and FIN service messages 
A = GPA Most GPA system and service messages 
L = GPA Certain GPA service messages, for example, LOGIN, LAKs, ABORT 

These values are automatically assigned by the SWIFT system and the user's CBT, but the user should be aware of their existence and significance
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Service Identifier</name>
								<description><![CDATA[The Service Identifier consists of 2 numeric characters. It identifies the type of data that is being sent or received and, in doing so, whether the message which follows is one of the following:

a user-to-user message

a system message

a service message, for example, a session control command, such as SELECT, or a logical acknowledgement, such as ACK/SAK/UAK

Users will be primarily concerned with identifier '01' which applies to all GPA and FIN system and user-to-user messages. Other values include: '21' for message acknowledgements such as ACK/NAK, UAK/UNK, '03' for SELECT commands, and 
so on]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>2</length>
							</field>
							<field>
								<name>LT Identifier</name>
								<description><![CDATA[This 12-character SWIFT address, given in the Basic Header Block, is the address of the sending LT for input messages or of the receiving LT for output messages, and includes the Branch Code.

In the Basic Header, the LT Code within the LT Identifier is specific to the LT that has established the session in which the message is being transmitted, that is the sending LT for input messages or the receiving LT for output messages.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>12</length>
							</field>
							<field>
								<name>Session Number</name>
								<description><![CDATA[The Session Number identifies the session in which the message was transmitted. Within the Basic Header, the 4-digit Session Number is the user's current GPA or FIN Session Number.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Sequence Number</name>
								<description><![CDATA[The sequence number always consists of 6 digits. It is the ISN of the sender's current input session or the OSN of the receiver's current output session.

Note: The sequence number is not present in those messages with an Application Identifier of 'L' (for example LOGIN). The sequence number is, however, a key element in the processing of retrievals. Therefore, LOGINs and attempted LOGINs are not retrievable
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>6</length>
							</field>
						</fields>
					</field>
					<field>
						<name>Application Header Input</name>
						<description><![CDATA[The Application Header of a SWIFT message provides information about the message itself.

The Application Header is given in Block 2 of a SWIFT message. It differs according to whether the message is a GPA or a FIN message and whether the Application Header is part of an input or an output message.

]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Input/Output Identifier</name>
								<description><![CDATA[For an input message, the Input/Output Identifier consists of the single letter 'I'.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Message Type</name>
								<description><![CDATA[The Message Type consists of 3 digits which define the MT number of the message being input. The example used above is for an MT 100 Customer Transfer]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>3</length>
							</field>
							<field>
								<name>Receiver's Address</name>
								<description><![CDATA[This address is the 12-character SWIFT address of the receiver of the message, but with a LT Code of 'X'. It defines the destination to which the message should be sent.

The system will replace the 'X' with a specific LT Code on delivery of the message according to the delivery control exercised by the receiving user.

The Branch Code is mandatory and will be validated. The default of 'XXX' may be used, as in the example above.

Unless otherwise documented, system messages addressed to the SWIFT system itself should be addressed to SWFTXXXXXXXX.

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>12</length>
							</field>
							<field>
								<name>Message Priority</name>
								<description><![CDATA[This character, used within FIN Application Headers only, defines the priority with which a message is delivered. The possible values are:

S = System

U = Urgent

N = Normal

Message Priority 'S' must be used for user-to-system messages; for user-to-user messages either 'U' or 'N' can be used. In the absence of user-specified delivery criteria, system messages are always delivered first, followed by urgent priority messages and then normal priority messages.

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Delivery Monitoring</name>
								<description><![CDATA[Delivery monitoring options apply only to FIN user-to-user messages, and allow the sender of a message to request:

automatic MT 011 Delivery Notification once the message has been delivered

automatic MT 010 Non-Delivery Warning if a message is not delivered within the specified obsolescence period (see below)

both, or neither, options. This may be requested on an individual message basis.

The chosen option is expressed as a single digit:

1 = Non-Delivery Warning

2 = Delivery Notification

3 = Non-Delivery Warning and Delivery Notification. 
If the message has priority 'U' then the user must request delivery monitoring option '1' or '3'. If the message has priority 'N', the user can request delivery monitoring option '2', or, by leaving the option blank, no delivery monitoring.
]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>1</length>
							</field>
							<field>
								<name>Obsolescence Period</name>
								<description><![CDATA[The obsolescence period defines the period of time after which a Delayed Message (DLM) trailer is added to a FIN user-to-user message when the message is delivered. For urgent priority messages, it is also the period of time after which, if the message remains undelivered, a Non-Delivery Warning is generated.

The values for the obsolescence period are 003 (15 minutes) for 'U' priority, and 020 (100 minutes) for 'N' priority. An obsolescence period can only be specified when delivery monitoring has been requested (option 1 or 3 for urgent priority messages, option 2 for normal priority messages). If no delivery monitoring has been requested, and an obsolescence period is specified, the message will be NAKed with error code H25.

GPA input Application Headers are similar to their FIN equivalents except that GPA messages do not specify priority, delivery monitoring, nor obsolescence period.

]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>3</length>
							</field>
						</fields>
					</field>
					<field>
						<name>Application Header Output</name>
						<description><![CDATA[The Application Header of a SWIFT message provides information about the message itself.

The Application Header is given in Block 2 of a SWIFT message. It differs according to whether the message is a GPA or a FIN message and whether the Application Header is part of an input or an output message.

]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Input/Output Identifier</name>
								<description><![CDATA[For an input message, the Input/Output Identifier consists of the single letter 'I'.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Message Type</name>
								<description><![CDATA[Three digits indicating the Message Type.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>3</length>
							</field>
							<field>
								<name>Input Time</name>
								<description><![CDATA[The first occurrence of the time field contains the system time and date. This is the generation time in Greenwich Mean Time (GMT).
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Message Input Reference</name>
								<description><![CDATA[The input MIR.

If the message is generated by the system, the input time is the generation time (in GMT) and the input MIR is the system MIR

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>28</length>
							</field>
							<field>
								<name>Output Date</name>
								<description><![CDATA[The output date, local to the receiver.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>6</length>
							</field>
							<field>
								<name>Output Time</name>
								<description><![CDATA[The second occurrence of the time field contains the output time and date. This is in a time local to the receiver.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Message Priority</name>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
						</fields>
					</field>
					<field>
						<name>User Header</name>
						<description><![CDATA[The User Header is an optional header available within FIN for user-to-user messages only. It appears in Block 3 of a SWIFT message, and allows users to provide their own reference within the headers for a particular message.

A User Header can only be assigned by the sender of a message and, if assigned, will always appear on the output message copy. Relevant parts of the User Header will be repeated in related system messages and acknowledgements.

Block 3 may contain tag 113, defining banking priorities, and tag 108, which is a user reference. The user reference part of the User Header may be used as one of the selection criteria when retrieving a message.

The optional field tags 103 and 115 are also used in Block 3 for the FIN Copy service. The order of tags, when present, is 103, 113, 108 and 115.

An optional field tag 119 can be included in Block 3 of certain messages to specify that different validation rules are to be applied. Agreed code words in field 119 indicate what validation rules SWIFT will apply. If field 119 is present, it should appear after field 108
]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Service Identifier</name>
								<description><![CDATA[For any message which the user submits to a FIN Copy service, Block 3 requires an additional field 103 which contains a three-character Service Identifier unique to a specific FIN Copy service. By using a unique identifier it is possible to support access to multiple services within the same CBT.
]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>3</length>
								<tag>103</tag>
							</field>
							<field>
								<name>Banking Priority</name>
								<description><![CDATA[Assigned by the sender of the message.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>4</length>
								<tag>113</tag>
							</field>
							<field>
								<name>Message User Reference</name>
								<description><![CDATA[Assigned by the sender of the message.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>16</length>
								<tag>108</tag>
							</field>
							<field>
								<name>Validation Flag</name>
								<description><![CDATA[Indicates whether a special validation needs to be performed by FIN. The following are examples of the values this field may take. Please note that this list is subject to change:

ISITC indicates validation of ISITC Standards. Only to be used with MT 521 and MT 523.

REMIT identifies the presence of field 77T. Only to be used in MT 103.

RFDD indicates that the message is a request for direct debit. Only to be used in MT 104.

STP indicates that the message is validated according to straight through processing principles. Only to be used in MT 103.

]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>119</tag>
							</field>
							<field>
								<name>Balance checkpoint date and time</name>
								<description><![CDATA[This field contains the balance checkpoint date and time consisting of a date (YYMMDD) and a time (HHMMSS[ss], where 'ss' indicates hundredths of a second). The MI that is subscribed to MIRS will always copy this reference from field tag 13G of the last MT298/091 that it sent into the related MT 298/093 or MT 097 that it generates. ]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>423</tag>
							</field>
							<field>
								<name>Message Input Reference</name>
								<description><![CDATA[This field contains the MIR of the payment message that is related to the notification messages in which this field is present. The MI that is subscribed to MIRS will copy it from the received payment message. In a FINCopy scenario, this field must contain the MIR of the related MT 096]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>106</tag>
							</field>
							<field>
								<name>Related Reference</name>
								<description><![CDATA[This field contains the reference of the payment that is related to the notification messages in which this field is present. The payment itself was not the result of a FIN message. The value of this field must correspond to the related reference (field 21) in the MT298/093. The format of field 424 is 16x.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>424</tag>
							</field>
							<field>
								<name>Service Type Identifier</name>
								<description><![CDATA[This field identifies the applicable global payment service type. The format of field 111 is 3!n.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>111</tag>
							</field>
							<field>
								<name>Unique End-To-End Transaction Reference</name>
								<description><![CDATA[This field provides an end-to-end reference across a payment transaction. The format of field 121 is 36!x.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>121</tag>
							</field>
							<field>
								<name>Addressee Information</name>
								<description><![CDATA[Tag 115 is only valid for output messages. Information from Central Institution to the receiver of payment message. Information is input in the MT 097 FIN Copy Message Authorisation/Refusal Notification in Y-Copy mode.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>115</tag>
							</field>
							<field>
								<name>Payment Release Information Receiver (FINInform Services)</name>
								<description><![CDATA[Tag 165 is only valid for output messages. This field contains information from the server destination to the receiver of payment message. It is only available for use in FINInform services that operate in Y-copy mode.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>165</tag>
							</field>
							<field>
								<name>Receiver Information</name>
								<description><![CDATA[Tag 433 is only valid for output messages. The screening service inputs information in the MT 097 FINCopy Message Authorisation/Refusal Notification, in Y-Copy mode. FINCopy copies the information to the receiver of the screened message.
				    The following values can be present in this field:
				      AOK: message automatically released by screening service
				      FPO: compliance officer has flagged the screening result as false positive
				      NOK: compliance officer has flagged the screened message as suspect
				    The code word can optionally be followed by additional information (up to 20 characters from the x character set).]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>433</tag>
							</field>
						</fields>
					</field>
				</fields>
			</Header>
			<Data>
				<Fields>
					<SwiftField Name="20">
						<SwiftFieldDef Name="20">
							<Generic>false</Generic>
							<Description><![CDATA[Reference]]></Description>
							<Option Name="">
								<Format><![CDATA[16x]]></Format>
								<Specification><![CDATA[(Reference)]]></Specification>
								<Description><![CDATA[Transaction Reference Number]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options> </Options>
						<Validations>
							<SubField Name="Reference">
								<Validation>
									<Options> </Options>
									<ErrorCode>T26</ErrorCode>
									<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive slashes '//'(Error code(s): T26).]]></Comment>
									<ValidationPattern xsi:type="T26" Type="T26">
										<Type>T26</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="21">
						<SwiftFieldDef Name="21">
							<Generic>false</Generic>
							<Option Name="">
								<Format><![CDATA[16x]]></Format>
								<Specification><![CDATA[(Reference)]]></Specification>
								<Description><![CDATA[Related Reference]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options> </Options>
						<Validations>
							<SubField Name="Reference">
								<Validation>
									<Options> </Options>
									<ErrorCode>T26</ErrorCode>
									<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive slashes '//'(Error code(s): T26).]]></Comment>
									<ValidationPattern xsi:type="T26" Type="T26">
										<Type>T26</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="25">
						<SwiftFieldDef Name="25">
							<Generic>false</Generic>
							<Description><![CDATA[Status]]></Description>
							<Option Name="">
								<Format><![CDATA[35x]]></Format>
								<Specification><![CDATA[(Account)]]></Specification>
								<Description><![CDATA[Account Identification]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options> </Options>
					</SwiftField>
					<SwiftField Name="32a">
						<SwiftFieldDef Name="32">
							<Generic>false</Generic>
							<Option Name="C">
								<Format><![CDATA[6!n3!a15d]]></Format>
								<Specification><![CDATA[(Date) (Currency) (Amount)]]></Specification>
								<Description><![CDATA[Value Date, Currency Code, Amount]]></Description>
							</Option>
							<Option Name="D">
								<Format><![CDATA[6!n3!a15d]]></Format>
								<Specification><![CDATA[(Date) (Currency) (Amount)]]></Specification>
								<Description><![CDATA[Value Date, Currency Code, Amount]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options>C, D</Options>
						<Validations>
							<SubField Name="Date">
								<Validation>
									<Options>C, D</Options>
									<ErrorCode>T50</ErrorCode>
									<Comment><![CDATA[Date must be a valid date expressed as YYMMDD (Error code(s): T50).]]></Comment>
									<ValidationPattern xsi:type="DATE" Type="DATE">
										<Type>DATE</Type>
										<Format>yyMMdd</Format>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="Currency">
								<Validation>
									<Options>C, D</Options>
									<ErrorCode>T52</ErrorCode>
									<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52).]]></Comment>
									<ValidationPattern xsi:type="Currency_Code" Type="Currency Code">
										<Type>Currency Code</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="Amount">
								<Validation>
									<Options>C, D</Options>
									<ErrorCode>C03</ErrorCode>
									<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency.]]></Comment>
									<ValidationPattern xsi:type="Decimal" Type="Decimal">
										<Type>Decimal</Type>
										<currency-field>Currency</currency-field>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="52a">
						<SwiftFieldDef Name="52">
							<Generic>false</Generic>
							<Option Name="A">
								<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
								<Description><![CDATA[Ordering Institution]]></Description>
							</Option>
							<Option Name="D">
								<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
								<Description><![CDATA[Ordering Institution]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options>A, D</Options>
						<Validations>
							<SubField Name="Identifier_Code">
								<Validation>
									<Options>A</Options>
									<ErrorCode>T27, T28, T29, T45</ErrorCode>
									<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
									<ValidationPattern xsi:type="BIC" Type="BIC">
										<Type>BIC</Type>
									</ValidationPattern>
								</Validation>
								<Validation>
									<Options>A</Options>
									<ErrorCode>C05</ErrorCode>
									<Comment><![CDATA[Identifier Code must not be a BEI, ie must not be of subtype BEID, MCCO, TESP or TRCO]]></Comment>
									<ValidationPattern xsi:type="C05" Type="C05">
										<Type>C05</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="CreditDebit">
								<Validation>
									<Options>A, D</Options>
									<ErrorCode>T51</ErrorCode>
									<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
									<ValidationPattern xsi:type="CODE" Type="CODE">
										<Type>CODE</Type>
										<Codes>
											<Code Name="C">
												<DetailedName>Credit</DetailedName>
											</Code>
											<Code Name="D">
												<DetailedName>Debit</DetailedName>
											</Code>
										</Codes>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="71B">
						<SwiftFieldDef Name="71">
							<Generic>false</Generic>
							<Option Name="B">
								<Format><![CDATA[6*35x]]></Format>
								<Specification><![CDATA[(Narrative)]]></Specification>
								<Description><![CDATA[Details of Charges]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options>B</Options>
					</SwiftField>
					<SwiftField Name="72">
						<SwiftFieldDef Name="72">
							<Generic>false</Generic>
							<Option Name="">
								<Format><![CDATA[6*35x]]></Format>
								<Specification><![CDATA[(Narrative)]]></Specification>
								<Description><![CDATA[Sender to Receiver Information]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options> </Options>
					</SwiftField>
				</Fields>
			</Data>
			<Trailer>
				<fields>
					<field>
						<name>Message Authentication Code</name>
						<description><![CDATA[Allows authentication by the receiving user. It is followed by an authentication result.

This trailer is mandatory for most user-to-user message categories within the FIN application. When the FIN Copy Service is used a PAC trailer, if present, follows the MAC trailer.

Format:

{MAC:<authentication-result>}

where <authentication-result> = 8!h

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>8</length>
						<tag>MAC</tag>
					</field>
					<field>
						<name>Proprietary Authentication Code</name>
						<description><![CDATA[The PAC is used within the FIN Copy service only, when using the double authentication option. The PAC is included in Block 5 of FIN user-to-user messages, immediately after the MAC trailer, if present.

This is calculated on the extracted fields of Block 4 of the message, the value of field 115, if present, and the <authentication-result> of the MAC trailer for Copy Services with double authentication.

Thus, the end-of-block indicator (CrLf-) is included in the PAC calculation, and the fields are defined as follows:

The first three characters are CrLf:

The field and the delimiter are present, that is, 32A:, 20:, and so on.

All subfields and their delimiters are present.

Format:

{PAC:[<authentication-result>]}

where <authentication-result> is mandatory on input messages only and <authentication-result> = 8!h

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>8</length>
						<tag>PAC</tag>
					</field>
					<field>
						<name>Checksum</name>
						<description><![CDATA[The checksum is computed based on the receiver's address (12 characters, with 9th character replaced by X) plus the Text Block. This trailer allows the system and the CBT to check that messages have not been corrupted due to a system malfunction or an undetected transmission error.

Format:

{CHK:<checksum-result>}

where <checksum-result> = 12!h

Note: This trailer is mandatory for FIN and GPA messages (Service Identifier 01).

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>12</length>
						<tag>CHK</tag>
					</field>
					<field>
						<name>System Originated Message</name>
						<description><![CDATA[The system message or service message which is generated by a system PLT has a SYS trailer. All solicited system messages (Service Identifier 01) contain the MIR of the request and may also contain the time.

Format:

{SYS:[<time><mir>]}

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>SYS</tag>
					</field>
					<field>
						<name>Test And Training Message</name>
						<description><![CDATA[Mandatory for FIN and GPA messages (Service Identifier 01) sent by, or delivered to, a Test & Training Logical Terminal (LT). This trailer has a tag only, and no value.

Format:

{TNG:}
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>0</length>
						<tag>TNG</tag>
					</field>
					<field>
						<name>Possible Duplicate Emission</name>
						<description><![CDATA[This trailer is used by the destination of the message. It only applies to FIN user-to-user messages (Service Identifier 01, message categories reserved for banking messages). There can be multiple PDEs. The system does not verify the order nor restrict the number (except for maximum message length).

Correctly formatted PDE trailers applied to user-to-system messages are accepted by the system, but not processed. This means that the system does not check to see if the original message exists. Therefore, a retrieval request sent with a PDE trailer may be processed twice if the original message was received by the system.

Format:

{PDE:[<time><mir>]}

where <time><mir> refers to the emission of the previous possible issue.

Note: It can be added automatically by a CBT or manually by a user. It may be followed by the MIR and the time of its previous possible messages.

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>PDE</tag>
					</field>
					<field>
						<name>Delayed Message</name>
						<description><![CDATA[This trailer is added to all FIN user-to-user output messages that have exceeded their obsolescence period. If this trailer appears in GPA or FIN system messages, it must be ignored. This trailer has a tag only, and no value.

The Obsolescence Period is:

U = 15 minutes

N = 100 minutes

Format:

{DLM:}

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>0</length>
						<tag>DLM</tag>
					</field>
					<field>
						<name>Possible Duplicate Message</name>
						<description><![CDATA[Added by the system to any output message (GPA and FIN Service Identifier 01) being resent because a prior delivery may be invalid. If a system PLT receives a report request with a PDM, the response has a plain PDM (without the optional delivery reference). Other PDMs may be added as a result of unsuccessful delivery attempts to the user. 
Format:
{PDM:[<time><mor>]}
where <time> and the Message Output Reference <mor> are that of the previous attempt.
Note: For messages recovered after a system failure, the optional fields may not be present.
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>PDM</tag>
					</field>
					<field>
						<name>Message Reference</name>
						<description><![CDATA[The MRF trailer is used to specify the message reference of the original user message in MT 096 FIN Copy to Central Institution Messages.
Format:
{MRF:<date><full-time><mir>}
where <mir> is that of the original user message whose fields are copied in the MT 096 FIN Copy to Central Institution Message.
Note: The MRF is specific to FIN Copy. The MRF trailer is automatically generated in the MT 096 FIN Copy to Central Institution Message and can only be reused in field 109 of the MT 096 FIN Copy to Central Institution Message to identify the MT 096 to which the MT 097 is a response. The format of the MRF is subject to change.
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>MRF</tag>
					</field>
				</fields>
			</Trailer>
		</SwiftFields>
		<validationrules name="Default">
			<hdrvalidationrules>
				<fieldvalidations>
					<fieldvalidation>
						<name>U09</name>
						<formula><![CDATA[if($this.Header.GetFieldIndex("User_Header") != -1) {
    def userHeader = $this.Header.GetSection("User_Header");
    if(userHeader.$size > 0 && userHeader[0].IsNotNull("Validation_Flag")) {
        return false;
    }
}
return true;
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U09</error-code>
						<actionmessage><![CDATA["User has used tag 119 in a message that is not a candidate for special processing"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>U03</name>
						<fieldname>User Header</fieldname>
						<formula><![CDATA[Iff(IsNotNull(User_Header.Service_Type_Identifier), 
    IsNotNull(User_Header.Unique_End_To_End_Transaction_Reference))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U03</error-code>
						<actionmessage><![CDATA["When populating an end-to-end reference, both fields 111 and 121 must be populated: a message that contains only one of these two fields will not be accepted by FIN."]]></actionmessage>
					</fieldvalidation>
				</fieldvalidations>
			</hdrvalidationrules>
			<datavalidationrules>
				<fieldvalidations>
					<fieldvalidation>
						<name>ERI</name>
						<fieldname>72.Narrative</fieldname>
						<formula><![CDATA[ApplyERICodeValidationStructured($value);]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T47</error-code>
						<actionmessage><![CDATA["In an ERI field (i.e. fields 61, 72, 77A, 79, 86) the data part of a code word /OCMT/, or /CHGS/, is being validated, but the ending separator (i.e. third slash) is missing or the code words are duplicated."]]></actionmessage>
					</fieldvalidation>
				</fieldvalidations>
			</datavalidationrules>
			<tlrvalidationrules>
				<fieldvalidations>
				</fieldvalidations>
			</tlrvalidationrules>
		</validationrules>
		<elementproperties>
			<propertymap>
				<property name="codegen.java.properties">
					<value>
						<propertymap type="com.tplus.transform.design.PropertiesDef">
							<property name="Java Package Name" value="com.transform.external.%e"/>
							<property name="Jar Name" value="%c.jar"/>
							<property name="Manifest Entries" value="transformrt.jar swiftrt.jar swiftresources.jar"/>
							<property name="Data Source" value=""/>
						</propertymap>
					</value>
				</property>
			</propertymap>
		</elementproperties>
	</externalmessage>
	<externalmessage xsi:type="SwiftFormat" type="SwiftFormat" version="5.1.2" rulename="MT191_2016" formattype="SwiftFormat" >
		<description><![CDATA[This message type is sent by a financial institution to another financial institution.

It is used to request the payment of charges, interest and/or other expenses which are previously unknown to the Receiver.]]></description>
		<standard>SWIFT</standard>
		<standard-name>MT191</standard-name>
		<standard-version>SRG 2016</standard-version>
		<standard-release-qualifier>20160308</standard-release-qualifier>
		<standard-category>Customer Payments &amp; Cheques</standard-category>
		<standard-detailed-name>Request for Payment of Charges, Interest and Other Expenses</standard-detailed-name>
		<version>1.0</version>
		<SwiftFields>
			<customizable>true</customizable>
			<modifiable>false</modifiable>
			<SwiftMessageType>User</SwiftMessageType>
			<max-length>2000</max-length>
			<HeaderAndTrailerType>SWIFT_INPUT_OUTPUT_HEADER</HeaderAndTrailerType>
			<Header>
				<fields>
					<field>
						<name>Basic Header</name>
						<description><![CDATA[The Basic Header is given in Block 1 of a SWIFT message and is the only header that appears on all messages. The Basic Header provides the fundamental reference for any particular message and is almost always automatically built by the CBT.
The Basic Header has the same format for both input and output messages. However, the information contained in the Basic Header is relative to the sender when the message is input but relative to the receiver when the same message is output.]]></description>
						<datatype>Section</datatype>
						<required>true</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Application Identifier</name>
								<description><![CDATA[The Application Identifier identifies the application within which the message is being sent or received. The available options are:

F = FIN All user-to-user, FIN system and FIN service messages 
A = GPA Most GPA system and service messages 
L = GPA Certain GPA service messages, for example, LOGIN, LAKs, ABORT 

These values are automatically assigned by the SWIFT system and the user's CBT, but the user should be aware of their existence and significance
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Service Identifier</name>
								<description><![CDATA[The Service Identifier consists of 2 numeric characters. It identifies the type of data that is being sent or received and, in doing so, whether the message which follows is one of the following:

a user-to-user message

a system message

a service message, for example, a session control command, such as SELECT, or a logical acknowledgement, such as ACK/SAK/UAK

Users will be primarily concerned with identifier '01' which applies to all GPA and FIN system and user-to-user messages. Other values include: '21' for message acknowledgements such as ACK/NAK, UAK/UNK, '03' for SELECT commands, and 
so on]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>2</length>
							</field>
							<field>
								<name>LT Identifier</name>
								<description><![CDATA[This 12-character SWIFT address, given in the Basic Header Block, is the address of the sending LT for input messages or of the receiving LT for output messages, and includes the Branch Code.

In the Basic Header, the LT Code within the LT Identifier is specific to the LT that has established the session in which the message is being transmitted, that is the sending LT for input messages or the receiving LT for output messages.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>12</length>
							</field>
							<field>
								<name>Session Number</name>
								<description><![CDATA[The Session Number identifies the session in which the message was transmitted. Within the Basic Header, the 4-digit Session Number is the user's current GPA or FIN Session Number.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Sequence Number</name>
								<description><![CDATA[The sequence number always consists of 6 digits. It is the ISN of the sender's current input session or the OSN of the receiver's current output session.

Note: The sequence number is not present in those messages with an Application Identifier of 'L' (for example LOGIN). The sequence number is, however, a key element in the processing of retrievals. Therefore, LOGINs and attempted LOGINs are not retrievable
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>6</length>
							</field>
						</fields>
					</field>
					<field>
						<name>Application Header Input</name>
						<description><![CDATA[The Application Header of a SWIFT message provides information about the message itself.

The Application Header is given in Block 2 of a SWIFT message. It differs according to whether the message is a GPA or a FIN message and whether the Application Header is part of an input or an output message.

]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Input/Output Identifier</name>
								<description><![CDATA[For an input message, the Input/Output Identifier consists of the single letter 'I'.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Message Type</name>
								<description><![CDATA[The Message Type consists of 3 digits which define the MT number of the message being input. The example used above is for an MT 100 Customer Transfer]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>3</length>
							</field>
							<field>
								<name>Receiver's Address</name>
								<description><![CDATA[This address is the 12-character SWIFT address of the receiver of the message, but with a LT Code of 'X'. It defines the destination to which the message should be sent.

The system will replace the 'X' with a specific LT Code on delivery of the message according to the delivery control exercised by the receiving user.

The Branch Code is mandatory and will be validated. The default of 'XXX' may be used, as in the example above.

Unless otherwise documented, system messages addressed to the SWIFT system itself should be addressed to SWFTXXXXXXXX.

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>12</length>
							</field>
							<field>
								<name>Message Priority</name>
								<description><![CDATA[This character, used within FIN Application Headers only, defines the priority with which a message is delivered. The possible values are:

S = System

U = Urgent

N = Normal

Message Priority 'S' must be used for user-to-system messages; for user-to-user messages either 'U' or 'N' can be used. In the absence of user-specified delivery criteria, system messages are always delivered first, followed by urgent priority messages and then normal priority messages.

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Delivery Monitoring</name>
								<description><![CDATA[Delivery monitoring options apply only to FIN user-to-user messages, and allow the sender of a message to request:

automatic MT 011 Delivery Notification once the message has been delivered

automatic MT 010 Non-Delivery Warning if a message is not delivered within the specified obsolescence period (see below)

both, or neither, options. This may be requested on an individual message basis.

The chosen option is expressed as a single digit:

1 = Non-Delivery Warning

2 = Delivery Notification

3 = Non-Delivery Warning and Delivery Notification. 
If the message has priority 'U' then the user must request delivery monitoring option '1' or '3'. If the message has priority 'N', the user can request delivery monitoring option '2', or, by leaving the option blank, no delivery monitoring.
]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>1</length>
							</field>
							<field>
								<name>Obsolescence Period</name>
								<description><![CDATA[The obsolescence period defines the period of time after which a Delayed Message (DLM) trailer is added to a FIN user-to-user message when the message is delivered. For urgent priority messages, it is also the period of time after which, if the message remains undelivered, a Non-Delivery Warning is generated.

The values for the obsolescence period are 003 (15 minutes) for 'U' priority, and 020 (100 minutes) for 'N' priority. An obsolescence period can only be specified when delivery monitoring has been requested (option 1 or 3 for urgent priority messages, option 2 for normal priority messages). If no delivery monitoring has been requested, and an obsolescence period is specified, the message will be NAKed with error code H25.

GPA input Application Headers are similar to their FIN equivalents except that GPA messages do not specify priority, delivery monitoring, nor obsolescence period.

]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>3</length>
							</field>
						</fields>
					</field>
					<field>
						<name>Application Header Output</name>
						<description><![CDATA[The Application Header of a SWIFT message provides information about the message itself.

The Application Header is given in Block 2 of a SWIFT message. It differs according to whether the message is a GPA or a FIN message and whether the Application Header is part of an input or an output message.

]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Input/Output Identifier</name>
								<description><![CDATA[For an input message, the Input/Output Identifier consists of the single letter 'I'.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Message Type</name>
								<description><![CDATA[Three digits indicating the Message Type.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>3</length>
							</field>
							<field>
								<name>Input Time</name>
								<description><![CDATA[The first occurrence of the time field contains the system time and date. This is the generation time in Greenwich Mean Time (GMT).
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Message Input Reference</name>
								<description><![CDATA[The input MIR.

If the message is generated by the system, the input time is the generation time (in GMT) and the input MIR is the system MIR

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>28</length>
							</field>
							<field>
								<name>Output Date</name>
								<description><![CDATA[The output date, local to the receiver.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>6</length>
							</field>
							<field>
								<name>Output Time</name>
								<description><![CDATA[The second occurrence of the time field contains the output time and date. This is in a time local to the receiver.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Message Priority</name>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
						</fields>
					</field>
					<field>
						<name>User Header</name>
						<description><![CDATA[The User Header is an optional header available within FIN for user-to-user messages only. It appears in Block 3 of a SWIFT message, and allows users to provide their own reference within the headers for a particular message.

A User Header can only be assigned by the sender of a message and, if assigned, will always appear on the output message copy. Relevant parts of the User Header will be repeated in related system messages and acknowledgements.

Block 3 may contain tag 113, defining banking priorities, and tag 108, which is a user reference. The user reference part of the User Header may be used as one of the selection criteria when retrieving a message.

The optional field tags 103 and 115 are also used in Block 3 for the FIN Copy service. The order of tags, when present, is 103, 113, 108 and 115.

An optional field tag 119 can be included in Block 3 of certain messages to specify that different validation rules are to be applied. Agreed code words in field 119 indicate what validation rules SWIFT will apply. If field 119 is present, it should appear after field 108
]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Service Identifier</name>
								<description><![CDATA[For any message which the user submits to a FIN Copy service, Block 3 requires an additional field 103 which contains a three-character Service Identifier unique to a specific FIN Copy service. By using a unique identifier it is possible to support access to multiple services within the same CBT.
]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>3</length>
								<tag>103</tag>
							</field>
							<field>
								<name>Banking Priority</name>
								<description><![CDATA[Assigned by the sender of the message.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>4</length>
								<tag>113</tag>
							</field>
							<field>
								<name>Message User Reference</name>
								<description><![CDATA[Assigned by the sender of the message.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>16</length>
								<tag>108</tag>
							</field>
							<field>
								<name>Validation Flag</name>
								<description><![CDATA[Indicates whether a special validation needs to be performed by FIN. The following are examples of the values this field may take. Please note that this list is subject to change:

ISITC indicates validation of ISITC Standards. Only to be used with MT 521 and MT 523.

REMIT identifies the presence of field 77T. Only to be used in MT 103.

RFDD indicates that the message is a request for direct debit. Only to be used in MT 104.

STP indicates that the message is validated according to straight through processing principles. Only to be used in MT 103.

]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>119</tag>
							</field>
							<field>
								<name>Balance checkpoint date and time</name>
								<description><![CDATA[This field contains the balance checkpoint date and time consisting of a date (YYMMDD) and a time (HHMMSS[ss], where 'ss' indicates hundredths of a second). The MI that is subscribed to MIRS will always copy this reference from field tag 13G of the last MT298/091 that it sent into the related MT 298/093 or MT 097 that it generates. ]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>423</tag>
							</field>
							<field>
								<name>Message Input Reference</name>
								<description><![CDATA[This field contains the MIR of the payment message that is related to the notification messages in which this field is present. The MI that is subscribed to MIRS will copy it from the received payment message. In a FINCopy scenario, this field must contain the MIR of the related MT 096]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>106</tag>
							</field>
							<field>
								<name>Related Reference</name>
								<description><![CDATA[This field contains the reference of the payment that is related to the notification messages in which this field is present. The payment itself was not the result of a FIN message. The value of this field must correspond to the related reference (field 21) in the MT298/093. The format of field 424 is 16x.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>424</tag>
							</field>
							<field>
								<name>Service Type Identifier</name>
								<description><![CDATA[This field identifies the applicable global payment service type. The format of field 111 is 3!n.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>111</tag>
							</field>
							<field>
								<name>Unique End-To-End Transaction Reference</name>
								<description><![CDATA[This field provides an end-to-end reference across a payment transaction. The format of field 121 is 36!x.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>121</tag>
							</field>
							<field>
								<name>Addressee Information</name>
								<description><![CDATA[Tag 115 is only valid for output messages. Information from Central Institution to the receiver of payment message. Information is input in the MT 097 FIN Copy Message Authorisation/Refusal Notification in Y-Copy mode.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>115</tag>
							</field>
							<field>
								<name>Payment Release Information Receiver (FINInform Services)</name>
								<description><![CDATA[Tag 165 is only valid for output messages. This field contains information from the server destination to the receiver of payment message. It is only available for use in FINInform services that operate in Y-copy mode.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>165</tag>
							</field>
							<field>
								<name>Receiver Information</name>
								<description><![CDATA[Tag 433 is only valid for output messages. The screening service inputs information in the MT 097 FINCopy Message Authorisation/Refusal Notification, in Y-Copy mode. FINCopy copies the information to the receiver of the screened message.
				    The following values can be present in this field:
				      AOK: message automatically released by screening service
				      FPO: compliance officer has flagged the screening result as false positive
				      NOK: compliance officer has flagged the screened message as suspect
				    The code word can optionally be followed by additional information (up to 20 characters from the x character set).]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>433</tag>
							</field>
						</fields>
					</field>
				</fields>
			</Header>
			<Data>
				<Fields>
					<SwiftField Name="20">
						<SwiftFieldDef Name="20">
							<Generic>false</Generic>
							<Description><![CDATA[Reference]]></Description>
							<Option Name="">
								<Format><![CDATA[16x]]></Format>
								<Specification><![CDATA[(Reference)]]></Specification>
								<Description><![CDATA[Transaction Reference Number]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options> </Options>
						<Validations>
							<SubField Name="Reference">
								<Validation>
									<Options> </Options>
									<ErrorCode>T26</ErrorCode>
									<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive slashes '//'  (Error code(s): T26).]]></Comment>
									<ValidationPattern xsi:type="T26" Type="T26">
										<Type>T26</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="21">
						<SwiftFieldDef Name="21">
							<Generic>false</Generic>
							<Option Name="">
								<Format><![CDATA[16x]]></Format>
								<Specification><![CDATA[(Reference)]]></Specification>
								<Description><![CDATA[Related Reference]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options> </Options>
						<Validations>
							<SubField Name="Reference">
								<Validation>
									<Options> </Options>
									<ErrorCode>T26</ErrorCode>
									<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive slashes '//'  (Error code(s): T26).]]></Comment>
									<ValidationPattern xsi:type="T26" Type="T26">
										<Type>T26</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="32B">
						<SwiftFieldDef Name="32">
							<Generic>false</Generic>
							<Option Name="B">
								<Format><![CDATA[3!a15d]]></Format>
								<Specification><![CDATA[(Currency)(Amount)]]></Specification>
								<Description><![CDATA[Currency Code, Amount]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options>B</Options>
						<Validations>
							<SubField Name="Currency">
								<Validation>
									<Options>B</Options>
									<ErrorCode>T52</ErrorCode>
									<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52).]]></Comment>
									<ValidationPattern xsi:type="Currency_Code" Type="Currency Code">
										<Type>Currency Code</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="Amount">
								<Validation>
									<Options>B</Options>
									<ErrorCode>C03</ErrorCode>
									<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency.]]></Comment>
									<ValidationPattern xsi:type="Decimal" Type="Decimal">
										<Type>Decimal</Type>
										<currency-field>Currency</currency-field>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="52a">
						<SwiftFieldDef Name="52">
							<Generic>false</Generic>
							<Option Name="A">
								<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
								<Description><![CDATA[Ordering Institution]]></Description>
							</Option>
							<Option Name="D">
								<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
								<Description><![CDATA[Ordering Institution]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options>A, D</Options>
						<Validations>
							<SubField Name="Identifier_Code">
								<Validation>
									<Options>A</Options>
									<ErrorCode>T27, T28, T29, T45</ErrorCode>
									<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
									<ValidationPattern xsi:type="BIC" Type="BIC">
										<Type>BIC</Type>
									</ValidationPattern>
								</Validation>
								<Validation>
									<Options>A</Options>
									<ErrorCode>C05</ErrorCode>
									<Comment><![CDATA[Identifier Code must not be a BEI, ie must not be of subtype BEID, MCCO, TESP or TRCO]]></Comment>
									<ValidationPattern xsi:type="C05" Type="C05">
										<Type>C05</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="CreditDebit">
								<Validation>
									<Options>A, D</Options>
									<ErrorCode>T51</ErrorCode>
									<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
									<ValidationPattern xsi:type="CODE" Type="CODE">
										<Type>CODE</Type>
										<Codes>
											<Code Name="C">
												<DetailedName>Credit</DetailedName>
											</Code>
											<Code Name="D">
												<DetailedName>Debit</DetailedName>
											</Code>
										</Codes>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="57a">
						<SwiftFieldDef Name="57">
							<Generic>false</Generic>
							<Option Name="A">
								<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
								<Description><![CDATA[Account With Institution]]></Description>
							</Option>
							<Option Name="B">
								<Format><![CDATA[/1!a[/34x](CRLF35x) | /1!a[/34x] | [/34xCRLF]35x | /34x]]></Format>
								<Specification><![CDATA[(CreditDebit) (Party Identifier) (Location) | (CreditDebit)(Party Identifier) |(Party Identifier) (Location) | (Party Identifier)]]></Specification>
								<Description><![CDATA[Account With Institution]]></Description>
							</Option>
							<Option Name="D">
								<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
								<Description><![CDATA[Account With Institution]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options>A, B, D</Options>
						<Validations>
							<SubField Name="Identifier_Code">
								<Validation>
									<Options>A</Options>
									<ErrorCode>T27, T28, T29, T45</ErrorCode>
									<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
									<ValidationPattern xsi:type="BIC" Type="BIC">
										<Type>BIC</Type>
									</ValidationPattern>
								</Validation>
								<Validation>
									<Options>A</Options>
									<ErrorCode>C05</ErrorCode>
									<Comment><![CDATA[Identifier Code must not be a BEI, ie must not be of subtype BEID, MCCO, TESP or TRCO]]></Comment>
									<ValidationPattern xsi:type="C05" Type="C05">
										<Type>C05</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="CreditDebit">
								<Validation>
									<Options>A, B, D</Options>
									<ErrorCode>T51</ErrorCode>
									<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
									<ValidationPattern xsi:type="CODE" Type="CODE">
										<Type>CODE</Type>
										<Codes>
											<Code Name="C">
												<DetailedName>Credit</DetailedName>
											</Code>
											<Code Name="D">
												<DetailedName>Debit</DetailedName>
											</Code>
										</Codes>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="71B">
						<SwiftFieldDef Name="71">
							<Generic>false</Generic>
							<Option Name="B">
								<Format><![CDATA[6*35x]]></Format>
								<Specification><![CDATA[(Narrative)]]></Specification>
								<Description><![CDATA[Details of Charges]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options>B</Options>
					</SwiftField>
					<SwiftField Name="72">
						<SwiftFieldDef Name="72">
							<Generic>false</Generic>
							<Option Name="">
								<Format><![CDATA[6*35x]]></Format>
								<Specification><![CDATA[(Narrative)]]></Specification>
								<Description><![CDATA[Sender to Receiver Information]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options> </Options>
					</SwiftField>
				</Fields>
			</Data>
			<Trailer>
				<fields>
					<field>
						<name>Message Authentication Code</name>
						<description><![CDATA[Allows authentication by the receiving user. It is followed by an authentication result.

This trailer is mandatory for most user-to-user message categories within the FIN application. When the FIN Copy Service is used a PAC trailer, if present, follows the MAC trailer.

Format:

{MAC:<authentication-result>}

where <authentication-result> = 8!h

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>8</length>
						<tag>MAC</tag>
					</field>
					<field>
						<name>Proprietary Authentication Code</name>
						<description><![CDATA[The PAC is used within the FIN Copy service only, when using the double authentication option. The PAC is included in Block 5 of FIN user-to-user messages, immediately after the MAC trailer, if present.

This is calculated on the extracted fields of Block 4 of the message, the value of field 115, if present, and the <authentication-result> of the MAC trailer for Copy Services with double authentication.

Thus, the end-of-block indicator (CrLf-) is included in the PAC calculation, and the fields are defined as follows:

The first three characters are CrLf:

The field and the delimiter are present, that is, 32A:, 20:, and so on.

All subfields and their delimiters are present.

Format:

{PAC:[<authentication-result>]}

where <authentication-result> is mandatory on input messages only and <authentication-result> = 8!h

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>8</length>
						<tag>PAC</tag>
					</field>
					<field>
						<name>Checksum</name>
						<description><![CDATA[The checksum is computed based on the receiver's address (12 characters, with 9th character replaced by X) plus the Text Block. This trailer allows the system and the CBT to check that messages have not been corrupted due to a system malfunction or an undetected transmission error.

Format:

{CHK:<checksum-result>}

where <checksum-result> = 12!h

Note: This trailer is mandatory for FIN and GPA messages (Service Identifier 01).

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>12</length>
						<tag>CHK</tag>
					</field>
					<field>
						<name>System Originated Message</name>
						<description><![CDATA[The system message or service message which is generated by a system PLT has a SYS trailer. All solicited system messages (Service Identifier 01) contain the MIR of the request and may also contain the time.

Format:

{SYS:[<time><mir>]}

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>SYS</tag>
					</field>
					<field>
						<name>Test And Training Message</name>
						<description><![CDATA[Mandatory for FIN and GPA messages (Service Identifier 01) sent by, or delivered to, a Test & Training Logical Terminal (LT). This trailer has a tag only, and no value.

Format:

{TNG:}
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>0</length>
						<tag>TNG</tag>
					</field>
					<field>
						<name>Possible Duplicate Emission</name>
						<description><![CDATA[This trailer is used by the destination of the message. It only applies to FIN user-to-user messages (Service Identifier 01, message categories reserved for banking messages). There can be multiple PDEs. The system does not verify the order nor restrict the number (except for maximum message length).

Correctly formatted PDE trailers applied to user-to-system messages are accepted by the system, but not processed. This means that the system does not check to see if the original message exists. Therefore, a retrieval request sent with a PDE trailer may be processed twice if the original message was received by the system.

Format:

{PDE:[<time><mir>]}

where <time><mir> refers to the emission of the previous possible issue.

Note: It can be added automatically by a CBT or manually by a user. It may be followed by the MIR and the time of its previous possible messages.

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>PDE</tag>
					</field>
					<field>
						<name>Delayed Message</name>
						<description><![CDATA[This trailer is added to all FIN user-to-user output messages that have exceeded their obsolescence period. If this trailer appears in GPA or FIN system messages, it must be ignored. This trailer has a tag only, and no value.

The Obsolescence Period is:

U = 15 minutes

N = 100 minutes

Format:

{DLM:}

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>0</length>
						<tag>DLM</tag>
					</field>
					<field>
						<name>Possible Duplicate Message</name>
						<description><![CDATA[Added by the system to any output message (GPA and FIN Service Identifier 01) being resent because a prior delivery may be invalid. If a system PLT receives a report request with a PDM, the response has a plain PDM (without the optional delivery reference). Other PDMs may be added as a result of unsuccessful delivery attempts to the user. 
Format:
{PDM:[<time><mor>]}
where <time> and the Message Output Reference <mor> are that of the previous attempt.
Note: For messages recovered after a system failure, the optional fields may not be present.
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>PDM</tag>
					</field>
					<field>
						<name>Message Reference</name>
						<description><![CDATA[The MRF trailer is used to specify the message reference of the original user message in MT 096 FIN Copy to Central Institution Messages.
Format:
{MRF:<date><full-time><mir>}
where <mir> is that of the original user message whose fields are copied in the MT 096 FIN Copy to Central Institution Message.
Note: The MRF is specific to FIN Copy. The MRF trailer is automatically generated in the MT 096 FIN Copy to Central Institution Message and can only be reused in field 109 of the MT 096 FIN Copy to Central Institution Message to identify the MT 096 to which the MT 097 is a response. The format of the MRF is subject to change.
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>MRF</tag>
					</field>
				</fields>
			</Trailer>
		</SwiftFields>
		<validationrules name="Default">
			<hdrvalidationrules>
				<fieldvalidations>
					<fieldvalidation>
						<name>U09</name>
						<formula><![CDATA[if($this.Header.GetFieldIndex("User_Header") != -1) {
    def userHeader = $this.Header.GetSection("User_Header");
    if(userHeader.$size > 0 && userHeader[0].IsNotNull("Validation_Flag")) {
        return false;
    }
}
return true;
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U09</error-code>
						<actionmessage><![CDATA["User has used tag 119 in a message that is not a candidate for special processing"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>U03</name>
						<fieldname>User Header</fieldname>
						<formula><![CDATA[Iff(IsNotNull(User_Header.Service_Type_Identifier), 
    IsNotNull(User_Header.Unique_End_To_End_Transaction_Reference))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U03</error-code>
						<actionmessage><![CDATA["When populating an end-to-end reference, both fields 111 and 121 must be populated: a message that contains only one of these two fields will not be accepted by FIN."]]></actionmessage>
					</fieldvalidation>
				</fieldvalidations>
			</hdrvalidationrules>
			<datavalidationrules>
				<fieldvalidations>
					<fieldvalidation>
						<name>ERI</name>
						<fieldname>72.Narrative</fieldname>
						<formula><![CDATA[ApplyERICodeValidationStructured($value);]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T47</error-code>
						<actionmessage><![CDATA["In an ERI field (i.e. fields 61, 72, 77A, 79, 86) the data part of a code word /OCMT/, or /CHGS/, is being validated, but the ending separator (i.e. third slash) is missing or the code words are duplicated."]]></actionmessage>
					</fieldvalidation>
				</fieldvalidations>
			</datavalidationrules>
			<tlrvalidationrules>
				<fieldvalidations>
				</fieldvalidations>
			</tlrvalidationrules>
		</validationrules>
		<elementproperties>
			<propertymap>
				<property name="codegen.java.properties">
					<value>
						<propertymap type="com.tplus.transform.design.PropertiesDef">
							<property name="Java Package Name" value="com.transform.external.%e"/>
							<property name="Jar Name" value="%c.jar"/>
							<property name="Manifest Entries" value="transformrt.jar swiftrt.jar swiftresources.jar"/>
							<property name="Data Source" value=""/>
						</propertymap>
					</value>
				</property>
			</propertymap>
		</elementproperties>
	</externalmessage>
	<externalmessage xsi:type="SwiftFormat" type="SwiftFormat" version="5.1.2" rulename="MT192_2016" formattype="SwiftFormat" >
		<description><![CDATA[This message is: 

a) sent by a financial institution to request a second financial institution to consider cancellation of the SWIFT message identified in the request. 

b) sent by a corporate customer to request a financial institution to consider cancellation of the SWIFT message identified in the request. 

If the Receiver of the request for cancellation has already acted on the message for which cancellation is requested, the MT n92 asks for a retransfer, that is, reversal, with the beneficiary's consent.

]]></description>
		<standard>SWIFT</standard>
		<standard-name>MT192</standard-name>
		<standard-version>SRG 2016</standard-version>
		<standard-release-qualifier>20160308</standard-release-qualifier>
		<standard-category>Customer Payments &amp; Cheques</standard-category>
		<standard-detailed-name>Request for Cancellation</standard-detailed-name>
		<version>1.0</version>
		<SwiftFields>
			<customizable>true</customizable>
			<modifiable>false</modifiable>
			<SwiftMessageType>User</SwiftMessageType>
			<max-length>2000</max-length>
			<HeaderAndTrailerType>SWIFT_INPUT_OUTPUT_HEADER</HeaderAndTrailerType>
			<Header>
				<fields>
					<field>
						<name>Basic Header</name>
						<description><![CDATA[The Basic Header is given in Block 1 of a SWIFT message and is the only header that appears on all messages. The Basic Header provides the fundamental reference for any particular message and is almost always automatically built by the CBT.
The Basic Header has the same format for both input and output messages. However, the information contained in the Basic Header is relative to the sender when the message is input but relative to the receiver when the same message is output.]]></description>
						<datatype>Section</datatype>
						<required>true</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Application Identifier</name>
								<description><![CDATA[The Application Identifier identifies the application within which the message is being sent or received. The available options are:

F = FIN All user-to-user, FIN system and FIN service messages 
A = GPA Most GPA system and service messages 
L = GPA Certain GPA service messages, for example, LOGIN, LAKs, ABORT 

These values are automatically assigned by the SWIFT system and the user's CBT, but the user should be aware of their existence and significance
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Service Identifier</name>
								<description><![CDATA[The Service Identifier consists of 2 numeric characters. It identifies the type of data that is being sent or received and, in doing so, whether the message which follows is one of the following:

a user-to-user message

a system message

a service message, for example, a session control command, such as SELECT, or a logical acknowledgement, such as ACK/SAK/UAK

Users will be primarily concerned with identifier '01' which applies to all GPA and FIN system and user-to-user messages. Other values include: '21' for message acknowledgements such as ACK/NAK, UAK/UNK, '03' for SELECT commands, and 
so on]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>2</length>
							</field>
							<field>
								<name>LT Identifier</name>
								<description><![CDATA[This 12-character SWIFT address, given in the Basic Header Block, is the address of the sending LT for input messages or of the receiving LT for output messages, and includes the Branch Code.

In the Basic Header, the LT Code within the LT Identifier is specific to the LT that has established the session in which the message is being transmitted, that is the sending LT for input messages or the receiving LT for output messages.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>12</length>
							</field>
							<field>
								<name>Session Number</name>
								<description><![CDATA[The Session Number identifies the session in which the message was transmitted. Within the Basic Header, the 4-digit Session Number is the user's current GPA or FIN Session Number.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Sequence Number</name>
								<description><![CDATA[The sequence number always consists of 6 digits. It is the ISN of the sender's current input session or the OSN of the receiver's current output session.

Note: The sequence number is not present in those messages with an Application Identifier of 'L' (for example LOGIN). The sequence number is, however, a key element in the processing of retrievals. Therefore, LOGINs and attempted LOGINs are not retrievable
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>6</length>
							</field>
						</fields>
					</field>
					<field>
						<name>Application Header Input</name>
						<description><![CDATA[The Application Header of a SWIFT message provides information about the message itself.

The Application Header is given in Block 2 of a SWIFT message. It differs according to whether the message is a GPA or a FIN message and whether the Application Header is part of an input or an output message.

]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Input/Output Identifier</name>
								<description><![CDATA[For an input message, the Input/Output Identifier consists of the single letter 'I'.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Message Type</name>
								<description><![CDATA[The Message Type consists of 3 digits which define the MT number of the message being input. The example used above is for an MT 100 Customer Transfer]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>3</length>
							</field>
							<field>
								<name>Receiver's Address</name>
								<description><![CDATA[This address is the 12-character SWIFT address of the receiver of the message, but with a LT Code of 'X'. It defines the destination to which the message should be sent.

The system will replace the 'X' with a specific LT Code on delivery of the message according to the delivery control exercised by the receiving user.

The Branch Code is mandatory and will be validated. The default of 'XXX' may be used, as in the example above.

Unless otherwise documented, system messages addressed to the SWIFT system itself should be addressed to SWFTXXXXXXXX.

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>12</length>
							</field>
							<field>
								<name>Message Priority</name>
								<description><![CDATA[This character, used within FIN Application Headers only, defines the priority with which a message is delivered. The possible values are:

S = System

U = Urgent

N = Normal

Message Priority 'S' must be used for user-to-system messages; for user-to-user messages either 'U' or 'N' can be used. In the absence of user-specified delivery criteria, system messages are always delivered first, followed by urgent priority messages and then normal priority messages.

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Delivery Monitoring</name>
								<description><![CDATA[Delivery monitoring options apply only to FIN user-to-user messages, and allow the sender of a message to request:

automatic MT 011 Delivery Notification once the message has been delivered

automatic MT 010 Non-Delivery Warning if a message is not delivered within the specified obsolescence period (see below)

both, or neither, options. This may be requested on an individual message basis.

The chosen option is expressed as a single digit:

1 = Non-Delivery Warning

2 = Delivery Notification

3 = Non-Delivery Warning and Delivery Notification. 
If the message has priority 'U' then the user must request delivery monitoring option '1' or '3'. If the message has priority 'N', the user can request delivery monitoring option '2', or, by leaving the option blank, no delivery monitoring.
]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>1</length>
							</field>
							<field>
								<name>Obsolescence Period</name>
								<description><![CDATA[The obsolescence period defines the period of time after which a Delayed Message (DLM) trailer is added to a FIN user-to-user message when the message is delivered. For urgent priority messages, it is also the period of time after which, if the message remains undelivered, a Non-Delivery Warning is generated.

The values for the obsolescence period are 003 (15 minutes) for 'U' priority, and 020 (100 minutes) for 'N' priority. An obsolescence period can only be specified when delivery monitoring has been requested (option 1 or 3 for urgent priority messages, option 2 for normal priority messages). If no delivery monitoring has been requested, and an obsolescence period is specified, the message will be NAKed with error code H25.

GPA input Application Headers are similar to their FIN equivalents except that GPA messages do not specify priority, delivery monitoring, nor obsolescence period.

]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>3</length>
							</field>
						</fields>
					</field>
					<field>
						<name>Application Header Output</name>
						<description><![CDATA[The Application Header of a SWIFT message provides information about the message itself.

The Application Header is given in Block 2 of a SWIFT message. It differs according to whether the message is a GPA or a FIN message and whether the Application Header is part of an input or an output message.

]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Input/Output Identifier</name>
								<description><![CDATA[For an input message, the Input/Output Identifier consists of the single letter 'I'.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Message Type</name>
								<description><![CDATA[Three digits indicating the Message Type.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>3</length>
							</field>
							<field>
								<name>Input Time</name>
								<description><![CDATA[The first occurrence of the time field contains the system time and date. This is the generation time in Greenwich Mean Time (GMT).
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Message Input Reference</name>
								<description><![CDATA[The input MIR.

If the message is generated by the system, the input time is the generation time (in GMT) and the input MIR is the system MIR

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>28</length>
							</field>
							<field>
								<name>Output Date</name>
								<description><![CDATA[The output date, local to the receiver.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>6</length>
							</field>
							<field>
								<name>Output Time</name>
								<description><![CDATA[The second occurrence of the time field contains the output time and date. This is in a time local to the receiver.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Message Priority</name>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
						</fields>
					</field>
					<field>
						<name>User Header</name>
						<description><![CDATA[The User Header is an optional header available within FIN for user-to-user messages only. It appears in Block 3 of a SWIFT message, and allows users to provide their own reference within the headers for a particular message.

A User Header can only be assigned by the sender of a message and, if assigned, will always appear on the output message copy. Relevant parts of the User Header will be repeated in related system messages and acknowledgements.

Block 3 may contain tag 113, defining banking priorities, and tag 108, which is a user reference. The user reference part of the User Header may be used as one of the selection criteria when retrieving a message.

The optional field tags 103 and 115 are also used in Block 3 for the FIN Copy service. The order of tags, when present, is 103, 113, 108 and 115.

An optional field tag 119 can be included in Block 3 of certain messages to specify that different validation rules are to be applied. Agreed code words in field 119 indicate what validation rules SWIFT will apply. If field 119 is present, it should appear after field 108
]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Service Identifier</name>
								<description><![CDATA[For any message which the user submits to a FIN Copy service, Block 3 requires an additional field 103 which contains a three-character Service Identifier unique to a specific FIN Copy service. By using a unique identifier it is possible to support access to multiple services within the same CBT.
]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>3</length>
								<tag>103</tag>
							</field>
							<field>
								<name>Banking Priority</name>
								<description><![CDATA[Assigned by the sender of the message.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>4</length>
								<tag>113</tag>
							</field>
							<field>
								<name>Message User Reference</name>
								<description><![CDATA[Assigned by the sender of the message.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>16</length>
								<tag>108</tag>
							</field>
							<field>
								<name>Validation Flag</name>
								<description><![CDATA[Indicates whether a special validation needs to be performed by FIN. The following are examples of the values this field may take. Please note that this list is subject to change:

ISITC indicates validation of ISITC Standards. Only to be used with MT 521 and MT 523.

REMIT identifies the presence of field 77T. Only to be used in MT 103.

RFDD indicates that the message is a request for direct debit. Only to be used in MT 104.

STP indicates that the message is validated according to straight through processing principles. Only to be used in MT 103.

]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>119</tag>
							</field>
							<field>
								<name>Balance checkpoint date and time</name>
								<description><![CDATA[This field contains the balance checkpoint date and time consisting of a date (YYMMDD) and a time (HHMMSS[ss], where 'ss' indicates hundredths of a second). The MI that is subscribed to MIRS will always copy this reference from field tag 13G of the last MT298/091 that it sent into the related MT 298/093 or MT 097 that it generates. ]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>423</tag>
							</field>
							<field>
								<name>Message Input Reference</name>
								<description><![CDATA[This field contains the MIR of the payment message that is related to the notification messages in which this field is present. The MI that is subscribed to MIRS will copy it from the received payment message. In a FINCopy scenario, this field must contain the MIR of the related MT 096]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>106</tag>
							</field>
							<field>
								<name>Related Reference</name>
								<description><![CDATA[This field contains the reference of the payment that is related to the notification messages in which this field is present. The payment itself was not the result of a FIN message. The value of this field must correspond to the related reference (field 21) in the MT298/093. The format of field 424 is 16x.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>424</tag>
							</field>
							<field>
								<name>Service Type Identifier</name>
								<description><![CDATA[This field identifies the applicable global payment service type. The format of field 111 is 3!n.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>111</tag>
							</field>
							<field>
								<name>Unique End-To-End Transaction Reference</name>
								<description><![CDATA[This field provides an end-to-end reference across a payment transaction. The format of field 121 is 36!x.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>121</tag>
							</field>
							<field>
								<name>Addressee Information</name>
								<description><![CDATA[Tag 115 is only valid for output messages. Information from Central Institution to the receiver of payment message. Information is input in the MT 097 FIN Copy Message Authorisation/Refusal Notification in Y-Copy mode.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>115</tag>
							</field>
							<field>
								<name>Payment Release Information Receiver (FINInform Services)</name>
								<description><![CDATA[Tag 165 is only valid for output messages. This field contains information from the server destination to the receiver of payment message. It is only available for use in FINInform services that operate in Y-copy mode.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>165</tag>
							</field>
							<field>
								<name>Receiver Information</name>
								<description><![CDATA[Tag 433 is only valid for output messages. The screening service inputs information in the MT 097 FINCopy Message Authorisation/Refusal Notification, in Y-Copy mode. FINCopy copies the information to the receiver of the screened message.
				    The following values can be present in this field:
				      AOK: message automatically released by screening service
				      FPO: compliance officer has flagged the screening result as false positive
				      NOK: compliance officer has flagged the screened message as suspect
				    The code word can optionally be followed by additional information (up to 20 characters from the x character set).]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>433</tag>
							</field>
						</fields>
					</field>
				</fields>
			</Header>
			<Data>
				<Fields>
					<SwiftField Name="20">
						<SwiftFieldDef Name="20">
							<Generic>false</Generic>
							<Description><![CDATA[Reference]]></Description>
							<Option Name="">
								<Format><![CDATA[16x]]></Format>
								<Specification><![CDATA[(Reference)]]></Specification>
								<Description><![CDATA[Transaction Reference Number]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options> </Options>
						<Validations>
							<SubField Name="Reference">
								<Validation>
									<Options> </Options>
									<ErrorCode>T26</ErrorCode>
									<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive slashes '//'(Error code(s): T26).]]></Comment>
									<ValidationPattern xsi:type="T26" Type="T26">
										<Type>T26</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="21">
						<SwiftFieldDef Name="21">
							<Generic>false</Generic>
							<Option Name="">
								<Format><![CDATA[16x]]></Format>
								<Specification><![CDATA[(Reference)]]></Specification>
								<Description><![CDATA[Related Reference]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options> </Options>
						<Validations>
							<SubField Name="Reference">
								<Validation>
									<Options> </Options>
									<ErrorCode>T26</ErrorCode>
									<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive slashes '//'(Error code(s): T26).]]></Comment>
									<ValidationPattern xsi:type="T26" Type="T26">
										<Type>T26</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="11S">
						<SwiftFieldDef Name="11">
							<Generic>false</Generic>
							<Description><![CDATA[Currency]]></Description>
							<Option Name="S">
								<Format><![CDATA[3!nCRLF6!n[CRLF4!n6!n]]]></Format>
								<Specification><![CDATA[(MT Number)(Date)(Session Number) (ISN)]]></Specification>
								<Description><![CDATA[MT and Date of the Original Message]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options>S</Options>
						<Validations>
							<SubField Name="Date">
								<Validation>
									<Options>S</Options>
									<ErrorCode>T50</ErrorCode>
									<Comment><![CDATA[Date must be a valid date expressed as YYMMDD (Error code(s): T50).]]></Comment>
									<ValidationPattern xsi:type="DATE" Type="DATE">
										<Type>DATE</Type>
										<Format>yyMMdd</Format>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="79">
						<SwiftFieldDef Name="79">
							<Generic>false</Generic>
							<Option Name="">
								<Format><![CDATA[35*50x]]></Format>
								<Specification><![CDATA[(Narrative)]]></Specification>
								<Description><![CDATA[Narrative Description of the Original Message]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options> </Options>
					</SwiftField>
					<CopyOfFields Name="Copy Of Fields">
						<Description><![CDATA[Copy of at least the Mandatory Fields of the Original Message]]></Description>
						<Mandatory>false</Mandatory>
					</CopyOfFields>
				</Fields>
			</Data>
			<Trailer>
				<fields>
					<field>
						<name>Message Authentication Code</name>
						<description><![CDATA[Allows authentication by the receiving user. It is followed by an authentication result.

This trailer is mandatory for most user-to-user message categories within the FIN application. When the FIN Copy Service is used a PAC trailer, if present, follows the MAC trailer.

Format:

{MAC:<authentication-result>}

where <authentication-result> = 8!h

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>8</length>
						<tag>MAC</tag>
					</field>
					<field>
						<name>Proprietary Authentication Code</name>
						<description><![CDATA[The PAC is used within the FIN Copy service only, when using the double authentication option. The PAC is included in Block 5 of FIN user-to-user messages, immediately after the MAC trailer, if present.

This is calculated on the extracted fields of Block 4 of the message, the value of field 115, if present, and the <authentication-result> of the MAC trailer for Copy Services with double authentication.

Thus, the end-of-block indicator (CrLf-) is included in the PAC calculation, and the fields are defined as follows:

The first three characters are CrLf:

The field and the delimiter are present, that is, 32A:, 20:, and so on.

All subfields and their delimiters are present.

Format:

{PAC:[<authentication-result>]}

where <authentication-result> is mandatory on input messages only and <authentication-result> = 8!h

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>8</length>
						<tag>PAC</tag>
					</field>
					<field>
						<name>Checksum</name>
						<description><![CDATA[The checksum is computed based on the receiver's address (12 characters, with 9th character replaced by X) plus the Text Block. This trailer allows the system and the CBT to check that messages have not been corrupted due to a system malfunction or an undetected transmission error.

Format:

{CHK:<checksum-result>}

where <checksum-result> = 12!h

Note: This trailer is mandatory for FIN and GPA messages (Service Identifier 01).

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>12</length>
						<tag>CHK</tag>
					</field>
					<field>
						<name>System Originated Message</name>
						<description><![CDATA[The system message or service message which is generated by a system PLT has a SYS trailer. All solicited system messages (Service Identifier 01) contain the MIR of the request and may also contain the time.

Format:

{SYS:[<time><mir>]}

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>SYS</tag>
					</field>
					<field>
						<name>Test And Training Message</name>
						<description><![CDATA[Mandatory for FIN and GPA messages (Service Identifier 01) sent by, or delivered to, a Test & Training Logical Terminal (LT). This trailer has a tag only, and no value.

Format:

{TNG:}
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>0</length>
						<tag>TNG</tag>
					</field>
					<field>
						<name>Possible Duplicate Emission</name>
						<description><![CDATA[This trailer is used by the destination of the message. It only applies to FIN user-to-user messages (Service Identifier 01, message categories reserved for banking messages). There can be multiple PDEs. The system does not verify the order nor restrict the number (except for maximum message length).

Correctly formatted PDE trailers applied to user-to-system messages are accepted by the system, but not processed. This means that the system does not check to see if the original message exists. Therefore, a retrieval request sent with a PDE trailer may be processed twice if the original message was received by the system.

Format:

{PDE:[<time><mir>]}

where <time><mir> refers to the emission of the previous possible issue.

Note: It can be added automatically by a CBT or manually by a user. It may be followed by the MIR and the time of its previous possible messages.

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>PDE</tag>
					</field>
					<field>
						<name>Delayed Message</name>
						<description><![CDATA[This trailer is added to all FIN user-to-user output messages that have exceeded their obsolescence period. If this trailer appears in GPA or FIN system messages, it must be ignored. This trailer has a tag only, and no value.

The Obsolescence Period is:

U = 15 minutes

N = 100 minutes

Format:

{DLM:}

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>0</length>
						<tag>DLM</tag>
					</field>
					<field>
						<name>Possible Duplicate Message</name>
						<description><![CDATA[Added by the system to any output message (GPA and FIN Service Identifier 01) being resent because a prior delivery may be invalid. If a system PLT receives a report request with a PDM, the response has a plain PDM (without the optional delivery reference). Other PDMs may be added as a result of unsuccessful delivery attempts to the user. 
Format:
{PDM:[<time><mor>]}
where <time> and the Message Output Reference <mor> are that of the previous attempt.
Note: For messages recovered after a system failure, the optional fields may not be present.
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>PDM</tag>
					</field>
					<field>
						<name>Message Reference</name>
						<description><![CDATA[The MRF trailer is used to specify the message reference of the original user message in MT 096 FIN Copy to Central Institution Messages.
Format:
{MRF:<date><full-time><mir>}
where <mir> is that of the original user message whose fields are copied in the MT 096 FIN Copy to Central Institution Message.
Note: The MRF is specific to FIN Copy. The MRF trailer is automatically generated in the MT 096 FIN Copy to Central Institution Message and can only be reused in field 109 of the MT 096 FIN Copy to Central Institution Message to identify the MT 096 to which the MT 097 is a response. The format of the MRF is subject to change.
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>MRF</tag>
					</field>
				</fields>
			</Trailer>
		</SwiftFields>
		<validationrules name="Default">
			<hdrvalidationrules>
				<fieldvalidations>
					<fieldvalidation>
						<name>U09</name>
						<formula><![CDATA[if($this.Header.GetFieldIndex("User_Header") != -1) {
    def userHeader = $this.Header.GetSection("User_Header");
    if(userHeader.$size > 0 && userHeader[0].IsNotNull("Validation_Flag")) {
        return false;
    }
}
return true;
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U09</error-code>
						<actionmessage><![CDATA["User has used tag 119 in a message that is not a candidate for special processing"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>U03</name>
						<fieldname>User Header</fieldname>
						<formula><![CDATA[Iff(IsNotNull(User_Header.Service_Type_Identifier), 
    IsNotNull(User_Header.Unique_End_To_End_Transaction_Reference))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U03</error-code>
						<actionmessage><![CDATA["When populating an end-to-end reference, both fields 111 and 121 must be populated: a message that contains only one of these two fields will not be accepted by FIN."]]></actionmessage>
					</fieldvalidation>
				</fieldvalidations>
			</hdrvalidationrules>
			<datavalidationrules>
				<fieldvalidations>
					<fieldvalidation>
						<name>F11S</name>
						<fieldname>11S.MT_Number</fieldname>
						<formula><![CDATA[Between($value, 100, 999)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T18</error-code>
						<actionmessage><![CDATA["In field 11S, MT Number must be a number in the range 100 - 999."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C1</name>
						<formula><![CDATA[If(F79.$size == 0, IsNotNull(Copy_Of_Fields), true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C25</error-code>
						<actionmessage><![CDATA["Either field 79 or a copy of at least the mandatory fields of the original message must be present."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FCP</name>
						<fieldname>Copy Of Fields</fieldname>
						<formula><![CDATA[def ActualValue = replace($value, "\r\n", "\n");
(FindFirst(ActualValue, "\n:77F:") == -1 && 
   FindFirst(ActualValue, "\n:77G:") == -1 && 
   FindFirst(ActualValue, "\n:77S:") == -1 && 
   FindFirst(ActualValue, "\n:77T:") == -1) && 
  (!StartsWith(ActualValue, ":77F:") && 
     !StartsWith(ActualValue, ":77G:") && 
     !StartsWith(ActualValue, ":77S:") && 
     !StartsWith(ActualValue, ":77T:"))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T13</error-code>
						<actionmessage><![CDATA["Tags 77F, 77G, 77S or 77T cannot appear in Copy Of Fields."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>ERI</name>
						<fieldname>79.Narrative</fieldname>
						<formula><![CDATA[ApplyERICodeValidationUnstructured($value);]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T47</error-code>
						<actionmessage><![CDATA["In an ERI field (i.e. fields 61, 72, 77A, 79, 86) the data part of a code word /OCMT/, or /CHGS/, is being validated, but the ending separator (i.e. third slash) is missing or the code words are duplicated."]]></actionmessage>
					</fieldvalidation>
				</fieldvalidations>
			</datavalidationrules>
			<tlrvalidationrules>
				<fieldvalidations>
				</fieldvalidations>
			</tlrvalidationrules>
		</validationrules>
		<elementproperties>
			<propertymap>
				<property name="codegen.java.properties">
					<value>
						<propertymap type="com.tplus.transform.design.PropertiesDef">
							<property name="Java Package Name" value="com.transform.external.%e"/>
							<property name="Jar Name" value="%c.jar"/>
							<property name="Manifest Entries" value="transformrt.jar swiftrt.jar swiftresources.jar"/>
							<property name="Data Source" value=""/>
						</propertymap>
					</value>
				</property>
			</propertymap>
		</elementproperties>
	</externalmessage>
	<externalmessage xsi:type="SwiftFormat" type="SwiftFormat" version="5.1.2" rulename="MT195_2016" formattype="SwiftFormat" >
		<description><![CDATA[This message type is: 

a) sent by a financial institution to another financial institution. 

b) sent by a corporate customer to a financial institution. 

c) sent by a financial institution to a corporate customer. 

It is used to request information or clarification relating to a previous SWIFT or non-SWIFT message or to one or more transactions contained therein. 

A query may also be sent to request that an amendment be made to a previous message, except in those cases where a specific message, or facility within a message, has been provided for this purpose in the related category, for example, MT 707, AMEND in field 22 of the MT 300. 

The category digit of the MT n95 Queries must be: 

a) If related to a SWIFT message, the category digit of the related message. 

b) If not related to a SWIFT message, the category digit which best describes the business purpose of the message. 

]]></description>
		<standard>SWIFT</standard>
		<standard-name>MT195</standard-name>
		<standard-version>SRG 2016</standard-version>
		<standard-release-qualifier>20160308</standard-release-qualifier>
		<standard-category>Customer Payments &amp; Cheques</standard-category>
		<standard-detailed-name>Queries</standard-detailed-name>
		<version>1.0</version>
		<SwiftFields>
			<customizable>true</customizable>
			<modifiable>false</modifiable>
			<SwiftMessageType>User</SwiftMessageType>
			<max-length>2000</max-length>
			<HeaderAndTrailerType>SWIFT_INPUT_OUTPUT_HEADER</HeaderAndTrailerType>
			<Header>
				<fields>
					<field>
						<name>Basic Header</name>
						<description><![CDATA[The Basic Header is given in Block 1 of a SWIFT message and is the only header that appears on all messages. The Basic Header provides the fundamental reference for any particular message and is almost always automatically built by the CBT.
The Basic Header has the same format for both input and output messages. However, the information contained in the Basic Header is relative to the sender when the message is input but relative to the receiver when the same message is output.]]></description>
						<datatype>Section</datatype>
						<required>true</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Application Identifier</name>
								<description><![CDATA[The Application Identifier identifies the application within which the message is being sent or received. The available options are:

F = FIN All user-to-user, FIN system and FIN service messages 
A = GPA Most GPA system and service messages 
L = GPA Certain GPA service messages, for example, LOGIN, LAKs, ABORT 

These values are automatically assigned by the SWIFT system and the user's CBT, but the user should be aware of their existence and significance
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Service Identifier</name>
								<description><![CDATA[The Service Identifier consists of 2 numeric characters. It identifies the type of data that is being sent or received and, in doing so, whether the message which follows is one of the following:

a user-to-user message

a system message

a service message, for example, a session control command, such as SELECT, or a logical acknowledgement, such as ACK/SAK/UAK

Users will be primarily concerned with identifier '01' which applies to all GPA and FIN system and user-to-user messages. Other values include: '21' for message acknowledgements such as ACK/NAK, UAK/UNK, '03' for SELECT commands, and 
so on]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>2</length>
							</field>
							<field>
								<name>LT Identifier</name>
								<description><![CDATA[This 12-character SWIFT address, given in the Basic Header Block, is the address of the sending LT for input messages or of the receiving LT for output messages, and includes the Branch Code.

In the Basic Header, the LT Code within the LT Identifier is specific to the LT that has established the session in which the message is being transmitted, that is the sending LT for input messages or the receiving LT for output messages.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>12</length>
							</field>
							<field>
								<name>Session Number</name>
								<description><![CDATA[The Session Number identifies the session in which the message was transmitted. Within the Basic Header, the 4-digit Session Number is the user's current GPA or FIN Session Number.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Sequence Number</name>
								<description><![CDATA[The sequence number always consists of 6 digits. It is the ISN of the sender's current input session or the OSN of the receiver's current output session.

Note: The sequence number is not present in those messages with an Application Identifier of 'L' (for example LOGIN). The sequence number is, however, a key element in the processing of retrievals. Therefore, LOGINs and attempted LOGINs are not retrievable
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>6</length>
							</field>
						</fields>
					</field>
					<field>
						<name>Application Header Input</name>
						<description><![CDATA[The Application Header of a SWIFT message provides information about the message itself.

The Application Header is given in Block 2 of a SWIFT message. It differs according to whether the message is a GPA or a FIN message and whether the Application Header is part of an input or an output message.

]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Input/Output Identifier</name>
								<description><![CDATA[For an input message, the Input/Output Identifier consists of the single letter 'I'.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Message Type</name>
								<description><![CDATA[The Message Type consists of 3 digits which define the MT number of the message being input. The example used above is for an MT 100 Customer Transfer]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>3</length>
							</field>
							<field>
								<name>Receiver's Address</name>
								<description><![CDATA[This address is the 12-character SWIFT address of the receiver of the message, but with a LT Code of 'X'. It defines the destination to which the message should be sent.

The system will replace the 'X' with a specific LT Code on delivery of the message according to the delivery control exercised by the receiving user.

The Branch Code is mandatory and will be validated. The default of 'XXX' may be used, as in the example above.

Unless otherwise documented, system messages addressed to the SWIFT system itself should be addressed to SWFTXXXXXXXX.

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>12</length>
							</field>
							<field>
								<name>Message Priority</name>
								<description><![CDATA[This character, used within FIN Application Headers only, defines the priority with which a message is delivered. The possible values are:

S = System

U = Urgent

N = Normal

Message Priority 'S' must be used for user-to-system messages; for user-to-user messages either 'U' or 'N' can be used. In the absence of user-specified delivery criteria, system messages are always delivered first, followed by urgent priority messages and then normal priority messages.

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Delivery Monitoring</name>
								<description><![CDATA[Delivery monitoring options apply only to FIN user-to-user messages, and allow the sender of a message to request:

automatic MT 011 Delivery Notification once the message has been delivered

automatic MT 010 Non-Delivery Warning if a message is not delivered within the specified obsolescence period (see below)

both, or neither, options. This may be requested on an individual message basis.

The chosen option is expressed as a single digit:

1 = Non-Delivery Warning

2 = Delivery Notification

3 = Non-Delivery Warning and Delivery Notification. 
If the message has priority 'U' then the user must request delivery monitoring option '1' or '3'. If the message has priority 'N', the user can request delivery monitoring option '2', or, by leaving the option blank, no delivery monitoring.
]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>1</length>
							</field>
							<field>
								<name>Obsolescence Period</name>
								<description><![CDATA[The obsolescence period defines the period of time after which a Delayed Message (DLM) trailer is added to a FIN user-to-user message when the message is delivered. For urgent priority messages, it is also the period of time after which, if the message remains undelivered, a Non-Delivery Warning is generated.

The values for the obsolescence period are 003 (15 minutes) for 'U' priority, and 020 (100 minutes) for 'N' priority. An obsolescence period can only be specified when delivery monitoring has been requested (option 1 or 3 for urgent priority messages, option 2 for normal priority messages). If no delivery monitoring has been requested, and an obsolescence period is specified, the message will be NAKed with error code H25.

GPA input Application Headers are similar to their FIN equivalents except that GPA messages do not specify priority, delivery monitoring, nor obsolescence period.

]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>3</length>
							</field>
						</fields>
					</field>
					<field>
						<name>Application Header Output</name>
						<description><![CDATA[The Application Header of a SWIFT message provides information about the message itself.

The Application Header is given in Block 2 of a SWIFT message. It differs according to whether the message is a GPA or a FIN message and whether the Application Header is part of an input or an output message.

]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Input/Output Identifier</name>
								<description><![CDATA[For an input message, the Input/Output Identifier consists of the single letter 'I'.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Message Type</name>
								<description><![CDATA[Three digits indicating the Message Type.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>3</length>
							</field>
							<field>
								<name>Input Time</name>
								<description><![CDATA[The first occurrence of the time field contains the system time and date. This is the generation time in Greenwich Mean Time (GMT).
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Message Input Reference</name>
								<description><![CDATA[The input MIR.

If the message is generated by the system, the input time is the generation time (in GMT) and the input MIR is the system MIR

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>28</length>
							</field>
							<field>
								<name>Output Date</name>
								<description><![CDATA[The output date, local to the receiver.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>6</length>
							</field>
							<field>
								<name>Output Time</name>
								<description><![CDATA[The second occurrence of the time field contains the output time and date. This is in a time local to the receiver.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Message Priority</name>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
						</fields>
					</field>
					<field>
						<name>User Header</name>
						<description><![CDATA[The User Header is an optional header available within FIN for user-to-user messages only. It appears in Block 3 of a SWIFT message, and allows users to provide their own reference within the headers for a particular message.

A User Header can only be assigned by the sender of a message and, if assigned, will always appear on the output message copy. Relevant parts of the User Header will be repeated in related system messages and acknowledgements.

Block 3 may contain tag 113, defining banking priorities, and tag 108, which is a user reference. The user reference part of the User Header may be used as one of the selection criteria when retrieving a message.

The optional field tags 103 and 115 are also used in Block 3 for the FIN Copy service. The order of tags, when present, is 103, 113, 108 and 115.

An optional field tag 119 can be included in Block 3 of certain messages to specify that different validation rules are to be applied. Agreed code words in field 119 indicate what validation rules SWIFT will apply. If field 119 is present, it should appear after field 108
]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Service Identifier</name>
								<description><![CDATA[For any message which the user submits to a FIN Copy service, Block 3 requires an additional field 103 which contains a three-character Service Identifier unique to a specific FIN Copy service. By using a unique identifier it is possible to support access to multiple services within the same CBT.
]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>3</length>
								<tag>103</tag>
							</field>
							<field>
								<name>Banking Priority</name>
								<description><![CDATA[Assigned by the sender of the message.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>4</length>
								<tag>113</tag>
							</field>
							<field>
								<name>Message User Reference</name>
								<description><![CDATA[Assigned by the sender of the message.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>16</length>
								<tag>108</tag>
							</field>
							<field>
								<name>Validation Flag</name>
								<description><![CDATA[Indicates whether a special validation needs to be performed by FIN. The following are examples of the values this field may take. Please note that this list is subject to change:

ISITC indicates validation of ISITC Standards. Only to be used with MT 521 and MT 523.

REMIT identifies the presence of field 77T. Only to be used in MT 103.

RFDD indicates that the message is a request for direct debit. Only to be used in MT 104.

STP indicates that the message is validated according to straight through processing principles. Only to be used in MT 103.

]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>119</tag>
							</field>
							<field>
								<name>Balance checkpoint date and time</name>
								<description><![CDATA[This field contains the balance checkpoint date and time consisting of a date (YYMMDD) and a time (HHMMSS[ss], where 'ss' indicates hundredths of a second). The MI that is subscribed to MIRS will always copy this reference from field tag 13G of the last MT298/091 that it sent into the related MT 298/093 or MT 097 that it generates. ]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>423</tag>
							</field>
							<field>
								<name>Message Input Reference</name>
								<description><![CDATA[This field contains the MIR of the payment message that is related to the notification messages in which this field is present. The MI that is subscribed to MIRS will copy it from the received payment message. In a FINCopy scenario, this field must contain the MIR of the related MT 096]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>106</tag>
							</field>
							<field>
								<name>Related Reference</name>
								<description><![CDATA[This field contains the reference of the payment that is related to the notification messages in which this field is present. The payment itself was not the result of a FIN message. The value of this field must correspond to the related reference (field 21) in the MT298/093. The format of field 424 is 16x.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>424</tag>
							</field>
							<field>
								<name>Service Type Identifier</name>
								<description><![CDATA[This field identifies the applicable global payment service type. The format of field 111 is 3!n.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>111</tag>
							</field>
							<field>
								<name>Unique End-To-End Transaction Reference</name>
								<description><![CDATA[This field provides an end-to-end reference across a payment transaction. The format of field 121 is 36!x.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>121</tag>
							</field>
							<field>
								<name>Addressee Information</name>
								<description><![CDATA[Tag 115 is only valid for output messages. Information from Central Institution to the receiver of payment message. Information is input in the MT 097 FIN Copy Message Authorisation/Refusal Notification in Y-Copy mode.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>115</tag>
							</field>
							<field>
								<name>Payment Release Information Receiver (FINInform Services)</name>
								<description><![CDATA[Tag 165 is only valid for output messages. This field contains information from the server destination to the receiver of payment message. It is only available for use in FINInform services that operate in Y-copy mode.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>165</tag>
							</field>
							<field>
								<name>Receiver Information</name>
								<description><![CDATA[Tag 433 is only valid for output messages. The screening service inputs information in the MT 097 FINCopy Message Authorisation/Refusal Notification, in Y-Copy mode. FINCopy copies the information to the receiver of the screened message.
				    The following values can be present in this field:
				      AOK: message automatically released by screening service
				      FPO: compliance officer has flagged the screening result as false positive
				      NOK: compliance officer has flagged the screened message as suspect
				    The code word can optionally be followed by additional information (up to 20 characters from the x character set).]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>433</tag>
							</field>
						</fields>
					</field>
				</fields>
			</Header>
			<Data>
				<Fields>
					<SwiftField Name="20">
						<SwiftFieldDef Name="20">
							<Generic>false</Generic>
							<Description><![CDATA[Reference]]></Description>
							<Option Name="">
								<Format><![CDATA[16x]]></Format>
								<Specification><![CDATA[(Reference)]]></Specification>
								<Description><![CDATA[Transaction Reference Number]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options> </Options>
						<Validations>
							<SubField Name="Reference">
								<Validation>
									<Options> </Options>
									<ErrorCode>T26</ErrorCode>
									<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive slashes '//'  (Error code(s): T26).]]></Comment>
									<ValidationPattern xsi:type="T26" Type="T26">
										<Type>T26</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="21">
						<SwiftFieldDef Name="21">
							<Generic>false</Generic>
							<Option Name="">
								<Format><![CDATA[16x]]></Format>
								<Specification><![CDATA[(Reference)]]></Specification>
								<Description><![CDATA[Related Reference]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options> </Options>
						<Validations>
							<SubField Name="Reference">
								<Validation>
									<Options> </Options>
									<ErrorCode>T26</ErrorCode>
									<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive slashes '//'  (Error code(s): T26).]]></Comment>
									<ValidationPattern xsi:type="T26" Type="T26">
										<Type>T26</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="75">
						<SwiftFieldDef Name="75">
							<Generic>false</Generic>
							<Option Name="">
								<Format><![CDATA[6*35x]]></Format>
								<Specification><![CDATA[(Narrative)]]></Specification>
								<Description><![CDATA[Queries]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options> </Options>
					</SwiftField>
					<SwiftField Name="77A">
						<SwiftFieldDef Name="77">
							<Generic>false</Generic>
							<Option Name="A">
								<Format><![CDATA[20*35x]]></Format>
								<Specification><![CDATA[(Narrative)]]></Specification>
								<Description><![CDATA[Narrative]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options>A</Options>
					</SwiftField>
					<SwiftField Name="11a">
						<SwiftFieldDef Name="11">
							<Generic>false</Generic>
							<Description><![CDATA[Currency]]></Description>
							<Option Name="R">
								<Format><![CDATA[3!nCRLF6!n([CRLF4!n6!n])]]></Format>
								<Specification><![CDATA[(MT Number)(Date)(Session Number and ISN)]]></Specification>
								<Description><![CDATA[MT and Date of Original Message]]></Description>
							</Option>
							<Option Name="S">
								<Format><![CDATA[3!nCRLF6!n([CRLF4!n6!n])]]></Format>
								<Specification><![CDATA[(MT Number)(Date)(Session Number and ISN)]]></Specification>
								<Description><![CDATA[MT and Date of Original Message]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options>R, S</Options>
						<Validations>
							<SubField Name="Date">
								<Validation>
									<Options>R, S</Options>
									<ErrorCode>T50</ErrorCode>
									<Comment><![CDATA[Date must be a valid date expressed as YYMMDD (Error code(s): T50).]]></Comment>
									<ValidationPattern xsi:type="DATE" Type="DATE">
										<Type>DATE</Type>
										<Format>yyMMdd</Format>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="79">
						<SwiftFieldDef Name="79">
							<Generic>false</Generic>
							<Option Name="">
								<Format><![CDATA[35*50x]]></Format>
								<Specification><![CDATA[(Narrative)]]></Specification>
								<Description><![CDATA[Narrative Description of the Message to Which the Query Relates]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options> </Options>
					</SwiftField>
					<CopyOfFields Name="Copy Of Fields">
						<Description><![CDATA[Copy of at least the Mandatory Fields of the Original Message]]></Description>
						<Mandatory>false</Mandatory>
					</CopyOfFields>
				</Fields>
			</Data>
			<Trailer>
				<fields>
					<field>
						<name>Message Authentication Code</name>
						<description><![CDATA[Allows authentication by the receiving user. It is followed by an authentication result.

This trailer is mandatory for most user-to-user message categories within the FIN application. When the FIN Copy Service is used a PAC trailer, if present, follows the MAC trailer.

Format:

{MAC:<authentication-result>}

where <authentication-result> = 8!h

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>8</length>
						<tag>MAC</tag>
					</field>
					<field>
						<name>Proprietary Authentication Code</name>
						<description><![CDATA[The PAC is used within the FIN Copy service only, when using the double authentication option. The PAC is included in Block 5 of FIN user-to-user messages, immediately after the MAC trailer, if present.

This is calculated on the extracted fields of Block 4 of the message, the value of field 115, if present, and the <authentication-result> of the MAC trailer for Copy Services with double authentication.

Thus, the end-of-block indicator (CrLf-) is included in the PAC calculation, and the fields are defined as follows:

The first three characters are CrLf:

The field and the delimiter are present, that is, 32A:, 20:, and so on.

All subfields and their delimiters are present.

Format:

{PAC:[<authentication-result>]}

where <authentication-result> is mandatory on input messages only and <authentication-result> = 8!h

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>8</length>
						<tag>PAC</tag>
					</field>
					<field>
						<name>Checksum</name>
						<description><![CDATA[The checksum is computed based on the receiver's address (12 characters, with 9th character replaced by X) plus the Text Block. This trailer allows the system and the CBT to check that messages have not been corrupted due to a system malfunction or an undetected transmission error.

Format:

{CHK:<checksum-result>}

where <checksum-result> = 12!h

Note: This trailer is mandatory for FIN and GPA messages (Service Identifier 01).

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>12</length>
						<tag>CHK</tag>
					</field>
					<field>
						<name>System Originated Message</name>
						<description><![CDATA[The system message or service message which is generated by a system PLT has a SYS trailer. All solicited system messages (Service Identifier 01) contain the MIR of the request and may also contain the time.

Format:

{SYS:[<time><mir>]}

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>SYS</tag>
					</field>
					<field>
						<name>Test And Training Message</name>
						<description><![CDATA[Mandatory for FIN and GPA messages (Service Identifier 01) sent by, or delivered to, a Test & Training Logical Terminal (LT). This trailer has a tag only, and no value.

Format:

{TNG:}
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>0</length>
						<tag>TNG</tag>
					</field>
					<field>
						<name>Possible Duplicate Emission</name>
						<description><![CDATA[This trailer is used by the destination of the message. It only applies to FIN user-to-user messages (Service Identifier 01, message categories reserved for banking messages). There can be multiple PDEs. The system does not verify the order nor restrict the number (except for maximum message length).

Correctly formatted PDE trailers applied to user-to-system messages are accepted by the system, but not processed. This means that the system does not check to see if the original message exists. Therefore, a retrieval request sent with a PDE trailer may be processed twice if the original message was received by the system.

Format:

{PDE:[<time><mir>]}

where <time><mir> refers to the emission of the previous possible issue.

Note: It can be added automatically by a CBT or manually by a user. It may be followed by the MIR and the time of its previous possible messages.

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>PDE</tag>
					</field>
					<field>
						<name>Delayed Message</name>
						<description><![CDATA[This trailer is added to all FIN user-to-user output messages that have exceeded their obsolescence period. If this trailer appears in GPA or FIN system messages, it must be ignored. This trailer has a tag only, and no value.

The Obsolescence Period is:

U = 15 minutes

N = 100 minutes

Format:

{DLM:}

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>0</length>
						<tag>DLM</tag>
					</field>
					<field>
						<name>Possible Duplicate Message</name>
						<description><![CDATA[Added by the system to any output message (GPA and FIN Service Identifier 01) being resent because a prior delivery may be invalid. If a system PLT receives a report request with a PDM, the response has a plain PDM (without the optional delivery reference). Other PDMs may be added as a result of unsuccessful delivery attempts to the user. 
Format:
{PDM:[<time><mor>]}
where <time> and the Message Output Reference <mor> are that of the previous attempt.
Note: For messages recovered after a system failure, the optional fields may not be present.
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>PDM</tag>
					</field>
					<field>
						<name>Message Reference</name>
						<description><![CDATA[The MRF trailer is used to specify the message reference of the original user message in MT 096 FIN Copy to Central Institution Messages.
Format:
{MRF:<date><full-time><mir>}
where <mir> is that of the original user message whose fields are copied in the MT 096 FIN Copy to Central Institution Message.
Note: The MRF is specific to FIN Copy. The MRF trailer is automatically generated in the MT 096 FIN Copy to Central Institution Message and can only be reused in field 109 of the MT 096 FIN Copy to Central Institution Message to identify the MT 096 to which the MT 097 is a response. The format of the MRF is subject to change.
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>MRF</tag>
					</field>
				</fields>
			</Trailer>
		</SwiftFields>
		<validationrules name="Default">
			<hdrvalidationrules>
				<fieldvalidations>
					<fieldvalidation>
						<name>U09</name>
						<formula><![CDATA[if($this.Header.GetFieldIndex("User_Header") != -1) {
    def userHeader = $this.Header.GetSection("User_Header");
    if(userHeader.$size > 0 && userHeader[0].IsNotNull("Validation_Flag")) {
        return false;
    }
}
return true;
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U09</error-code>
						<actionmessage><![CDATA["User has used tag 119 in a message that is not a candidate for special processing"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>U03</name>
						<fieldname>User Header</fieldname>
						<formula><![CDATA[Iff(IsNotNull(User_Header.Service_Type_Identifier), 
    IsNotNull(User_Header.Unique_End_To_End_Transaction_Reference))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U03</error-code>
						<actionmessage><![CDATA["When populating an end-to-end reference, both fields 111 and 121 must be populated: a message that contains only one of these two fields will not be accepted by FIN."]]></actionmessage>
					</fieldvalidation>
				</fieldvalidations>
			</hdrvalidationrules>
			<datavalidationrules>
				<fieldvalidations>
					<fieldvalidation>
						<name>F11a-A</name>
						<fieldname>11a.MT_Number</fieldname>
						<formula><![CDATA[Between($value, 100, 999)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T18</error-code>
						<actionmessage><![CDATA["In field 11a, MT Number must be a number in the range 100 - 999."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C1</name>
						<formula><![CDATA[If(F79.$size > 0, IsNull(Copy_Of_Fields), true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C31</error-code>
						<actionmessage><![CDATA["Either field 79 or a 'Copy of at least the mandatory fields of the message to which the query relates', but not both, may be present in the message."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FCP</name>
						<fieldname>Copy Of Fields</fieldname>
						<formula><![CDATA[def ActualValue = replace($value, "\r\n", "\n");
(FindFirst(ActualValue, "\n:77F:") == -1 && 
   FindFirst(ActualValue, "\n:77G:") == -1 && 
   FindFirst(ActualValue, "\n:77S:") == -1 && 
   FindFirst(ActualValue, "\n:77T:") == -1) && 
  (!StartsWith(ActualValue, ":77F:") && 
     !StartsWith(ActualValue, ":77G:") && 
     !StartsWith(ActualValue, ":77S:") && 
     !StartsWith(ActualValue, ":77T:"))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T13</error-code>
						<actionmessage><![CDATA["Tags 77F, 77G, 77S or 77T cannot appear in Copy Of Fields."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F79-A</name>
						<fieldname>79.Narrative</fieldname>
						<formula><![CDATA[def Actualvalue = replace($value, "\r\n", "\n");
def lines = Split("\n", Actualvalue);
def str = Left(Actualvalue, 6);
def line1format = false;
def line3format = false;
def TREFformat = true;
def CHGSformat = true;
def TEXTformat = true;
def format = true;
def count = 0;
def TREFcount = 0;
def CHGScount = 0;
def TEXTcount = 0;
def i = lines.Length();
if(In(str, "/REJT/", "/RETN/")) {
    if(i <= 35) {
        //if '/REJT/' or '/RETN/' format of 1st line must be "6!x2!n[1a]['/'2c]" & format of 2nd line must be "('/'2!c 2!n'/')[44x]" or "('/X'1c2!n'/')[44x]"
        //if format of 2nd line is "('/'2!c 2!n'/')" then the 6 characters must be one of the codes given below
        line1format = (VerifyFormat(lines[0], "6!x2!n[1a]['/'2c]"));
        if(line1format && lines.Length() > 2) {
            if(!lines[1].StartsWith("/X")) {
                if(VerifyFormat(lines[1], "('/'2!c 2!n'/')[44x]")) {
                    def startStr = lines[1].Left(6);
                    if((!In(startStr, "/AC01/", "/AC02/", "/AC03/", "/AC04/", "/AC05/", "/AC06/", 
                            "/AM01/", "/AM02/", "/AM03/", "/AM04/", "/AM05/", "/AM06/", "/AM07/", 
                            "/AM08/", "/AG01/", "/AG02/", "/BE01/", "/BE02/", "/BE03/", "/BE04/", 
                            "/BE05/", "/DT01/", "/MS01/", "/PY01/", "/RC01/", "/RC02/", "/RC03/", 
                            "/RC04/", "/RF01/", "/TM01/", "/RR01/", "/RR02/", "/RR03/")))
                        return false;
                }
                else
                    return false;
            }
            else if(lines[1].StartsWith("/X") && !VerifyFormat(lines[1], "('/X'1c2!n'/')[44x]"))
                return false;
        }
        else
            return false;
            //Line3 is mandatory and should have the format "/MREF/16x". Lines 4, 5 and 6 are optional
            //If lines 4, 5 or 6 or any combination exists and if the first 6 characters starts with either '/TREF/' or '/CHGS/' or '/TEXT/' or '//'
            //it should satisfy the format given. Also if line starts with '//' it can appear a max of 31 times
            line3format = Equal(Left(lines[2], 6), "/MREF/") && 
                            VerifyFormat(Substring(lines[2], 6), "16x");
            if(line3format) {
                while(i > 3) {
                    def str1 = Left(lines[i - 1], 6);
                    def str2 = Substring(lines[i - 1], 6);
                if(In(str1, "/TREF/", "/CHGS/", "/TEXT/") || StartsWith(lines[i - 1], "//")) {
                        if(str1 == "/TREF/") {
                            TREFformat = VerifyFormat(str2, "16x");
                            TREFcount += 1;
                        }
                        else if(str1 == "/CHGS/") {
                            CHGSformat = (VerifyFormat(str2, "3!a15d") && 
                                        IsISOCurrencyCode(Substring(lines[i - 1], 6, 3)));
                            CHGScount += 1;
                        }
                        else if(str1 == "/TEXT/") {
                            TEXTformat = (VerifyFormat(str2, "44x"));
                            TEXTcount += 1;
                        }
                        else if(StartsWith(lines[i - 1], "//")) {
                            def str3 = Substring(lines[i - 1], 2);
                            format = (VerifyFormat(str3, "48x"));
                            count += 1;
                            if(!format || count > 31)
                                break;
                        }
                    }
                    else
                        return false;
                    i = i - 1;
                }
            }
            else
                return false;
        if(!TREFformat || !CHGSformat || !TEXTformat || !format || count > 31 || TREFcount > 1 || 
             CHGScount > 1 || TEXTcount > 1)
                return false;
        }
        else
            return false;
}
return true;
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T80</error-code>
						<actionmessage><![CDATA["Field 79 Reject/Return: code word error, or mandatory code word missing, or code word not in the proper sequence or format 35*50 not satisfied"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>ERI</name>
						<fieldname>79.Narrative</fieldname>
						<formula><![CDATA[ApplyERICodeValidationUnstructured($value);]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T47</error-code>
						<actionmessage><![CDATA["In an ERI field (i.e. fields 61, 72, 77A, 79, 86) the data part of a code word /OCMT/, or /CHGS/, is being validated, but the ending separator (i.e. third slash) is missing or the code words are duplicated."]]></actionmessage>
					</fieldvalidation>
				</fieldvalidations>
			</datavalidationrules>
			<tlrvalidationrules>
				<fieldvalidations>
				</fieldvalidations>
			</tlrvalidationrules>
		</validationrules>
		<elementproperties>
			<propertymap>
				<property name="codegen.java.properties">
					<value>
						<propertymap type="com.tplus.transform.design.PropertiesDef">
							<property name="Java Package Name" value="com.transform.external.%e"/>
							<property name="Jar Name" value="%c.jar"/>
							<property name="Manifest Entries" value="transformrt.jar swiftrt.jar swiftresources.jar"/>
							<property name="Data Source" value=""/>
						</propertymap>
					</value>
				</property>
			</propertymap>
		</elementproperties>
	</externalmessage>
	<externalmessage xsi:type="SwiftFormat" type="SwiftFormat" version="5.1.2" rulename="MT196_2016" formattype="SwiftFormat" >
		<description><![CDATA[This message type is: 

a) sent by one financial institution to another financial institution . 

b) sent by a corporate customer to a financial institution. 

c) sent by a financial institution to a corporate customer. 

It is used to respond to an MT n95 Queries or MT n92 Request for Cancellation and other messages where no specific message type has been provided for the response. This message should use the same category digit as the related queries message or request for cancellation. 

]]></description>
		<standard>SWIFT</standard>
		<standard-name>MT196</standard-name>
		<standard-version>SRG 2016</standard-version>
		<standard-release-qualifier>20160308</standard-release-qualifier>
		<standard-category>Customer Payments &amp; Cheques</standard-category>
		<standard-detailed-name>Answers</standard-detailed-name>
		<version>1.0</version>
		<SwiftFields>
			<customizable>true</customizable>
			<modifiable>false</modifiable>
			<SwiftMessageType>User</SwiftMessageType>
			<max-length>2000</max-length>
			<HeaderAndTrailerType>SWIFT_INPUT_OUTPUT_HEADER</HeaderAndTrailerType>
			<Header>
				<fields>
					<field>
						<name>Basic Header</name>
						<description><![CDATA[The Basic Header is given in Block 1 of a SWIFT message and is the only header that appears on all messages. The Basic Header provides the fundamental reference for any particular message and is almost always automatically built by the CBT.
The Basic Header has the same format for both input and output messages. However, the information contained in the Basic Header is relative to the sender when the message is input but relative to the receiver when the same message is output.]]></description>
						<datatype>Section</datatype>
						<required>true</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Application Identifier</name>
								<description><![CDATA[The Application Identifier identifies the application within which the message is being sent or received. The available options are:

F = FIN All user-to-user, FIN system and FIN service messages 
A = GPA Most GPA system and service messages 
L = GPA Certain GPA service messages, for example, LOGIN, LAKs, ABORT 

These values are automatically assigned by the SWIFT system and the user's CBT, but the user should be aware of their existence and significance
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Service Identifier</name>
								<description><![CDATA[The Service Identifier consists of 2 numeric characters. It identifies the type of data that is being sent or received and, in doing so, whether the message which follows is one of the following:

a user-to-user message

a system message

a service message, for example, a session control command, such as SELECT, or a logical acknowledgement, such as ACK/SAK/UAK

Users will be primarily concerned with identifier '01' which applies to all GPA and FIN system and user-to-user messages. Other values include: '21' for message acknowledgements such as ACK/NAK, UAK/UNK, '03' for SELECT commands, and 
so on]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>2</length>
							</field>
							<field>
								<name>LT Identifier</name>
								<description><![CDATA[This 12-character SWIFT address, given in the Basic Header Block, is the address of the sending LT for input messages or of the receiving LT for output messages, and includes the Branch Code.

In the Basic Header, the LT Code within the LT Identifier is specific to the LT that has established the session in which the message is being transmitted, that is the sending LT for input messages or the receiving LT for output messages.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>12</length>
							</field>
							<field>
								<name>Session Number</name>
								<description><![CDATA[The Session Number identifies the session in which the message was transmitted. Within the Basic Header, the 4-digit Session Number is the user's current GPA or FIN Session Number.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Sequence Number</name>
								<description><![CDATA[The sequence number always consists of 6 digits. It is the ISN of the sender's current input session or the OSN of the receiver's current output session.

Note: The sequence number is not present in those messages with an Application Identifier of 'L' (for example LOGIN). The sequence number is, however, a key element in the processing of retrievals. Therefore, LOGINs and attempted LOGINs are not retrievable
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>6</length>
							</field>
						</fields>
					</field>
					<field>
						<name>Application Header Input</name>
						<description><![CDATA[The Application Header of a SWIFT message provides information about the message itself.

The Application Header is given in Block 2 of a SWIFT message. It differs according to whether the message is a GPA or a FIN message and whether the Application Header is part of an input or an output message.

]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Input/Output Identifier</name>
								<description><![CDATA[For an input message, the Input/Output Identifier consists of the single letter 'I'.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Message Type</name>
								<description><![CDATA[The Message Type consists of 3 digits which define the MT number of the message being input. The example used above is for an MT 100 Customer Transfer]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>3</length>
							</field>
							<field>
								<name>Receiver's Address</name>
								<description><![CDATA[This address is the 12-character SWIFT address of the receiver of the message, but with a LT Code of 'X'. It defines the destination to which the message should be sent.

The system will replace the 'X' with a specific LT Code on delivery of the message according to the delivery control exercised by the receiving user.

The Branch Code is mandatory and will be validated. The default of 'XXX' may be used, as in the example above.

Unless otherwise documented, system messages addressed to the SWIFT system itself should be addressed to SWFTXXXXXXXX.

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>12</length>
							</field>
							<field>
								<name>Message Priority</name>
								<description><![CDATA[This character, used within FIN Application Headers only, defines the priority with which a message is delivered. The possible values are:

S = System

U = Urgent

N = Normal

Message Priority 'S' must be used for user-to-system messages; for user-to-user messages either 'U' or 'N' can be used. In the absence of user-specified delivery criteria, system messages are always delivered first, followed by urgent priority messages and then normal priority messages.

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Delivery Monitoring</name>
								<description><![CDATA[Delivery monitoring options apply only to FIN user-to-user messages, and allow the sender of a message to request:

automatic MT 011 Delivery Notification once the message has been delivered

automatic MT 010 Non-Delivery Warning if a message is not delivered within the specified obsolescence period (see below)

both, or neither, options. This may be requested on an individual message basis.

The chosen option is expressed as a single digit:

1 = Non-Delivery Warning

2 = Delivery Notification

3 = Non-Delivery Warning and Delivery Notification. 
If the message has priority 'U' then the user must request delivery monitoring option '1' or '3'. If the message has priority 'N', the user can request delivery monitoring option '2', or, by leaving the option blank, no delivery monitoring.
]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>1</length>
							</field>
							<field>
								<name>Obsolescence Period</name>
								<description><![CDATA[The obsolescence period defines the period of time after which a Delayed Message (DLM) trailer is added to a FIN user-to-user message when the message is delivered. For urgent priority messages, it is also the period of time after which, if the message remains undelivered, a Non-Delivery Warning is generated.

The values for the obsolescence period are 003 (15 minutes) for 'U' priority, and 020 (100 minutes) for 'N' priority. An obsolescence period can only be specified when delivery monitoring has been requested (option 1 or 3 for urgent priority messages, option 2 for normal priority messages). If no delivery monitoring has been requested, and an obsolescence period is specified, the message will be NAKed with error code H25.

GPA input Application Headers are similar to their FIN equivalents except that GPA messages do not specify priority, delivery monitoring, nor obsolescence period.

]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>3</length>
							</field>
						</fields>
					</field>
					<field>
						<name>Application Header Output</name>
						<description><![CDATA[The Application Header of a SWIFT message provides information about the message itself.

The Application Header is given in Block 2 of a SWIFT message. It differs according to whether the message is a GPA or a FIN message and whether the Application Header is part of an input or an output message.

]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Input/Output Identifier</name>
								<description><![CDATA[For an input message, the Input/Output Identifier consists of the single letter 'I'.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Message Type</name>
								<description><![CDATA[Three digits indicating the Message Type.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>3</length>
							</field>
							<field>
								<name>Input Time</name>
								<description><![CDATA[The first occurrence of the time field contains the system time and date. This is the generation time in Greenwich Mean Time (GMT).
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Message Input Reference</name>
								<description><![CDATA[The input MIR.

If the message is generated by the system, the input time is the generation time (in GMT) and the input MIR is the system MIR

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>28</length>
							</field>
							<field>
								<name>Output Date</name>
								<description><![CDATA[The output date, local to the receiver.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>6</length>
							</field>
							<field>
								<name>Output Time</name>
								<description><![CDATA[The second occurrence of the time field contains the output time and date. This is in a time local to the receiver.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Message Priority</name>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
						</fields>
					</field>
					<field>
						<name>User Header</name>
						<description><![CDATA[The User Header is an optional header available within FIN for user-to-user messages only. It appears in Block 3 of a SWIFT message, and allows users to provide their own reference within the headers for a particular message.

A User Header can only be assigned by the sender of a message and, if assigned, will always appear on the output message copy. Relevant parts of the User Header will be repeated in related system messages and acknowledgements.

Block 3 may contain tag 113, defining banking priorities, and tag 108, which is a user reference. The user reference part of the User Header may be used as one of the selection criteria when retrieving a message.

The optional field tags 103 and 115 are also used in Block 3 for the FIN Copy service. The order of tags, when present, is 103, 113, 108 and 115.

An optional field tag 119 can be included in Block 3 of certain messages to specify that different validation rules are to be applied. Agreed code words in field 119 indicate what validation rules SWIFT will apply. If field 119 is present, it should appear after field 108
]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Service Identifier</name>
								<description><![CDATA[For any message which the user submits to a FIN Copy service, Block 3 requires an additional field 103 which contains a three-character Service Identifier unique to a specific FIN Copy service. By using a unique identifier it is possible to support access to multiple services within the same CBT.
]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>3</length>
								<tag>103</tag>
							</field>
							<field>
								<name>Banking Priority</name>
								<description><![CDATA[Assigned by the sender of the message.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>4</length>
								<tag>113</tag>
							</field>
							<field>
								<name>Message User Reference</name>
								<description><![CDATA[Assigned by the sender of the message.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>16</length>
								<tag>108</tag>
							</field>
							<field>
								<name>Validation Flag</name>
								<description><![CDATA[Indicates whether a special validation needs to be performed by FIN. The following are examples of the values this field may take. Please note that this list is subject to change:

ISITC indicates validation of ISITC Standards. Only to be used with MT 521 and MT 523.

REMIT identifies the presence of field 77T. Only to be used in MT 103.

RFDD indicates that the message is a request for direct debit. Only to be used in MT 104.

STP indicates that the message is validated according to straight through processing principles. Only to be used in MT 103.

]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>119</tag>
							</field>
							<field>
								<name>Balance checkpoint date and time</name>
								<description><![CDATA[This field contains the balance checkpoint date and time consisting of a date (YYMMDD) and a time (HHMMSS[ss], where 'ss' indicates hundredths of a second). The MI that is subscribed to MIRS will always copy this reference from field tag 13G of the last MT298/091 that it sent into the related MT 298/093 or MT 097 that it generates. ]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>423</tag>
							</field>
							<field>
								<name>Message Input Reference</name>
								<description><![CDATA[This field contains the MIR of the payment message that is related to the notification messages in which this field is present. The MI that is subscribed to MIRS will copy it from the received payment message. In a FINCopy scenario, this field must contain the MIR of the related MT 096]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>106</tag>
							</field>
							<field>
								<name>Related Reference</name>
								<description><![CDATA[This field contains the reference of the payment that is related to the notification messages in which this field is present. The payment itself was not the result of a FIN message. The value of this field must correspond to the related reference (field 21) in the MT298/093. The format of field 424 is 16x.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>424</tag>
							</field>
							<field>
								<name>Service Type Identifier</name>
								<description><![CDATA[This field identifies the applicable global payment service type. The format of field 111 is 3!n.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>111</tag>
							</field>
							<field>
								<name>Unique End-To-End Transaction Reference</name>
								<description><![CDATA[This field provides an end-to-end reference across a payment transaction. The format of field 121 is 36!x.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>121</tag>
							</field>
							<field>
								<name>Addressee Information</name>
								<description><![CDATA[Tag 115 is only valid for output messages. Information from Central Institution to the receiver of payment message. Information is input in the MT 097 FIN Copy Message Authorisation/Refusal Notification in Y-Copy mode.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>115</tag>
							</field>
							<field>
								<name>Payment Release Information Receiver (FINInform Services)</name>
								<description><![CDATA[Tag 165 is only valid for output messages. This field contains information from the server destination to the receiver of payment message. It is only available for use in FINInform services that operate in Y-copy mode.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>165</tag>
							</field>
							<field>
								<name>Receiver Information</name>
								<description><![CDATA[Tag 433 is only valid for output messages. The screening service inputs information in the MT 097 FINCopy Message Authorisation/Refusal Notification, in Y-Copy mode. FINCopy copies the information to the receiver of the screened message.
				    The following values can be present in this field:
				      AOK: message automatically released by screening service
				      FPO: compliance officer has flagged the screening result as false positive
				      NOK: compliance officer has flagged the screened message as suspect
				    The code word can optionally be followed by additional information (up to 20 characters from the x character set).]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>433</tag>
							</field>
						</fields>
					</field>
				</fields>
			</Header>
			<Data>
				<Fields>
					<SwiftField Name="20">
						<SwiftFieldDef Name="20">
							<Generic>false</Generic>
							<Description><![CDATA[Reference]]></Description>
							<Option Name="">
								<Format><![CDATA[16x]]></Format>
								<Specification><![CDATA[(Reference)]]></Specification>
								<Description><![CDATA[Transaction Reference Number]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options> </Options>
						<Validations>
							<SubField Name="Reference">
								<Validation>
									<Options> </Options>
									<ErrorCode>T26</ErrorCode>
									<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive slashes '//'(Error code(s): T26).]]></Comment>
									<ValidationPattern xsi:type="T26" Type="T26">
										<Type>T26</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="21">
						<SwiftFieldDef Name="21">
							<Generic>false</Generic>
							<Option Name="">
								<Format><![CDATA[16x]]></Format>
								<Specification><![CDATA[(Reference)]]></Specification>
								<Description><![CDATA[Related Reference]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options> </Options>
						<Validations>
							<SubField Name="Reference">
								<Validation>
									<Options> </Options>
									<ErrorCode>T26</ErrorCode>
									<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive slashes '//'(Error code(s): T26).]]></Comment>
									<ValidationPattern xsi:type="T26" Type="T26">
										<Type>T26</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="76">
						<SwiftFieldDef Name="76">
							<Generic>false</Generic>
							<Option Name="">
								<Format><![CDATA[6*35x]]></Format>
								<Specification><![CDATA[(Narrative)]]></Specification>
								<Description><![CDATA[Answers]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options> </Options>
					</SwiftField>
					<SwiftField Name="77A">
						<SwiftFieldDef Name="77">
							<Generic>false</Generic>
							<Option Name="A">
								<Format><![CDATA[20*35x]]></Format>
								<Specification><![CDATA[(Narrative)]]></Specification>
								<Description><![CDATA[Narrative]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options>A</Options>
					</SwiftField>
					<SwiftField Name="11a">
						<SwiftFieldDef Name="11">
							<Generic>false</Generic>
							<Description><![CDATA[Currency]]></Description>
							<Option Name="R">
								<Format><![CDATA[3!nCRLF6!n([CRLF4!n6!n])]]></Format>
								<Specification><![CDATA[(MT Number) (Date) (Session Number and ISN)]]></Specification>
								<Description><![CDATA[MT and Date of the Original Message]]></Description>
							</Option>
							<Option Name="S">
								<Format><![CDATA[3!nCRLF6!n([CRLF4!n6!n])]]></Format>
								<Specification><![CDATA[(MT Number)(Date)(Session Number and ISN)]]></Specification>
								<Description><![CDATA[MT and Date of the Original Message]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options>R, S</Options>
						<Validations>
							<SubField Name="Date">
								<Validation>
									<Options>R, S</Options>
									<ErrorCode>T50</ErrorCode>
									<Comment><![CDATA[Date must be a valid date expressed as YYMMDD (Error code(s): T50).]]></Comment>
									<ValidationPattern xsi:type="DATE" Type="DATE">
										<Type>DATE</Type>
										<Format>yyMMdd</Format>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="79">
						<SwiftFieldDef Name="79">
							<Generic>false</Generic>
							<Option Name="">
								<Format><![CDATA[35*50x]]></Format>
								<Specification><![CDATA[(Narrative)]]></Specification>
								<Description><![CDATA[Narrative Description of the Original Message to Which the Answer Relates]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options> </Options>
					</SwiftField>
					<CopyOfFields Name="Copy Of Fields">
						<Description><![CDATA[Copy of at least the Mandatory Fields of the Original Message]]></Description>
						<Mandatory>false</Mandatory>
					</CopyOfFields>
				</Fields>
			</Data>
			<Trailer>
				<fields>
					<field>
						<name>Message Authentication Code</name>
						<description><![CDATA[Allows authentication by the receiving user. It is followed by an authentication result.

This trailer is mandatory for most user-to-user message categories within the FIN application. When the FIN Copy Service is used a PAC trailer, if present, follows the MAC trailer.

Format:

{MAC:<authentication-result>}

where <authentication-result> = 8!h

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>8</length>
						<tag>MAC</tag>
					</field>
					<field>
						<name>Proprietary Authentication Code</name>
						<description><![CDATA[The PAC is used within the FIN Copy service only, when using the double authentication option. The PAC is included in Block 5 of FIN user-to-user messages, immediately after the MAC trailer, if present.

This is calculated on the extracted fields of Block 4 of the message, the value of field 115, if present, and the <authentication-result> of the MAC trailer for Copy Services with double authentication.

Thus, the end-of-block indicator (CrLf-) is included in the PAC calculation, and the fields are defined as follows:

The first three characters are CrLf:

The field and the delimiter are present, that is, 32A:, 20:, and so on.

All subfields and their delimiters are present.

Format:

{PAC:[<authentication-result>]}

where <authentication-result> is mandatory on input messages only and <authentication-result> = 8!h

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>8</length>
						<tag>PAC</tag>
					</field>
					<field>
						<name>Checksum</name>
						<description><![CDATA[The checksum is computed based on the receiver's address (12 characters, with 9th character replaced by X) plus the Text Block. This trailer allows the system and the CBT to check that messages have not been corrupted due to a system malfunction or an undetected transmission error.

Format:

{CHK:<checksum-result>}

where <checksum-result> = 12!h

Note: This trailer is mandatory for FIN and GPA messages (Service Identifier 01).

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>12</length>
						<tag>CHK</tag>
					</field>
					<field>
						<name>System Originated Message</name>
						<description><![CDATA[The system message or service message which is generated by a system PLT has a SYS trailer. All solicited system messages (Service Identifier 01) contain the MIR of the request and may also contain the time.

Format:

{SYS:[<time><mir>]}

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>SYS</tag>
					</field>
					<field>
						<name>Test And Training Message</name>
						<description><![CDATA[Mandatory for FIN and GPA messages (Service Identifier 01) sent by, or delivered to, a Test & Training Logical Terminal (LT). This trailer has a tag only, and no value.

Format:

{TNG:}
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>0</length>
						<tag>TNG</tag>
					</field>
					<field>
						<name>Possible Duplicate Emission</name>
						<description><![CDATA[This trailer is used by the destination of the message. It only applies to FIN user-to-user messages (Service Identifier 01, message categories reserved for banking messages). There can be multiple PDEs. The system does not verify the order nor restrict the number (except for maximum message length).

Correctly formatted PDE trailers applied to user-to-system messages are accepted by the system, but not processed. This means that the system does not check to see if the original message exists. Therefore, a retrieval request sent with a PDE trailer may be processed twice if the original message was received by the system.

Format:

{PDE:[<time><mir>]}

where <time><mir> refers to the emission of the previous possible issue.

Note: It can be added automatically by a CBT or manually by a user. It may be followed by the MIR and the time of its previous possible messages.

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>PDE</tag>
					</field>
					<field>
						<name>Delayed Message</name>
						<description><![CDATA[This trailer is added to all FIN user-to-user output messages that have exceeded their obsolescence period. If this trailer appears in GPA or FIN system messages, it must be ignored. This trailer has a tag only, and no value.

The Obsolescence Period is:

U = 15 minutes

N = 100 minutes

Format:

{DLM:}

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>0</length>
						<tag>DLM</tag>
					</field>
					<field>
						<name>Possible Duplicate Message</name>
						<description><![CDATA[Added by the system to any output message (GPA and FIN Service Identifier 01) being resent because a prior delivery may be invalid. If a system PLT receives a report request with a PDM, the response has a plain PDM (without the optional delivery reference). Other PDMs may be added as a result of unsuccessful delivery attempts to the user. 
Format:
{PDM:[<time><mor>]}
where <time> and the Message Output Reference <mor> are that of the previous attempt.
Note: For messages recovered after a system failure, the optional fields may not be present.
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>PDM</tag>
					</field>
					<field>
						<name>Message Reference</name>
						<description><![CDATA[The MRF trailer is used to specify the message reference of the original user message in MT 096 FIN Copy to Central Institution Messages.
Format:
{MRF:<date><full-time><mir>}
where <mir> is that of the original user message whose fields are copied in the MT 096 FIN Copy to Central Institution Message.
Note: The MRF is specific to FIN Copy. The MRF trailer is automatically generated in the MT 096 FIN Copy to Central Institution Message and can only be reused in field 109 of the MT 096 FIN Copy to Central Institution Message to identify the MT 096 to which the MT 097 is a response. The format of the MRF is subject to change.
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>MRF</tag>
					</field>
				</fields>
			</Trailer>
		</SwiftFields>
		<validationrules name="Default">
			<hdrvalidationrules>
				<fieldvalidations>
					<fieldvalidation>
						<name>U09</name>
						<formula><![CDATA[if($this.Header.GetFieldIndex("User_Header") != -1) {
    def userHeader = $this.Header.GetSection("User_Header");
    if(userHeader.$size > 0 && userHeader[0].IsNotNull("Validation_Flag")) {
        return false;
    }
}
return true;
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U09</error-code>
						<actionmessage><![CDATA["User has used tag 119 in a message that is not a candidate for special processing"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>U03</name>
						<fieldname>User Header</fieldname>
						<formula><![CDATA[Iff(IsNotNull(User_Header.Service_Type_Identifier), 
    IsNotNull(User_Header.Unique_End_To_End_Transaction_Reference))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U03</error-code>
						<actionmessage><![CDATA["When populating an end-to-end reference, both fields 111 and 121 must be populated: a message that contains only one of these two fields will not be accepted by FIN."]]></actionmessage>
					</fieldvalidation>
				</fieldvalidations>
			</hdrvalidationrules>
			<datavalidationrules>
				<fieldvalidations>
					<fieldvalidation>
						<name>F11a</name>
						<fieldname>11a.MT_Number</fieldname>
						<formula><![CDATA[Between($value, 100, 999)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T18</error-code>
						<actionmessage><![CDATA["In field 11a, the subfield MT Number must be a number in the range 100 - 999."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C1</name>
						<formula><![CDATA[If(F79.$size > 0, IsNull(Copy_Of_Fields), true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C31</error-code>
						<actionmessage><![CDATA["Either field 79 or a 'Copy of at least the mandatory fields of the message to which the answer relates', but not both, may be present in the message."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FCP</name>
						<fieldname>Copy Of Fields</fieldname>
						<formula><![CDATA[def Actualvalue = replace($value, "\r\n", "\n");
(FindFirst(Actualvalue, "\n:77F:") == -1 && 
   FindFirst(Actualvalue, "\n:77G:") == -1 && 
   FindFirst(Actualvalue, "\n:77S:") == -1 && 
   FindFirst(Actualvalue, "\n:77T:") == -1) && 
  (!StartsWith(Actualvalue, ":77F:") && 
     !StartsWith(Actualvalue, ":77G:") && 
     !StartsWith(Actualvalue, ":77S:") && 
     !StartsWith(Actualvalue, ":77T:"))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T13</error-code>
						<actionmessage><![CDATA["Tags 77F, 77G, 77S or 77T cannot appear in Copy Of Fields."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>ERI</name>
						<fieldname>79.Narrative</fieldname>
						<formula><![CDATA[ApplyERICodeValidationUnstructured($value);]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T47</error-code>
						<actionmessage><![CDATA["In an ERI field (i.e. fields 61, 72, 77A, 79, 86) the data part of a code word /OCMT/, or /CHGS/, is being validated, but the ending separator (i.e. third slash) is missing or the code words are duplicated."]]></actionmessage>
					</fieldvalidation>
				</fieldvalidations>
			</datavalidationrules>
			<tlrvalidationrules>
				<fieldvalidations>
				</fieldvalidations>
			</tlrvalidationrules>
		</validationrules>
		<elementproperties>
			<propertymap>
				<property name="codegen.java.properties">
					<value>
						<propertymap type="com.tplus.transform.design.PropertiesDef">
							<property name="Java Package Name" value="com.transform.external.%e"/>
							<property name="Jar Name" value="%c.jar"/>
							<property name="Manifest Entries" value="transformrt.jar swiftrt.jar swiftresources.jar"/>
							<property name="Data Source" value=""/>
						</propertymap>
					</value>
				</property>
			</propertymap>
		</elementproperties>
	</externalmessage>
	<externalmessage xsi:type="SwiftFormat" type="SwiftFormat" version="5.1.2" rulename="MT198_2016" formattype="SwiftFormat" >
		<description><![CDATA[This message type is used by financial institutions, with their own offices, and/or with other financial institutions with which they have established bilateral agreements.

It is used as an envelope for a specified message included in it.

It allows for the definition of a unique format for which another message type is not available or applicable.

It also allows financial institutions to use message types which are awaiting live implementation on the SWIFT system.]]></description>
		<standard>SWIFT</standard>
		<standard-name>MT198</standard-name>
		<standard-version>SRG 2016</standard-version>
		<standard-release-qualifier>20160308</standard-release-qualifier>
		<standard-category>Customer Payments &amp; Cheques</standard-category>
		<standard-detailed-name>Proprietary Message</standard-detailed-name>
		<version>1.0</version>
		<SwiftFields>
			<customizable>true</customizable>
			<modifiable>false</modifiable>
			<SwiftMessageType>User</SwiftMessageType>
			<max-length>10000</max-length>
			<HeaderAndTrailerType>SWIFT_INPUT_OUTPUT_HEADER</HeaderAndTrailerType>
			<Header>
				<fields>
					<field>
						<name>Basic Header</name>
						<description><![CDATA[The Basic Header is given in Block 1 of a SWIFT message and is the only header that appears on all messages. The Basic Header provides the fundamental reference for any particular message and is almost always automatically built by the CBT.
The Basic Header has the same format for both input and output messages. However, the information contained in the Basic Header is relative to the sender when the message is input but relative to the receiver when the same message is output.]]></description>
						<datatype>Section</datatype>
						<required>true</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Application Identifier</name>
								<description><![CDATA[The Application Identifier identifies the application within which the message is being sent or received. The available options are:

F = FIN All user-to-user, FIN system and FIN service messages 
A = GPA Most GPA system and service messages 
L = GPA Certain GPA service messages, for example, LOGIN, LAKs, ABORT 

These values are automatically assigned by the SWIFT system and the user's CBT, but the user should be aware of their existence and significance
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Service Identifier</name>
								<description><![CDATA[The Service Identifier consists of 2 numeric characters. It identifies the type of data that is being sent or received and, in doing so, whether the message which follows is one of the following:

a user-to-user message

a system message

a service message, for example, a session control command, such as SELECT, or a logical acknowledgement, such as ACK/SAK/UAK

Users will be primarily concerned with identifier '01' which applies to all GPA and FIN system and user-to-user messages. Other values include: '21' for message acknowledgements such as ACK/NAK, UAK/UNK, '03' for SELECT commands, and 
so on]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>2</length>
							</field>
							<field>
								<name>LT Identifier</name>
								<description><![CDATA[This 12-character SWIFT address, given in the Basic Header Block, is the address of the sending LT for input messages or of the receiving LT for output messages, and includes the Branch Code.

In the Basic Header, the LT Code within the LT Identifier is specific to the LT that has established the session in which the message is being transmitted, that is the sending LT for input messages or the receiving LT for output messages.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>12</length>
							</field>
							<field>
								<name>Session Number</name>
								<description><![CDATA[The Session Number identifies the session in which the message was transmitted. Within the Basic Header, the 4-digit Session Number is the user's current GPA or FIN Session Number.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Sequence Number</name>
								<description><![CDATA[The sequence number always consists of 6 digits. It is the ISN of the sender's current input session or the OSN of the receiver's current output session.

Note: The sequence number is not present in those messages with an Application Identifier of 'L' (for example LOGIN). The sequence number is, however, a key element in the processing of retrievals. Therefore, LOGINs and attempted LOGINs are not retrievable
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>6</length>
							</field>
						</fields>
					</field>
					<field>
						<name>Application Header Input</name>
						<description><![CDATA[The Application Header of a SWIFT message provides information about the message itself.

The Application Header is given in Block 2 of a SWIFT message. It differs according to whether the message is a GPA or a FIN message and whether the Application Header is part of an input or an output message.

]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Input/Output Identifier</name>
								<description><![CDATA[For an input message, the Input/Output Identifier consists of the single letter 'I'.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Message Type</name>
								<description><![CDATA[The Message Type consists of 3 digits which define the MT number of the message being input. The example used above is for an MT 100 Customer Transfer]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>3</length>
							</field>
							<field>
								<name>Receiver's Address</name>
								<description><![CDATA[This address is the 12-character SWIFT address of the receiver of the message, but with a LT Code of 'X'. It defines the destination to which the message should be sent.

The system will replace the 'X' with a specific LT Code on delivery of the message according to the delivery control exercised by the receiving user.

The Branch Code is mandatory and will be validated. The default of 'XXX' may be used, as in the example above.

Unless otherwise documented, system messages addressed to the SWIFT system itself should be addressed to SWFTXXXXXXXX.

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>12</length>
							</field>
							<field>
								<name>Message Priority</name>
								<description><![CDATA[This character, used within FIN Application Headers only, defines the priority with which a message is delivered. The possible values are:

S = System

U = Urgent

N = Normal

Message Priority 'S' must be used for user-to-system messages; for user-to-user messages either 'U' or 'N' can be used. In the absence of user-specified delivery criteria, system messages are always delivered first, followed by urgent priority messages and then normal priority messages.

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Delivery Monitoring</name>
								<description><![CDATA[Delivery monitoring options apply only to FIN user-to-user messages, and allow the sender of a message to request:

automatic MT 011 Delivery Notification once the message has been delivered

automatic MT 010 Non-Delivery Warning if a message is not delivered within the specified obsolescence period (see below)

both, or neither, options. This may be requested on an individual message basis.

The chosen option is expressed as a single digit:

1 = Non-Delivery Warning

2 = Delivery Notification

3 = Non-Delivery Warning and Delivery Notification. 
If the message has priority 'U' then the user must request delivery monitoring option '1' or '3'. If the message has priority 'N', the user can request delivery monitoring option '2', or, by leaving the option blank, no delivery monitoring.
]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>1</length>
							</field>
							<field>
								<name>Obsolescence Period</name>
								<description><![CDATA[The obsolescence period defines the period of time after which a Delayed Message (DLM) trailer is added to a FIN user-to-user message when the message is delivered. For urgent priority messages, it is also the period of time after which, if the message remains undelivered, a Non-Delivery Warning is generated.

The values for the obsolescence period are 003 (15 minutes) for 'U' priority, and 020 (100 minutes) for 'N' priority. An obsolescence period can only be specified when delivery monitoring has been requested (option 1 or 3 for urgent priority messages, option 2 for normal priority messages). If no delivery monitoring has been requested, and an obsolescence period is specified, the message will be NAKed with error code H25.

GPA input Application Headers are similar to their FIN equivalents except that GPA messages do not specify priority, delivery monitoring, nor obsolescence period.

]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>3</length>
							</field>
						</fields>
					</field>
					<field>
						<name>Application Header Output</name>
						<description><![CDATA[The Application Header of a SWIFT message provides information about the message itself.

The Application Header is given in Block 2 of a SWIFT message. It differs according to whether the message is a GPA or a FIN message and whether the Application Header is part of an input or an output message.

]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Input/Output Identifier</name>
								<description><![CDATA[For an input message, the Input/Output Identifier consists of the single letter 'I'.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Message Type</name>
								<description><![CDATA[Three digits indicating the Message Type.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>3</length>
							</field>
							<field>
								<name>Input Time</name>
								<description><![CDATA[The first occurrence of the time field contains the system time and date. This is the generation time in Greenwich Mean Time (GMT).
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Message Input Reference</name>
								<description><![CDATA[The input MIR.

If the message is generated by the system, the input time is the generation time (in GMT) and the input MIR is the system MIR

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>28</length>
							</field>
							<field>
								<name>Output Date</name>
								<description><![CDATA[The output date, local to the receiver.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>6</length>
							</field>
							<field>
								<name>Output Time</name>
								<description><![CDATA[The second occurrence of the time field contains the output time and date. This is in a time local to the receiver.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Message Priority</name>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
						</fields>
					</field>
					<field>
						<name>User Header</name>
						<description><![CDATA[The User Header is an optional header available within FIN for user-to-user messages only. It appears in Block 3 of a SWIFT message, and allows users to provide their own reference within the headers for a particular message.

A User Header can only be assigned by the sender of a message and, if assigned, will always appear on the output message copy. Relevant parts of the User Header will be repeated in related system messages and acknowledgements.

Block 3 may contain tag 113, defining banking priorities, and tag 108, which is a user reference. The user reference part of the User Header may be used as one of the selection criteria when retrieving a message.

The optional field tags 103 and 115 are also used in Block 3 for the FIN Copy service. The order of tags, when present, is 103, 113, 108 and 115.

An optional field tag 119 can be included in Block 3 of certain messages to specify that different validation rules are to be applied. Agreed code words in field 119 indicate what validation rules SWIFT will apply. If field 119 is present, it should appear after field 108
]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Service Identifier</name>
								<description><![CDATA[For any message which the user submits to a FIN Copy service, Block 3 requires an additional field 103 which contains a three-character Service Identifier unique to a specific FIN Copy service. By using a unique identifier it is possible to support access to multiple services within the same CBT.
]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>3</length>
								<tag>103</tag>
							</field>
							<field>
								<name>Banking Priority</name>
								<description><![CDATA[Assigned by the sender of the message.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>4</length>
								<tag>113</tag>
							</field>
							<field>
								<name>Message User Reference</name>
								<description><![CDATA[Assigned by the sender of the message.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>16</length>
								<tag>108</tag>
							</field>
							<field>
								<name>Validation Flag</name>
								<description><![CDATA[Indicates whether a special validation needs to be performed by FIN. The following are examples of the values this field may take. Please note that this list is subject to change:

ISITC indicates validation of ISITC Standards. Only to be used with MT 521 and MT 523.

REMIT identifies the presence of field 77T. Only to be used in MT 103.

RFDD indicates that the message is a request for direct debit. Only to be used in MT 104.

STP indicates that the message is validated according to straight through processing principles. Only to be used in MT 103.

]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>119</tag>
							</field>
							<field>
								<name>Balance checkpoint date and time</name>
								<description><![CDATA[This field contains the balance checkpoint date and time consisting of a date (YYMMDD) and a time (HHMMSS[ss], where 'ss' indicates hundredths of a second). The MI that is subscribed to MIRS will always copy this reference from field tag 13G of the last MT298/091 that it sent into the related MT 298/093 or MT 097 that it generates. ]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>423</tag>
							</field>
							<field>
								<name>Message Input Reference</name>
								<description><![CDATA[This field contains the MIR of the payment message that is related to the notification messages in which this field is present. The MI that is subscribed to MIRS will copy it from the received payment message. In a FINCopy scenario, this field must contain the MIR of the related MT 096]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>106</tag>
							</field>
							<field>
								<name>Related Reference</name>
								<description><![CDATA[This field contains the reference of the payment that is related to the notification messages in which this field is present. The payment itself was not the result of a FIN message. The value of this field must correspond to the related reference (field 21) in the MT298/093. The format of field 424 is 16x.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>424</tag>
							</field>
							<field>
								<name>Service Type Identifier</name>
								<description><![CDATA[This field identifies the applicable global payment service type. The format of field 111 is 3!n.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>111</tag>
							</field>
							<field>
								<name>Unique End-To-End Transaction Reference</name>
								<description><![CDATA[This field provides an end-to-end reference across a payment transaction. The format of field 121 is 36!x.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>121</tag>
							</field>
							<field>
								<name>Addressee Information</name>
								<description><![CDATA[Tag 115 is only valid for output messages. Information from Central Institution to the receiver of payment message. Information is input in the MT 097 FIN Copy Message Authorisation/Refusal Notification in Y-Copy mode.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>115</tag>
							</field>
							<field>
								<name>Payment Release Information Receiver (FINInform Services)</name>
								<description><![CDATA[Tag 165 is only valid for output messages. This field contains information from the server destination to the receiver of payment message. It is only available for use in FINInform services that operate in Y-copy mode.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>165</tag>
							</field>
							<field>
								<name>Receiver Information</name>
								<description><![CDATA[Tag 433 is only valid for output messages. The screening service inputs information in the MT 097 FINCopy Message Authorisation/Refusal Notification, in Y-Copy mode. FINCopy copies the information to the receiver of the screened message.
				    The following values can be present in this field:
				      AOK: message automatically released by screening service
				      FPO: compliance officer has flagged the screening result as false positive
				      NOK: compliance officer has flagged the screened message as suspect
				    The code word can optionally be followed by additional information (up to 20 characters from the x character set).]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>433</tag>
							</field>
						</fields>
					</field>
				</fields>
			</Header>
			<Data>
				<Fields>
					<SwiftField Name="20">
						<SwiftFieldDef Name="20">
							<Generic>false</Generic>
							<Description><![CDATA[Reference]]></Description>
							<Option Name="">
								<Format><![CDATA[16x]]></Format>
								<Specification><![CDATA[(Reference)]]></Specification>
								<Description><![CDATA[Transaction Reference Number]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options> </Options>
						<Validations>
							<SubField Name="Reference">
								<Validation>
									<Options> </Options>
									<ErrorCode>T26</ErrorCode>
									<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive slashes '//' (Error code(s): T26).]]></Comment>
									<ValidationPattern xsi:type="T26" Type="T26">
										<Type>T26</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="12">
						<SwiftFieldDef Name="12">
							<Generic>false</Generic>
							<Description><![CDATA[Type of Financial Instrument]]></Description>
							<Option Name="">
								<Format><![CDATA[3!n]]></Format>
								<Specification><![CDATA[(MT Number)]]></Specification>
								<Description><![CDATA[Sub-Message Type]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options> </Options>
					</SwiftField>
					<SwiftField Name="77E">
						<SwiftFieldDef Name="77">
							<Generic>false</Generic>
							<Option Name="E">
								<Format><![CDATA[73x[CRLF1000*78x]]]></Format>
								<Specification><![CDATA[(Text1)(Text2)]]></Specification>
								<Description><![CDATA[Proprietary Message]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options>E</Options>
					</SwiftField>
				</Fields>
			</Data>
			<Trailer>
				<fields>
					<field>
						<name>Message Authentication Code</name>
						<description><![CDATA[Allows authentication by the receiving user. It is followed by an authentication result.

This trailer is mandatory for most user-to-user message categories within the FIN application. When the FIN Copy Service is used a PAC trailer, if present, follows the MAC trailer.

Format:

{MAC:<authentication-result>}

where <authentication-result> = 8!h

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>8</length>
						<tag>MAC</tag>
					</field>
					<field>
						<name>Proprietary Authentication Code</name>
						<description><![CDATA[The PAC is used within the FIN Copy service only, when using the double authentication option. The PAC is included in Block 5 of FIN user-to-user messages, immediately after the MAC trailer, if present.

This is calculated on the extracted fields of Block 4 of the message, the value of field 115, if present, and the <authentication-result> of the MAC trailer for Copy Services with double authentication.

Thus, the end-of-block indicator (CrLf-) is included in the PAC calculation, and the fields are defined as follows:

The first three characters are CrLf:

The field and the delimiter are present, that is, 32A:, 20:, and so on.

All subfields and their delimiters are present.

Format:

{PAC:[<authentication-result>]}

where <authentication-result> is mandatory on input messages only and <authentication-result> = 8!h

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>8</length>
						<tag>PAC</tag>
					</field>
					<field>
						<name>Checksum</name>
						<description><![CDATA[The checksum is computed based on the receiver's address (12 characters, with 9th character replaced by X) plus the Text Block. This trailer allows the system and the CBT to check that messages have not been corrupted due to a system malfunction or an undetected transmission error.

Format:

{CHK:<checksum-result>}

where <checksum-result> = 12!h

Note: This trailer is mandatory for FIN and GPA messages (Service Identifier 01).

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>12</length>
						<tag>CHK</tag>
					</field>
					<field>
						<name>System Originated Message</name>
						<description><![CDATA[The system message or service message which is generated by a system PLT has a SYS trailer. All solicited system messages (Service Identifier 01) contain the MIR of the request and may also contain the time.

Format:

{SYS:[<time><mir>]}

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>SYS</tag>
					</field>
					<field>
						<name>Test And Training Message</name>
						<description><![CDATA[Mandatory for FIN and GPA messages (Service Identifier 01) sent by, or delivered to, a Test & Training Logical Terminal (LT). This trailer has a tag only, and no value.

Format:

{TNG:}
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>0</length>
						<tag>TNG</tag>
					</field>
					<field>
						<name>Possible Duplicate Emission</name>
						<description><![CDATA[This trailer is used by the destination of the message. It only applies to FIN user-to-user messages (Service Identifier 01, message categories reserved for banking messages). There can be multiple PDEs. The system does not verify the order nor restrict the number (except for maximum message length).

Correctly formatted PDE trailers applied to user-to-system messages are accepted by the system, but not processed. This means that the system does not check to see if the original message exists. Therefore, a retrieval request sent with a PDE trailer may be processed twice if the original message was received by the system.

Format:

{PDE:[<time><mir>]}

where <time><mir> refers to the emission of the previous possible issue.

Note: It can be added automatically by a CBT or manually by a user. It may be followed by the MIR and the time of its previous possible messages.

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>PDE</tag>
					</field>
					<field>
						<name>Delayed Message</name>
						<description><![CDATA[This trailer is added to all FIN user-to-user output messages that have exceeded their obsolescence period. If this trailer appears in GPA or FIN system messages, it must be ignored. This trailer has a tag only, and no value.

The Obsolescence Period is:

U = 15 minutes

N = 100 minutes

Format:

{DLM:}

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>0</length>
						<tag>DLM</tag>
					</field>
					<field>
						<name>Possible Duplicate Message</name>
						<description><![CDATA[Added by the system to any output message (GPA and FIN Service Identifier 01) being resent because a prior delivery may be invalid. If a system PLT receives a report request with a PDM, the response has a plain PDM (without the optional delivery reference). Other PDMs may be added as a result of unsuccessful delivery attempts to the user. 
Format:
{PDM:[<time><mor>]}
where <time> and the Message Output Reference <mor> are that of the previous attempt.
Note: For messages recovered after a system failure, the optional fields may not be present.
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>PDM</tag>
					</field>
					<field>
						<name>Message Reference</name>
						<description><![CDATA[The MRF trailer is used to specify the message reference of the original user message in MT 096 FIN Copy to Central Institution Messages.
Format:
{MRF:<date><full-time><mir>}
where <mir> is that of the original user message whose fields are copied in the MT 096 FIN Copy to Central Institution Message.
Note: The MRF is specific to FIN Copy. The MRF trailer is automatically generated in the MT 096 FIN Copy to Central Institution Message and can only be reused in field 109 of the MT 096 FIN Copy to Central Institution Message to identify the MT 096 to which the MT 097 is a response. The format of the MRF is subject to change.
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>MRF</tag>
					</field>
				</fields>
			</Trailer>
		</SwiftFields>
		<validationrules name="Default">
			<hdrvalidationrules>
				<fieldvalidations>
					<fieldvalidation>
						<name>U09</name>
						<formula><![CDATA[if($this.Header.GetFieldIndex("User_Header") != -1) {
    def userHeader = $this.Header.GetSection("User_Header");
    if(userHeader.$size > 0 && userHeader[0].IsNotNull("Validation_Flag")) {
        return false;
    }
}
return true;
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U09</error-code>
						<actionmessage><![CDATA["User has used tag 119 in a message that is not a candidate for special processing"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>U03</name>
						<fieldname>User Header</fieldname>
						<formula><![CDATA[Iff(IsNotNull(User_Header.Service_Type_Identifier), 
    IsNotNull(User_Header.Unique_End_To_End_Transaction_Reference))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U03</error-code>
						<actionmessage><![CDATA["When populating an end-to-end reference, both fields 111 and 121 must be populated: a message that contains only one of these two fields will not be accepted by FIN."]]></actionmessage>
					</fieldvalidation>
				</fieldvalidations>
			</hdrvalidationrules>
			<datavalidationrules>
				<fieldvalidations>
					<fieldvalidation>
						<name>F77E-A</name>
						<fieldname>77E</fieldname>
						<formula><![CDATA[def fullText = F77E.Text1 + "\r\n" + Val(F77E.Text2);
def fieldLength = fullText.Length();
return fieldLength <= 9800;]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T33</error-code>
						<actionmessage><![CDATA["The maximum size of this field is limited to 9800 characters."]]></actionmessage>
					</fieldvalidation>
				</fieldvalidations>
			</datavalidationrules>
			<tlrvalidationrules>
				<fieldvalidations>
				</fieldvalidations>
			</tlrvalidationrules>
		</validationrules>
		<elementproperties>
			<propertymap>
				<property name="codegen.java.properties">
					<value>
						<propertymap type="com.tplus.transform.design.PropertiesDef">
							<property name="Java Package Name" value="com.transform.external.%e"/>
							<property name="Jar Name" value="%c.jar"/>
							<property name="Manifest Entries" value="transformrt.jar swiftrt.jar swiftresources.jar"/>
							<property name="Data Source" value=""/>
						</propertymap>
					</value>
				</property>
			</propertymap>
		</elementproperties>
	</externalmessage>
	<externalmessage xsi:type="SwiftFormat" type="SwiftFormat" version="5.1.2" rulename="MT199_2016" formattype="SwiftFormat" >
		<description><![CDATA[This message type is: 

a) used by financial institutions to send or receive information for which another message type is not applicable. 

b) used between a corporate and its financial institution for which another message type is not applicable. 

The category digit should be chosen so the message will be routed to the unit of the Receiver which is most capable of acting on the information. 

This format does not apply to category 4 and 7. For more details, see the relevant category Message Reference Guide for MT 499 and MT 799. 

]]></description>
		<standard>SWIFT</standard>
		<standard-name>MT199</standard-name>
		<standard-version>SRG 2016</standard-version>
		<standard-release-qualifier>20160308</standard-release-qualifier>
		<standard-category>Customer Payments &amp; Cheques</standard-category>
		<standard-detailed-name>Free Format Message</standard-detailed-name>
		<version>1.0</version>
		<SwiftFields>
			<customizable>true</customizable>
			<modifiable>false</modifiable>
			<SwiftMessageType>User</SwiftMessageType>
			<max-length>2000</max-length>
			<HeaderAndTrailerType>SWIFT_INPUT_OUTPUT_HEADER</HeaderAndTrailerType>
			<Header>
				<fields>
					<field>
						<name>Basic Header</name>
						<description><![CDATA[The Basic Header is given in Block 1 of a SWIFT message and is the only header that appears on all messages. The Basic Header provides the fundamental reference for any particular message and is almost always automatically built by the CBT.
The Basic Header has the same format for both input and output messages. However, the information contained in the Basic Header is relative to the sender when the message is input but relative to the receiver when the same message is output.]]></description>
						<datatype>Section</datatype>
						<required>true</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Application Identifier</name>
								<description><![CDATA[The Application Identifier identifies the application within which the message is being sent or received. The available options are:

F = FIN All user-to-user, FIN system and FIN service messages 
A = GPA Most GPA system and service messages 
L = GPA Certain GPA service messages, for example, LOGIN, LAKs, ABORT 

These values are automatically assigned by the SWIFT system and the user's CBT, but the user should be aware of their existence and significance
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Service Identifier</name>
								<description><![CDATA[The Service Identifier consists of 2 numeric characters. It identifies the type of data that is being sent or received and, in doing so, whether the message which follows is one of the following:

a user-to-user message

a system message

a service message, for example, a session control command, such as SELECT, or a logical acknowledgement, such as ACK/SAK/UAK

Users will be primarily concerned with identifier '01' which applies to all GPA and FIN system and user-to-user messages. Other values include: '21' for message acknowledgements such as ACK/NAK, UAK/UNK, '03' for SELECT commands, and 
so on]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>2</length>
							</field>
							<field>
								<name>LT Identifier</name>
								<description><![CDATA[This 12-character SWIFT address, given in the Basic Header Block, is the address of the sending LT for input messages or of the receiving LT for output messages, and includes the Branch Code.

In the Basic Header, the LT Code within the LT Identifier is specific to the LT that has established the session in which the message is being transmitted, that is the sending LT for input messages or the receiving LT for output messages.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>12</length>
							</field>
							<field>
								<name>Session Number</name>
								<description><![CDATA[The Session Number identifies the session in which the message was transmitted. Within the Basic Header, the 4-digit Session Number is the user's current GPA or FIN Session Number.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Sequence Number</name>
								<description><![CDATA[The sequence number always consists of 6 digits. It is the ISN of the sender's current input session or the OSN of the receiver's current output session.

Note: The sequence number is not present in those messages with an Application Identifier of 'L' (for example LOGIN). The sequence number is, however, a key element in the processing of retrievals. Therefore, LOGINs and attempted LOGINs are not retrievable
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>6</length>
							</field>
						</fields>
					</field>
					<field>
						<name>Application Header Input</name>
						<description><![CDATA[The Application Header of a SWIFT message provides information about the message itself.

The Application Header is given in Block 2 of a SWIFT message. It differs according to whether the message is a GPA or a FIN message and whether the Application Header is part of an input or an output message.

]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Input/Output Identifier</name>
								<description><![CDATA[For an input message, the Input/Output Identifier consists of the single letter 'I'.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Message Type</name>
								<description><![CDATA[The Message Type consists of 3 digits which define the MT number of the message being input. The example used above is for an MT 100 Customer Transfer]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>3</length>
							</field>
							<field>
								<name>Receiver's Address</name>
								<description><![CDATA[This address is the 12-character SWIFT address of the receiver of the message, but with a LT Code of 'X'. It defines the destination to which the message should be sent.

The system will replace the 'X' with a specific LT Code on delivery of the message according to the delivery control exercised by the receiving user.

The Branch Code is mandatory and will be validated. The default of 'XXX' may be used, as in the example above.

Unless otherwise documented, system messages addressed to the SWIFT system itself should be addressed to SWFTXXXXXXXX.

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>12</length>
							</field>
							<field>
								<name>Message Priority</name>
								<description><![CDATA[This character, used within FIN Application Headers only, defines the priority with which a message is delivered. The possible values are:

S = System

U = Urgent

N = Normal

Message Priority 'S' must be used for user-to-system messages; for user-to-user messages either 'U' or 'N' can be used. In the absence of user-specified delivery criteria, system messages are always delivered first, followed by urgent priority messages and then normal priority messages.

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Delivery Monitoring</name>
								<description><![CDATA[Delivery monitoring options apply only to FIN user-to-user messages, and allow the sender of a message to request:

automatic MT 011 Delivery Notification once the message has been delivered

automatic MT 010 Non-Delivery Warning if a message is not delivered within the specified obsolescence period (see below)

both, or neither, options. This may be requested on an individual message basis.

The chosen option is expressed as a single digit:

1 = Non-Delivery Warning

2 = Delivery Notification

3 = Non-Delivery Warning and Delivery Notification. 
If the message has priority 'U' then the user must request delivery monitoring option '1' or '3'. If the message has priority 'N', the user can request delivery monitoring option '2', or, by leaving the option blank, no delivery monitoring.
]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>1</length>
							</field>
							<field>
								<name>Obsolescence Period</name>
								<description><![CDATA[The obsolescence period defines the period of time after which a Delayed Message (DLM) trailer is added to a FIN user-to-user message when the message is delivered. For urgent priority messages, it is also the period of time after which, if the message remains undelivered, a Non-Delivery Warning is generated.

The values for the obsolescence period are 003 (15 minutes) for 'U' priority, and 020 (100 minutes) for 'N' priority. An obsolescence period can only be specified when delivery monitoring has been requested (option 1 or 3 for urgent priority messages, option 2 for normal priority messages). If no delivery monitoring has been requested, and an obsolescence period is specified, the message will be NAKed with error code H25.

GPA input Application Headers are similar to their FIN equivalents except that GPA messages do not specify priority, delivery monitoring, nor obsolescence period.

]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>3</length>
							</field>
						</fields>
					</field>
					<field>
						<name>Application Header Output</name>
						<description><![CDATA[The Application Header of a SWIFT message provides information about the message itself.

The Application Header is given in Block 2 of a SWIFT message. It differs according to whether the message is a GPA or a FIN message and whether the Application Header is part of an input or an output message.

]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Input/Output Identifier</name>
								<description><![CDATA[For an input message, the Input/Output Identifier consists of the single letter 'I'.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Message Type</name>
								<description><![CDATA[Three digits indicating the Message Type.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>3</length>
							</field>
							<field>
								<name>Input Time</name>
								<description><![CDATA[The first occurrence of the time field contains the system time and date. This is the generation time in Greenwich Mean Time (GMT).
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Message Input Reference</name>
								<description><![CDATA[The input MIR.

If the message is generated by the system, the input time is the generation time (in GMT) and the input MIR is the system MIR

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>28</length>
							</field>
							<field>
								<name>Output Date</name>
								<description><![CDATA[The output date, local to the receiver.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>6</length>
							</field>
							<field>
								<name>Output Time</name>
								<description><![CDATA[The second occurrence of the time field contains the output time and date. This is in a time local to the receiver.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Message Priority</name>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
						</fields>
					</field>
					<field>
						<name>User Header</name>
						<description><![CDATA[The User Header is an optional header available within FIN for user-to-user messages only. It appears in Block 3 of a SWIFT message, and allows users to provide their own reference within the headers for a particular message.

A User Header can only be assigned by the sender of a message and, if assigned, will always appear on the output message copy. Relevant parts of the User Header will be repeated in related system messages and acknowledgements.

Block 3 may contain tag 113, defining banking priorities, and tag 108, which is a user reference. The user reference part of the User Header may be used as one of the selection criteria when retrieving a message.

The optional field tags 103 and 115 are also used in Block 3 for the FIN Copy service. The order of tags, when present, is 103, 113, 108 and 115.

An optional field tag 119 can be included in Block 3 of certain messages to specify that different validation rules are to be applied. Agreed code words in field 119 indicate what validation rules SWIFT will apply. If field 119 is present, it should appear after field 108
]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Service Identifier</name>
								<description><![CDATA[For any message which the user submits to a FIN Copy service, Block 3 requires an additional field 103 which contains a three-character Service Identifier unique to a specific FIN Copy service. By using a unique identifier it is possible to support access to multiple services within the same CBT.
]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>3</length>
								<tag>103</tag>
							</field>
							<field>
								<name>Banking Priority</name>
								<description><![CDATA[Assigned by the sender of the message.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>4</length>
								<tag>113</tag>
							</field>
							<field>
								<name>Message User Reference</name>
								<description><![CDATA[Assigned by the sender of the message.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>16</length>
								<tag>108</tag>
							</field>
							<field>
								<name>Validation Flag</name>
								<description><![CDATA[Indicates whether a special validation needs to be performed by FIN. The following are examples of the values this field may take. Please note that this list is subject to change:

ISITC indicates validation of ISITC Standards. Only to be used with MT 521 and MT 523.

REMIT identifies the presence of field 77T. Only to be used in MT 103.

RFDD indicates that the message is a request for direct debit. Only to be used in MT 104.

STP indicates that the message is validated according to straight through processing principles. Only to be used in MT 103.

]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>119</tag>
							</field>
							<field>
								<name>Balance checkpoint date and time</name>
								<description><![CDATA[This field contains the balance checkpoint date and time consisting of a date (YYMMDD) and a time (HHMMSS[ss], where 'ss' indicates hundredths of a second). The MI that is subscribed to MIRS will always copy this reference from field tag 13G of the last MT298/091 that it sent into the related MT 298/093 or MT 097 that it generates. ]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>423</tag>
							</field>
							<field>
								<name>Message Input Reference</name>
								<description><![CDATA[This field contains the MIR of the payment message that is related to the notification messages in which this field is present. The MI that is subscribed to MIRS will copy it from the received payment message. In a FINCopy scenario, this field must contain the MIR of the related MT 096]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>106</tag>
							</field>
							<field>
								<name>Related Reference</name>
								<description><![CDATA[This field contains the reference of the payment that is related to the notification messages in which this field is present. The payment itself was not the result of a FIN message. The value of this field must correspond to the related reference (field 21) in the MT298/093. The format of field 424 is 16x.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>424</tag>
							</field>
							<field>
								<name>Service Type Identifier</name>
								<description><![CDATA[This field identifies the applicable global payment service type. The format of field 111 is 3!n.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>111</tag>
							</field>
							<field>
								<name>Unique End-To-End Transaction Reference</name>
								<description><![CDATA[This field provides an end-to-end reference across a payment transaction. The format of field 121 is 36!x.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>121</tag>
							</field>
							<field>
								<name>Addressee Information</name>
								<description><![CDATA[Tag 115 is only valid for output messages. Information from Central Institution to the receiver of payment message. Information is input in the MT 097 FIN Copy Message Authorisation/Refusal Notification in Y-Copy mode.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>115</tag>
							</field>
							<field>
								<name>Payment Release Information Receiver (FINInform Services)</name>
								<description><![CDATA[Tag 165 is only valid for output messages. This field contains information from the server destination to the receiver of payment message. It is only available for use in FINInform services that operate in Y-copy mode.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>165</tag>
							</field>
							<field>
								<name>Receiver Information</name>
								<description><![CDATA[Tag 433 is only valid for output messages. The screening service inputs information in the MT 097 FINCopy Message Authorisation/Refusal Notification, in Y-Copy mode. FINCopy copies the information to the receiver of the screened message.
				    The following values can be present in this field:
				      AOK: message automatically released by screening service
				      FPO: compliance officer has flagged the screening result as false positive
				      NOK: compliance officer has flagged the screened message as suspect
				    The code word can optionally be followed by additional information (up to 20 characters from the x character set).]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>433</tag>
							</field>
						</fields>
					</field>
				</fields>
			</Header>
			<Data>
				<Fields>
					<SwiftField Name="20">
						<SwiftFieldDef Name="20">
							<Generic>false</Generic>
							<Description><![CDATA[Reference]]></Description>
							<Option Name="">
								<Format><![CDATA[16x]]></Format>
								<Specification><![CDATA[(Reference)]]></Specification>
								<Description><![CDATA[Transaction Reference Number]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options> </Options>
						<Validations>
							<SubField Name="Reference">
								<Validation>
									<Options> </Options>
									<ErrorCode>T26</ErrorCode>
									<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive slashes '//' (Error code(s): T26).]]></Comment>
									<ValidationPattern xsi:type="T26" Type="T26">
										<Type>T26</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="21">
						<SwiftFieldDef Name="21">
							<Generic>false</Generic>
							<Option Name="">
								<Format><![CDATA[16x]]></Format>
								<Specification><![CDATA[(Reference)]]></Specification>
								<Description><![CDATA[Related Reference]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options> </Options>
						<Validations>
							<SubField Name="Reference">
								<Validation>
									<Options> </Options>
									<ErrorCode>T26</ErrorCode>
									<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive slashes '//' (Error code(s): T26).]]></Comment>
									<ValidationPattern xsi:type="T26" Type="T26">
										<Type>T26</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="79">
						<SwiftFieldDef Name="79">
							<Generic>false</Generic>
							<Option Name="">
								<Format><![CDATA[35*50x]]></Format>
								<Specification><![CDATA[(Narrative)]]></Specification>
								<Description><![CDATA[Narrative]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options> </Options>
					</SwiftField>
				</Fields>
			</Data>
			<Trailer>
				<fields>
					<field>
						<name>Message Authentication Code</name>
						<description><![CDATA[Allows authentication by the receiving user. It is followed by an authentication result.

This trailer is mandatory for most user-to-user message categories within the FIN application. When the FIN Copy Service is used a PAC trailer, if present, follows the MAC trailer.

Format:

{MAC:<authentication-result>}

where <authentication-result> = 8!h

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>8</length>
						<tag>MAC</tag>
					</field>
					<field>
						<name>Proprietary Authentication Code</name>
						<description><![CDATA[The PAC is used within the FIN Copy service only, when using the double authentication option. The PAC is included in Block 5 of FIN user-to-user messages, immediately after the MAC trailer, if present.

This is calculated on the extracted fields of Block 4 of the message, the value of field 115, if present, and the <authentication-result> of the MAC trailer for Copy Services with double authentication.

Thus, the end-of-block indicator (CrLf-) is included in the PAC calculation, and the fields are defined as follows:

The first three characters are CrLf:

The field and the delimiter are present, that is, 32A:, 20:, and so on.

All subfields and their delimiters are present.

Format:

{PAC:[<authentication-result>]}

where <authentication-result> is mandatory on input messages only and <authentication-result> = 8!h

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>8</length>
						<tag>PAC</tag>
					</field>
					<field>
						<name>Checksum</name>
						<description><![CDATA[The checksum is computed based on the receiver's address (12 characters, with 9th character replaced by X) plus the Text Block. This trailer allows the system and the CBT to check that messages have not been corrupted due to a system malfunction or an undetected transmission error.

Format:

{CHK:<checksum-result>}

where <checksum-result> = 12!h

Note: This trailer is mandatory for FIN and GPA messages (Service Identifier 01).

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>12</length>
						<tag>CHK</tag>
					</field>
					<field>
						<name>System Originated Message</name>
						<description><![CDATA[The system message or service message which is generated by a system PLT has a SYS trailer. All solicited system messages (Service Identifier 01) contain the MIR of the request and may also contain the time.

Format:

{SYS:[<time><mir>]}

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>SYS</tag>
					</field>
					<field>
						<name>Test And Training Message</name>
						<description><![CDATA[Mandatory for FIN and GPA messages (Service Identifier 01) sent by, or delivered to, a Test & Training Logical Terminal (LT). This trailer has a tag only, and no value.

Format:

{TNG:}
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>0</length>
						<tag>TNG</tag>
					</field>
					<field>
						<name>Possible Duplicate Emission</name>
						<description><![CDATA[This trailer is used by the destination of the message. It only applies to FIN user-to-user messages (Service Identifier 01, message categories reserved for banking messages). There can be multiple PDEs. The system does not verify the order nor restrict the number (except for maximum message length).

Correctly formatted PDE trailers applied to user-to-system messages are accepted by the system, but not processed. This means that the system does not check to see if the original message exists. Therefore, a retrieval request sent with a PDE trailer may be processed twice if the original message was received by the system.

Format:

{PDE:[<time><mir>]}

where <time><mir> refers to the emission of the previous possible issue.

Note: It can be added automatically by a CBT or manually by a user. It may be followed by the MIR and the time of its previous possible messages.

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>PDE</tag>
					</field>
					<field>
						<name>Delayed Message</name>
						<description><![CDATA[This trailer is added to all FIN user-to-user output messages that have exceeded their obsolescence period. If this trailer appears in GPA or FIN system messages, it must be ignored. This trailer has a tag only, and no value.

The Obsolescence Period is:

U = 15 minutes

N = 100 minutes

Format:

{DLM:}

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>0</length>
						<tag>DLM</tag>
					</field>
					<field>
						<name>Possible Duplicate Message</name>
						<description><![CDATA[Added by the system to any output message (GPA and FIN Service Identifier 01) being resent because a prior delivery may be invalid. If a system PLT receives a report request with a PDM, the response has a plain PDM (without the optional delivery reference). Other PDMs may be added as a result of unsuccessful delivery attempts to the user. 
Format:
{PDM:[<time><mor>]}
where <time> and the Message Output Reference <mor> are that of the previous attempt.
Note: For messages recovered after a system failure, the optional fields may not be present.
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>PDM</tag>
					</field>
					<field>
						<name>Message Reference</name>
						<description><![CDATA[The MRF trailer is used to specify the message reference of the original user message in MT 096 FIN Copy to Central Institution Messages.
Format:
{MRF:<date><full-time><mir>}
where <mir> is that of the original user message whose fields are copied in the MT 096 FIN Copy to Central Institution Message.
Note: The MRF is specific to FIN Copy. The MRF trailer is automatically generated in the MT 096 FIN Copy to Central Institution Message and can only be reused in field 109 of the MT 096 FIN Copy to Central Institution Message to identify the MT 096 to which the MT 097 is a response. The format of the MRF is subject to change.
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>MRF</tag>
					</field>
				</fields>
			</Trailer>
		</SwiftFields>
		<validationrules name="Default">
			<hdrvalidationrules>
				<fieldvalidations>
					<fieldvalidation>
						<name>U09</name>
						<formula><![CDATA[if($this.Header.GetFieldIndex("User_Header") != -1) {
    def userHeader = $this.Header.GetSection("User_Header");
    if(userHeader.$size > 0 && userHeader[0].IsNotNull("Validation_Flag")) {
        return false;
    }
}
return true;
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U09</error-code>
						<actionmessage><![CDATA["User has used tag 119 in a message that is not a candidate for special processing"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>U03</name>
						<fieldname>User Header</fieldname>
						<formula><![CDATA[Iff(IsNotNull(User_Header.Service_Type_Identifier), 
    IsNotNull(User_Header.Unique_End_To_End_Transaction_Reference))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U03</error-code>
						<actionmessage><![CDATA["When populating an end-to-end reference, both fields 111 and 121 must be populated: a message that contains only one of these two fields will not be accepted by FIN."]]></actionmessage>
					</fieldvalidation>
				</fieldvalidations>
			</hdrvalidationrules>
			<datavalidationrules>
				<fieldvalidations>
					<fieldvalidation>
						<name>F-79</name>
						<fieldname>79.Narrative</fieldname>
						<formula><![CDATA[def Actualvalue = replace($value, "\r\n", "\n");
def lines = Split("\n", Actualvalue);
def str = Left(Actualvalue, 6);
def line1format = false;
def line3format = false;
def TREFformat = true;
def CHGSformat = true;
def TEXTformat = true;
def format = true;
def count = 0;
def TREFcount = 0;
def CHGScount = 0;
def TEXTcount = 0;
def i = lines.Length();
if(In(str, "/REJT/", "/RETN/")) {
        if(i <= 35) {
        //if '/REJT/' or '/RETN/' format of 1st line must be "6!x2!n[1a]['/'2c]" & format of 2nd line must be "('/'2!c 2!n'/')[44x]" or "('/X'1c2!n'/')[44x]"
            //if format of 2nd line is "('/'2!c 2!n'/')" then the 6 characters must be one of the codes given below
            line1format = (VerifyFormat(lines[0], "6!x2!n[1a]['/'2c]"));
            if(line1format && lines.Length() > 2) {
            if(!lines[1].StartsWith("/X")) {
                if(VerifyFormat(lines[1], "('/'2!c 2!n'/')[44x]")) {
                    def startStr = lines[1].Left(6);
                    if((!In(startStr, "/AC01/", "/AC02/", "/AC03/", "/AC04/", "/AC05/", "/AC06/", 
                            "/AM01/", "/AM02/", "/AM03/", "/AM04/", "/AM05/", "/AM06/", "/AM07/", 
                            "/AM08/", "/AG01/", "/AG02/", "/BE01/", "/BE02/", "/BE03/", "/BE04/", 
                            "/BE05/", "/DT01/", "/MS01/", "/PY01/", "/RC01/", "/RC02/", "/RC03/", 
                            "/RC04/", "/RF01/", "/TM01/", "/RR01/", "/RR02/", "/RR03/")))
                        return false;
                }
                else
                        return false;
                }
            else if(lines[1].StartsWith("/X") && !VerifyFormat(lines[1], "('/X'1c2!n'/')[44x]"))
                    return false;
            }
            else
                return false;
            //Line3 is mandatory and should have the format "/MREF/16x". Lines 4, 5 and 6 are optional
            //If lines 4, 5 or 6 or any combination exists and if the first 6 characters starts with either '/TREF/' or '/CHGS/' or '/TEXT/' or '//'
            //it should satisfy the format given. Also if line starts with '//' it can appear a max of 31 times
            line3format = Equal(Left(lines[2], 6), "/MREF/") && 
                            VerifyFormat(Substring(lines[2], 6), "16x");
            if(line3format) {
                while(i > 3) {
                    def str1 = Left(lines[i - 1], 6);
                    def str2 = Substring(lines[i - 1], 6);
                if(In(str1, "/TREF/", "/CHGS/", "/TEXT/") || StartsWith(lines[i - 1], "//")) {
                        if(str1 == "/TREF/") {
                            TREFformat = VerifyFormat(str2, "16x");
                            TREFcount += 1;
                        }
                        else if(str1 == "/CHGS/") {
                            CHGSformat = (VerifyFormat(str2, "3!a15d") && 
                                        IsISOCurrencyCode(Substring(lines[i - 1], 6, 3)));
                            CHGScount += 1;
                        }
                        else if(str1 == "/TEXT/") {
                            TEXTformat = (VerifyFormat(str2, "44x"));
                            TEXTcount += 1;
                        }
                        else if(StartsWith(lines[i - 1], "//")) {
                            def str3 = Substring(lines[i - 1], 2);
                            format = (VerifyFormat(str3, "48x"));
                            count += 1;
                            if(!format || count > 31)
                                break;
                        }
                    }
                    else
                        return false;
                    i = i - 1;
                }
            }
            else
                return false;
        if(!TREFformat || !CHGSformat || !TEXTformat || !format || count > 31 || TREFcount > 1 || 
             CHGScount > 1 || TEXTcount > 1)
                return false;
        }
        else
            return false;
}
return true;
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T80</error-code>
						<actionmessage><![CDATA["Field 79 Reject/Return: code word error, or mandatory code word missing, or code word not in the proper sequence or format 35*50 not satisfied"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>ERI</name>
						<fieldname>79.Narrative</fieldname>
						<formula><![CDATA[ApplyERICodeValidationUnstructured($value);]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T47</error-code>
						<actionmessage><![CDATA["In an ERI field (i.e. fields 61, 72, 77A, 79, 86) the data part of a code word /OCMT/, or /CHGS/, is being validated, but the ending separator (i.e. third slash) is missing or the code words are duplicated."]]></actionmessage>
					</fieldvalidation>
				</fieldvalidations>
			</datavalidationrules>
			<tlrvalidationrules>
				<fieldvalidations>
				</fieldvalidations>
			</tlrvalidationrules>
		</validationrules>
		<elementproperties>
			<propertymap>
				<property name="codegen.java.properties">
					<value>
						<propertymap type="com.tplus.transform.design.PropertiesDef">
							<property name="Java Package Name" value="com.transform.external.%e"/>
							<property name="Jar Name" value="%c.jar"/>
							<property name="Manifest Entries" value="transformrt.jar swiftrt.jar swiftresources.jar"/>
							<property name="Data Source" value=""/>
						</propertymap>
					</value>
				</property>
			</propertymap>
		</elementproperties>
	</externalmessage>
	<externalmessage xsi:type="SwiftFormat" type="SwiftFormat" version="5.1.2" rulename="MT200_2016" formattype="SwiftFormat" >
		<description><![CDATA[This message type is sent by an account owner to one of its account servicing institutions. 

It is used to request the movement of funds from an account that the Receiver services for the Sender to an account that the Sender has, in the same currency, with another financial institution.]]></description>
		<standard>SWIFT</standard>
		<standard-name>MT200</standard-name>
		<standard-version>SRG 2016</standard-version>
		<standard-release-qualifier>20160308</standard-release-qualifier>
		<standard-category>Financial Institution Transfers</standard-category>
		<standard-detailed-name>Financial Institution Transfer for its Own Account</standard-detailed-name>
		<version>1.0</version>
		<SwiftFields>
			<customizable>true</customizable>
			<modifiable>false</modifiable>
			<SwiftMessageType>User</SwiftMessageType>
			<max-length>2000</max-length>
			<HeaderAndTrailerType>SWIFT_INPUT_OUTPUT_HEADER</HeaderAndTrailerType>
			<Header>
				<fields>
					<field>
						<name>Basic Header</name>
						<description><![CDATA[The Basic Header is given in Block 1 of a SWIFT message and is the only header that appears on all messages. The Basic Header provides the fundamental reference for any particular message and is almost always automatically built by the CBT.
The Basic Header has the same format for both input and output messages. However, the information contained in the Basic Header is relative to the sender when the message is input but relative to the receiver when the same message is output.]]></description>
						<datatype>Section</datatype>
						<required>true</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Application Identifier</name>
								<description><![CDATA[The Application Identifier identifies the application within which the message is being sent or received. The available options are:

F = FIN All user-to-user, FIN system and FIN service messages 
A = GPA Most GPA system and service messages 
L = GPA Certain GPA service messages, for example, LOGIN, LAKs, ABORT 

These values are automatically assigned by the SWIFT system and the user's CBT, but the user should be aware of their existence and significance
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Service Identifier</name>
								<description><![CDATA[The Service Identifier consists of 2 numeric characters. It identifies the type of data that is being sent or received and, in doing so, whether the message which follows is one of the following:

a user-to-user message

a system message

a service message, for example, a session control command, such as SELECT, or a logical acknowledgement, such as ACK/SAK/UAK

Users will be primarily concerned with identifier '01' which applies to all GPA and FIN system and user-to-user messages. Other values include: '21' for message acknowledgements such as ACK/NAK, UAK/UNK, '03' for SELECT commands, and 
so on]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>2</length>
							</field>
							<field>
								<name>LT Identifier</name>
								<description><![CDATA[This 12-character SWIFT address, given in the Basic Header Block, is the address of the sending LT for input messages or of the receiving LT for output messages, and includes the Branch Code.

In the Basic Header, the LT Code within the LT Identifier is specific to the LT that has established the session in which the message is being transmitted, that is the sending LT for input messages or the receiving LT for output messages.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>12</length>
							</field>
							<field>
								<name>Session Number</name>
								<description><![CDATA[The Session Number identifies the session in which the message was transmitted. Within the Basic Header, the 4-digit Session Number is the user's current GPA or FIN Session Number.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Sequence Number</name>
								<description><![CDATA[The sequence number always consists of 6 digits. It is the ISN of the sender's current input session or the OSN of the receiver's current output session.

Note: The sequence number is not present in those messages with an Application Identifier of 'L' (for example LOGIN). The sequence number is, however, a key element in the processing of retrievals. Therefore, LOGINs and attempted LOGINs are not retrievable
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>6</length>
							</field>
						</fields>
					</field>
					<field>
						<name>Application Header Input</name>
						<description><![CDATA[The Application Header of a SWIFT message provides information about the message itself.

The Application Header is given in Block 2 of a SWIFT message. It differs according to whether the message is a GPA or a FIN message and whether the Application Header is part of an input or an output message.

]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Input/Output Identifier</name>
								<description><![CDATA[For an input message, the Input/Output Identifier consists of the single letter 'I'.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Message Type</name>
								<description><![CDATA[The Message Type consists of 3 digits which define the MT number of the message being input. The example used above is for an MT 100 Customer Transfer]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>3</length>
							</field>
							<field>
								<name>Receiver's Address</name>
								<description><![CDATA[This address is the 12-character SWIFT address of the receiver of the message, but with a LT Code of 'X'. It defines the destination to which the message should be sent.

The system will replace the 'X' with a specific LT Code on delivery of the message according to the delivery control exercised by the receiving user.

The Branch Code is mandatory and will be validated. The default of 'XXX' may be used, as in the example above.

Unless otherwise documented, system messages addressed to the SWIFT system itself should be addressed to SWFTXXXXXXXX.

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>12</length>
							</field>
							<field>
								<name>Message Priority</name>
								<description><![CDATA[This character, used within FIN Application Headers only, defines the priority with which a message is delivered. The possible values are:

S = System

U = Urgent

N = Normal

Message Priority 'S' must be used for user-to-system messages; for user-to-user messages either 'U' or 'N' can be used. In the absence of user-specified delivery criteria, system messages are always delivered first, followed by urgent priority messages and then normal priority messages.

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Delivery Monitoring</name>
								<description><![CDATA[Delivery monitoring options apply only to FIN user-to-user messages, and allow the sender of a message to request:

automatic MT 011 Delivery Notification once the message has been delivered

automatic MT 010 Non-Delivery Warning if a message is not delivered within the specified obsolescence period (see below)

both, or neither, options. This may be requested on an individual message basis.

The chosen option is expressed as a single digit:

1 = Non-Delivery Warning

2 = Delivery Notification

3 = Non-Delivery Warning and Delivery Notification. 
If the message has priority 'U' then the user must request delivery monitoring option '1' or '3'. If the message has priority 'N', the user can request delivery monitoring option '2', or, by leaving the option blank, no delivery monitoring.
]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>1</length>
							</field>
							<field>
								<name>Obsolescence Period</name>
								<description><![CDATA[The obsolescence period defines the period of time after which a Delayed Message (DLM) trailer is added to a FIN user-to-user message when the message is delivered. For urgent priority messages, it is also the period of time after which, if the message remains undelivered, a Non-Delivery Warning is generated.

The values for the obsolescence period are 003 (15 minutes) for 'U' priority, and 020 (100 minutes) for 'N' priority. An obsolescence period can only be specified when delivery monitoring has been requested (option 1 or 3 for urgent priority messages, option 2 for normal priority messages). If no delivery monitoring has been requested, and an obsolescence period is specified, the message will be NAKed with error code H25.

GPA input Application Headers are similar to their FIN equivalents except that GPA messages do not specify priority, delivery monitoring, nor obsolescence period.

]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>3</length>
							</field>
						</fields>
					</field>
					<field>
						<name>Application Header Output</name>
						<description><![CDATA[The Application Header of a SWIFT message provides information about the message itself.

The Application Header is given in Block 2 of a SWIFT message. It differs according to whether the message is a GPA or a FIN message and whether the Application Header is part of an input or an output message.

]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Input/Output Identifier</name>
								<description><![CDATA[For an input message, the Input/Output Identifier consists of the single letter 'I'.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Message Type</name>
								<description><![CDATA[Three digits indicating the Message Type.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>3</length>
							</field>
							<field>
								<name>Input Time</name>
								<description><![CDATA[The first occurrence of the time field contains the system time and date. This is the generation time in Greenwich Mean Time (GMT).
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Message Input Reference</name>
								<description><![CDATA[The input MIR.

If the message is generated by the system, the input time is the generation time (in GMT) and the input MIR is the system MIR

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>28</length>
							</field>
							<field>
								<name>Output Date</name>
								<description><![CDATA[The output date, local to the receiver.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>6</length>
							</field>
							<field>
								<name>Output Time</name>
								<description><![CDATA[The second occurrence of the time field contains the output time and date. This is in a time local to the receiver.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Message Priority</name>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
						</fields>
					</field>
					<field>
						<name>User Header</name>
						<description><![CDATA[The User Header is an optional header available within FIN for user-to-user messages only. It appears in Block 3 of a SWIFT message, and allows users to provide their own reference within the headers for a particular message.

A User Header can only be assigned by the sender of a message and, if assigned, will always appear on the output message copy. Relevant parts of the User Header will be repeated in related system messages and acknowledgements.

Block 3 may contain tag 113, defining banking priorities, and tag 108, which is a user reference. The user reference part of the User Header may be used as one of the selection criteria when retrieving a message.

The optional field tags 103 and 115 are also used in Block 3 for the FIN Copy service. The order of tags, when present, is 103, 113, 108 and 115.

An optional field tag 119 can be included in Block 3 of certain messages to specify that different validation rules are to be applied. Agreed code words in field 119 indicate what validation rules SWIFT will apply. If field 119 is present, it should appear after field 108
]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Service Identifier</name>
								<description><![CDATA[For any message which the user submits to a FIN Copy service, Block 3 requires an additional field 103 which contains a three-character Service Identifier unique to a specific FIN Copy service. By using a unique identifier it is possible to support access to multiple services within the same CBT.
]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>3</length>
								<tag>103</tag>
							</field>
							<field>
								<name>Banking Priority</name>
								<description><![CDATA[Assigned by the sender of the message.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>4</length>
								<tag>113</tag>
							</field>
							<field>
								<name>Message User Reference</name>
								<description><![CDATA[Assigned by the sender of the message.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>16</length>
								<tag>108</tag>
							</field>
							<field>
								<name>Validation Flag</name>
								<description><![CDATA[Indicates whether a special validation needs to be performed by FIN. The following are examples of the values this field may take. Please note that this list is subject to change:

ISITC indicates validation of ISITC Standards. Only to be used with MT 521 and MT 523.

REMIT identifies the presence of field 77T. Only to be used in MT 103.

RFDD indicates that the message is a request for direct debit. Only to be used in MT 104.

STP indicates that the message is validated according to straight through processing principles. Only to be used in MT 103.

]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>119</tag>
							</field>
							<field>
								<name>Balance checkpoint date and time</name>
								<description><![CDATA[This field contains the balance checkpoint date and time consisting of a date (YYMMDD) and a time (HHMMSS[ss], where 'ss' indicates hundredths of a second). The MI that is subscribed to MIRS will always copy this reference from field tag 13G of the last MT298/091 that it sent into the related MT 298/093 or MT 097 that it generates. ]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>423</tag>
							</field>
							<field>
								<name>Message Input Reference</name>
								<description><![CDATA[This field contains the MIR of the payment message that is related to the notification messages in which this field is present. The MI that is subscribed to MIRS will copy it from the received payment message. In a FINCopy scenario, this field must contain the MIR of the related MT 096]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>106</tag>
							</field>
							<field>
								<name>Related Reference</name>
								<description><![CDATA[This field contains the reference of the payment that is related to the notification messages in which this field is present. The payment itself was not the result of a FIN message. The value of this field must correspond to the related reference (field 21) in the MT298/093. The format of field 424 is 16x.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>424</tag>
							</field>
							<field>
								<name>Service Type Identifier</name>
								<description><![CDATA[This field identifies the applicable global payment service type. The format of field 111 is 3!n.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>111</tag>
							</field>
							<field>
								<name>Unique End-To-End Transaction Reference</name>
								<description><![CDATA[This field provides an end-to-end reference across a payment transaction. The format of field 121 is 36!x.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>121</tag>
							</field>
							<field>
								<name>Addressee Information</name>
								<description><![CDATA[Tag 115 is only valid for output messages. Information from Central Institution to the receiver of payment message. Information is input in the MT 097 FIN Copy Message Authorisation/Refusal Notification in Y-Copy mode.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>115</tag>
							</field>
							<field>
								<name>Payment Release Information Receiver (FINInform Services)</name>
								<description><![CDATA[Tag 165 is only valid for output messages. This field contains information from the server destination to the receiver of payment message. It is only available for use in FINInform services that operate in Y-copy mode.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>165</tag>
							</field>
							<field>
								<name>Receiver Information</name>
								<description><![CDATA[Tag 433 is only valid for output messages. The screening service inputs information in the MT 097 FINCopy Message Authorisation/Refusal Notification, in Y-Copy mode. FINCopy copies the information to the receiver of the screened message.
				    The following values can be present in this field:
				      AOK: message automatically released by screening service
				      FPO: compliance officer has flagged the screening result as false positive
				      NOK: compliance officer has flagged the screened message as suspect
				    The code word can optionally be followed by additional information (up to 20 characters from the x character set).]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>433</tag>
							</field>
						</fields>
					</field>
				</fields>
			</Header>
			<Data>
				<Fields>
					<SwiftField Name="20">
						<SwiftFieldDef Name="20">
							<Generic>false</Generic>
							<Description><![CDATA[Reference]]></Description>
							<Option Name="">
								<Format><![CDATA[16x]]></Format>
								<Specification><![CDATA[(Transaction Reference)]]></Specification>
								<Description><![CDATA[Transaction Reference Number]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options> </Options>
						<Validations>
							<SubField Name="Transaction_Reference">
								<Validation>
									<Options> </Options>
									<ErrorCode>T26</ErrorCode>
									<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive slashes '//'(Error code(s): T26).]]></Comment>
									<ValidationPattern xsi:type="T26" Type="T26">
										<Type>T26</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="32A">
						<SwiftFieldDef Name="32">
							<Generic>false</Generic>
							<Description><![CDATA[Amount]]></Description>
							<Option Name="A">
								<Format><![CDATA[6!n3!a15d]]></Format>
								<Specification><![CDATA[(Date) (Currency) (Amount)]]></Specification>
								<Description><![CDATA[Value Date, Currency Code, Amount]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options>A</Options>
						<Validations>
							<SubField Name="Date">
								<Validation>
									<Options>A</Options>
									<ErrorCode>T50</ErrorCode>
									<Comment><![CDATA[Date must be a valid date expressed as YYMMDD (Error code(s): T50).]]></Comment>
									<ValidationPattern xsi:type="DATE" Type="DATE">
										<Type>DATE</Type>
										<Format>yyMMdd</Format>
										<value-date>true</value-date>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="Currency">
								<Validation>
									<Options>A</Options>
									<ErrorCode>T52</ErrorCode>
									<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52).]]></Comment>
									<ValidationPattern xsi:type="Currency_Code" Type="Currency Code">
										<Type>Currency Code</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="Amount">
								<Validation>
									<Options>A</Options>
									<ErrorCode>C03</ErrorCode>
									<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency.]]></Comment>
									<ValidationPattern xsi:type="Decimal" Type="Decimal">
										<Type>Decimal</Type>
										<currency-field>Currency</currency-field>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="53B">
						<SwiftFieldDef Name="53">
							<Generic>false</Generic>
							<Option Name="B">
								<Format><![CDATA[/1!a[/34x](CRLF35x) | /1!a[/34x] | [/34xCRLF]35x | /34x]]></Format>
								<Specification><![CDATA[(CreditDebit) (Party Identifier) (Location) | (CreditDebit)(Party Identifier) |(Party Identifier) (Location) | (Party Identifier)]]></Specification>
								<Description><![CDATA[Sender's Correspondent]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options>B</Options>
						<Validations>
							<SubField Name="CreditDebit">
								<Validation>
									<Options>B</Options>
									<ErrorCode>T51</ErrorCode>
									<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
									<ValidationPattern xsi:type="CODE" Type="CODE">
										<Type>CODE</Type>
										<Codes>
											<Code Name="C">
												<DetailedName>Credit</DetailedName>
											</Code>
											<Code Name="D">
												<DetailedName>Debit</DetailedName>
											</Code>
										</Codes>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="56a">
						<SwiftFieldDef Name="56">
							<Generic>false</Generic>
							<Option Name="A">
								<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
								<Description><![CDATA[Intermediary]]></Description>
							</Option>
							<Option Name="D">
								<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
								<Description><![CDATA[Intermediary]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options>A, D</Options>
						<Validations>
							<SubField Name="Identifier_Code">
								<Validation>
									<Options>A</Options>
									<ErrorCode>T27, T28, T29, T45</ErrorCode>
									<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
									<ValidationPattern xsi:type="BIC" Type="BIC">
										<Type>BIC</Type>
									</ValidationPattern>
								</Validation>
								<Validation>
									<Options>A</Options>
									<ErrorCode>C05</ErrorCode>
									<Comment><![CDATA[Identifier Code must not be a BEI, ie must not be of subtype BEID, MCCO, TESP or TRCO]]></Comment>
									<ValidationPattern xsi:type="C05" Type="C05">
										<Type>C05</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="CreditDebit">
								<Validation>
									<Options>A, D</Options>
									<ErrorCode>T51</ErrorCode>
									<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
									<ValidationPattern xsi:type="CODE" Type="CODE">
										<Type>CODE</Type>
										<Codes>
											<Code Name="C">
												<DetailedName>Credit</DetailedName>
											</Code>
											<Code Name="D">
												<DetailedName>Debit</DetailedName>
											</Code>
										</Codes>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="57a">
						<SwiftFieldDef Name="57">
							<Generic>false</Generic>
							<Option Name="A">
								<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
								<Description><![CDATA[Account With Institution]]></Description>
							</Option>
							<Option Name="B">
								<Format><![CDATA[/1!a[/34x](CRLF35x) | /1!a[/34x] | [/34xCRLF]35x | /34x]]></Format>
								<Specification><![CDATA[(CreditDebit) (Party Identifier) (Location) | (CreditDebit)(Party Identifier) |(Party Identifier) (Location) | (Party Identifier)]]></Specification>
								<Description><![CDATA[Account With Institution]]></Description>
							</Option>
							<Option Name="D">
								<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
								<Description><![CDATA[Account With Institution]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options>A, B, D</Options>
						<Validations>
							<SubField Name="Identifier_Code">
								<Validation>
									<Options>A</Options>
									<ErrorCode>T27, T28, T29, T45</ErrorCode>
									<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
									<ValidationPattern xsi:type="BIC" Type="BIC">
										<Type>BIC</Type>
									</ValidationPattern>
								</Validation>
								<Validation>
									<Options>A</Options>
									<ErrorCode>C05</ErrorCode>
									<Comment><![CDATA[Identifier Code must not be a BEI, ie must not be of subtype BEID, MCCO, TESP or TRCO]]></Comment>
									<ValidationPattern xsi:type="C05" Type="C05">
										<Type>C05</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="CreditDebit">
								<Validation>
									<Options>A, B, D</Options>
									<ErrorCode>T51</ErrorCode>
									<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
									<ValidationPattern xsi:type="CODE" Type="CODE">
										<Type>CODE</Type>
										<Codes>
											<Code Name="C">
												<DetailedName>Credit</DetailedName>
											</Code>
											<Code Name="D">
												<DetailedName>Debit</DetailedName>
											</Code>
										</Codes>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="72">
						<SwiftFieldDef Name="72">
							<Generic>false</Generic>
							<Description><![CDATA[Sender to Receiver Information]]></Description>
							<Option Name="">
								<Format><![CDATA[6*35x]]></Format>
								<Specification><![CDATA[(Narrative - Structured Format)]]></Specification>
								<Description><![CDATA[Sender to Receiver Information]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options> </Options>
					</SwiftField>
				</Fields>
			</Data>
			<Trailer>
				<fields>
					<field>
						<name>Message Authentication Code</name>
						<description><![CDATA[Allows authentication by the receiving user. It is followed by an authentication result.

This trailer is mandatory for most user-to-user message categories within the FIN application. When the FIN Copy Service is used a PAC trailer, if present, follows the MAC trailer.

Format:

{MAC:<authentication-result>}

where <authentication-result> = 8!h

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>8</length>
						<tag>MAC</tag>
					</field>
					<field>
						<name>Proprietary Authentication Code</name>
						<description><![CDATA[The PAC is used within the FIN Copy service only, when using the double authentication option. The PAC is included in Block 5 of FIN user-to-user messages, immediately after the MAC trailer, if present.

This is calculated on the extracted fields of Block 4 of the message, the value of field 115, if present, and the <authentication-result> of the MAC trailer for Copy Services with double authentication.

Thus, the end-of-block indicator (CrLf-) is included in the PAC calculation, and the fields are defined as follows:

The first three characters are CrLf:

The field and the delimiter are present, that is, 32A:, 20:, and so on.

All subfields and their delimiters are present.

Format:

{PAC:[<authentication-result>]}

where <authentication-result> is mandatory on input messages only and <authentication-result> = 8!h

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>8</length>
						<tag>PAC</tag>
					</field>
					<field>
						<name>Checksum</name>
						<description><![CDATA[The checksum is computed based on the receiver's address (12 characters, with 9th character replaced by X) plus the Text Block. This trailer allows the system and the CBT to check that messages have not been corrupted due to a system malfunction or an undetected transmission error.

Format:

{CHK:<checksum-result>}

where <checksum-result> = 12!h

Note: This trailer is mandatory for FIN and GPA messages (Service Identifier 01).

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>12</length>
						<tag>CHK</tag>
					</field>
					<field>
						<name>System Originated Message</name>
						<description><![CDATA[The system message or service message which is generated by a system PLT has a SYS trailer. All solicited system messages (Service Identifier 01) contain the MIR of the request and may also contain the time.

Format:

{SYS:[<time><mir>]}

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>SYS</tag>
					</field>
					<field>
						<name>Test And Training Message</name>
						<description><![CDATA[Mandatory for FIN and GPA messages (Service Identifier 01) sent by, or delivered to, a Test & Training Logical Terminal (LT). This trailer has a tag only, and no value.

Format:

{TNG:}
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>0</length>
						<tag>TNG</tag>
					</field>
					<field>
						<name>Possible Duplicate Emission</name>
						<description><![CDATA[This trailer is used by the destination of the message. It only applies to FIN user-to-user messages (Service Identifier 01, message categories reserved for banking messages). There can be multiple PDEs. The system does not verify the order nor restrict the number (except for maximum message length).

Correctly formatted PDE trailers applied to user-to-system messages are accepted by the system, but not processed. This means that the system does not check to see if the original message exists. Therefore, a retrieval request sent with a PDE trailer may be processed twice if the original message was received by the system.

Format:

{PDE:[<time><mir>]}

where <time><mir> refers to the emission of the previous possible issue.

Note: It can be added automatically by a CBT or manually by a user. It may be followed by the MIR and the time of its previous possible messages.

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>PDE</tag>
					</field>
					<field>
						<name>Delayed Message</name>
						<description><![CDATA[This trailer is added to all FIN user-to-user output messages that have exceeded their obsolescence period. If this trailer appears in GPA or FIN system messages, it must be ignored. This trailer has a tag only, and no value.

The Obsolescence Period is:

U = 15 minutes

N = 100 minutes

Format:

{DLM:}

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>0</length>
						<tag>DLM</tag>
					</field>
					<field>
						<name>Possible Duplicate Message</name>
						<description><![CDATA[Added by the system to any output message (GPA and FIN Service Identifier 01) being resent because a prior delivery may be invalid. If a system PLT receives a report request with a PDM, the response has a plain PDM (without the optional delivery reference). Other PDMs may be added as a result of unsuccessful delivery attempts to the user. 
Format:
{PDM:[<time><mor>]}
where <time> and the Message Output Reference <mor> are that of the previous attempt.
Note: For messages recovered after a system failure, the optional fields may not be present.
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>PDM</tag>
					</field>
					<field>
						<name>Message Reference</name>
						<description><![CDATA[The MRF trailer is used to specify the message reference of the original user message in MT 096 FIN Copy to Central Institution Messages.
Format:
{MRF:<date><full-time><mir>}
where <mir> is that of the original user message whose fields are copied in the MT 096 FIN Copy to Central Institution Message.
Note: The MRF is specific to FIN Copy. The MRF trailer is automatically generated in the MT 096 FIN Copy to Central Institution Message and can only be reused in field 109 of the MT 096 FIN Copy to Central Institution Message to identify the MT 096 to which the MT 097 is a response. The format of the MRF is subject to change.
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>MRF</tag>
					</field>
				</fields>
			</Trailer>
		</SwiftFields>
		<validationrules name="Default">
			<hdrvalidationrules>
				<fieldvalidations>
					<fieldvalidation>
						<name>U09</name>
						<formula><![CDATA[if($this.Header.GetFieldIndex("User_Header") != -1) {
    def userHeader = $this.Header.GetSection("User_Header");
    if(userHeader.$size > 0 && userHeader[0].IsNotNull("Validation_Flag")) {
        return false;
    }
}
return true;
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U09</error-code>
						<actionmessage><![CDATA["User has used tag 119 in a message that is not a candidate for special processing"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>U03</name>
						<fieldname>User Header</fieldname>
						<formula><![CDATA[Iff(IsNotNull(User_Header.Service_Type_Identifier), 
    IsNotNull(User_Header.Unique_End_To_End_Transaction_Reference))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U03</error-code>
						<actionmessage><![CDATA["When populating an end-to-end reference, both fields 111 and 121 must be populated: a message that contains only one of these two fields will not be accepted by FIN."]]></actionmessage>
					</fieldvalidation>
				</fieldvalidations>
			</hdrvalidationrules>
			<datavalidationrules>
				<fieldvalidations>
					<fieldvalidation>
						<name>F72-A</name>
						<fieldname>72.Narrative_-_Structured_Format</fieldname>
						<formula><![CDATA[VerifyField72NarrativeText($value)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T32</error-code>
						<actionmessage><![CDATA["The first line of field 72 should be of the following format: /8c/[additional information]. The remaining lines (2 - 6) should be of the following format: [//continuation of additional information] or [/8c/[additional information]]."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>ERI</name>
						<comment><![CDATA["For specific message types, an European currency must not be used as the currency of settlement after a cut-off date (Error Code: E76)."]]></comment>
						<formula><![CDATA[applyERIValidation(F32A[0], "Date", F32A[0], "Currency")]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E76</error-code>
						<actionmessage><![CDATA["For specific message types, an European currency must not be used as the currency of settlement after a cut-off date (Error Code: E76)."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>ERI-2</name>
						<fieldname>72.Narrative_-_Structured_Format</fieldname>
						<formula><![CDATA[ApplyERICodeValidationStructured($value);]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T47</error-code>
						<actionmessage><![CDATA["In an ERI field (i.e. fields 61, 72, 77A, 79, 86) the data part of a code word /OCMT/, or /CHGS/, is being validated, but the ending separator (i.e. third slash) is missing or the code words are duplicated."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F72-B</name>
						<fieldname>72.Narrative_-_Structured_Format</fieldname>
						<formula><![CDATA[def Actualvalue = replace($value, "\r\n", "\n");
def lines = Split("\n", Actualvalue);
def str = Left(Actualvalue, 6);
def line1format = false;
def line3format = false;
def TREFformat = true;
def CHGSformat = true;
def TEXTformat = true;
def format = true;
def count = 0;
def TREFcount = 0;
def CHGScount = 0;
def TEXTcount = 0;
def i = lines.Length();
if(In(str, "/REJT/", "/RETN/")) {
    if(i <= 6) {
        //if '/REJT/' or '/RETN/' format of 1st line must be "6!x2!n[1a]['/'2c]" & format of 2nd line must be "('/'2!c 2!n'/')[29x]" or "('/X'1c2!n'/')[29x]"
        //if format of 2nd line is "('/'2!c 2!n'/')" then the 6 characters must be one of the codes given below
        line1format = (VerifyFormat(lines[0], "6!x2!n[1a]['/'2c]"));
        if(line1format && lines.Length() > 2) {
            if(!lines[1].StartsWith("/X")) {
                if(VerifyFormat(lines[1], "('/'2!c 2!n'/')[29x]")) {
                	def startStr = lines[1].Left(6);
                    if((!In(startStr, "/AC01/", "/AC02/", "/AC03/", "/AC04/", "/AC05/", "/AC06/", 
                            "/AM01/", "/AM02/", "/AM03/", "/AM04/", "/AM05/", "/AM06/", "/AM07/", 
                            "/AM08/", "/AG01/", "/AG02/", "/BE01/", "/BE02/", "/BE03/", "/BE04/", 
                            "/BE05/", "/DT01/", "/MS01/", "/PY01/", "/RC01/", "/RC02/", "/RC03/", 
                            "/RC04/", "/RF01/", "/TM01/", "/RR01/", "/RR02/", "/RR03/")))
                        return false;
                }
                else
                    return false;
            }
            else if(lines[1].StartsWith("/X") && !VerifyFormat(lines[1], "('/X'1c2!n'/')[29x]"))
                return false;
        }
        else
            return false;
        //Line3 is mandatory and should have the format "/MREF/16x". Lines 4, 5 and 6 are optional
        //If lines 4, 5 or 6 or any combination exists and if the first 6 characters starts with either '/TREF/' or '/CHGS/' or '/TEXT/' or '//'
        //it should satisfy the format given. Also if line starts with '//' it can appear a max of 2 times
        line3format = Equal(Left(lines[2], 6), "/MREF/") && 
                        VerifyFormat(Substring(lines[2], 6), "16x");
        if(line3format) {
            while(i > 3) {
                def str1 = Left(lines[i - 1], 6);
                def str2 = Substring(lines[i - 1], 6);
                if(In(str1, "/TREF/", "/CHGS/", "/TEXT/") || StartsWith(lines[i - 1], "//")) {
                    if(str1 == "/TREF/") {
                        TREFformat = VerifyFormat(str2, "16x");
                        TREFcount += 1;
                    }
                    else if(str1 == "/CHGS/") {
                        CHGSformat = (VerifyFormat(str2, "3!a15d") && 
                                        IsISOCurrencyCode(Substring(lines[i - 1], 6, 3)));
                        CHGScount += 1;
                    }
                    else if(str1 == "/TEXT/") {
                        TEXTformat = (VerifyFormat(str2, "29x"));
                        TEXTcount += 1;
                    }
                    else if(StartsWith(lines[i - 1], "//")) {
                        def str3 = Substring(lines[i - 1], 2);
                        format = (VerifyFormat(str3, "33x"));
                        count += 1;
                        if(!format || count > 2)
                            break;
                    }
                }
                else
                    return false;
                i = i - 1;
            }
        }
        else
            return false;
        if(!TREFformat || !CHGSformat || !TEXTformat || !format || count > 2 || TREFcount > 1 || 
             CHGScount > 1 || TEXTcount > 1)
            return false;
    }
    else
        return false;
}
return true;
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T80</error-code>
						<actionmessage><![CDATA["Field 72 Reject/Return: code word error, or mandatory code word missing, or code word not in the proper sequence, or format 6*35x not satisfied"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F-32A</name>
						<fieldname>32A.Currency</fieldname>
						<formula><![CDATA[!In($value, "XAU", "XAG", "XPD", "XPT")]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C08</error-code>
						<actionmessage><![CDATA["The codes XAU, XAG, XPD and XPT are not allowed, as these are codes for commodities for which the category 6 commodities messages must be used."]]></actionmessage>
					</fieldvalidation>
				</fieldvalidations>
			</datavalidationrules>
			<tlrvalidationrules>
				<fieldvalidations>
				</fieldvalidations>
			</tlrvalidationrules>
		</validationrules>
		<elementproperties>
			<propertymap>
				<property name="codegen.java.properties">
					<value>
						<propertymap type="com.tplus.transform.design.PropertiesDef">
							<property name="Java Package Name" value="com.transform.external.%e"/>
							<property name="Jar Name" value="%c.jar"/>
							<property name="Manifest Entries" value="transformrt.jar swiftrt.jar swiftresources.jar"/>
							<property name="Data Source" value=""/>
						</propertymap>
					</value>
				</property>
			</propertymap>
		</elementproperties>
	</externalmessage>
	<externalmessage xsi:type="SwiftFormat" type="SwiftFormat" version="5.1.2" rulename="MT201_2016" formattype="SwiftFormat" >
		<description><![CDATA[This multiple message type is sent by an account owner to one of its account servicing institutions.

It is used to request the movement of funds from an account that the Receiver services for the Sender to several accounts that the Sender has, in the same currency, with other financial institutions.]]></description>
		<standard>SWIFT</standard>
		<standard-name>MT201</standard-name>
		<standard-version>SRG 2016</standard-version>
		<standard-release-qualifier>20160308</standard-release-qualifier>
		<standard-category>Financial Institution Transfers</standard-category>
		<standard-detailed-name>Multiple Financial Institution Transfer for its Own Account</standard-detailed-name>
		<version>1.0</version>
		<SwiftFields>
			<customizable>true</customizable>
			<modifiable>false</modifiable>
			<SwiftMessageType>User</SwiftMessageType>
			<max-length>2000</max-length>
			<HeaderAndTrailerType>SWIFT_INPUT_OUTPUT_HEADER</HeaderAndTrailerType>
			<Header>
				<fields>
					<field>
						<name>Basic Header</name>
						<description><![CDATA[The Basic Header is given in Block 1 of a SWIFT message and is the only header that appears on all messages. The Basic Header provides the fundamental reference for any particular message and is almost always automatically built by the CBT.
The Basic Header has the same format for both input and output messages. However, the information contained in the Basic Header is relative to the sender when the message is input but relative to the receiver when the same message is output.]]></description>
						<datatype>Section</datatype>
						<required>true</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Application Identifier</name>
								<description><![CDATA[The Application Identifier identifies the application within which the message is being sent or received. The available options are:

F = FIN All user-to-user, FIN system and FIN service messages 
A = GPA Most GPA system and service messages 
L = GPA Certain GPA service messages, for example, LOGIN, LAKs, ABORT 

These values are automatically assigned by the SWIFT system and the user's CBT, but the user should be aware of their existence and significance
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Service Identifier</name>
								<description><![CDATA[The Service Identifier consists of 2 numeric characters. It identifies the type of data that is being sent or received and, in doing so, whether the message which follows is one of the following:

a user-to-user message

a system message

a service message, for example, a session control command, such as SELECT, or a logical acknowledgement, such as ACK/SAK/UAK

Users will be primarily concerned with identifier '01' which applies to all GPA and FIN system and user-to-user messages. Other values include: '21' for message acknowledgements such as ACK/NAK, UAK/UNK, '03' for SELECT commands, and 
so on]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>2</length>
							</field>
							<field>
								<name>LT Identifier</name>
								<description><![CDATA[This 12-character SWIFT address, given in the Basic Header Block, is the address of the sending LT for input messages or of the receiving LT for output messages, and includes the Branch Code.

In the Basic Header, the LT Code within the LT Identifier is specific to the LT that has established the session in which the message is being transmitted, that is the sending LT for input messages or the receiving LT for output messages.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>12</length>
							</field>
							<field>
								<name>Session Number</name>
								<description><![CDATA[The Session Number identifies the session in which the message was transmitted. Within the Basic Header, the 4-digit Session Number is the user's current GPA or FIN Session Number.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Sequence Number</name>
								<description><![CDATA[The sequence number always consists of 6 digits. It is the ISN of the sender's current input session or the OSN of the receiver's current output session.

Note: The sequence number is not present in those messages with an Application Identifier of 'L' (for example LOGIN). The sequence number is, however, a key element in the processing of retrievals. Therefore, LOGINs and attempted LOGINs are not retrievable
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>6</length>
							</field>
						</fields>
					</field>
					<field>
						<name>Application Header Input</name>
						<description><![CDATA[The Application Header of a SWIFT message provides information about the message itself.

The Application Header is given in Block 2 of a SWIFT message. It differs according to whether the message is a GPA or a FIN message and whether the Application Header is part of an input or an output message.

]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Input/Output Identifier</name>
								<description><![CDATA[For an input message, the Input/Output Identifier consists of the single letter 'I'.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Message Type</name>
								<description><![CDATA[The Message Type consists of 3 digits which define the MT number of the message being input. The example used above is for an MT 100 Customer Transfer]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>3</length>
							</field>
							<field>
								<name>Receiver's Address</name>
								<description><![CDATA[This address is the 12-character SWIFT address of the receiver of the message, but with a LT Code of 'X'. It defines the destination to which the message should be sent.

The system will replace the 'X' with a specific LT Code on delivery of the message according to the delivery control exercised by the receiving user.

The Branch Code is mandatory and will be validated. The default of 'XXX' may be used, as in the example above.

Unless otherwise documented, system messages addressed to the SWIFT system itself should be addressed to SWFTXXXXXXXX.

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>12</length>
							</field>
							<field>
								<name>Message Priority</name>
								<description><![CDATA[This character, used within FIN Application Headers only, defines the priority with which a message is delivered. The possible values are:

S = System

U = Urgent

N = Normal

Message Priority 'S' must be used for user-to-system messages; for user-to-user messages either 'U' or 'N' can be used. In the absence of user-specified delivery criteria, system messages are always delivered first, followed by urgent priority messages and then normal priority messages.

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Delivery Monitoring</name>
								<description><![CDATA[Delivery monitoring options apply only to FIN user-to-user messages, and allow the sender of a message to request:

automatic MT 011 Delivery Notification once the message has been delivered

automatic MT 010 Non-Delivery Warning if a message is not delivered within the specified obsolescence period (see below)

both, or neither, options. This may be requested on an individual message basis.

The chosen option is expressed as a single digit:

1 = Non-Delivery Warning

2 = Delivery Notification

3 = Non-Delivery Warning and Delivery Notification. 
If the message has priority 'U' then the user must request delivery monitoring option '1' or '3'. If the message has priority 'N', the user can request delivery monitoring option '2', or, by leaving the option blank, no delivery monitoring.
]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>1</length>
							</field>
							<field>
								<name>Obsolescence Period</name>
								<description><![CDATA[The obsolescence period defines the period of time after which a Delayed Message (DLM) trailer is added to a FIN user-to-user message when the message is delivered. For urgent priority messages, it is also the period of time after which, if the message remains undelivered, a Non-Delivery Warning is generated.

The values for the obsolescence period are 003 (15 minutes) for 'U' priority, and 020 (100 minutes) for 'N' priority. An obsolescence period can only be specified when delivery monitoring has been requested (option 1 or 3 for urgent priority messages, option 2 for normal priority messages). If no delivery monitoring has been requested, and an obsolescence period is specified, the message will be NAKed with error code H25.

GPA input Application Headers are similar to their FIN equivalents except that GPA messages do not specify priority, delivery monitoring, nor obsolescence period.

]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>3</length>
							</field>
						</fields>
					</field>
					<field>
						<name>Application Header Output</name>
						<description><![CDATA[The Application Header of a SWIFT message provides information about the message itself.

The Application Header is given in Block 2 of a SWIFT message. It differs according to whether the message is a GPA or a FIN message and whether the Application Header is part of an input or an output message.

]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Input/Output Identifier</name>
								<description><![CDATA[For an input message, the Input/Output Identifier consists of the single letter 'I'.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Message Type</name>
								<description><![CDATA[Three digits indicating the Message Type.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>3</length>
							</field>
							<field>
								<name>Input Time</name>
								<description><![CDATA[The first occurrence of the time field contains the system time and date. This is the generation time in Greenwich Mean Time (GMT).
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Message Input Reference</name>
								<description><![CDATA[The input MIR.

If the message is generated by the system, the input time is the generation time (in GMT) and the input MIR is the system MIR

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>28</length>
							</field>
							<field>
								<name>Output Date</name>
								<description><![CDATA[The output date, local to the receiver.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>6</length>
							</field>
							<field>
								<name>Output Time</name>
								<description><![CDATA[The second occurrence of the time field contains the output time and date. This is in a time local to the receiver.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Message Priority</name>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
						</fields>
					</field>
					<field>
						<name>User Header</name>
						<description><![CDATA[The User Header is an optional header available within FIN for user-to-user messages only. It appears in Block 3 of a SWIFT message, and allows users to provide their own reference within the headers for a particular message.

A User Header can only be assigned by the sender of a message and, if assigned, will always appear on the output message copy. Relevant parts of the User Header will be repeated in related system messages and acknowledgements.

Block 3 may contain tag 113, defining banking priorities, and tag 108, which is a user reference. The user reference part of the User Header may be used as one of the selection criteria when retrieving a message.

The optional field tags 103 and 115 are also used in Block 3 for the FIN Copy service. The order of tags, when present, is 103, 113, 108 and 115.

An optional field tag 119 can be included in Block 3 of certain messages to specify that different validation rules are to be applied. Agreed code words in field 119 indicate what validation rules SWIFT will apply. If field 119 is present, it should appear after field 108
]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Service Identifier</name>
								<description><![CDATA[For any message which the user submits to a FIN Copy service, Block 3 requires an additional field 103 which contains a three-character Service Identifier unique to a specific FIN Copy service. By using a unique identifier it is possible to support access to multiple services within the same CBT.
]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>3</length>
								<tag>103</tag>
							</field>
							<field>
								<name>Banking Priority</name>
								<description><![CDATA[Assigned by the sender of the message.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>4</length>
								<tag>113</tag>
							</field>
							<field>
								<name>Message User Reference</name>
								<description><![CDATA[Assigned by the sender of the message.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>16</length>
								<tag>108</tag>
							</field>
							<field>
								<name>Validation Flag</name>
								<description><![CDATA[Indicates whether a special validation needs to be performed by FIN. The following are examples of the values this field may take. Please note that this list is subject to change:

ISITC indicates validation of ISITC Standards. Only to be used with MT 521 and MT 523.

REMIT identifies the presence of field 77T. Only to be used in MT 103.

RFDD indicates that the message is a request for direct debit. Only to be used in MT 104.

STP indicates that the message is validated according to straight through processing principles. Only to be used in MT 103.

]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>119</tag>
							</field>
							<field>
								<name>Balance checkpoint date and time</name>
								<description><![CDATA[This field contains the balance checkpoint date and time consisting of a date (YYMMDD) and a time (HHMMSS[ss], where 'ss' indicates hundredths of a second). The MI that is subscribed to MIRS will always copy this reference from field tag 13G of the last MT298/091 that it sent into the related MT 298/093 or MT 097 that it generates. ]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>423</tag>
							</field>
							<field>
								<name>Message Input Reference</name>
								<description><![CDATA[This field contains the MIR of the payment message that is related to the notification messages in which this field is present. The MI that is subscribed to MIRS will copy it from the received payment message. In a FINCopy scenario, this field must contain the MIR of the related MT 096]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>106</tag>
							</field>
							<field>
								<name>Related Reference</name>
								<description><![CDATA[This field contains the reference of the payment that is related to the notification messages in which this field is present. The payment itself was not the result of a FIN message. The value of this field must correspond to the related reference (field 21) in the MT298/093. The format of field 424 is 16x.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>424</tag>
							</field>
							<field>
								<name>Service Type Identifier</name>
								<description><![CDATA[This field identifies the applicable global payment service type. The format of field 111 is 3!n.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>111</tag>
							</field>
							<field>
								<name>Unique End-To-End Transaction Reference</name>
								<description><![CDATA[This field provides an end-to-end reference across a payment transaction. The format of field 121 is 36!x.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>121</tag>
							</field>
							<field>
								<name>Addressee Information</name>
								<description><![CDATA[Tag 115 is only valid for output messages. Information from Central Institution to the receiver of payment message. Information is input in the MT 097 FIN Copy Message Authorisation/Refusal Notification in Y-Copy mode.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>115</tag>
							</field>
							<field>
								<name>Payment Release Information Receiver (FINInform Services)</name>
								<description><![CDATA[Tag 165 is only valid for output messages. This field contains information from the server destination to the receiver of payment message. It is only available for use in FINInform services that operate in Y-copy mode.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>165</tag>
							</field>
							<field>
								<name>Receiver Information</name>
								<description><![CDATA[Tag 433 is only valid for output messages. The screening service inputs information in the MT 097 FINCopy Message Authorisation/Refusal Notification, in Y-Copy mode. FINCopy copies the information to the receiver of the screened message.
				    The following values can be present in this field:
				      AOK: message automatically released by screening service
				      FPO: compliance officer has flagged the screening result as false positive
				      NOK: compliance officer has flagged the screened message as suspect
				    The code word can optionally be followed by additional information (up to 20 characters from the x character set).]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>433</tag>
							</field>
						</fields>
					</field>
				</fields>
			</Header>
			<Data>
				<Fields>
					<SwiftField Name="19">
						<SwiftFieldDef Name="19">
							<Generic>false</Generic>
							<Description><![CDATA[Sum of Amounts]]></Description>
							<Option Name="">
								<Format><![CDATA[17d]]></Format>
								<Specification><![CDATA[(Amount)]]></Specification>
								<Description><![CDATA[Sum of Amounts]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options> </Options>
					</SwiftField>
					<SwiftField Name="30">
						<SwiftFieldDef Name="30">
							<Generic>false</Generic>
							<Description><![CDATA[Value Date]]></Description>
							<Option Name="">
								<Format><![CDATA[6!n]]></Format>
								<Specification><![CDATA[(Date)]]></Specification>
								<Description><![CDATA[Value Date]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options> </Options>
						<Validations>
							<SubField Name="Date">
								<Validation>
									<Options> </Options>
									<ErrorCode>T50</ErrorCode>
									<Comment><![CDATA[Date must be a valid date expressed as YYMMDD (Error code(s): T50) .]]></Comment>
									<ValidationPattern xsi:type="DATE" Type="DATE">
										<Type>DATE</Type>
										<Format>yyMMdd</Format>
										<value-date>true</value-date>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="53B">
						<SwiftFieldDef Name="53">
							<Generic>false</Generic>
							<Description><![CDATA[Sender's Correspondent]]></Description>
							<Option Name="B">
								<Format><![CDATA[/1!a[/34x](CRLF35x) | /1!a[/34x] | [/34xCRLF]35x | /34x]]></Format>
								<Specification><![CDATA[(CreditDebit) (Party Identifier) (Location) | (CreditDebit)(Party Identifier) |(Party Identifier) (Location) | (Party Identifier)]]></Specification>
								<Description><![CDATA[Sender's Correspondent]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options>B</Options>
						<Validations>
							<SubField Name="CreditDebit">
								<Validation>
									<Options>B</Options>
									<ErrorCode>T51</ErrorCode>
									<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
									<ValidationPattern xsi:type="CODE" Type="CODE">
										<Type>CODE</Type>
										<Codes>
											<Code Name="C">
												<DetailedName>Credit</DetailedName>
											</Code>
											<Code Name="D">
												<DetailedName>Debit</DetailedName>
											</Code>
										</Codes>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="72">
						<SwiftFieldDef Name="72">
							<Generic>false</Generic>
							<Description><![CDATA[Sender to Receiver Information]]></Description>
							<Option Name="">
								<Format><![CDATA[6*35x]]></Format>
								<Specification><![CDATA[(Narrative - Structured Format)]]></Specification>
								<Description><![CDATA[Sender to Receiver Information]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options> </Options>
					</SwiftField>
					<SwiftSequence Name="A">
						<Name>A</Name>
						<Description><![CDATA[A]]></Description>
						<Mandatory>true</Mandatory>
						<Repeating>true</Repeating>
						<Fields>
							<SwiftField Name="20">
								<SwiftFieldDef Name="20">
									<Generic>false</Generic>
									<Description><![CDATA[Transaction Reference Number]]></Description>
									<Option Name="">
										<Format><![CDATA[16x]]></Format>
										<Specification><![CDATA[(Reference)]]></Specification>
										<Description><![CDATA[Transaction Reference Number]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options> </Options>
								<Validations>
									<SubField Name="Reference">
										<Validation>
											<Options> </Options>
											<ErrorCode>T26</ErrorCode>
											<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive slashes '//' (Error code(s): T26) .]]></Comment>
											<ValidationPattern xsi:type="T26" Type="T26">
												<Type>T26</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="32B">
								<SwiftFieldDef Name="32">
									<Generic>false</Generic>
									<Description><![CDATA[Currency Code, Amount]]></Description>
									<Option Name="B">
										<Format><![CDATA[3!a15d]]></Format>
										<Specification><![CDATA[(Currency) (Amount)]]></Specification>
										<Description><![CDATA[Currency Code, Amount]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options>B</Options>
								<Validations>
									<SubField Name="Amount">
										<Validation>
											<Options>B</Options>
											<ErrorCode>C03</ErrorCode>
											<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency (Error code(s): C03, T40, T43) .]]></Comment>
											<ValidationPattern xsi:type="Decimal" Type="Decimal">
												<Type>Decimal</Type>
												<currency-field>Currency</currency-field>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="Currency">
										<Validation>
											<Options>B</Options>
											<ErrorCode>T52</ErrorCode>
											<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52) .]]></Comment>
											<ValidationPattern xsi:type="Currency_Code" Type="Currency Code">
												<Type>Currency Code</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="56a">
								<SwiftFieldDef Name="56">
									<Generic>false</Generic>
									<Description><![CDATA[Intermediary]]></Description>
									<Option Name="A">
										<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
										<Description><![CDATA[Intermediary]]></Description>
									</Option>
									<Option Name="D">
										<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
										<Description><![CDATA[Intermediary]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>A, D</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27, T28, T29, T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
										<Validation>
											<Options>A</Options>
											<ErrorCode>C05</ErrorCode>
											<Comment><![CDATA[Identifier Code must not be a BEI. Please refer to the latest version of the BIC Directory - Corporations for more information about BEIs. This error code applies to all types of BICs referenced in a FIN message including SWIFT BICs, non-SWIFT BICs, Masters, Synonyms, Live destinations and Test & Training destinations. (Error code(s): C05) .]]></Comment>
											<ValidationPattern xsi:type="C05" Type="C05">
												<Type>C05</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="CreditDebit">
										<Validation>
											<Options>A, D</Options>
											<ErrorCode>T51</ErrorCode>
											<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="C">
														<DetailedName>Credit</DetailedName>
													</Code>
													<Code Name="D">
														<DetailedName>Debit</DetailedName>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="57a">
								<SwiftFieldDef Name="57">
									<Generic>false</Generic>
									<Description><![CDATA[Account With Institution]]></Description>
									<Option Name="A">
										<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
										<Description><![CDATA[Account With Institution]]></Description>
									</Option>
									<Option Name="B">
										<Format><![CDATA[/1!a[/34x](CRLF35x) | /1!a[/34x] | [/34xCRLF]35x | /34x]]></Format>
										<Specification><![CDATA[(CreditDebit) (Party Identifier) (Location) | (CreditDebit)(Party Identifier) |(Party Identifier) (Location) | (Party Identifier)]]></Specification>
										<Description><![CDATA[Account With Institution]]></Description>
									</Option>
									<Option Name="D">
										<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
										<Description><![CDATA[Account With Institution]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options>A, B, D</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27, T28, T29, T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
										<Validation>
											<Options>A</Options>
											<ErrorCode>C05</ErrorCode>
											<Comment><![CDATA[Identifier Code must not be a BEI. Please refer to the latest version of the BIC Directory - Corporations for more information about BEIs. This error code applies to all types of BICs referenced in a FIN message including SWIFT BICs, non-SWIFT BICs, Masters, Synonyms, Live destinations and Test & Training destinations . (Error code(s): C05) .]]></Comment>
											<ValidationPattern xsi:type="C05" Type="C05">
												<Type>C05</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="CreditDebit">
										<Validation>
											<Options>A, B, D</Options>
											<ErrorCode>T51</ErrorCode>
											<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="C">
														<DetailedName>Credit</DetailedName>
													</Code>
													<Code Name="D">
														<DetailedName>Debit</DetailedName>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="72">
								<SwiftFieldDef Name="72">
									<Generic>false</Generic>
									<Description><![CDATA[Sender to Receiver Information]]></Description>
									<Option Name="">
										<Format><![CDATA[6*35x]]></Format>
										<Specification><![CDATA[(Narrative - Structured Format)]]></Specification>
										<Description><![CDATA[Sender to Receiver Information]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options> </Options>
							</SwiftField>
						</Fields>
					</SwiftSequence>
				</Fields>
			</Data>
			<Trailer>
				<fields>
					<field>
						<name>Message Authentication Code</name>
						<description><![CDATA[Allows authentication by the receiving user. It is followed by an authentication result.

This trailer is mandatory for most user-to-user message categories within the FIN application. When the FIN Copy Service is used a PAC trailer, if present, follows the MAC trailer.

Format:

{MAC:<authentication-result>}

where <authentication-result> = 8!h

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>8</length>
						<tag>MAC</tag>
					</field>
					<field>
						<name>Proprietary Authentication Code</name>
						<description><![CDATA[The PAC is used within the FIN Copy service only, when using the double authentication option. The PAC is included in Block 5 of FIN user-to-user messages, immediately after the MAC trailer, if present.

This is calculated on the extracted fields of Block 4 of the message, the value of field 115, if present, and the <authentication-result> of the MAC trailer for Copy Services with double authentication.

Thus, the end-of-block indicator (CrLf-) is included in the PAC calculation, and the fields are defined as follows:

The first three characters are CrLf:

The field and the delimiter are present, that is, 32A:, 20:, and so on.

All subfields and their delimiters are present.

Format:

{PAC:[<authentication-result>]}

where <authentication-result> is mandatory on input messages only and <authentication-result> = 8!h

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>8</length>
						<tag>PAC</tag>
					</field>
					<field>
						<name>Checksum</name>
						<description><![CDATA[The checksum is computed based on the receiver's address (12 characters, with 9th character replaced by X) plus the Text Block. This trailer allows the system and the CBT to check that messages have not been corrupted due to a system malfunction or an undetected transmission error.

Format:

{CHK:<checksum-result>}

where <checksum-result> = 12!h

Note: This trailer is mandatory for FIN and GPA messages (Service Identifier 01).

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>12</length>
						<tag>CHK</tag>
					</field>
					<field>
						<name>System Originated Message</name>
						<description><![CDATA[The system message or service message which is generated by a system PLT has a SYS trailer. All solicited system messages (Service Identifier 01) contain the MIR of the request and may also contain the time.

Format:

{SYS:[<time><mir>]}

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>SYS</tag>
					</field>
					<field>
						<name>Test And Training Message</name>
						<description><![CDATA[Mandatory for FIN and GPA messages (Service Identifier 01) sent by, or delivered to, a Test & Training Logical Terminal (LT). This trailer has a tag only, and no value.

Format:

{TNG:}
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>0</length>
						<tag>TNG</tag>
					</field>
					<field>
						<name>Possible Duplicate Emission</name>
						<description><![CDATA[This trailer is used by the destination of the message. It only applies to FIN user-to-user messages (Service Identifier 01, message categories reserved for banking messages). There can be multiple PDEs. The system does not verify the order nor restrict the number (except for maximum message length).

Correctly formatted PDE trailers applied to user-to-system messages are accepted by the system, but not processed. This means that the system does not check to see if the original message exists. Therefore, a retrieval request sent with a PDE trailer may be processed twice if the original message was received by the system.

Format:

{PDE:[<time><mir>]}

where <time><mir> refers to the emission of the previous possible issue.

Note: It can be added automatically by a CBT or manually by a user. It may be followed by the MIR and the time of its previous possible messages.

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>PDE</tag>
					</field>
					<field>
						<name>Delayed Message</name>
						<description><![CDATA[This trailer is added to all FIN user-to-user output messages that have exceeded their obsolescence period. If this trailer appears in GPA or FIN system messages, it must be ignored. This trailer has a tag only, and no value.

The Obsolescence Period is:

U = 15 minutes

N = 100 minutes

Format:

{DLM:}

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>0</length>
						<tag>DLM</tag>
					</field>
					<field>
						<name>Possible Duplicate Message</name>
						<description><![CDATA[Added by the system to any output message (GPA and FIN Service Identifier 01) being resent because a prior delivery may be invalid. If a system PLT receives a report request with a PDM, the response has a plain PDM (without the optional delivery reference). Other PDMs may be added as a result of unsuccessful delivery attempts to the user. 
Format:
{PDM:[<time><mor>]}
where <time> and the Message Output Reference <mor> are that of the previous attempt.
Note: For messages recovered after a system failure, the optional fields may not be present.
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>PDM</tag>
					</field>
					<field>
						<name>Message Reference</name>
						<description><![CDATA[The MRF trailer is used to specify the message reference of the original user message in MT 096 FIN Copy to Central Institution Messages.
Format:
{MRF:<date><full-time><mir>}
where <mir> is that of the original user message whose fields are copied in the MT 096 FIN Copy to Central Institution Message.
Note: The MRF is specific to FIN Copy. The MRF trailer is automatically generated in the MT 096 FIN Copy to Central Institution Message and can only be reused in field 109 of the MT 096 FIN Copy to Central Institution Message to identify the MT 096 to which the MT 097 is a response. The format of the MRF is subject to change.
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>MRF</tag>
					</field>
				</fields>
			</Trailer>
		</SwiftFields>
		<validationrules name="Default">
			<hdrvalidationrules>
				<fieldvalidations>
					<fieldvalidation>
						<name>U09</name>
						<formula><![CDATA[if($this.Header.GetFieldIndex("User_Header") != -1) {
    def userHeader = $this.Header.GetSection("User_Header");
    if(userHeader.$size > 0 && userHeader[0].IsNotNull("Validation_Flag")) {
        return false;
    }
}
return true;
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U09</error-code>
						<actionmessage><![CDATA["User has used tag 119 in a message that is not a candidate for special processing"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>U03</name>
						<fieldname>User Header</fieldname>
						<formula><![CDATA[Iff(IsNotNull(User_Header.Service_Type_Identifier), 
    IsNotNull(User_Header.Unique_End_To_End_Transaction_Reference))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U03</error-code>
						<actionmessage><![CDATA["When populating an end-to-end reference, both fields 111 and 121 must be populated: a message that contains only one of these two fields will not be accepted by FIN."]]></actionmessage>
					</fieldvalidation>
				</fieldvalidations>
			</hdrvalidationrules>
			<datavalidationrules>
				<fieldvalidations>
					<fieldvalidation>
						<name>C1</name>
						<fieldname>19.Amount</fieldname>
						<comment><![CDATA[C1
The amount in field 19 must equal the sum of the amounts in all occurrences of field 32B (Error code(s): C01).]]></comment>
						<formula><![CDATA[Abs($value - SecSumDouble(A, "F32B.Amount")) < 1.0E-4]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C01</error-code>
						<actionmessage><![CDATA["The amount in field 19 must equal the sum of the amounts in all occurrences of field 32B"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C2</name>
						<fieldname>A.32B.Currency</fieldname>
						<comment><![CDATA[C2
The currency code in the amount field 32B must be the same for all occurrences of this field in the message (Error code(s): C02). 
]]></comment>
						<formula><![CDATA[$value==A[0].F32B[0].Currency]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C02</error-code>
						<actionmessage><![CDATA["The currency code in the amount field 32B must be the same for all occurrences of this field in the message"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F-19</name>
						<fieldname>A.32B.Currency</fieldname>
						<comment><![CDATA[F-19
The number of digits following the comma must not exceed the maximum number allowed for the currency specified in field 32B (Error code(s): C03,T40,T43).]]></comment>
						<formula><![CDATA[isValidDecimals($value,F19[0].Amount)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C03</error-code>
						<actionmessage><![CDATA["The number of digits following the comma must not exceed the maximum number allowed for the currency specified in field 32B."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F-72-A</name>
						<fieldname>72.Narrative_-_Structured_Format</fieldname>
						<comment><![CDATA[F-72-A
The first line of field 72 should be of the following format: /8c/[additional information]. The remaining lines (2 - 6) should be of the following format: [//continuation of additional information] or [/8c/[additional information]].]]></comment>
						<formula><![CDATA[VerifyField72NarrativeText($value)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T32</error-code>
						<actionmessage><![CDATA["The first line of field 72 should be of the following format: /8c/[additional information]. The remaining lines (2 - 6) should be of the following format: [//continuation of additional information] or [/8c/[additional information]]."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FA-72-B</name>
						<fieldname>A.72.Narrative_-_Structured_Format</fieldname>
						<comment><![CDATA[The first line of field 72 should be of the following format: /8c/[additional information]. The remaining lines (2 - 6) should be of the following format: [//continuation of additional information] or [/8c/[additional information]].]]></comment>
						<formula><![CDATA[VerifyField72NarrativeText($value)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T32</error-code>
						<actionmessage><![CDATA["The first line of field 72 should be of the following format: /8c/[additional information]. The remaining lines (2 - 6) should be of the following format: [//continuation of additional information] or [/8c/[additional information]]."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>ERI-1</name>
						<fieldname>A</fieldname>
						<comment><![CDATA["For specific message types, an European currency must not be used as the currency of settlement after a cut-off date (Error Code: E76)."]]></comment>
						<formula><![CDATA[applyERIValidation(F30[0], "Date", A.F32B[0], "Currency")]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E76</error-code>
						<actionmessage><![CDATA["For specific message types, an European currency must not be used as the currency of settlement after a cut-off date (Error Code: E76)."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>ERI-2</name>
						<fieldname>72.Narrative_-_Structured_Format</fieldname>
						<formula><![CDATA[ApplyERICodeValidationStructured($value);]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T47</error-code>
						<actionmessage><![CDATA["In an ERI field (i.e. fields 61, 72, 77A, 79, 86) the data part of a code word /OCMT/, or /CHGS/, is being validated, but the ending separator (i.e. third slash) is missing or the code words are duplicated."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>ERI-3</name>
						<fieldname>A.72.Narrative_-_Structured_Format</fieldname>
						<formula><![CDATA[ApplyERICodeValidationStructured($value);]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T47</error-code>
						<actionmessage><![CDATA["In an ERI field (i.e. fields 61, 72, 77A, 79, 86) the data part of a code word /OCMT/, or /CHGS/, is being validated, but the ending separator (i.e. third slash) is missing or the code words are duplicated."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C3-1</name>
						<comment><![CDATA[C3-1
The repetitive sequence must appear at least twice (Error code(s): T11).
]]></comment>
						<formula><![CDATA[A.$size >= 2]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T11</error-code>
						<actionmessage><![CDATA["The repetitive sequence must appear at least twice."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C3-2</name>
						<comment><![CDATA[C3-2
The repetitive sequence must not appear more than ten times (Error code(s): T10).]]></comment>
						<formula><![CDATA[A.$size <= 10]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T10</error-code>
						<actionmessage><![CDATA["The repetitive sequence must not appear more than ten times"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F-72-B</name>
						<fieldname>72.Narrative_-_Structured_Format</fieldname>
						<formula><![CDATA[def Actualvalue = replace($value, "\r\n", "\n");
def lines = Split("\n", Actualvalue);
def str = Left(Actualvalue, 6);
def line1format = false;
def line3format = false;
def TREFformat = true;
def CHGSformat = true;
def TEXTformat = true;
def format = true;
def count = 0;
def TREFcount = 0;
def CHGScount = 0;
def TEXTcount = 0;
def i = lines.Length();
if(In(str, "/REJT/", "/RETN/")) {
    if(i <= 6) {
        //if '/REJT/' or '/RETN/' format of 1st line must be "6!x2!n[1a]['/'2c]" & format of 2nd line must be "('/'2!c 2!n'/')[29x]" or "('/X'1c2!n'/')[29x]"
        //if format of 2nd line is "('/'2!c 2!n'/')" then the 6 characters must be one of the codes given below
        line1format = (VerifyFormat(lines[0], "6!x2!n[1a]['/'2c]"));
        if(line1format && lines.Length() > 2) {
            if(!lines[1].StartsWith("/X")) {
                if(VerifyFormat(lines[1], "('/'2!c 2!n'/')[29x]")) {
                	def startStr = lines[1].Left(6);
                    if((!In(startStr, "/AC01/", "/AC02/", "/AC03/", "/AC04/", "/AC05/", "/AC06/", 
                            "/AM01/", "/AM02/", "/AM03/", "/AM04/", "/AM05/", "/AM06/", "/AM07/", 
                            "/AM08/", "/AG01/", "/AG02/", "/BE01/", "/BE02/", "/BE03/", "/BE04/", 
                            "/BE05/", "/DT01/", "/MS01/", "/PY01/", "/RC01/", "/RC02/", "/RC03/", 
                            "/RC04/", "/RF01/", "/TM01/", "/RR01/", "/RR02/", "/RR03/")))
                        return false;
                }
                else
                    return false;
            }
            else if(lines[1].StartsWith("/X") && !VerifyFormat(lines[1], "('/X'1c2!n'/')[29x]"))
                return false;
        }
        else
            return false;
        //Line3 is mandatory and should have the format "/MREF/16x". Lines 4, 5 and 6 are optional
        //If lines 4, 5 or 6 or any combination exists and if the first 6 characters starts with either '/TREF/' or '/CHGS/' or '/TEXT/' or '//'
        //it should satisfy the format given. Also if line starts with '//' it can appear a max of 2 times
        line3format = Equal(Left(lines[2], 6), "/MREF/") && 
                        VerifyFormat(Substring(lines[2], 6), "16x");
        if(line3format) {
            while(i > 3) {
                def str1 = Left(lines[i - 1], 6);
                def str2 = Substring(lines[i - 1], 6);
                if(In(str1, "/TREF/", "/CHGS/", "/TEXT/") || StartsWith(lines[i - 1], "//")) {
                    if(str1 == "/TREF/") {
                        TREFformat = VerifyFormat(str2, "16x");
                        TREFcount += 1;
                    }
                    else if(str1 == "/CHGS/") {
                        CHGSformat = (VerifyFormat(str2, "3!a15d") && 
                                        IsISOCurrencyCode(Substring(lines[i - 1], 6, 3)));
                        CHGScount += 1;
                    }
                    else if(str1 == "/TEXT/") {
                        TEXTformat = (VerifyFormat(str2, "29x"));
                        TEXTcount += 1;
                    }
                    else if(StartsWith(lines[i - 1], "//")) {
                        def str3 = Substring(lines[i - 1], 2);
                        format = (VerifyFormat(str3, "33x"));
                        count += 1;
                        if(!format || count > 2)
                            break;
                    }
                }
                else
                    return false;
                i = i - 1;
            }
        }
        else
            return false;
        if(!TREFformat || !CHGSformat || !TEXTformat || !format || count > 2 || TREFcount > 1 || 
             CHGScount > 1 || TEXTcount > 1)
            return false;
    }
    else
        return false;
}
return true;
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T80</error-code>
						<actionmessage><![CDATA["Field 72 Reject/Return: code word error, or mandatory code word missing, or code word not in the proper sequence, or format 6*35x not satisfied"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F-A72-C</name>
						<fieldname>A.72.Narrative_-_Structured_Format</fieldname>
						<formula><![CDATA[def Actualvalue = replace($value, "\r\n", "\n");
def lines = Split("\n", Actualvalue);
def str = Left(Actualvalue, 6);
def line1format = false;
def line3format = false;
def TREFformat = true;
def CHGSformat = true;
def TEXTformat = true;
def format = true;
def count = 0;
def TREFcount = 0;
def CHGScount = 0;
def TEXTcount = 0;
def i = lines.Length();
if(In(str, "/REJT/", "/RETN/")) {
    if(i <= 6) {
        //if '/REJT/' or '/RETN/' format of 1st line must be "6!x2!n[1a]['/'2c]" & format of 2nd line must be "('/'2!c 2!n'/')[29x]" or "('/X'1c2!n'/')[29x]"
        //if format of 2nd line is "('/'2!c 2!n'/')" then the 6 characters must be one of the codes given below
        line1format = (VerifyFormat(lines[0], "6!x2!n[1a]['/'2c]"));
        if(line1format && lines.Length() > 2) {
            if(!lines[1].StartsWith("/X")) {
                if(VerifyFormat(lines[1], "('/'2!c 2!n'/')[29x]")) {
                	def startStr = lines[1].Left(6);
                    if((!In(startStr, "/AC01/", "/AC02/", "/AC03/", "/AC04/", "/AC05/", "/AC06/", 
                            "/AM01/", "/AM02/", "/AM03/", "/AM04/", "/AM05/", "/AM06/", "/AM07/", 
                            "/AM08/", "/AG01/", "/AG02/", "/BE01/", "/BE02/", "/BE03/", "/BE04/", 
                            "/BE05/", "/DT01/", "/MS01/", "/PY01/", "/RC01/", "/RC02/", "/RC03/", 
                            "/RC04/", "/RF01/", "/TM01/", "/RR01/", "/RR02/", "/RR03/")))
                    return false;
            }
                else
                    return false;
            }
            else if(lines[1].StartsWith("/X") && !VerifyFormat(lines[1], "('/X'1c2!n'/')[29x]"))
                return false;
        }
        else
            return false;
        //Line3 is mandatory and should have the format "/MREF/16x". Lines 4, 5 and 6 are optional
        //If lines 4, 5 or 6 or any combination exists and if the first 6 characters starts with either '/TREF/' or '/CHGS/' or '/TEXT/' or '//'
        //it should satisfy the format given. Also if line starts with '//' it can appear a max of 2 times
        line3format = Equal(Left(lines[2], 6), "/MREF/") && 
                        VerifyFormat(Substring(lines[2], 6), "16x");
        if(line3format) {
            while(i > 3) {
                def str1 = Left(lines[i - 1], 6);
                def str2 = Substring(lines[i - 1], 6);
                if(In(str1, "/TREF/", "/CHGS/", "/TEXT/") || StartsWith(lines[i - 1], "//")) {
                    if(str1 == "/TREF/") {
                        TREFformat = VerifyFormat(str2, "16x");
                        TREFcount += 1;
                    }
                    else if(str1 == "/CHGS/") {
                        CHGSformat = (VerifyFormat(str2, "3!a15d") && 
                                        IsISOCurrencyCode(Substring(lines[i - 1], 6, 3)));
                        CHGScount += 1;
                    }
                    else if(str1 == "/TEXT/") {
                        TEXTformat = (VerifyFormat(str2, "29x"));
                        TEXTcount += 1;
                    }
                    else if(StartsWith(lines[i - 1], "//")) {
                        def str3 = Substring(lines[i - 1], 2);
                        format = (VerifyFormat(str3, "33x"));
                        count += 1;
                        if(!format || count > 2)
                            break;
                    }
                }
                else
                    return false;
                i = i - 1;
            }
        }
        else
            return false;
        if(!TREFformat || !CHGSformat || !TEXTformat || !format || count > 2 || TREFcount > 1 || 
             CHGScount > 1 || TEXTcount > 1)
            return false;
    }
    else
        return false;
}
return true;
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T80</error-code>
						<actionmessage><![CDATA["Field 72 Reject/Return: code word error, or mandatory code word missing, or code word not in the proper sequence, or format 6*35x not satisfied"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FA-32B</name>
						<fieldname>A.32B.Currency</fieldname>
						<formula><![CDATA[!In($value, "XAU", "XAG", "XPD", "XPT")]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C08</error-code>
						<actionmessage><![CDATA["The codes XAU, XAG, XPD and XPT are not allowed, as these are codes for commodities for which the category 6 commodities messages must be used."]]></actionmessage>
					</fieldvalidation>
				</fieldvalidations>
			</datavalidationrules>
			<tlrvalidationrules>
				<fieldvalidations>
				</fieldvalidations>
			</tlrvalidationrules>
		</validationrules>
		<elementproperties>
			<propertymap>
				<property name="codegen.java.properties">
					<value>
						<propertymap type="com.tplus.transform.design.PropertiesDef">
							<property name="Java Package Name" value="com.transform.external.%e"/>
							<property name="Jar Name" value="%c.jar"/>
							<property name="Manifest Entries" value="transformrt.jar swiftrt.jar swiftresources.jar"/>
							<property name="Data Source" value=""/>
						</propertymap>
					</value>
				</property>
			</propertymap>
		</elementproperties>
	</externalmessage>
	<externalmessage xsi:type="SwiftFormat" type="SwiftFormat" version="5.1.2" rulename="MT202_2016" formattype="SwiftFormat" >
		<description><![CDATA[This message is sent by or on behalf of the ordering institution directly, or through correspondent(s), to the financial institution of the beneficiary institution. 

It is used to order the movement of funds to the beneficiary institution. 

This message may also be sent to a financial institution servicing multiple accounts for the Sender to transfer funds between these accounts. In addition it can be sent to a financial institution to debit an account of the Sender serviced by the Receiver and to credit an account, owned by the Sender at an institution specified in field 57a. 

This message must not be used to order the movement of funds related to an underlying customer credit transfer that was sent with the cover method. For these payments the MT 202 COV or MT 205 COV must be used. 
]]></description>
		<standard>SWIFT</standard>
		<standard-name>MT202</standard-name>
		<standard-version>SRG 2016</standard-version>
		<standard-release-qualifier>20160308</standard-release-qualifier>
		<standard-category>Financial Institution Transfers</standard-category>
		<standard-detailed-name>General Financial Institution Transfer</standard-detailed-name>
		<version>1.0</version>
		<SwiftFields>
			<customizable>true</customizable>
			<modifiable>false</modifiable>
			<SwiftMessageType>User</SwiftMessageType>
			<max-length>10000</max-length>
			<HeaderAndTrailerType>SWIFT_INPUT_OUTPUT_HEADER</HeaderAndTrailerType>
			<Header>
				<fields>
					<field>
						<name>Basic Header</name>
						<description><![CDATA[The Basic Header is given in Block 1 of a SWIFT message and is the only header that appears on all messages. The Basic Header provides the fundamental reference for any particular message and is almost always automatically built by the CBT.
The Basic Header has the same format for both input and output messages. However, the information contained in the Basic Header is relative to the sender when the message is input but relative to the receiver when the same message is output.]]></description>
						<datatype>Section</datatype>
						<required>true</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Application Identifier</name>
								<description><![CDATA[The Application Identifier identifies the application within which the message is being sent or received. The available options are:

F = FIN All user-to-user, FIN system and FIN service messages 
A = GPA Most GPA system and service messages 
L = GPA Certain GPA service messages, for example, LOGIN, LAKs, ABORT 

These values are automatically assigned by the SWIFT system and the user's CBT, but the user should be aware of their existence and significance
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Service Identifier</name>
								<description><![CDATA[The Service Identifier consists of 2 numeric characters. It identifies the type of data that is being sent or received and, in doing so, whether the message which follows is one of the following:

a user-to-user message

a system message

a service message, for example, a session control command, such as SELECT, or a logical acknowledgement, such as ACK/SAK/UAK

Users will be primarily concerned with identifier '01' which applies to all GPA and FIN system and user-to-user messages. Other values include: '21' for message acknowledgements such as ACK/NAK, UAK/UNK, '03' for SELECT commands, and 
so on]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>2</length>
							</field>
							<field>
								<name>LT Identifier</name>
								<description><![CDATA[This 12-character SWIFT address, given in the Basic Header Block, is the address of the sending LT for input messages or of the receiving LT for output messages, and includes the Branch Code.

In the Basic Header, the LT Code within the LT Identifier is specific to the LT that has established the session in which the message is being transmitted, that is the sending LT for input messages or the receiving LT for output messages.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>12</length>
							</field>
							<field>
								<name>Session Number</name>
								<description><![CDATA[The Session Number identifies the session in which the message was transmitted. Within the Basic Header, the 4-digit Session Number is the user's current GPA or FIN Session Number.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Sequence Number</name>
								<description><![CDATA[The sequence number always consists of 6 digits. It is the ISN of the sender's current input session or the OSN of the receiver's current output session.

Note: The sequence number is not present in those messages with an Application Identifier of 'L' (for example LOGIN). The sequence number is, however, a key element in the processing of retrievals. Therefore, LOGINs and attempted LOGINs are not retrievable
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>6</length>
							</field>
						</fields>
					</field>
					<field>
						<name>Application Header Input</name>
						<description><![CDATA[The Application Header of a SWIFT message provides information about the message itself.

The Application Header is given in Block 2 of a SWIFT message. It differs according to whether the message is a GPA or a FIN message and whether the Application Header is part of an input or an output message.

]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Input/Output Identifier</name>
								<description><![CDATA[For an input message, the Input/Output Identifier consists of the single letter 'I'.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Message Type</name>
								<description><![CDATA[The Message Type consists of 3 digits which define the MT number of the message being input. The example used above is for an MT 100 Customer Transfer]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>3</length>
							</field>
							<field>
								<name>Receiver's Address</name>
								<description><![CDATA[This address is the 12-character SWIFT address of the receiver of the message, but with a LT Code of 'X'. It defines the destination to which the message should be sent.

The system will replace the 'X' with a specific LT Code on delivery of the message according to the delivery control exercised by the receiving user.

The Branch Code is mandatory and will be validated. The default of 'XXX' may be used, as in the example above.

Unless otherwise documented, system messages addressed to the SWIFT system itself should be addressed to SWFTXXXXXXXX.

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>12</length>
							</field>
							<field>
								<name>Message Priority</name>
								<description><![CDATA[This character, used within FIN Application Headers only, defines the priority with which a message is delivered. The possible values are:

S = System

U = Urgent

N = Normal

Message Priority 'S' must be used for user-to-system messages; for user-to-user messages either 'U' or 'N' can be used. In the absence of user-specified delivery criteria, system messages are always delivered first, followed by urgent priority messages and then normal priority messages.

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Delivery Monitoring</name>
								<description><![CDATA[Delivery monitoring options apply only to FIN user-to-user messages, and allow the sender of a message to request:

automatic MT 011 Delivery Notification once the message has been delivered

automatic MT 010 Non-Delivery Warning if a message is not delivered within the specified obsolescence period (see below)

both, or neither, options. This may be requested on an individual message basis.

The chosen option is expressed as a single digit:

1 = Non-Delivery Warning

2 = Delivery Notification

3 = Non-Delivery Warning and Delivery Notification. 
If the message has priority 'U' then the user must request delivery monitoring option '1' or '3'. If the message has priority 'N', the user can request delivery monitoring option '2', or, by leaving the option blank, no delivery monitoring.
]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>1</length>
							</field>
							<field>
								<name>Obsolescence Period</name>
								<description><![CDATA[The obsolescence period defines the period of time after which a Delayed Message (DLM) trailer is added to a FIN user-to-user message when the message is delivered. For urgent priority messages, it is also the period of time after which, if the message remains undelivered, a Non-Delivery Warning is generated.

The values for the obsolescence period are 003 (15 minutes) for 'U' priority, and 020 (100 minutes) for 'N' priority. An obsolescence period can only be specified when delivery monitoring has been requested (option 1 or 3 for urgent priority messages, option 2 for normal priority messages). If no delivery monitoring has been requested, and an obsolescence period is specified, the message will be NAKed with error code H25.

GPA input Application Headers are similar to their FIN equivalents except that GPA messages do not specify priority, delivery monitoring, nor obsolescence period.

]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>3</length>
							</field>
						</fields>
					</field>
					<field>
						<name>Application Header Output</name>
						<description><![CDATA[The Application Header of a SWIFT message provides information about the message itself.

The Application Header is given in Block 2 of a SWIFT message. It differs according to whether the message is a GPA or a FIN message and whether the Application Header is part of an input or an output message.

]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Input/Output Identifier</name>
								<description><![CDATA[For an input message, the Input/Output Identifier consists of the single letter 'I'.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Message Type</name>
								<description><![CDATA[Three digits indicating the Message Type.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>3</length>
							</field>
							<field>
								<name>Input Time</name>
								<description><![CDATA[The first occurrence of the time field contains the system time and date. This is the generation time in Greenwich Mean Time (GMT).
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Message Input Reference</name>
								<description><![CDATA[The input MIR.

If the message is generated by the system, the input time is the generation time (in GMT) and the input MIR is the system MIR

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>28</length>
							</field>
							<field>
								<name>Output Date</name>
								<description><![CDATA[The output date, local to the receiver.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>6</length>
							</field>
							<field>
								<name>Output Time</name>
								<description><![CDATA[The second occurrence of the time field contains the output time and date. This is in a time local to the receiver.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Message Priority</name>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
						</fields>
					</field>
					<field>
						<name>User Header</name>
						<description><![CDATA[The User Header is an optional header available within FIN for user-to-user messages only. It appears in Block 3 of a SWIFT message, and allows users to provide their own reference within the headers for a particular message.

A User Header can only be assigned by the sender of a message and, if assigned, will always appear on the output message copy. Relevant parts of the User Header will be repeated in related system messages and acknowledgements.

Block 3 may contain tag 113, defining banking priorities, and tag 108, which is a user reference. The user reference part of the User Header may be used as one of the selection criteria when retrieving a message.

The optional field tags 103 and 115 are also used in Block 3 for the FIN Copy service. The order of tags, when present, is 103, 113, 108 and 115.

An optional field tag 119 can be included in Block 3 of certain messages to specify that different validation rules are to be applied. Agreed code words in field 119 indicate what validation rules SWIFT will apply. If field 119 is present, it should appear after field 108
]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Service Identifier</name>
								<description><![CDATA[For any message which the user submits to a FIN Copy service, Block 3 requires an additional field 103 which contains a three-character Service Identifier unique to a specific FIN Copy service. By using a unique identifier it is possible to support access to multiple services within the same CBT.
]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>3</length>
								<tag>103</tag>
							</field>
							<field>
								<name>Banking Priority</name>
								<description><![CDATA[Assigned by the sender of the message.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>4</length>
								<tag>113</tag>
							</field>
							<field>
								<name>Message User Reference</name>
								<description><![CDATA[Assigned by the sender of the message.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>16</length>
								<tag>108</tag>
							</field>
							<field>
								<name>Validation Flag</name>
								<description><![CDATA[Indicates whether a special validation needs to be performed by FIN. The following are examples of the values this field may take. Please note that this list is subject to change:

ISITC indicates validation of ISITC Standards. Only to be used with MT 521 and MT 523.

REMIT identifies the presence of field 77T. Only to be used in MT 103.

RFDD indicates that the message is a request for direct debit. Only to be used in MT 104.

STP indicates that the message is validated according to straight through processing principles. Only to be used in MT 103.

]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>119</tag>
							</field>
							<field>
								<name>Balance checkpoint date and time</name>
								<description><![CDATA[This field contains the balance checkpoint date and time consisting of a date (YYMMDD) and a time (HHMMSS[ss], where 'ss' indicates hundredths of a second). The MI that is subscribed to MIRS will always copy this reference from field tag 13G of the last MT298/091 that it sent into the related MT 298/093 or MT 097 that it generates. ]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>423</tag>
							</field>
							<field>
								<name>Message Input Reference</name>
								<description><![CDATA[This field contains the MIR of the payment message that is related to the notification messages in which this field is present. The MI that is subscribed to MIRS will copy it from the received payment message. In a FINCopy scenario, this field must contain the MIR of the related MT 096]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>106</tag>
							</field>
							<field>
								<name>Related Reference</name>
								<description><![CDATA[This field contains the reference of the payment that is related to the notification messages in which this field is present. The payment itself was not the result of a FIN message. The value of this field must correspond to the related reference (field 21) in the MT298/093. The format of field 424 is 16x.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>424</tag>
							</field>
							<field>
								<name>Service Type Identifier</name>
								<description><![CDATA[This field identifies the applicable global payment service type. The format of field 111 is 3!n.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>111</tag>
							</field>
							<field>
								<name>Unique End-To-End Transaction Reference</name>
								<description><![CDATA[This field provides an end-to-end reference across a payment transaction. The format of field 121 is 36!x.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>121</tag>
							</field>
							<field>
								<name>Addressee Information</name>
								<description><![CDATA[Tag 115 is only valid for output messages. Information from Central Institution to the receiver of payment message. Information is input in the MT 097 FIN Copy Message Authorisation/Refusal Notification in Y-Copy mode.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>115</tag>
							</field>
							<field>
								<name>Payment Release Information Receiver (FINInform Services)</name>
								<description><![CDATA[Tag 165 is only valid for output messages. This field contains information from the server destination to the receiver of payment message. It is only available for use in FINInform services that operate in Y-copy mode.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>165</tag>
							</field>
							<field>
								<name>Receiver Information</name>
								<description><![CDATA[Tag 433 is only valid for output messages. The screening service inputs information in the MT 097 FINCopy Message Authorisation/Refusal Notification, in Y-Copy mode. FINCopy copies the information to the receiver of the screened message.
				    The following values can be present in this field:
				      AOK: message automatically released by screening service
				      FPO: compliance officer has flagged the screening result as false positive
				      NOK: compliance officer has flagged the screened message as suspect
				    The code word can optionally be followed by additional information (up to 20 characters from the x character set).]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>433</tag>
							</field>
						</fields>
					</field>
				</fields>
			</Header>
			<Data>
				<Fields>
					<SwiftField Name="20">
						<SwiftFieldDef Name="20">
							<Generic>false</Generic>
							<Description><![CDATA[Transaction Reference Number]]></Description>
							<Option Name="">
								<Format><![CDATA[16x]]></Format>
								<Specification><![CDATA[(Transaction Reference)]]></Specification>
								<Description><![CDATA[Transaction Reference Number]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options> </Options>
						<Validations>
							<SubField Name="Transaction_Reference">
								<Validation>
									<Options> </Options>
									<ErrorCode>T26</ErrorCode>
									<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive slashes '//'  (Error code(s): T26).]]></Comment>
									<ValidationPattern xsi:type="T26" Type="T26">
										<Type>T26</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="21">
						<SwiftFieldDef Name="21">
							<Generic>false</Generic>
							<Description><![CDATA[Related Reference]]></Description>
							<Option Name="">
								<Format><![CDATA[16x]]></Format>
								<Specification><![CDATA[(Related Reference)]]></Specification>
								<Description><![CDATA[Related Reference]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options> </Options>
						<Validations>
							<SubField Name="Related_Reference">
								<Validation>
									<Options> </Options>
									<ErrorCode>T26</ErrorCode>
									<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive slashes '//'  (Error code(s): T26).]]></Comment>
									<ValidationPattern xsi:type="T26" Type="T26">
										<Type>T26</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="13C">
						<SwiftFieldDef Name="13">
							<Generic>false</Generic>
							<Option Name="C">
								<Format><![CDATA[/8c/4!n1!x4!n]]></Format>
								<Specification><![CDATA[(Code) (Time indication) (Sign) (Time offset) ]]></Specification>
								<Description><![CDATA[Time Indication]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>true</Repeating>
						<Presence>O</Presence>
						<Options>C</Options>
						<Validations>
							<SubField Name="Time_indication">
								<Validation>
									<Options>C</Options>
									<ErrorCode>T38</ErrorCode>
									<Comment><![CDATA[Time indication must be a valid time expressed as HHMM (Error code(s): T38).]]></Comment>
									<ValidationPattern xsi:type="DATE" Type="DATE">
										<Type>DATE</Type>
										<Format>HHmm</Format>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="Sign">
								<Validation>
									<Options>C</Options>
									<ErrorCode>T15</ErrorCode>
									<Comment><![CDATA[Sign is either "+" or "-" (Error code(s): T15).]]></Comment>
									<ValidationPattern xsi:type="CODE" Type="CODE">
										<Type>CODE</Type>
										<Codes>
											<Code Name="+">
											</Code>
											<Code Name="-">
											</Code>
										</Codes>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="Time_offset">
								<Validation>
									<Options>C</Options>
									<ErrorCode>T16</ErrorCode>
									<Comment><![CDATA[Time offset is expressed as HHMM, where the hour component, ie, 'HH', must be in the range of 00 through 13,and the minute component, ie, 'MM' must be in the range of 00 through 59. Any 'HH' or 'MM' component outside of these range checks will be disallowed.]]></Comment>
									<ValidationPattern xsi:type="Time_Offset" Type="Time Offset">
										<Type>Time Offset</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="32A">
						<SwiftFieldDef Name="32">
							<Generic>false</Generic>
							<Option Name="A">
								<Format><![CDATA[6!n3!a15d]]></Format>
								<Specification><![CDATA[(Date) (Currency) (Amount)]]></Specification>
								<Description><![CDATA[Value Date, Currency Code, Amount]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options>A</Options>
						<Validations>
							<SubField Name="Date">
								<Validation>
									<Options>A</Options>
									<ErrorCode>T50</ErrorCode>
									<Comment><![CDATA[Date must be a valid date expressed as YYMMDD (Error code(s): T50).]]></Comment>
									<ValidationPattern xsi:type="DATE" Type="DATE">
										<Type>DATE</Type>
										<Format>yyMMdd</Format>
										<value-date>true</value-date>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="Currency">
								<Validation>
									<Options>A</Options>
									<ErrorCode>T52</ErrorCode>
									<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52).]]></Comment>
									<ValidationPattern xsi:type="Currency_Code" Type="Currency Code">
										<Type>Currency Code</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="Amount">
								<Validation>
									<Options>A</Options>
									<ErrorCode>C03</ErrorCode>
									<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency.]]></Comment>
									<ValidationPattern xsi:type="Decimal" Type="Decimal">
										<Type>Decimal</Type>
										<currency-field>Currency</currency-field>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="52a">
						<SwiftFieldDef Name="52">
							<Generic>false</Generic>
							<Option Name="A">
								<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
								<Description><![CDATA[Ordering Institution]]></Description>
							</Option>
							<Option Name="D">
								<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
								<Description><![CDATA[Ordering Institution]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options>A, D</Options>
						<Validations>
							<SubField Name="Identifier_Code">
								<Validation>
									<Options>A</Options>
									<ErrorCode>T27, T28, T29, T45</ErrorCode>
									<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
									<ValidationPattern xsi:type="BIC" Type="BIC">
										<Type>BIC</Type>
									</ValidationPattern>
								</Validation>
								<Validation>
									<Options>A</Options>
									<ErrorCode>C05</ErrorCode>
									<Comment><![CDATA[Identifier Code must not be a BEI, ie must not be of subtype BEID, MCCO, TESP or TRCO]]></Comment>
									<ValidationPattern xsi:type="C05" Type="C05">
										<Type>C05</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="CreditDebit">
								<Validation>
									<Options>A, D</Options>
									<ErrorCode>T51</ErrorCode>
									<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
									<ValidationPattern xsi:type="CODE" Type="CODE">
										<Type>CODE</Type>
										<Codes>
											<Code Name="C">
												<DetailedName>Credit</DetailedName>
											</Code>
											<Code Name="D">
												<DetailedName>Debit</DetailedName>
											</Code>
										</Codes>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="53a">
						<SwiftFieldDef Name="53">
							<Generic>false</Generic>
							<Option Name="A">
								<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
								<Description><![CDATA[Sender's Correspondent]]></Description>
							</Option>
							<Option Name="B">
								<Format><![CDATA[/1!a[/34x](CRLF35x) | /1!a[/34x] | [/34xCRLF]35x | /34x]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Location) | (CreditDebit)(Party Identifier) | (Party Identifier)(Location) | (Party Identifier)]]></Specification>
								<Description><![CDATA[Sender's Correspondent]]></Description>
							</Option>
							<Option Name="D">
								<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
								<Description><![CDATA[Sender's Correspondent]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options>A, B, D</Options>
						<Validations>
							<SubField Name="Identifier_Code">
								<Validation>
									<Options>A</Options>
									<ErrorCode>T27, T28, T29, T45</ErrorCode>
									<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
									<ValidationPattern xsi:type="BIC" Type="BIC">
										<Type>BIC</Type>
									</ValidationPattern>
								</Validation>
								<Validation>
									<Options>A</Options>
									<ErrorCode>C05</ErrorCode>
									<Comment><![CDATA[Identifier Code must not be a BEI, ie must not be of subtype BEID, MCCO, TESP or TRCO]]></Comment>
									<ValidationPattern xsi:type="C05" Type="C05">
										<Type>C05</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="CreditDebit">
								<Validation>
									<Options>A, B, D</Options>
									<ErrorCode>T51</ErrorCode>
									<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
									<ValidationPattern xsi:type="CODE" Type="CODE">
										<Type>CODE</Type>
										<Codes>
											<Code Name="C">
												<DetailedName>Credit</DetailedName>
											</Code>
											<Code Name="D">
												<DetailedName>Debit</DetailedName>
											</Code>
										</Codes>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="54a">
						<SwiftFieldDef Name="54">
							<Generic>false</Generic>
							<Option Name="A">
								<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
								<Description><![CDATA[Receiver's Correspondent]]></Description>
							</Option>
							<Option Name="B">
								<Format><![CDATA[/1!a[/34x](CRLF35x) | /1!a[/34x] | [/34xCRLF]35x | /34x]]></Format>
								<Specification><![CDATA[(CreditDebit) (Party Identifier) (Location) | (CreditDebit)(Party Identifier) |(Party Identifier) (Location) | (Party Identifier)]]></Specification>
								<Description><![CDATA[Receiver's Correspondent]]></Description>
							</Option>
							<Option Name="D">
								<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
								<Description><![CDATA[Receiver's Correspondent]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options>A, B, D</Options>
						<Validations>
							<SubField Name="Identifier_Code">
								<Validation>
									<Options>A</Options>
									<ErrorCode>T27, T28, T29, T45</ErrorCode>
									<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
									<ValidationPattern xsi:type="BIC" Type="BIC">
										<Type>BIC</Type>
									</ValidationPattern>
								</Validation>
								<Validation>
									<Options>A</Options>
									<ErrorCode>C05</ErrorCode>
									<Comment><![CDATA[Identifier Code must not be a BEI, ie must not be of subtype BEID, MCCO, TESP or TRCO]]></Comment>
									<ValidationPattern xsi:type="C05" Type="C05">
										<Type>C05</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="CreditDebit">
								<Validation>
									<Options>A, B, D</Options>
									<ErrorCode>T51</ErrorCode>
									<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
									<ValidationPattern xsi:type="CODE" Type="CODE">
										<Type>CODE</Type>
										<Codes>
											<Code Name="C">
												<DetailedName>Credit</DetailedName>
											</Code>
											<Code Name="D">
												<DetailedName>Debit</DetailedName>
											</Code>
										</Codes>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="56a">
						<SwiftFieldDef Name="56">
							<Generic>false</Generic>
							<Option Name="A">
								<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
								<Description><![CDATA[Intermediary]]></Description>
							</Option>
							<Option Name="D">
								<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
								<Description><![CDATA[Intermediary]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options>A, D</Options>
						<Validations>
							<SubField Name="Identifier_Code">
								<Validation>
									<Options>A</Options>
									<ErrorCode>T27, T28, T29, T45</ErrorCode>
									<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
									<ValidationPattern xsi:type="BIC" Type="BIC">
										<Type>BIC</Type>
									</ValidationPattern>
								</Validation>
								<Validation>
									<Options>A</Options>
									<ErrorCode>C05</ErrorCode>
									<Comment><![CDATA[Identifier Code must not be a BEI, ie must not be of subtype BEID, MCCO, TESP or TRCO]]></Comment>
									<ValidationPattern xsi:type="C05" Type="C05">
										<Type>C05</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="CreditDebit">
								<Validation>
									<Options>A, D</Options>
									<ErrorCode>T51</ErrorCode>
									<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
									<ValidationPattern xsi:type="CODE" Type="CODE">
										<Type>CODE</Type>
										<Codes>
											<Code Name="C">
												<DetailedName>Credit</DetailedName>
											</Code>
											<Code Name="D">
												<DetailedName>Debit</DetailedName>
											</Code>
										</Codes>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="57a">
						<SwiftFieldDef Name="57">
							<Generic>false</Generic>
							<Option Name="A">
								<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
								<Description><![CDATA[Account With Institution]]></Description>
							</Option>
							<Option Name="B">
								<Format><![CDATA[/1!a[/34x](CRLF35x) | /1!a[/34x] | [/34xCRLF]35x | /34x]]></Format>
								<Specification><![CDATA[(CreditDebit) (Party Identifier) (Location) | (CreditDebit)(Party Identifier) |(Party Identifier) (Location) | (Party Identifier)]]></Specification>
								<Description><![CDATA[Account With Institution]]></Description>
							</Option>
							<Option Name="D">
								<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
								<Description><![CDATA[Account With Institution]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options>A, B, D</Options>
						<Validations>
							<SubField Name="Identifier_Code">
								<Validation>
									<Options>A</Options>
									<ErrorCode>T27, T28, T29, T45</ErrorCode>
									<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
									<ValidationPattern xsi:type="BIC" Type="BIC">
										<Type>BIC</Type>
									</ValidationPattern>
								</Validation>
								<Validation>
									<Options>A</Options>
									<ErrorCode>C05</ErrorCode>
									<Comment><![CDATA[Identifier Code must not be a BEI, ie must not be of subtype BEID, MCCO, TESP or TRCO]]></Comment>
									<ValidationPattern xsi:type="C05" Type="C05">
										<Type>C05</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="CreditDebit">
								<Validation>
									<Options>A, B, D</Options>
									<ErrorCode>T51</ErrorCode>
									<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
									<ValidationPattern xsi:type="CODE" Type="CODE">
										<Type>CODE</Type>
										<Codes>
											<Code Name="C">
												<DetailedName>Credit</DetailedName>
											</Code>
											<Code Name="D">
												<DetailedName>Debit</DetailedName>
											</Code>
										</Codes>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="58a">
						<SwiftFieldDef Name="58">
							<Generic>false</Generic>
							<Option Name="A">
								<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
								<Description><![CDATA[Beneficiary Institution]]></Description>
							</Option>
							<Option Name="D">
								<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
								<Description><![CDATA[Beneficiary Institution]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options>A, D</Options>
						<Validations>
							<SubField Name="Identifier_Code">
								<Validation>
									<Options>A</Options>
									<ErrorCode>T27, T28, T29, T45</ErrorCode>
									<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
									<ValidationPattern xsi:type="BIC" Type="BIC">
										<Type>BIC</Type>
									</ValidationPattern>
								</Validation>
								<Validation>
									<Options>A</Options>
									<ErrorCode>C05</ErrorCode>
									<Comment><![CDATA[Identifier Code must not be a BEI, ie must not be of subtype BEID, MCCO, TESP or TRCO]]></Comment>
									<ValidationPattern xsi:type="C05" Type="C05">
										<Type>C05</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="CreditDebit">
								<Validation>
									<Options>A, D</Options>
									<ErrorCode>T51</ErrorCode>
									<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
									<ValidationPattern xsi:type="CODE" Type="CODE">
										<Type>CODE</Type>
										<Codes>
											<Code Name="C">
												<DetailedName>Credit</DetailedName>
											</Code>
											<Code Name="D">
												<DetailedName>Debit</DetailedName>
											</Code>
										</Codes>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="72">
						<SwiftFieldDef Name="72">
							<Generic>false</Generic>
							<Description><![CDATA[Sender to Receiver Information]]></Description>
							<Option Name="">
								<Format><![CDATA[6*35x]]></Format>
								<Specification><![CDATA[(Narrative - Structured Format)]]></Specification>
								<Description><![CDATA[Sender to Receiver Information]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options> </Options>
					</SwiftField>
				</Fields>
			</Data>
			<Trailer>
				<fields>
					<field>
						<name>Message Authentication Code</name>
						<description><![CDATA[Allows authentication by the receiving user. It is followed by an authentication result.

This trailer is mandatory for most user-to-user message categories within the FIN application. When the FIN Copy Service is used a PAC trailer, if present, follows the MAC trailer.

Format:

{MAC:<authentication-result>}

where <authentication-result> = 8!h

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>8</length>
						<tag>MAC</tag>
					</field>
					<field>
						<name>Proprietary Authentication Code</name>
						<description><![CDATA[The PAC is used within the FIN Copy service only, when using the double authentication option. The PAC is included in Block 5 of FIN user-to-user messages, immediately after the MAC trailer, if present.

This is calculated on the extracted fields of Block 4 of the message, the value of field 115, if present, and the <authentication-result> of the MAC trailer for Copy Services with double authentication.

Thus, the end-of-block indicator (CrLf-) is included in the PAC calculation, and the fields are defined as follows:

The first three characters are CrLf:

The field and the delimiter are present, that is, 32A:, 20:, and so on.

All subfields and their delimiters are present.

Format:

{PAC:[<authentication-result>]}

where <authentication-result> is mandatory on input messages only and <authentication-result> = 8!h

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>8</length>
						<tag>PAC</tag>
					</field>
					<field>
						<name>Checksum</name>
						<description><![CDATA[The checksum is computed based on the receiver's address (12 characters, with 9th character replaced by X) plus the Text Block. This trailer allows the system and the CBT to check that messages have not been corrupted due to a system malfunction or an undetected transmission error.

Format:

{CHK:<checksum-result>}

where <checksum-result> = 12!h

Note: This trailer is mandatory for FIN and GPA messages (Service Identifier 01).

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>12</length>
						<tag>CHK</tag>
					</field>
					<field>
						<name>System Originated Message</name>
						<description><![CDATA[The system message or service message which is generated by a system PLT has a SYS trailer. All solicited system messages (Service Identifier 01) contain the MIR of the request and may also contain the time.

Format:

{SYS:[<time><mir>]}

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>SYS</tag>
					</field>
					<field>
						<name>Test And Training Message</name>
						<description><![CDATA[Mandatory for FIN and GPA messages (Service Identifier 01) sent by, or delivered to, a Test & Training Logical Terminal (LT). This trailer has a tag only, and no value.

Format:

{TNG:}
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>0</length>
						<tag>TNG</tag>
					</field>
					<field>
						<name>Possible Duplicate Emission</name>
						<description><![CDATA[This trailer is used by the destination of the message. It only applies to FIN user-to-user messages (Service Identifier 01, message categories reserved for banking messages). There can be multiple PDEs. The system does not verify the order nor restrict the number (except for maximum message length).

Correctly formatted PDE trailers applied to user-to-system messages are accepted by the system, but not processed. This means that the system does not check to see if the original message exists. Therefore, a retrieval request sent with a PDE trailer may be processed twice if the original message was received by the system.

Format:

{PDE:[<time><mir>]}

where <time><mir> refers to the emission of the previous possible issue.

Note: It can be added automatically by a CBT or manually by a user. It may be followed by the MIR and the time of its previous possible messages.

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>PDE</tag>
					</field>
					<field>
						<name>Delayed Message</name>
						<description><![CDATA[This trailer is added to all FIN user-to-user output messages that have exceeded their obsolescence period. If this trailer appears in GPA or FIN system messages, it must be ignored. This trailer has a tag only, and no value.

The Obsolescence Period is:

U = 15 minutes

N = 100 minutes

Format:

{DLM:}

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>0</length>
						<tag>DLM</tag>
					</field>
					<field>
						<name>Possible Duplicate Message</name>
						<description><![CDATA[Added by the system to any output message (GPA and FIN Service Identifier 01) being resent because a prior delivery may be invalid. If a system PLT receives a report request with a PDM, the response has a plain PDM (without the optional delivery reference). Other PDMs may be added as a result of unsuccessful delivery attempts to the user. 
Format:
{PDM:[<time><mor>]}
where <time> and the Message Output Reference <mor> are that of the previous attempt.
Note: For messages recovered after a system failure, the optional fields may not be present.
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>PDM</tag>
					</field>
					<field>
						<name>Message Reference</name>
						<description><![CDATA[The MRF trailer is used to specify the message reference of the original user message in MT 096 FIN Copy to Central Institution Messages.
Format:
{MRF:<date><full-time><mir>}
where <mir> is that of the original user message whose fields are copied in the MT 096 FIN Copy to Central Institution Message.
Note: The MRF is specific to FIN Copy. The MRF trailer is automatically generated in the MT 096 FIN Copy to Central Institution Message and can only be reused in field 109 of the MT 096 FIN Copy to Central Institution Message to identify the MT 096 to which the MT 097 is a response. The format of the MRF is subject to change.
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>MRF</tag>
					</field>
				</fields>
			</Trailer>
		</SwiftFields>
		<validationrules name="Default">
			<hdrvalidationrules>
				<fieldvalidations>
					<fieldvalidation>
						<name>U09</name>
						<formula><![CDATA[if($this.Header.GetFieldIndex("User_Header") != -1) {
    def userHeader = $this.Header.GetSection("User_Header");
    if(userHeader.$size > 0 && userHeader[0].IsNotNull("Validation_Flag")) {
        return false;
    }
}
return true;
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U09</error-code>
						<actionmessage><![CDATA["User has used tag 119 in a message that is not a candidate for special processing"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>U03</name>
						<fieldname>User Header</fieldname>
						<formula><![CDATA[Iff(IsNotNull(User_Header.Service_Type_Identifier), 
    IsNotNull(User_Header.Unique_End_To_End_Transaction_Reference))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U03</error-code>
						<actionmessage><![CDATA["When populating an end-to-end reference, both fields 111 and 121 must be populated: a message that contains only one of these two fields will not be accepted by FIN."]]></actionmessage>
					</fieldvalidation>
				</fieldvalidations>
			</hdrvalidationrules>
			<datavalidationrules>
				<fieldvalidations>
					<fieldvalidation>
						<name>C1</name>
						<fieldname>56a</fieldname>
						<formula><![CDATA[F57a.$size > 0]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C81</error-code>
						<actionmessage><![CDATA["If field 56a is present, then field 57a must also be present."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F72-A</name>
						<fieldname>72.Narrative_-_Structured_Format</fieldname>
						<formula><![CDATA[VerifyField72NarrativeText($value)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T32</error-code>
						<actionmessage><![CDATA["The first line of field 72 should be of the following format: /8c/[additional information]. The remaining lines (2 - 6) should be of the following format: [//continuation of additional information] or [/8c/[additional information]]."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>ERI-1</name>
						<comment><![CDATA["For specific message types, an European currency must not be used as the currency of settlement after a cut-off date (Error Code: E76)."]]></comment>
						<formula><![CDATA[applyERIValidation(F32A[0], "Date", F32A[0], "Currency")]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E76</error-code>
						<actionmessage><![CDATA["For specific message types, an European currency must not be used as the currency of settlement after a cut-off date (Error Code: E76)."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>ERI-2</name>
						<fieldname>72.Narrative_-_Structured_Format</fieldname>
						<formula><![CDATA[ApplyERICodeValidationStructured($value);]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T47</error-code>
						<actionmessage><![CDATA["In an ERI field (i.e. fields 61, 72, 77A, 79, 86) the data part of a code word /OCMT/, or /CHGS/, is being validated, but the ending separator (i.e. third slash) is missing or the code words are duplicated."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F72-B</name>
						<fieldname>72.Narrative_-_Structured_Format</fieldname>
						<formula><![CDATA[def Actualvalue = replace($value, "\r\n", "\n");
def lines = Split("\n", Actualvalue);
def str = Left(Actualvalue, 6);
def line1format = false;
def line3format = false;
def TREFformat = true;
def CHGSformat = true;
def TEXTformat = true;
def format = true;
def count = 0;
def TREFcount = 0;
def CHGScount = 0;
def TEXTcount = 0;
def i = lines.Length();
if(In(str, "/REJT/", "/RETN/")) {
    if(i <= 6) {
        //if '/REJT/' or '/RETN/' format of 1st line must be "6!x2!n[1a]['/'2c]" & format of 2nd line must be "('/'2!c 2!n'/')[29x]" or "('/X'1c2!n'/')[29x]"
        //if format of 2nd line is "('/'2!c 2!n'/')" then the 6 characters must be one of the codes given below
        line1format = (VerifyFormat(lines[0], "6!x2!n[1a]['/'2c]"));
        if(line1format && lines.Length() > 2) {
            if(!lines[1].StartsWith("/X")) {
                if(VerifyFormat(lines[1], "('/'2!c 2!n'/')[29x]")) {
                	def startStr = lines[1].Left(6);
                    if((!In(startStr, "/AC01/", "/AC02/", "/AC03/", "/AC04/", "/AC05/", "/AC06/", 
                            "/AM01/", "/AM02/", "/AM03/", "/AM04/", "/AM05/", "/AM06/", "/AM07/", 
                            "/AM08/", "/AG01/", "/AG02/", "/BE01/", "/BE02/", "/BE03/", "/BE04/", 
                            "/BE05/", "/DT01/", "/MS01/", "/PY01/", "/RC01/", "/RC02/", "/RC03/", 
                            "/RC04/", "/RF01/", "/TM01/", "/RR01/", "/RR02/", "/RR03/")))
                        return false;
                }
                else
                    return false;
            }
            else if(lines[1].StartsWith("/X") && !VerifyFormat(lines[1], "('/X'1c2!n'/')[29x]"))
                return false;
        }
        else
            return false;
        //Line3 is mandatory and should have the format "/MREF/16x". Lines 4, 5 and 6 are optional
        //If lines 4, 5 or 6 or any combination exists and if the first 6 characters starts with either '/TREF/' or '/CHGS/' or '/TEXT/' or '//'
        //it should satisfy the format given. Also if line starts with '//' it can appear a max of 2 times
        line3format = Equal(Left(lines[2], 6), "/MREF/") && 
                        VerifyFormat(Substring(lines[2], 6), "16x");
        if(line3format) {
            while(i > 3) {
                def str1 = Left(lines[i - 1], 6);
                def str2 = Substring(lines[i - 1], 6);
                if(In(str1, "/TREF/", "/CHGS/", "/TEXT/") || StartsWith(lines[i - 1], "//")) {
                    if(str1 == "/TREF/") {
                        TREFformat = VerifyFormat(str2, "16x");
                        TREFcount += 1;
                    }
                    else if(str1 == "/CHGS/") {
                        CHGSformat = (VerifyFormat(str2, "3!a15d") && 
                                        IsISOCurrencyCode(Substring(lines[i - 1], 6, 3)));
                        CHGScount += 1;
                    }
                    else if(str1 == "/TEXT/") {
                        TEXTformat = (VerifyFormat(str2, "29x"));
                        TEXTcount += 1;
                    }
                    else if(StartsWith(lines[i - 1], "//")) {
                        def str3 = Substring(lines[i - 1], 2);
                        format = (VerifyFormat(str3, "33x"));
                        count += 1;
                        if(!format || count > 2)
                            break;
                    }
                }
                else
                    return false;
                i = i - 1;
            }
        }
        else
            return false;
        if(!TREFformat || !CHGSformat || !TEXTformat || !format || count > 2 || TREFcount > 1 || 
             CHGScount > 1 || TEXTcount > 1)
            return false;
    }
    else
        return false;
}
return true;
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T80</error-code>
						<actionmessage><![CDATA["Field 72 Reject/Return: code word error, or mandatory code word missing, or code word not in the proper sequence, or format 6*35x not satisfied"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F-32A</name>
						<fieldname>32A.Currency</fieldname>
						<formula><![CDATA[!In($value, "XAU", "XAG", "XPD", "XPT")]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C08</error-code>
						<actionmessage><![CDATA["The codes XAU, XAG, XPD and XPT are not allowed, as these are codes for commodities for which the category 6 commodities messages must be used."]]></actionmessage>
					</fieldvalidation>
				</fieldvalidations>
			</datavalidationrules>
			<tlrvalidationrules>
				<fieldvalidations>
				</fieldvalidations>
			</tlrvalidationrules>
		</validationrules>
		<elementproperties>
			<propertymap>
				<property name="codegen.java.properties">
					<value>
						<propertymap type="com.tplus.transform.design.PropertiesDef">
							<property name="Java Package Name" value="com.transform.external.%e"/>
							<property name="Jar Name" value="%c.jar"/>
							<property name="Manifest Entries" value="transformrt.jar swiftrt.jar swiftresources.jar"/>
							<property name="Data Source" value=""/>
						</propertymap>
					</value>
				</property>
			</propertymap>
		</elementproperties>
	</externalmessage>
	<externalmessage xsi:type="SwiftFormat" type="SwiftFormat" version="5.1.2" rulename="MT202COV_2016" formattype="SwiftFormat" >
		<description><![CDATA[This message is sent by or on behalf of the ordering institution directly, or through correspondent(s), to the financial institution of the beneficiary institution. 

It must only be used to order the movement of funds related to an underlying customer credit transfer that was sent with the cover method. 

The MT 202 COV must not be used for any other interbank transfer. For these transfers the MT 202 must be used.]]></description>
		<standard>SWIFT</standard>
		<standard-name>MT202COV</standard-name>
		<standard-version>SRG 2016</standard-version>
		<standard-release-qualifier>20160308</standard-release-qualifier>
		<standard-category>Financial Institution Transfers</standard-category>
		<standard-detailed-name>General Financial Institution Transfer</standard-detailed-name>
		<version>1.0</version>
		<SwiftFields>
			<customizable>true</customizable>
			<modifiable>false</modifiable>
			<SwiftMessageType>User</SwiftMessageType>
			<max-length>10000</max-length>
			<HeaderAndTrailerType>SWIFT_INPUT_OUTPUT_HEADER</HeaderAndTrailerType>
			<Header>
				<fields>
					<field>
						<name>Basic Header</name>
						<description><![CDATA[The Basic Header is given in Block 1 of a SWIFT message and is the only header that appears on all messages. The Basic Header provides the fundamental reference for any particular message and is almost always automatically built by the CBT.
The Basic Header has the same format for both input and output messages. However, the information contained in the Basic Header is relative to the sender when the message is input but relative to the receiver when the same message is output.]]></description>
						<datatype>Section</datatype>
						<required>true</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Application Identifier</name>
								<description><![CDATA[The Application Identifier identifies the application within which the message is being sent or received. The available options are:

F = FIN All user-to-user, FIN system and FIN service messages 
A = GPA Most GPA system and service messages 
L = GPA Certain GPA service messages, for example, LOGIN, LAKs, ABORT 

These values are automatically assigned by the SWIFT system and the user's CBT, but the user should be aware of their existence and significance
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Service Identifier</name>
								<description><![CDATA[The Service Identifier consists of 2 numeric characters. It identifies the type of data that is being sent or received and, in doing so, whether the message which follows is one of the following:

a user-to-user message

a system message

a service message, for example, a session control command, such as SELECT, or a logical acknowledgement, such as ACK/SAK/UAK

Users will be primarily concerned with identifier '01' which applies to all GPA and FIN system and user-to-user messages. Other values include: '21' for message acknowledgements such as ACK/NAK, UAK/UNK, '03' for SELECT commands, and 
so on]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>2</length>
							</field>
							<field>
								<name>LT Identifier</name>
								<description><![CDATA[This 12-character SWIFT address, given in the Basic Header Block, is the address of the sending LT for input messages or of the receiving LT for output messages, and includes the Branch Code.

In the Basic Header, the LT Code within the LT Identifier is specific to the LT that has established the session in which the message is being transmitted, that is the sending LT for input messages or the receiving LT for output messages.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>12</length>
							</field>
							<field>
								<name>Session Number</name>
								<description><![CDATA[The Session Number identifies the session in which the message was transmitted. Within the Basic Header, the 4-digit Session Number is the user's current GPA or FIN Session Number.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Sequence Number</name>
								<description><![CDATA[The sequence number always consists of 6 digits. It is the ISN of the sender's current input session or the OSN of the receiver's current output session.

Note: The sequence number is not present in those messages with an Application Identifier of 'L' (for example LOGIN). The sequence number is, however, a key element in the processing of retrievals. Therefore, LOGINs and attempted LOGINs are not retrievable
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>6</length>
							</field>
						</fields>
					</field>
					<field>
						<name>Application Header Input</name>
						<description><![CDATA[The Application Header of a SWIFT message provides information about the message itself.

The Application Header is given in Block 2 of a SWIFT message. It differs according to whether the message is a GPA or a FIN message and whether the Application Header is part of an input or an output message.

]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Input/Output Identifier</name>
								<description><![CDATA[For an input message, the Input/Output Identifier consists of the single letter 'I'.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Message Type</name>
								<description><![CDATA[The Message Type consists of 3 digits which define the MT number of the message being input. The example used above is for an MT 100 Customer Transfer]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>3</length>
							</field>
							<field>
								<name>Receiver's Address</name>
								<description><![CDATA[This address is the 12-character SWIFT address of the receiver of the message, but with a LT Code of 'X'. It defines the destination to which the message should be sent.

The system will replace the 'X' with a specific LT Code on delivery of the message according to the delivery control exercised by the receiving user.

The Branch Code is mandatory and will be validated. The default of 'XXX' may be used, as in the example above.

Unless otherwise documented, system messages addressed to the SWIFT system itself should be addressed to SWFTXXXXXXXX.

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>12</length>
							</field>
							<field>
								<name>Message Priority</name>
								<description><![CDATA[This character, used within FIN Application Headers only, defines the priority with which a message is delivered. The possible values are:

S = System

U = Urgent

N = Normal

Message Priority 'S' must be used for user-to-system messages; for user-to-user messages either 'U' or 'N' can be used. In the absence of user-specified delivery criteria, system messages are always delivered first, followed by urgent priority messages and then normal priority messages.

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Delivery Monitoring</name>
								<description><![CDATA[Delivery monitoring options apply only to FIN user-to-user messages, and allow the sender of a message to request:

automatic MT 011 Delivery Notification once the message has been delivered

automatic MT 010 Non-Delivery Warning if a message is not delivered within the specified obsolescence period (see below)

both, or neither, options. This may be requested on an individual message basis.

The chosen option is expressed as a single digit:

1 = Non-Delivery Warning

2 = Delivery Notification

3 = Non-Delivery Warning and Delivery Notification. 
If the message has priority 'U' then the user must request delivery monitoring option '1' or '3'. If the message has priority 'N', the user can request delivery monitoring option '2', or, by leaving the option blank, no delivery monitoring.
]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>1</length>
							</field>
							<field>
								<name>Obsolescence Period</name>
								<description><![CDATA[The obsolescence period defines the period of time after which a Delayed Message (DLM) trailer is added to a FIN user-to-user message when the message is delivered. For urgent priority messages, it is also the period of time after which, if the message remains undelivered, a Non-Delivery Warning is generated.

The values for the obsolescence period are 003 (15 minutes) for 'U' priority, and 020 (100 minutes) for 'N' priority. An obsolescence period can only be specified when delivery monitoring has been requested (option 1 or 3 for urgent priority messages, option 2 for normal priority messages). If no delivery monitoring has been requested, and an obsolescence period is specified, the message will be NAKed with error code H25.

GPA input Application Headers are similar to their FIN equivalents except that GPA messages do not specify priority, delivery monitoring, nor obsolescence period.

]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>3</length>
							</field>
						</fields>
					</field>
					<field>
						<name>Application Header Output</name>
						<description><![CDATA[The Application Header of a SWIFT message provides information about the message itself.

The Application Header is given in Block 2 of a SWIFT message. It differs according to whether the message is a GPA or a FIN message and whether the Application Header is part of an input or an output message.

]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Input/Output Identifier</name>
								<description><![CDATA[For an input message, the Input/Output Identifier consists of the single letter 'I'.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Message Type</name>
								<description><![CDATA[Three digits indicating the Message Type.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>3</length>
							</field>
							<field>
								<name>Input Time</name>
								<description><![CDATA[The first occurrence of the time field contains the system time and date. This is the generation time in Greenwich Mean Time (GMT).
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Message Input Reference</name>
								<description><![CDATA[The input MIR.

If the message is generated by the system, the input time is the generation time (in GMT) and the input MIR is the system MIR

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>28</length>
							</field>
							<field>
								<name>Output Date</name>
								<description><![CDATA[The output date, local to the receiver.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>6</length>
							</field>
							<field>
								<name>Output Time</name>
								<description><![CDATA[The second occurrence of the time field contains the output time and date. This is in a time local to the receiver.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Message Priority</name>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
						</fields>
					</field>
					<field>
						<name>User Header</name>
						<description><![CDATA[The User Header is an optional header available within FIN for user-to-user messages only. It appears in Block 3 of a SWIFT message, and allows users to provide their own reference within the headers for a particular message.

A User Header can only be assigned by the sender of a message and, if assigned, will always appear on the output message copy. Relevant parts of the User Header will be repeated in related system messages and acknowledgements.

Block 3 may contain tag 113, defining banking priorities, and tag 108, which is a user reference. The user reference part of the User Header may be used as one of the selection criteria when retrieving a message.

The optional field tags 103 and 115 are also used in Block 3 for the FIN Copy service. The order of tags, when present, is 103, 113, 108 and 115.

An optional field tag 119 can be included in Block 3 of certain messages to specify that different validation rules are to be applied. Agreed code words in field 119 indicate what validation rules SWIFT will apply. If field 119 is present, it should appear after field 108
]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Service Identifier</name>
								<description><![CDATA[For any message which the user submits to a FIN Copy service, Block 3 requires an additional field 103 which contains a three-character Service Identifier unique to a specific FIN Copy service. By using a unique identifier it is possible to support access to multiple services within the same CBT.
]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>3</length>
								<tag>103</tag>
							</field>
							<field>
								<name>Banking Priority</name>
								<description><![CDATA[Assigned by the sender of the message.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>4</length>
								<tag>113</tag>
							</field>
							<field>
								<name>Message User Reference</name>
								<description><![CDATA[Assigned by the sender of the message.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>16</length>
								<tag>108</tag>
							</field>
							<field>
								<name>Validation Flag</name>
								<description><![CDATA[Indicates whether a special validation needs to be performed by FIN. The following are examples of the values this field may take. Please note that this list is subject to change:

ISITC indicates validation of ISITC Standards. Only to be used with MT 521 and MT 523.

REMIT identifies the presence of field 77T. Only to be used in MT 103.

RFDD indicates that the message is a request for direct debit. Only to be used in MT 104.

STP indicates that the message is validated according to straight through processing principles. Only to be used in MT 103.

]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>119</tag>
							</field>
							<field>
								<name>Balance checkpoint date and time</name>
								<description><![CDATA[This field contains the balance checkpoint date and time consisting of a date (YYMMDD) and a time (HHMMSS[ss], where 'ss' indicates hundredths of a second). The MI that is subscribed to MIRS will always copy this reference from field tag 13G of the last MT298/091 that it sent into the related MT 298/093 or MT 097 that it generates. ]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>423</tag>
							</field>
							<field>
								<name>Message Input Reference</name>
								<description><![CDATA[This field contains the MIR of the payment message that is related to the notification messages in which this field is present. The MI that is subscribed to MIRS will copy it from the received payment message. In a FINCopy scenario, this field must contain the MIR of the related MT 096]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>106</tag>
							</field>
							<field>
								<name>Related Reference</name>
								<description><![CDATA[This field contains the reference of the payment that is related to the notification messages in which this field is present. The payment itself was not the result of a FIN message. The value of this field must correspond to the related reference (field 21) in the MT298/093. The format of field 424 is 16x.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>424</tag>
							</field>
							<field>
								<name>Service Type Identifier</name>
								<description><![CDATA[This field identifies the applicable global payment service type. The format of field 111 is 3!n.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>111</tag>
							</field>
							<field>
								<name>Unique End-To-End Transaction Reference</name>
								<description><![CDATA[This field provides an end-to-end reference across a payment transaction. The format of field 121 is 36!x.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>121</tag>
							</field>
							<field>
								<name>Addressee Information</name>
								<description><![CDATA[Tag 115 is only valid for output messages. Information from Central Institution to the receiver of payment message. Information is input in the MT 097 FIN Copy Message Authorisation/Refusal Notification in Y-Copy mode.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>115</tag>
							</field>
							<field>
								<name>Payment Release Information Receiver (FINInform Services)</name>
								<description><![CDATA[Tag 165 is only valid for output messages. This field contains information from the server destination to the receiver of payment message. It is only available for use in FINInform services that operate in Y-copy mode.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>165</tag>
							</field>
							<field>
								<name>Receiver Information</name>
								<description><![CDATA[Tag 433 is only valid for output messages. The screening service inputs information in the MT 097 FINCopy Message Authorisation/Refusal Notification, in Y-Copy mode. FINCopy copies the information to the receiver of the screened message.
				    The following values can be present in this field:
				      AOK: message automatically released by screening service
				      FPO: compliance officer has flagged the screening result as false positive
				      NOK: compliance officer has flagged the screened message as suspect
				    The code word can optionally be followed by additional information (up to 20 characters from the x character set).]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>433</tag>
							</field>
						</fields>
					</field>
				</fields>
			</Header>
			<Data>
				<Fields>
					<SwiftSequence Name="A">
						<Name>A</Name>
						<Description><![CDATA[General Information]]></Description>
						<Mandatory>true</Mandatory>
						<Repeating>false</Repeating>
						<Fields>
							<SwiftField Name="20">
								<SwiftFieldDef Name="20">
									<Generic>false</Generic>
									<Description><![CDATA[Transaction Reference Number]]></Description>
									<Option Name="">
										<Format><![CDATA[16x]]></Format>
										<Specification><![CDATA[(Reference)]]></Specification>
										<Description><![CDATA[Transaction Reference Number]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options> </Options>
								<Validations>
									<SubField Name="Reference">
										<Validation>
											<Options> </Options>
											<ErrorCode>T26</ErrorCode>
											<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive slashes '//' (Error code(s): T26).]]></Comment>
											<ValidationPattern xsi:type="T26" Type="T26">
												<Type>T26</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="21">
								<SwiftFieldDef Name="21">
									<Generic>false</Generic>
									<Description><![CDATA[Related Reference]]></Description>
									<Option Name="">
										<Format><![CDATA[16x]]></Format>
										<Specification><![CDATA[(Related Reference)]]></Specification>
										<Description><![CDATA[Related Reference]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options> </Options>
								<Validations>
									<SubField Name="Related_Reference">
										<Validation>
											<Options> </Options>
											<ErrorCode>T26</ErrorCode>
											<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive slashes '//' (Error code(s): T26).]]></Comment>
											<ValidationPattern xsi:type="T26" Type="T26">
												<Type>T26</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="13C">
								<SwiftFieldDef Name="13">
									<Generic>false</Generic>
									<Description><![CDATA[Time Indication]]></Description>
									<Option Name="C">
										<Format><![CDATA[/8c/4!n1!x4!n]]></Format>
										<Specification><![CDATA[(Code) (Time indication) (Sign) (Time offset) ]]></Specification>
										<Description><![CDATA[Time Indication]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>true</Repeating>
								<Presence>O</Presence>
								<Options>C</Options>
								<Validations>
									<SubField Name="Time_indication">
										<Validation>
											<Options>C</Options>
											<ErrorCode>T38</ErrorCode>
											<Comment><![CDATA[Time indication must be a valid time expressed as HHMM (Error code(s): T38).]]></Comment>
											<ValidationPattern xsi:type="DATE" Type="DATE">
												<Type>DATE</Type>
												<Format>HHmm</Format>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="Sign">
										<Validation>
											<Options>C</Options>
											<ErrorCode>T15</ErrorCode>
											<Comment><![CDATA[Sign is either '+' or '-' (Error code(s): T15).]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="+">
													</Code>
													<Code Name="-">
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="Time_offset">
										<Validation>
											<Options>C</Options>
											<ErrorCode>T16</ErrorCode>
											<Comment><![CDATA[Time offset is expressed as 'HHMM', where the hour component, that is, 'HH', must be in the range of 00 through 13, and the minute component, that is, 'MM', must be in the range of 00 through 59. Any 'HH' or 'MM' component outside of these range checks will be disallowed (Error code(s): T16).]]></Comment>
											<ValidationPattern xsi:type="Time_Offset" Type="Time Offset">
												<Type>Time Offset</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="32A">
								<SwiftFieldDef Name="32">
									<Generic>false</Generic>
									<Description><![CDATA[Value Date, Currency Code, Amount]]></Description>
									<Option Name="A">
										<Format><![CDATA[6!n3!a15d]]></Format>
										<Specification><![CDATA[(Date) (Currency) (Amount)]]></Specification>
										<Description><![CDATA[Value Date, Currency Code, Amount]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options>A</Options>
								<Validations>
									<SubField Name="Date">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T50</ErrorCode>
											<Comment><![CDATA[Date must be a valid date expressed as YYMMDD (Error code(s): T50).]]></Comment>
											<ValidationPattern xsi:type="DATE" Type="DATE">
												<Type>DATE</Type>
												<Format>yyMMdd</Format>
												<value-date>true</value-date>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="Currency">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T52</ErrorCode>
											<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52).]]></Comment>
											<ValidationPattern xsi:type="Currency_Code" Type="Currency Code">
												<Type>Currency Code</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="Amount">
										<Validation>
											<Options>A</Options>
											<ErrorCode>C03</ErrorCode>
											<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency.(Error code(s): C03)]]></Comment>
											<ValidationPattern xsi:type="Decimal" Type="Decimal">
												<Type>Decimal</Type>
												<currency-field>Currency</currency-field>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="52a">
								<SwiftFieldDef Name="52">
									<Generic>false</Generic>
									<Description><![CDATA[Ordering Institution]]></Description>
									<Option Name="A">
										<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
										<Description><![CDATA[Ordering Institution]]></Description>
									</Option>
									<Option Name="D">
										<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
										<Description><![CDATA[Ordering Institution]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>A, D</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27, T28, T29, T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC (Error code(s): T27,T28,T29,T45).]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
										<Validation>
											<Options>A</Options>
											<ErrorCode>C05</ErrorCode>
											<Comment><![CDATA[Identifier Code must not be a BEI. See the latest version of the BIC Directory - Corporations for more information about BEIs. This error code applies to all types of BICs referenced in a FIN message including SWIFT BICs, non-SWIFT BICs, Masters, Synonyms, Live destinations and Test & Training destinations (Error code(s): C05).]]></Comment>
											<ValidationPattern xsi:type="C05" Type="C05">
												<Type>C05</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="CreditDebit">
										<Validation>
											<Options>A, D</Options>
											<ErrorCode>T51</ErrorCode>
											<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="C">
														<DetailedName>Credit</DetailedName>
													</Code>
													<Code Name="D">
														<DetailedName>Debit</DetailedName>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="53a">
								<SwiftFieldDef Name="53">
									<Generic>false</Generic>
									<Description><![CDATA[Sender's Correspondent]]></Description>
									<Option Name="A">
										<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
										<Description><![CDATA[Sender's Correspondent]]></Description>
									</Option>
									<Option Name="B">
										<Format><![CDATA[/1!a[/34x](CRLF35x) | /1!a[/34x] | [/34xCRLF]35x | /34x]]></Format>
										<Specification><![CDATA[(CreditDebit) (Party Identifier) (Location) | (CreditDebit)(Party Identifier) |(Party Identifier) (Location) | (Party Identifier)]]></Specification>
										<Description><![CDATA[Sender's Correspondent]]></Description>
									</Option>
									<Option Name="D">
										<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
										<Description><![CDATA[Sender's Correspondent]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>A, B, D</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27, T28, T29, T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC (Error code(s): T27,T28,T29,T45).]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
										<Validation>
											<Options>A</Options>
											<ErrorCode>C05</ErrorCode>
											<Comment><![CDATA[Identifier Code must not be a BEI. See the latest version of the BIC Directory - Corporations for more information about BEIs. This error code applies to all types of BICs referenced in a FIN message including SWIFT BICs, non-SWIFT BICs, Masters, Synonyms, Live destinations and Test & Training destinations (Error code(s): C05).]]></Comment>
											<ValidationPattern xsi:type="C05" Type="C05">
												<Type>C05</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="CreditDebit">
										<Validation>
											<Options>A, B, D</Options>
											<ErrorCode>T51</ErrorCode>
											<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="C">
														<DetailedName>Credit</DetailedName>
													</Code>
													<Code Name="D">
														<DetailedName>Debit</DetailedName>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="54a">
								<SwiftFieldDef Name="54">
									<Generic>false</Generic>
									<Description><![CDATA[Receiver's Correspondent]]></Description>
									<Option Name="A">
										<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
										<Description><![CDATA[Receiver's Correspondent]]></Description>
									</Option>
									<Option Name="B">
										<Format><![CDATA[/1!a[/34x](CRLF35x) | /1!a[/34x] | [/34xCRLF]35x | /34x]]></Format>
										<Specification><![CDATA[(CreditDebit) (Party Identifier) (Location) | (CreditDebit)(Party Identifier) |(Party Identifier) (Location) | (Party Identifier)]]></Specification>
										<Description><![CDATA[Receiver's Correspondent]]></Description>
									</Option>
									<Option Name="D">
										<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
										<Description><![CDATA[Receiver's Correspondent]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>A, B, D</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27, T28, T29, T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC (Error code(s): T27,T28,T29,T45).]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
										<Validation>
											<Options>A</Options>
											<ErrorCode>C05</ErrorCode>
											<Comment><![CDATA[Identifier Code must not be a BEI. See the latest version of the BIC Directory - Corporations for more information about BEIs. This error code applies to all types of BICs referenced in a FIN message including SWIFT BICs, non-SWIFT BICs, Masters, Synonyms, Live destinations and Test & Training destinations (Error code(s): C05).]]></Comment>
											<ValidationPattern xsi:type="C05" Type="C05">
												<Type>C05</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="CreditDebit">
										<Validation>
											<Options>A, B, D</Options>
											<ErrorCode>T51</ErrorCode>
											<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="C">
														<DetailedName>Credit</DetailedName>
													</Code>
													<Code Name="D">
														<DetailedName>Debit</DetailedName>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="56a">
								<SwiftFieldDef Name="56">
									<Generic>false</Generic>
									<Description><![CDATA[Intermediary]]></Description>
									<Option Name="A">
										<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
										<Description><![CDATA[Intermediary]]></Description>
									</Option>
									<Option Name="D">
										<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
										<Description><![CDATA[Intermediary]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>A, D</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27, T28, T29, T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC (Error code(s): T27,T28,T29,T45).]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
										<Validation>
											<Options>A</Options>
											<ErrorCode>C05</ErrorCode>
											<Comment><![CDATA[Identifier Code must not be a BEI. See the latest version of the BIC Directory - Corporations for more information about BEIs. This error code applies to all types of BICs referenced in a FIN message including SWIFT BICs, non-SWIFT BICs, Masters, Synonyms, Live destinations and Test & Training destinations (Error code(s): C05).]]></Comment>
											<ValidationPattern xsi:type="C05" Type="C05">
												<Type>C05</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="CreditDebit">
										<Validation>
											<Options>A, D</Options>
											<ErrorCode>T51</ErrorCode>
											<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="C">
														<DetailedName>Credit</DetailedName>
													</Code>
													<Code Name="D">
														<DetailedName>Debit</DetailedName>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="57a">
								<SwiftFieldDef Name="57">
									<Generic>false</Generic>
									<Description><![CDATA[Account With Institution]]></Description>
									<Option Name="A">
										<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
										<Description><![CDATA[Account With Institution]]></Description>
									</Option>
									<Option Name="B">
										<Format><![CDATA[/1!a[/34x](CRLF35x) | /1!a[/34x] | [/34xCRLF]35x | /34x]]></Format>
										<Specification><![CDATA[(CreditDebit) (Party Identifier) (Location) | (CreditDebit)(Party Identifier) |(Party Identifier) (Location) | (Party Identifier)]]></Specification>
										<Description><![CDATA[Account With Institution]]></Description>
									</Option>
									<Option Name="D">
										<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
										<Description><![CDATA[Account With Institution]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>A, B, D</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27, T28, T29, T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC (Error code(s): T27,T28,T29,T45).]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
										<Validation>
											<Options>A</Options>
											<ErrorCode>C05</ErrorCode>
											<Comment><![CDATA[Identifier Code must not be a BEI. See the latest version of the BIC Directory - Corporations for more information about BEIs. This error code applies to all types of BICs referenced in a FIN message including SWIFT BICs, non-SWIFT BICs, Masters, Synonyms, Live destinations and Test & Training destinations (Error code(s): C05).]]></Comment>
											<ValidationPattern xsi:type="C05" Type="C05">
												<Type>C05</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="CreditDebit">
										<Validation>
											<Options>A, B, D</Options>
											<ErrorCode>T51</ErrorCode>
											<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="C">
														<DetailedName>Credit</DetailedName>
													</Code>
													<Code Name="D">
														<DetailedName>Debit</DetailedName>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="58a">
								<SwiftFieldDef Name="58">
									<Generic>false</Generic>
									<Description><![CDATA[Beneficiary Institution]]></Description>
									<Option Name="A">
										<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
										<Description><![CDATA[Beneficiary Institution]]></Description>
									</Option>
									<Option Name="D">
										<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
										<Description><![CDATA[Beneficiary Institution]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options>A, D</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27, T28, T29, T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC (Error code(s): T27,T28,T29,T45).]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
										<Validation>
											<Options>A</Options>
											<ErrorCode>C05</ErrorCode>
											<Comment><![CDATA[Identifier Code must not be a BEI. See the latest version of the BIC Directory - Corporations for more information about BEIs. This error code applies to all types of BICs referenced in a FIN message including SWIFT BICs, non-SWIFT BICs, Masters, Synonyms, Live destinations and Test & Training destinations (Error code(s): C05).]]></Comment>
											<ValidationPattern xsi:type="C05" Type="C05">
												<Type>C05</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="CreditDebit">
										<Validation>
											<Options>A, D</Options>
											<ErrorCode>T51</ErrorCode>
											<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="C">
														<DetailedName>Credit</DetailedName>
													</Code>
													<Code Name="D">
														<DetailedName>Debit</DetailedName>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="72">
								<SwiftFieldDef Name="72">
									<Generic>false</Generic>
									<Description><![CDATA[Sender to Receiver Information]]></Description>
									<Option Name="">
										<Format><![CDATA[6*35x]]></Format>
										<Specification><![CDATA[(Narrative - Structured Format)]]></Specification>
										<Description><![CDATA[Sender to Receiver Information]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options> </Options>
							</SwiftField>
						</Fields>
					</SwiftSequence>
					<SwiftSequence Name="B">
						<Name>B</Name>
						<Description><![CDATA[Underlying customer credit transfer details]]></Description>
						<Mandatory>true</Mandatory>
						<Repeating>false</Repeating>
						<Fields>
							<SwiftField Name="50a">
								<SwiftFieldDef Name="50">
									<Generic>false</Generic>
									<Description><![CDATA[Ordering Customer]]></Description>
									<Option Name="A">
										<Format><![CDATA[([/34xCRLF])(4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(Account)(Identifier Code)]]></Specification>
										<Description><![CDATA[Ordering Customer]]></Description>
									</Option>
									<Option Name="F">
										<Format><![CDATA[35x(CRLF4*35x)]]></Format>
										<Specification><![CDATA[(Party Identifier)(Name & Address)]]></Specification>
										<Description><![CDATA[Ordering Customer]]></Description>
									</Option>
									<Option Name="K">
										<Format><![CDATA[([/34xCRLF])(4*35x)]]></Format>
										<Specification><![CDATA[(Account)(Name & Address)]]></Specification>
										<Description><![CDATA[Ordering Customer]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options>A, F, K</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27, T28, T29, T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45).]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="52a">
								<SwiftFieldDef Name="52">
									<Generic>false</Generic>
									<Description><![CDATA[Ordering Institution]]></Description>
									<Option Name="A">
										<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
										<Description><![CDATA[Ordering Institution]]></Description>
									</Option>
									<Option Name="D">
										<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
										<Description><![CDATA[Ordering Institution]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>A, D</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27, T28, T29, T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC (Error code(s): T27,T28,T29,T45).]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
										<Validation>
											<Options>A</Options>
											<ErrorCode>C05</ErrorCode>
											<Comment><![CDATA[Identifier Code must not be a BEI. See the latest version of the BIC Directory - Corporations for more information about BEIs. This error code applies to all types of BICs referenced in a FIN message including SWIFT BICs, non-SWIFT BICs, Masters, Synonyms, Live destinations and Test & Training destinations (Error code(s): C05).]]></Comment>
											<ValidationPattern xsi:type="C05" Type="C05">
												<Type>C05</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="CreditDebit">
										<Validation>
											<Options>A, D</Options>
											<ErrorCode>T51</ErrorCode>
											<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="C">
														<DetailedName>Credit</DetailedName>
													</Code>
													<Code Name="D">
														<DetailedName>Debit</DetailedName>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="56a">
								<SwiftFieldDef Name="56">
									<Generic>false</Generic>
									<Description><![CDATA[Intermediary Institution]]></Description>
									<Option Name="A">
										<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
										<Description><![CDATA[Intermediary Institution]]></Description>
									</Option>
									<Option Name="C">
										<Format><![CDATA[/34x]]></Format>
										<Specification><![CDATA[(Party Identifier)]]></Specification>
										<Description><![CDATA[Intermediary Institution]]></Description>
									</Option>
									<Option Name="D">
										<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
										<Description><![CDATA[Intermediary Institution]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>A, C, D</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27, T28, T29, T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC (Error code(s): T27,T28,T29,T45).]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
										<Validation>
											<Options>A</Options>
											<ErrorCode>C05</ErrorCode>
											<Comment><![CDATA[Identifier Code must not be a BEI. See the latest version of the BIC Directory - Corporations for more information about BEIs. This error code applies to all types of BICs referenced in a FIN message including SWIFT BICs, non-SWIFT BICs, Masters, Synonyms, Live destinations and Test & Training destinations (Error code(s): C05).]]></Comment>
											<ValidationPattern xsi:type="C05" Type="C05">
												<Type>C05</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="CreditDebit">
										<Validation>
											<Options>A, D</Options>
											<ErrorCode>T51</ErrorCode>
											<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="C">
														<DetailedName>Credit</DetailedName>
													</Code>
													<Code Name="D">
														<DetailedName>Debit</DetailedName>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="57a">
								<SwiftFieldDef Name="57">
									<Generic>false</Generic>
									<Description><![CDATA[Account With Institution]]></Description>
									<Option Name="A">
										<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
										<Description><![CDATA[Account With Institution]]></Description>
									</Option>
									<Option Name="B">
										<Format><![CDATA[/1!a[/34x](CRLF35x) | /1!a[/34x] | [/34xCRLF]35x | /34x]]></Format>
										<Specification><![CDATA[(CreditDebit) (Party Identifier) (Location) | (CreditDebit)(Party Identifier) |(Party Identifier) (Location) | (Party Identifier)]]></Specification>
										<Description><![CDATA[Account With Institution]]></Description>
									</Option>
									<Option Name="C">
										<Format><![CDATA[/34x]]></Format>
										<Specification><![CDATA[(Party Identifier)]]></Specification>
										<Description><![CDATA[Account With Institution]]></Description>
									</Option>
									<Option Name="D">
										<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
										<Description><![CDATA[Account With Institution]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>A, B, C, D</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27, T28, T29, T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC (Error code(s): T27,T28,T29,T45).]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
										<Validation>
											<Options>A</Options>
											<ErrorCode>C05</ErrorCode>
											<Comment><![CDATA[Identifier Code must not be a BEI. See the latest version of the BIC Directory - Corporations for more information about BEIs. This error code applies to all types of BICs referenced in a FIN message including SWIFT BICs, non-SWIFT BICs, Masters, Synonyms, Live destinations and Test & Training destinations (Error code(s): C05).]]></Comment>
											<ValidationPattern xsi:type="C05" Type="C05">
												<Type>C05</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="CreditDebit">
										<Validation>
											<Options>A, B, D</Options>
											<ErrorCode>T51</ErrorCode>
											<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="C">
														<DetailedName>Credit</DetailedName>
													</Code>
													<Code Name="D">
														<DetailedName>Debit</DetailedName>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="59a">
								<SwiftFieldDef Name="59">
									<Generic>false</Generic>
									<Description><![CDATA[Beneficiary Customer]]></Description>
									<Option Name="">
										<Format><![CDATA[[/34xCRLF]4*35x]]></Format>
										<Specification><![CDATA[(Account)(Name & Address)]]></Specification>
										<Description><![CDATA[Beneficiary Customer]]></Description>
									</Option>
									<Option Name="A">
										<Format><![CDATA[([/34xCRLF])(4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(Account)(Identifier Code)]]></Specification>
										<Description><![CDATA[Beneficiary Customer]]></Description>
									</Option>
									<Option Name="F">
										<Format><![CDATA[[/34xCRLF]4*35x]]></Format>
										<Specification><![CDATA[(Account)(Name & Address Details)]]></Specification>
										<Description><![CDATA[Beneficiary Customer]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options> , A, F</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27, T28, T29, T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45).]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="70">
								<SwiftFieldDef Name="70">
									<Generic>false</Generic>
									<Description><![CDATA[Remittance Information]]></Description>
									<Option Name="">
										<Format><![CDATA[4*35x]]></Format>
										<Specification><![CDATA[(Narrative)]]></Specification>
										<Description><![CDATA[Remittance Information]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options> </Options>
							</SwiftField>
							<SwiftField Name="72">
								<SwiftFieldDef Name="72">
									<Generic>false</Generic>
									<Description><![CDATA[Sender to Receiver Information]]></Description>
									<Option Name="">
										<Format><![CDATA[6*35x]]></Format>
										<Specification><![CDATA[(Narrative - Structured Format)]]></Specification>
										<Description><![CDATA[Sender to Receiver Information]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options> </Options>
							</SwiftField>
							<SwiftField Name="33B">
								<SwiftFieldDef Name="33">
									<Generic>false</Generic>
									<Description><![CDATA[Currency/Instructed Amount]]></Description>
									<Option Name="B">
										<Format><![CDATA[3!a15d]]></Format>
										<Specification><![CDATA[(Currency) (Amount)]]></Specification>
										<Description><![CDATA[Currency/Instructed Amount]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>B</Options>
								<Validations>
									<SubField Name="Currency">
										<Validation>
											<Options>B</Options>
											<ErrorCode>T52</ErrorCode>
											<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52).]]></Comment>
											<ValidationPattern xsi:type="Currency_Code" Type="Currency Code">
												<Type>Currency Code</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="Amount">
										<Validation>
											<Options>B</Options>
											<ErrorCode>C03</ErrorCode>
											<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency.(Error code(s): C03)]]></Comment>
											<ValidationPattern xsi:type="Decimal" Type="Decimal">
												<Type>Decimal</Type>
												<currency-field>Currency</currency-field>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
						</Fields>
					</SwiftSequence>
				</Fields>
			</Data>
			<Trailer>
				<fields>
					<field>
						<name>Message Authentication Code</name>
						<description><![CDATA[Allows authentication by the receiving user. It is followed by an authentication result.

This trailer is mandatory for most user-to-user message categories within the FIN application. When the FIN Copy Service is used a PAC trailer, if present, follows the MAC trailer.

Format:

{MAC:<authentication-result>}

where <authentication-result> = 8!h

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>8</length>
						<tag>MAC</tag>
					</field>
					<field>
						<name>Proprietary Authentication Code</name>
						<description><![CDATA[The PAC is used within the FIN Copy service only, when using the double authentication option. The PAC is included in Block 5 of FIN user-to-user messages, immediately after the MAC trailer, if present.

This is calculated on the extracted fields of Block 4 of the message, the value of field 115, if present, and the <authentication-result> of the MAC trailer for Copy Services with double authentication.

Thus, the end-of-block indicator (CrLf-) is included in the PAC calculation, and the fields are defined as follows:

The first three characters are CrLf:

The field and the delimiter are present, that is, 32A:, 20:, and so on.

All subfields and their delimiters are present.

Format:

{PAC:[<authentication-result>]}

where <authentication-result> is mandatory on input messages only and <authentication-result> = 8!h

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>8</length>
						<tag>PAC</tag>
					</field>
					<field>
						<name>Checksum</name>
						<description><![CDATA[The checksum is computed based on the receiver's address (12 characters, with 9th character replaced by X) plus the Text Block. This trailer allows the system and the CBT to check that messages have not been corrupted due to a system malfunction or an undetected transmission error.

Format:

{CHK:<checksum-result>}

where <checksum-result> = 12!h

Note: This trailer is mandatory for FIN and GPA messages (Service Identifier 01).

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>12</length>
						<tag>CHK</tag>
					</field>
					<field>
						<name>System Originated Message</name>
						<description><![CDATA[The system message or service message which is generated by a system PLT has a SYS trailer. All solicited system messages (Service Identifier 01) contain the MIR of the request and may also contain the time.

Format:

{SYS:[<time><mir>]}

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>SYS</tag>
					</field>
					<field>
						<name>Test And Training Message</name>
						<description><![CDATA[Mandatory for FIN and GPA messages (Service Identifier 01) sent by, or delivered to, a Test & Training Logical Terminal (LT). This trailer has a tag only, and no value.

Format:

{TNG:}
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>0</length>
						<tag>TNG</tag>
					</field>
					<field>
						<name>Possible Duplicate Emission</name>
						<description><![CDATA[This trailer is used by the destination of the message. It only applies to FIN user-to-user messages (Service Identifier 01, message categories reserved for banking messages). There can be multiple PDEs. The system does not verify the order nor restrict the number (except for maximum message length).

Correctly formatted PDE trailers applied to user-to-system messages are accepted by the system, but not processed. This means that the system does not check to see if the original message exists. Therefore, a retrieval request sent with a PDE trailer may be processed twice if the original message was received by the system.

Format:

{PDE:[<time><mir>]}

where <time><mir> refers to the emission of the previous possible issue.

Note: It can be added automatically by a CBT or manually by a user. It may be followed by the MIR and the time of its previous possible messages.

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>PDE</tag>
					</field>
					<field>
						<name>Delayed Message</name>
						<description><![CDATA[This trailer is added to all FIN user-to-user output messages that have exceeded their obsolescence period. If this trailer appears in GPA or FIN system messages, it must be ignored. This trailer has a tag only, and no value.

The Obsolescence Period is:

U = 15 minutes

N = 100 minutes

Format:

{DLM:}

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>0</length>
						<tag>DLM</tag>
					</field>
					<field>
						<name>Possible Duplicate Message</name>
						<description><![CDATA[Added by the system to any output message (GPA and FIN Service Identifier 01) being resent because a prior delivery may be invalid. If a system PLT receives a report request with a PDM, the response has a plain PDM (without the optional delivery reference). Other PDMs may be added as a result of unsuccessful delivery attempts to the user. 
Format:
{PDM:[<time><mor>]}
where <time> and the Message Output Reference <mor> are that of the previous attempt.
Note: For messages recovered after a system failure, the optional fields may not be present.
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>PDM</tag>
					</field>
					<field>
						<name>Message Reference</name>
						<description><![CDATA[The MRF trailer is used to specify the message reference of the original user message in MT 096 FIN Copy to Central Institution Messages.
Format:
{MRF:<date><full-time><mir>}
where <mir> is that of the original user message whose fields are copied in the MT 096 FIN Copy to Central Institution Message.
Note: The MRF is specific to FIN Copy. The MRF trailer is automatically generated in the MT 096 FIN Copy to Central Institution Message and can only be reused in field 109 of the MT 096 FIN Copy to Central Institution Message to identify the MT 096 to which the MT 097 is a response. The format of the MRF is subject to change.
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>MRF</tag>
					</field>
				</fields>
			</Trailer>
		</SwiftFields>
		<validationrules name="Default">
			<hdrvalidationrules>
				<fieldvalidations>
					<fieldvalidation>
						<name>U08</name>
						<formula><![CDATA[if($this.Header.GetFieldIndex("User_Header") != -1) {
    def userHeader = $this.Header.GetSection("User_Header");
    if(userHeader.$size == 0) {
        return false;
    }
    else
        if(userHeader[0].IsNull("Validation_Flag")) {
            return false;
        }
        else
            if(userHeader[0].GetString("Validation_Flag") != "COV") {
                return false;
            }
}
return true;
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U08</error-code>
						<actionmessage><![CDATA["Invalid syntax, format, code word in tag 119(Validation Flag), or field tag 119 is missing. Allowed value is COV."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>U03</name>
						<fieldname>User Header</fieldname>
						<formula><![CDATA[Iff(IsNotNull(User_Header.Service_Type_Identifier), 
    IsNotNull(User_Header.Unique_End_To_End_Transaction_Reference))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U03</error-code>
						<actionmessage><![CDATA["When populating an end-to-end reference, both fields 111 and 121 must be populated: a message that contains only one of these two fields will not be accepted by FIN."]]></actionmessage>
					</fieldvalidation>
				</fieldvalidations>
			</hdrvalidationrules>
			<datavalidationrules>
				<fieldvalidations>
					<fieldvalidation>
						<name>C1</name>
						<fieldname>A.56a</fieldname>
						<comment><![CDATA[C1
If field 56a is present in sequence A, then field 57a must also be present in sequence A (Error code(s): C81).
]]></comment>
						<formula><![CDATA[A.F57a.$size>0]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C81</error-code>
						<actionmessage><![CDATA["If field 56a is present in sequence A, then field 57a must also be present in sequence A"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C2</name>
						<fieldname>B.56a</fieldname>
						<comment><![CDATA[C2
If field 56a is present in sequence B, then field 57a must also be present in sequence B (Error code(s): C68).]]></comment>
						<formula><![CDATA[B.F57a.$size>0]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C68</error-code>
						<actionmessage><![CDATA["If field 56a is present in sequence B, then field 57a must also be present in sequence B"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FA-72</name>
						<fieldname>A.72.Narrative_-_Structured_Format</fieldname>
						<comment><![CDATA[FA-72:
The first line of field 72 should be of the following format: /8c/[additional information]. The remaining Lines (2 - 6) should be of the following format: [//continuation of additional information] or [/8c/[additional information]].]]></comment>
						<formula><![CDATA[VerifyField72NarrativeText($value)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T32</error-code>
						<actionmessage><![CDATA["The first line of field 72 should be of the following format: /8c/[additional information]. The remaining Lines (2 - 6) should be of the following format: [//continuation of additional information] or [/8c/[additional information]]."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-50a-A</name>
						<fieldname>B.50a.Party_Identifier</fieldname>
						<comment><![CDATA[FB-50a-A
With option F, subfield 1 (Party Identifier), one of the following line formats must be used (Error code(s): T54):
Line format 1 :/34x (Account)
Line format 2 :4!a/2!a/27x (Code)(Country Code)(Identifier)]]></comment>
						<formula><![CDATA[Implies(B.F50a.FormatOption == 'F', Verify50FPartyIdFormat($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T54</error-code>
						<actionmessage><![CDATA["Invalid 'Party Identifier' value. One of the following line formats must be used: /34x (Account) or 4!a/2!a/27x (Code)(Country Code)(Identifier)"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-50a-B</name>
						<fieldname>B.50a.Party_Identifier</fieldname>
						<comment><![CDATA[FB-50a-B
In option F, when subfield 1 Party Identifier is used with the (Code)(Country Code)(Identifier) format, one of the following codes must be used (Error code(s): T55): ARNU, CCPT, CUST, DRLC, EMPL, NIDN, SOSE and TXID."
]]></comment>
						<formula><![CDATA[Implies(B.F50a.FormatOption == 'F', Verify50FPartyIdCode($value))
/* get the code from party identifier if format is 4!a/2!a/27x */   ]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T55</error-code>
						<actionmessage><![CDATA["Invalid 'Party Identifier' value. When 'Party Identifier' is used with the format (Code)(Country Code)(Identifier), one of following codes must be used: ARNU, CCPT, CUST, DRLC, EMPL, NIDN, SOSE and TXID."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-50a-C</name>
						<fieldname>B.50a.Party_Identifier</fieldname>
						<comment><![CDATA[FB-50a-D
In option F, subfield 1 (Party Identifier) used with the (Code)(Country Code)(Identifier) format: Country Code must be a valid ISO country code (Error code(s): T73).
]]></comment>
						<formula><![CDATA[Implies(B.F50a.FormatOption == 'F', Verify50FPartyIdCountryCode($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T73</error-code>
						<actionmessage><![CDATA["Invalid 'Party Identifier' value. In option F, subfield 1 (Party Identifier) used with the (Code)(Country Code)(Identifier) format: Country Code must be a valid ISO country code."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-50a-D</name>
						<fieldname>B.50a.Name_&amp;_Address</fieldname>
						<comment><![CDATA[FB-50a-C
With option F, subfield 2 (Name and Address), the following line format must be used for all lines: 1!n/33x (Number)(Details). (Error code(s): T54).]]></comment>
						<formula><![CDATA[Implies(B.F50a.FormatOption == 'F', Verify50FNmandAdrFormat($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T54</error-code>
						<actionmessage><![CDATA["Invalid 'Name and Address' value. With option F, subfield 2 (Name and Address), the following line format must be used for all lines :1!n/33x (Number)(Details)."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-50a-E</name>
						<fieldname>B.50a.Name_&amp;_Address</fieldname>
						<comment><![CDATA[FB-50a-E
 With option F - subfield 2 (Name and Address), should start with Number 1 to 8 and it should follow the line formatting rules as specified in the SWIFT spec (Error code(s): T56).]]></comment>
						<formula><![CDATA[Implies(B.F50a.FormatOption == 'F', Verify50FNmandAdrLines2($value, B.F50a.Party_Identifier))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T56</error-code>
						<actionmessage><![CDATA["Invalid 'Name and Address' value. With option F - subfield 2 (Name and Address), should start with Number 1 to 8 and it should follow the line formatting rules as specified in the SWIFT spec."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-50a-F</name>
						<fieldname>B.50a.Name_&amp;_Address</fieldname>
						<comment><![CDATA[FB-50a-F
Number 4 must be followed by a valid date in the format YYYYMMDD and this date, local to the sender, must not be later than the date on which the message is successfully sent to SWIFT (Error code(s): T50).
]]></comment>
						<formula><![CDATA[Implies(B.F50a.FormatOption == 'F', Verify50FNmandAdrDate($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T50</error-code>
						<actionmessage><![CDATA["Invalid 'Name and Address' value. Number 4 must be followed by a valid date in the format YYYYMMDD and this date, local to the sender, must not be later than the date on which the message is successfully sent to SWIFT."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-50a-G</name>
						<fieldname>B.50a.Name_&amp;_Address</fieldname>
						<comment><![CDATA[FB-50a-G
Numbers 3, 5, 6 and 7 must be followed by a valid ISO country code
(Error code(s): T73).]]></comment>
						<formula><![CDATA[Implies(B.F50a.FormatOption == 'F',Verify50FNmandAdrCtryCode2($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T73</error-code>
						<actionmessage><![CDATA["Invalid 'Name and Address' value. Numbers 3, 5, 6 and 7 must be followed by a valid ISO country code."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-72</name>
						<fieldname>B.72.Narrative_-_Structured_Format</fieldname>
						<comment><![CDATA[FB-72
The first line of field 72 should be of the following format: /8c/[additional information]. The remaining lines (2 - 6) should be of the following format: [//continuation of additional information] or [/8c/[additional information]].
]]></comment>
						<formula><![CDATA[VerifyField72NarrativeText($value)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T32</error-code>
						<actionmessage><![CDATA["The first line of field 72 should be of the following format: /8c/[additional information]. The remaining lines (2 - 6) should be of the following format: [//continuation of additional information] or [/8c/[additional information]]."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>ERI-1</name>
						<fieldname>A</fieldname>
						<comment><![CDATA["For specific message types, an European currency must not be used as the currency of settlement after a cut-off date (Error Code: E76)."]]></comment>
						<formula><![CDATA[applyERIValidation(A.F32A[0], "Date", A.F32A[0], "Currency")]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E76</error-code>
						<actionmessage><![CDATA["For specific message types, an European currency must not be used as the currency of settlement after a cut-off date (Error Code: E76)."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FA-72-B</name>
						<fieldname>A.72.Narrative_-_Structured_Format</fieldname>
						<formula><![CDATA[def Actualvalue = replace($value, "\r\n", "\n");
def lines = Split("\n", Actualvalue);
def str = Left(Actualvalue, 6);
def line1format = false;
def line3format = false;
def TREFformat = true;
def CHGSformat = true;
def TEXTformat = true;
def format = true;
def count = 0;
def TREFcount = 0;
def CHGScount = 0;
def TEXTcount = 0;
def i = lines.Length();
if(In(str, "/REJT/", "/RETN/")) {
    if(i <= 6) {
        //if '/REJT/' or '/RETN/' format of 1st line must be "6!x2!n[1a]['/'2c]" & format of 2nd line must be "('/'2!c 2!n'/')[29x]" or "('/X'1c2!n'/')[29x]"
        //if format of 2nd line is "('/'2!c 2!n'/')" then the 6 characters must be one of the codes given below
        line1format = (VerifyFormat(lines[0], "6!x2!n[1a]['/'2c]"));
        if(line1format && lines.Length() > 2) {
            if(!lines[1].StartsWith("/X")) {
                if(VerifyFormat(lines[1], "('/'2!c 2!n'/')[29x]")) {
                	def startStr = lines[1].Left(6);
                    if((!In(startStr, "/AC01/", "/AC02/", "/AC03/", "/AC04/", "/AC05/", "/AC06/", 
                            "/AM01/", "/AM02/", "/AM03/", "/AM04/", "/AM05/", "/AM06/", "/AM07/", 
                            "/AM08/", "/AG01/", "/AG02/", "/BE01/", "/BE02/", "/BE03/", "/BE04/", 
                            "/BE05/", "/DT01/", "/MS01/", "/PY01/", "/RC01/", "/RC02/", "/RC03/", 
                            "/RC04/", "/RF01/", "/TM01/", "/RR01/", "/RR02/", "/RR03/")))
                        return false;
                }
                else
                    return false;
            }
            else if(lines[1].StartsWith("/X") && !VerifyFormat(lines[1], "('/X'1c2!n'/')[29x]"))
                return false;
        }
        else
            return false;
        //Line3 is mandatory and should have the format "/MREF/16x". Lines 4, 5 and 6 are optional
        //If lines 4, 5 or 6 or any combination exists and if the first 6 characters starts with either '/TREF/' or '/CHGS/' or '/TEXT/' or '//'
        //it should satisfy the format given. Also if line starts with '//' it can appear a max of 2 times
        line3format = Equal(Left(lines[2], 6), "/MREF/") && 
                        VerifyFormat(Substring(lines[2], 6), "16x");
        if(line3format) {
            while(i > 3) {
                def str1 = Left(lines[i - 1], 6);
                def str2 = Substring(lines[i - 1], 6);
                if(In(str1, "/TREF/", "/CHGS/", "/TEXT/") || StartsWith(lines[i - 1], "//")) {
                    if(str1 == "/TREF/") {
                        TREFformat = VerifyFormat(str2, "16x");
                        TREFcount += 1;
                    }
                    else if(str1 == "/CHGS/") {
                        CHGSformat = (VerifyFormat(str2, "3!a15d") && 
                                        IsISOCurrencyCode(Substring(lines[i - 1], 6, 3)));
                        CHGScount += 1;
                    }
                    else if(str1 == "/TEXT/") {
                        TEXTformat = (VerifyFormat(str2, "29x"));
                        TEXTcount += 1;
                    }
                    else if(StartsWith(lines[i - 1], "//")) {
                        def str3 = Substring(lines[i - 1], 2);
                        format = (VerifyFormat(str3, "33x"));
                        count += 1;
                        if(!format || count > 2)
                            break;
                    }
                }
                else
                    return false;
                i = i - 1;
            }
        }
        else
            return false;
        if(!TREFformat || !CHGSformat || !TEXTformat || !format || count > 2 || TREFcount > 1 || 
             CHGScount > 1 || TEXTcount > 1)
            return false;
    }
    else
        return false;
}
return true;
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T80</error-code>
						<actionmessage><![CDATA["Field 72 Reject/Return: code word error, or mandatory code word missing, or code word not in the proper sequence, or format 6*35x not satisfied"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-72-B</name>
						<fieldname>B.72.Narrative_-_Structured_Format</fieldname>
						<formula><![CDATA[def Actualvalue = replace($value, "\r\n", "\n");
def lines = Split("\n", Actualvalue);
def str = Left(Actualvalue, 6);
def line1format = false;
def line3format = false;
def TREFformat = true;
def CHGSformat = true;
def TEXTformat = true;
def format = true;
def count = 0;
def TREFcount = 0;
def CHGScount = 0;
def TEXTcount = 0;
def i = lines.Length();
if(In(str, "/REJT/", "/RETN/")) {
    if(i <= 6) {
        //if '/REJT/' or '/RETN/' format of 1st line must be "6!x2!n[1a]['/'2c]" & format of 2nd line must be "('/'2!c 2!n'/')[29x]" or "('/X'1c2!n'/')[29x]"
        //if format of 2nd line is "('/'2!c 2!n'/')" then the 6 characters must be one of the codes given below
        line1format = (VerifyFormat(lines[0], "6!x2!n[1a]['/'2c]"));
        if(line1format && lines.Length() > 2) {
            if(!lines[1].StartsWith("/X")) {
                if(VerifyFormat(lines[1], "('/'2!c 2!n'/')[29x]")) {
                	def startStr = lines[1].Left(6);
                    if((!In(startStr, "/AC01/", "/AC02/", "/AC03/", "/AC04/", "/AC05/", "/AC06/", 
                            "/AM01/", "/AM02/", "/AM03/", "/AM04/", "/AM05/", "/AM06/", "/AM07/", 
                            "/AM08/", "/AG01/", "/AG02/", "/BE01/", "/BE02/", "/BE03/", "/BE04/", 
                            "/BE05/", "/DT01/", "/MS01/", "/PY01/", "/RC01/", "/RC02/", "/RC03/", 
                            "/RC04/", "/RF01/", "/TM01/", "/RR01/", "/RR02/", "/RR03/")))
                    return false;
            }
                else
                    return false;
            }
            else if(lines[1].StartsWith("/X") && !VerifyFormat(lines[1], "('/X'1c2!n'/')[29x]"))
                return false;
        }
        else
            return false;
        //Line3 is mandatory and should have the format "/MREF/16x". Lines 4, 5 and 6 are optional
        //If lines 4, 5 or 6 or any combination exists and if the first 6 characters starts with either '/TREF/' or '/CHGS/' or '/TEXT/' or '//'
        //it should satisfy the format given. Also if line starts with '//' it can appear a max of 2 times
        line3format = Equal(Left(lines[2], 6), "/MREF/") && 
                        VerifyFormat(Substring(lines[2], 6), "16x");
        if(line3format) {
            while(i > 3) {
                def str1 = Left(lines[i - 1], 6);
                def str2 = Substring(lines[i - 1], 6);
                if(In(str1, "/TREF/", "/CHGS/", "/TEXT/") || StartsWith(lines[i - 1], "//")) {
                    if(str1 == "/TREF/") {
                        TREFformat = VerifyFormat(str2, "16x");
                        TREFcount += 1;
                    }
                    else if(str1 == "/CHGS/") {
                        CHGSformat = (VerifyFormat(str2, "3!a15d") && 
                                        IsISOCurrencyCode(Substring(lines[i - 1], 6, 3)));
                        CHGScount += 1;
                    }
                    else if(str1 == "/TEXT/") {
                        TEXTformat = (VerifyFormat(str2, "29x"));
                        TEXTcount += 1;
                    }
                    else if(StartsWith(lines[i - 1], "//")) {
                        def str3 = Substring(lines[i - 1], 2);
                        format = (VerifyFormat(str3, "33x"));
                        count += 1;
                        if(!format || count > 2)
                            break;
                    }
                }
                else
                    return false;
                i = i - 1;
            }
        }
        else
            return false;
        if(!TREFformat || !CHGSformat || !TEXTformat || !format || count > 2 || TREFcount > 1 || 
             CHGScount > 1 || TEXTcount > 1)
            return false;
    }
    else
        return false;
}
return true;
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T80</error-code>
						<actionmessage><![CDATA["Field 72 Reject/Return: code word error, or mandatory code word missing, or code word not in the proper sequence, or format 6*35x not satisfied"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>ERI-1</name>
						<fieldname>A.72.Narrative_-_Structured_Format</fieldname>
						<formula><![CDATA[ApplyERICodeValidationStructured($value);]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T47</error-code>
						<actionmessage><![CDATA["In an ERI field (i.e. fields 61, 72, 77A, 79, 86) the data part of a code word /OCMT/, or /CHGS/, is being validated, but the ending separator (i.e. third slash) is missing or the code words are duplicated."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>ERI-2</name>
						<fieldname>B.72.Narrative_-_Structured_Format</fieldname>
						<formula><![CDATA[ApplyERICodeValidationStructured($value);]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T47</error-code>
						<actionmessage><![CDATA["In an ERI field (i.e. fields 61, 72, 77A, 79, 86) the data part of a code word /OCMT/, or /CHGS/, is being validated, but the ending separator (i.e. third slash) is missing or the code words are duplicated."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FA-32A</name>
						<fieldname>A.32A.Currency</fieldname>
						<formula><![CDATA[!In($value, "XAU", "XAG", "XPD", "XPT")]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C08</error-code>
						<actionmessage><![CDATA["The codes XAU, XAG, XPD and XPT are not allowed, as these are codes for commodities for which the category 6 commodities messages must be used."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-59a-A</name>
						<fieldname>B.59a.Name_&amp;_Address_Details</fieldname>
						<formula><![CDATA[Implies(B.F59a.FormatOption == 'F', Verify59FNmandAdrDtlLines($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T56</error-code>
						<actionmessage><![CDATA["Invalid 'Name_and_Address_Details' value. With option F - subfield 2 (Name_and_Address_Details), should start with Number 1 to 3 and it should follow the line formatting rules as specified in the SWIFT spec for field 59F."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-59a-B</name>
						<fieldname>B.59a.Name_&amp;_Address_Details</fieldname>
						<formula><![CDATA[Implies(B.F59a.FormatOption == 'F', Verify59FNmandAdrDtlFormat($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T56</error-code>
						<actionmessage><![CDATA["Invalid 'Name and Address Details' value. With option F, subfield 2 (Name and Address Details), the following line format must be used for all lines :1!n/33x (Number)(Name and Address Details)."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-59a-C</name>
						<fieldname>B.59a.Name_&amp;_Address_Details</fieldname>
						<formula><![CDATA[Implies(B.F59a.FormatOption == 'F', Verify59FNmandAdrDtlCtryCode($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T73</error-code>
						<actionmessage><![CDATA["Invalid 'Name_and_Address_Details' value. Number 3 must be followed by a valid ISO country code."]]></actionmessage>
					</fieldvalidation>
				</fieldvalidations>
			</datavalidationrules>
			<tlrvalidationrules>
				<fieldvalidations>
				</fieldvalidations>
			</tlrvalidationrules>
		</validationrules>
		<elementproperties>
			<propertymap>
				<property name="codegen.java.properties">
					<value>
						<propertymap type="com.tplus.transform.design.PropertiesDef">
							<property name="Java Package Name" value="com.transform.external.%e"/>
							<property name="Jar Name" value="%c.jar"/>
							<property name="Manifest Entries" value="transformrt.jar swiftrt.jar swiftresources.jar"/>
							<property name="Data Source" value=""/>
						</propertymap>
					</value>
				</property>
			</propertymap>
		</elementproperties>
	</externalmessage>
	<externalmessage xsi:type="SwiftFormat" type="SwiftFormat" version="5.1.2" rulename="MT203_2016" formattype="SwiftFormat" >
		<description><![CDATA[This multiple message is sent by or on behalf of the ordering institution directly, or through correspondent(s), to the financial institution(s) of several beneficiary institution(s). The message contains several transactions.

It is used to order the movement of funds to each beneficiary institution.

This message may also contain order(s) for the movement of the Sender's own funds in favour of itself. This is the case when the Receiver services multiple accounts for the Sender and the funds are to be transferred between these accounts. In addition, it can be sent to a financial institution to debit an account of the Sender serviced by the Receiver and to credit an account owned by the Sender at an institution specified in field 57a.]]></description>
		<standard>SWIFT</standard>
		<standard-name>MT203</standard-name>
		<standard-version>SRG 2016</standard-version>
		<standard-release-qualifier>20160308</standard-release-qualifier>
		<standard-category>Financial Institution Transfers</standard-category>
		<standard-detailed-name>Multiple General Financial Institution Transfer</standard-detailed-name>
		<version>1.0</version>
		<SwiftFields>
			<customizable>true</customizable>
			<modifiable>false</modifiable>
			<SwiftMessageType>User</SwiftMessageType>
			<max-length>2000</max-length>
			<HeaderAndTrailerType>SWIFT_INPUT_OUTPUT_HEADER</HeaderAndTrailerType>
			<Header>
				<fields>
					<field>
						<name>Basic Header</name>
						<description><![CDATA[The Basic Header is given in Block 1 of a SWIFT message and is the only header that appears on all messages. The Basic Header provides the fundamental reference for any particular message and is almost always automatically built by the CBT.
The Basic Header has the same format for both input and output messages. However, the information contained in the Basic Header is relative to the sender when the message is input but relative to the receiver when the same message is output.]]></description>
						<datatype>Section</datatype>
						<required>true</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Application Identifier</name>
								<description><![CDATA[The Application Identifier identifies the application within which the message is being sent or received. The available options are:

F = FIN All user-to-user, FIN system and FIN service messages 
A = GPA Most GPA system and service messages 
L = GPA Certain GPA service messages, for example, LOGIN, LAKs, ABORT 

These values are automatically assigned by the SWIFT system and the user's CBT, but the user should be aware of their existence and significance
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Service Identifier</name>
								<description><![CDATA[The Service Identifier consists of 2 numeric characters. It identifies the type of data that is being sent or received and, in doing so, whether the message which follows is one of the following:

a user-to-user message

a system message

a service message, for example, a session control command, such as SELECT, or a logical acknowledgement, such as ACK/SAK/UAK

Users will be primarily concerned with identifier '01' which applies to all GPA and FIN system and user-to-user messages. Other values include: '21' for message acknowledgements such as ACK/NAK, UAK/UNK, '03' for SELECT commands, and 
so on]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>2</length>
							</field>
							<field>
								<name>LT Identifier</name>
								<description><![CDATA[This 12-character SWIFT address, given in the Basic Header Block, is the address of the sending LT for input messages or of the receiving LT for output messages, and includes the Branch Code.

In the Basic Header, the LT Code within the LT Identifier is specific to the LT that has established the session in which the message is being transmitted, that is the sending LT for input messages or the receiving LT for output messages.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>12</length>
							</field>
							<field>
								<name>Session Number</name>
								<description><![CDATA[The Session Number identifies the session in which the message was transmitted. Within the Basic Header, the 4-digit Session Number is the user's current GPA or FIN Session Number.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Sequence Number</name>
								<description><![CDATA[The sequence number always consists of 6 digits. It is the ISN of the sender's current input session or the OSN of the receiver's current output session.

Note: The sequence number is not present in those messages with an Application Identifier of 'L' (for example LOGIN). The sequence number is, however, a key element in the processing of retrievals. Therefore, LOGINs and attempted LOGINs are not retrievable
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>6</length>
							</field>
						</fields>
					</field>
					<field>
						<name>Application Header Input</name>
						<description><![CDATA[The Application Header of a SWIFT message provides information about the message itself.

The Application Header is given in Block 2 of a SWIFT message. It differs according to whether the message is a GPA or a FIN message and whether the Application Header is part of an input or an output message.

]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Input/Output Identifier</name>
								<description><![CDATA[For an input message, the Input/Output Identifier consists of the single letter 'I'.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Message Type</name>
								<description><![CDATA[The Message Type consists of 3 digits which define the MT number of the message being input. The example used above is for an MT 100 Customer Transfer]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>3</length>
							</field>
							<field>
								<name>Receiver's Address</name>
								<description><![CDATA[This address is the 12-character SWIFT address of the receiver of the message, but with a LT Code of 'X'. It defines the destination to which the message should be sent.

The system will replace the 'X' with a specific LT Code on delivery of the message according to the delivery control exercised by the receiving user.

The Branch Code is mandatory and will be validated. The default of 'XXX' may be used, as in the example above.

Unless otherwise documented, system messages addressed to the SWIFT system itself should be addressed to SWFTXXXXXXXX.

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>12</length>
							</field>
							<field>
								<name>Message Priority</name>
								<description><![CDATA[This character, used within FIN Application Headers only, defines the priority with which a message is delivered. The possible values are:

S = System

U = Urgent

N = Normal

Message Priority 'S' must be used for user-to-system messages; for user-to-user messages either 'U' or 'N' can be used. In the absence of user-specified delivery criteria, system messages are always delivered first, followed by urgent priority messages and then normal priority messages.

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Delivery Monitoring</name>
								<description><![CDATA[Delivery monitoring options apply only to FIN user-to-user messages, and allow the sender of a message to request:

automatic MT 011 Delivery Notification once the message has been delivered

automatic MT 010 Non-Delivery Warning if a message is not delivered within the specified obsolescence period (see below)

both, or neither, options. This may be requested on an individual message basis.

The chosen option is expressed as a single digit:

1 = Non-Delivery Warning

2 = Delivery Notification

3 = Non-Delivery Warning and Delivery Notification. 
If the message has priority 'U' then the user must request delivery monitoring option '1' or '3'. If the message has priority 'N', the user can request delivery monitoring option '2', or, by leaving the option blank, no delivery monitoring.
]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>1</length>
							</field>
							<field>
								<name>Obsolescence Period</name>
								<description><![CDATA[The obsolescence period defines the period of time after which a Delayed Message (DLM) trailer is added to a FIN user-to-user message when the message is delivered. For urgent priority messages, it is also the period of time after which, if the message remains undelivered, a Non-Delivery Warning is generated.

The values for the obsolescence period are 003 (15 minutes) for 'U' priority, and 020 (100 minutes) for 'N' priority. An obsolescence period can only be specified when delivery monitoring has been requested (option 1 or 3 for urgent priority messages, option 2 for normal priority messages). If no delivery monitoring has been requested, and an obsolescence period is specified, the message will be NAKed with error code H25.

GPA input Application Headers are similar to their FIN equivalents except that GPA messages do not specify priority, delivery monitoring, nor obsolescence period.

]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>3</length>
							</field>
						</fields>
					</field>
					<field>
						<name>Application Header Output</name>
						<description><![CDATA[The Application Header of a SWIFT message provides information about the message itself.

The Application Header is given in Block 2 of a SWIFT message. It differs according to whether the message is a GPA or a FIN message and whether the Application Header is part of an input or an output message.

]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Input/Output Identifier</name>
								<description><![CDATA[For an input message, the Input/Output Identifier consists of the single letter 'I'.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Message Type</name>
								<description><![CDATA[Three digits indicating the Message Type.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>3</length>
							</field>
							<field>
								<name>Input Time</name>
								<description><![CDATA[The first occurrence of the time field contains the system time and date. This is the generation time in Greenwich Mean Time (GMT).
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Message Input Reference</name>
								<description><![CDATA[The input MIR.

If the message is generated by the system, the input time is the generation time (in GMT) and the input MIR is the system MIR

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>28</length>
							</field>
							<field>
								<name>Output Date</name>
								<description><![CDATA[The output date, local to the receiver.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>6</length>
							</field>
							<field>
								<name>Output Time</name>
								<description><![CDATA[The second occurrence of the time field contains the output time and date. This is in a time local to the receiver.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Message Priority</name>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
						</fields>
					</field>
					<field>
						<name>User Header</name>
						<description><![CDATA[The User Header is an optional header available within FIN for user-to-user messages only. It appears in Block 3 of a SWIFT message, and allows users to provide their own reference within the headers for a particular message.

A User Header can only be assigned by the sender of a message and, if assigned, will always appear on the output message copy. Relevant parts of the User Header will be repeated in related system messages and acknowledgements.

Block 3 may contain tag 113, defining banking priorities, and tag 108, which is a user reference. The user reference part of the User Header may be used as one of the selection criteria when retrieving a message.

The optional field tags 103 and 115 are also used in Block 3 for the FIN Copy service. The order of tags, when present, is 103, 113, 108 and 115.

An optional field tag 119 can be included in Block 3 of certain messages to specify that different validation rules are to be applied. Agreed code words in field 119 indicate what validation rules SWIFT will apply. If field 119 is present, it should appear after field 108
]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Service Identifier</name>
								<description><![CDATA[For any message which the user submits to a FIN Copy service, Block 3 requires an additional field 103 which contains a three-character Service Identifier unique to a specific FIN Copy service. By using a unique identifier it is possible to support access to multiple services within the same CBT.
]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>3</length>
								<tag>103</tag>
							</field>
							<field>
								<name>Banking Priority</name>
								<description><![CDATA[Assigned by the sender of the message.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>4</length>
								<tag>113</tag>
							</field>
							<field>
								<name>Message User Reference</name>
								<description><![CDATA[Assigned by the sender of the message.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>16</length>
								<tag>108</tag>
							</field>
							<field>
								<name>Validation Flag</name>
								<description><![CDATA[Indicates whether a special validation needs to be performed by FIN. The following are examples of the values this field may take. Please note that this list is subject to change:

ISITC indicates validation of ISITC Standards. Only to be used with MT 521 and MT 523.

REMIT identifies the presence of field 77T. Only to be used in MT 103.

RFDD indicates that the message is a request for direct debit. Only to be used in MT 104.

STP indicates that the message is validated according to straight through processing principles. Only to be used in MT 103.

]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>119</tag>
							</field>
							<field>
								<name>Balance checkpoint date and time</name>
								<description><![CDATA[This field contains the balance checkpoint date and time consisting of a date (YYMMDD) and a time (HHMMSS[ss], where 'ss' indicates hundredths of a second). The MI that is subscribed to MIRS will always copy this reference from field tag 13G of the last MT298/091 that it sent into the related MT 298/093 or MT 097 that it generates. ]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>423</tag>
							</field>
							<field>
								<name>Message Input Reference</name>
								<description><![CDATA[This field contains the MIR of the payment message that is related to the notification messages in which this field is present. The MI that is subscribed to MIRS will copy it from the received payment message. In a FINCopy scenario, this field must contain the MIR of the related MT 096]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>106</tag>
							</field>
							<field>
								<name>Related Reference</name>
								<description><![CDATA[This field contains the reference of the payment that is related to the notification messages in which this field is present. The payment itself was not the result of a FIN message. The value of this field must correspond to the related reference (field 21) in the MT298/093. The format of field 424 is 16x.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>424</tag>
							</field>
							<field>
								<name>Service Type Identifier</name>
								<description><![CDATA[This field identifies the applicable global payment service type. The format of field 111 is 3!n.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>111</tag>
							</field>
							<field>
								<name>Unique End-To-End Transaction Reference</name>
								<description><![CDATA[This field provides an end-to-end reference across a payment transaction. The format of field 121 is 36!x.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>121</tag>
							</field>
							<field>
								<name>Addressee Information</name>
								<description><![CDATA[Tag 115 is only valid for output messages. Information from Central Institution to the receiver of payment message. Information is input in the MT 097 FIN Copy Message Authorisation/Refusal Notification in Y-Copy mode.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>115</tag>
							</field>
							<field>
								<name>Payment Release Information Receiver (FINInform Services)</name>
								<description><![CDATA[Tag 165 is only valid for output messages. This field contains information from the server destination to the receiver of payment message. It is only available for use in FINInform services that operate in Y-copy mode.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>165</tag>
							</field>
							<field>
								<name>Receiver Information</name>
								<description><![CDATA[Tag 433 is only valid for output messages. The screening service inputs information in the MT 097 FINCopy Message Authorisation/Refusal Notification, in Y-Copy mode. FINCopy copies the information to the receiver of the screened message.
				    The following values can be present in this field:
				      AOK: message automatically released by screening service
				      FPO: compliance officer has flagged the screening result as false positive
				      NOK: compliance officer has flagged the screened message as suspect
				    The code word can optionally be followed by additional information (up to 20 characters from the x character set).]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>433</tag>
							</field>
						</fields>
					</field>
				</fields>
			</Header>
			<Data>
				<Fields>
					<SwiftField Name="19">
						<SwiftFieldDef Name="19">
							<Generic>false</Generic>
							<Description><![CDATA[Sum of Amounts]]></Description>
							<Option Name="">
								<Format><![CDATA[17d]]></Format>
								<Specification><![CDATA[(Amount)]]></Specification>
								<Description><![CDATA[Sum of Amounts]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options> </Options>
					</SwiftField>
					<SwiftField Name="30">
						<SwiftFieldDef Name="30">
							<Generic>false</Generic>
							<Description><![CDATA[Value Date]]></Description>
							<Option Name="">
								<Format><![CDATA[6!n]]></Format>
								<Specification><![CDATA[(Date)]]></Specification>
								<Description><![CDATA[Value Date]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options> </Options>
						<Validations>
							<SubField Name="Date">
								<Validation>
									<Options> </Options>
									<ErrorCode>T50</ErrorCode>
									<Comment><![CDATA[Date must be a valid date expressed as YYMMDD (Error code(s): T50) .]]></Comment>
									<ValidationPattern xsi:type="DATE" Type="DATE">
										<Type>DATE</Type>
										<Format>yyMMdd</Format>
										<value-date>true</value-date>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="52a">
						<SwiftFieldDef Name="52">
							<Generic>false</Generic>
							<Description><![CDATA[Ordering Institution]]></Description>
							<Option Name="A">
								<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
								<Description><![CDATA[Ordering Institution]]></Description>
							</Option>
							<Option Name="D">
								<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
								<Description><![CDATA[Ordering Institution]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options>A, D</Options>
						<Validations>
							<SubField Name="Identifier_Code">
								<Validation>
									<Options>A</Options>
									<ErrorCode>T27, T28, T29, T45</ErrorCode>
									<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
									<ValidationPattern xsi:type="BIC" Type="BIC">
										<Type>BIC</Type>
									</ValidationPattern>
								</Validation>
								<Validation>
									<Options>A</Options>
									<ErrorCode>C05</ErrorCode>
									<Comment><![CDATA[Identifier Code must not be a BEI. Please refer to the latest version of the BIC Directory - Corporations for more information about BEIs. This error code applies to all types of BICs referenced in a FIN message including SWIFT BICs, non-SWIFT BICs, Masters, Synonyms, Live destinations and Test & Training destinations . (Error code(s): C05) .]]></Comment>
									<ValidationPattern xsi:type="C05" Type="C05">
										<Type>C05</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="CreditDebit">
								<Validation>
									<Options>A, D</Options>
									<ErrorCode>T51</ErrorCode>
									<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
									<ValidationPattern xsi:type="CODE" Type="CODE">
										<Type>CODE</Type>
										<Codes>
											<Code Name="C">
												<DetailedName>Credit</DetailedName>
											</Code>
											<Code Name="D">
												<DetailedName>Debit</DetailedName>
											</Code>
										</Codes>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="53a">
						<SwiftFieldDef Name="53">
							<Generic>false</Generic>
							<Description><![CDATA[Sender's Correspondent]]></Description>
							<Option Name="A">
								<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
								<Description><![CDATA[Sender's Correspondent]]></Description>
							</Option>
							<Option Name="B">
								<Format><![CDATA[/1!a[/34x](CRLF35x) | /1!a[/34x] | [/34xCRLF]35x | /34x]]></Format>
								<Specification><![CDATA[(CreditDebit) (Party Identifier) (Location) | (CreditDebit)(Party Identifier) |(Party Identifier) (Location) | (Party Identifier)]]></Specification>
								<Description><![CDATA[Sender's Correspondent]]></Description>
							</Option>
							<Option Name="D">
								<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
								<Description><![CDATA[Sender's Correspondent]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options>A, B, D</Options>
						<Validations>
							<SubField Name="Identifier_Code">
								<Validation>
									<Options>A</Options>
									<ErrorCode>T27, T28, T29, T45</ErrorCode>
									<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
									<ValidationPattern xsi:type="BIC" Type="BIC">
										<Type>BIC</Type>
									</ValidationPattern>
								</Validation>
								<Validation>
									<Options>A</Options>
									<ErrorCode>C05</ErrorCode>
									<Comment><![CDATA[Identifier Code must not be a BEI. Please refer to the latest version of the BIC Directory - Corporations for more information about BEIs. This error code applies to all types of BICs referenced in a FIN message including SWIFT BICs, non-SWIFT BICs, Masters, Synonyms, Live destinations and Test & Training destinations . (Error code(s): C05) .]]></Comment>
									<ValidationPattern xsi:type="C05" Type="C05">
										<Type>C05</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="CreditDebit">
								<Validation>
									<Options>A, B, D</Options>
									<ErrorCode>T51</ErrorCode>
									<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
									<ValidationPattern xsi:type="CODE" Type="CODE">
										<Type>CODE</Type>
										<Codes>
											<Code Name="C">
												<DetailedName>Credit</DetailedName>
											</Code>
											<Code Name="D">
												<DetailedName>Debit</DetailedName>
											</Code>
										</Codes>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="54a">
						<SwiftFieldDef Name="54">
							<Generic>false</Generic>
							<Description><![CDATA[Receiver's Correspondent]]></Description>
							<Option Name="A">
								<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
								<Description><![CDATA[Receiver's Correspondent]]></Description>
							</Option>
							<Option Name="B">
								<Format><![CDATA[/1!a[/34x](CRLF35x) | /1!a[/34x] | [/34xCRLF]35x | /34x]]></Format>
								<Specification><![CDATA[(CreditDebit) (Party Identifier) (Location) | (CreditDebit)(Party Identifier) |(Party Identifier) (Location) | (Party Identifier)]]></Specification>
								<Description><![CDATA[Receiver's Correspondent]]></Description>
							</Option>
							<Option Name="D">
								<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
								<Description><![CDATA[Receiver's Correspondent]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options>A, B, D</Options>
						<Validations>
							<SubField Name="Identifier_Code">
								<Validation>
									<Options>A</Options>
									<ErrorCode>T27, T28, T29, T45</ErrorCode>
									<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
									<ValidationPattern xsi:type="BIC" Type="BIC">
										<Type>BIC</Type>
									</ValidationPattern>
								</Validation>
								<Validation>
									<Options>A</Options>
									<ErrorCode>C05</ErrorCode>
									<Comment><![CDATA[Identifier Code must not be a BEI. Please refer to the latest version of the BIC Directory - Corporations for more information about BEIs. This error code applies to all types of BICs referenced in a FIN message including SWIFT BICs, non-SWIFT BICs, Masters, Synonyms, Live destinations and Test & Training destinations . (Error code(s): C05) .]]></Comment>
									<ValidationPattern xsi:type="C05" Type="C05">
										<Type>C05</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="CreditDebit">
								<Validation>
									<Options>A, B, D</Options>
									<ErrorCode>T51</ErrorCode>
									<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
									<ValidationPattern xsi:type="CODE" Type="CODE">
										<Type>CODE</Type>
										<Codes>
											<Code Name="C">
												<DetailedName>Credit</DetailedName>
											</Code>
											<Code Name="D">
												<DetailedName>Debit</DetailedName>
											</Code>
										</Codes>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="72">
						<SwiftFieldDef Name="72">
							<Generic>false</Generic>
							<Description><![CDATA[Sender to Receiver Information]]></Description>
							<Option Name="">
								<Format><![CDATA[6*35x]]></Format>
								<Specification><![CDATA[(Narrative - Structured Format)]]></Specification>
								<Description><![CDATA[Sender to Receiver Information]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options> </Options>
					</SwiftField>
					<SwiftSequence Name="A">
						<Name>A</Name>
						<Description><![CDATA[A]]></Description>
						<Mandatory>true</Mandatory>
						<Repeating>true</Repeating>
						<Fields>
							<SwiftField Name="20">
								<SwiftFieldDef Name="20">
									<Generic>false</Generic>
									<Description><![CDATA[Transaction Reference Number]]></Description>
									<Option Name="">
										<Format><![CDATA[16x]]></Format>
										<Specification><![CDATA[(Reference)]]></Specification>
										<Description><![CDATA[Transaction Reference Number]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options> </Options>
								<Validations>
									<SubField Name="Reference">
										<Validation>
											<Options> </Options>
											<ErrorCode>T26</ErrorCode>
											<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive slashes '//' (Error code(s): T26) .]]></Comment>
											<ValidationPattern xsi:type="T26" Type="T26">
												<Type>T26</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="21">
								<SwiftFieldDef Name="21">
									<Generic>false</Generic>
									<Description><![CDATA[Related Reference]]></Description>
									<Option Name="">
										<Format><![CDATA[16x]]></Format>
										<Specification><![CDATA[(Related Reference)]]></Specification>
										<Description><![CDATA[Related Reference]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options> </Options>
								<Validations>
									<SubField Name="Related_Reference">
										<Validation>
											<Options> </Options>
											<ErrorCode>T26</ErrorCode>
											<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive slashes '//' (Error code(s): T26) .]]></Comment>
											<ValidationPattern xsi:type="T26" Type="T26">
												<Type>T26</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="32B">
								<SwiftFieldDef Name="32">
									<Generic>false</Generic>
									<Description><![CDATA[Currency Code, Amount]]></Description>
									<Option Name="B">
										<Format><![CDATA[3!a15d]]></Format>
										<Specification><![CDATA[(Currency) (Amount)]]></Specification>
										<Description><![CDATA[Currency Code, Amount]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options>B</Options>
								<Validations>
									<SubField Name="Amount">
										<Validation>
											<Options>B</Options>
											<ErrorCode>C03</ErrorCode>
											<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency (Error code(s): C03, T40, T43) .]]></Comment>
											<ValidationPattern xsi:type="Decimal" Type="Decimal">
												<Type>Decimal</Type>
												<currency-field>Currency</currency-field>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="Currency">
										<Validation>
											<Options>B</Options>
											<ErrorCode>T52</ErrorCode>
											<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52) .]]></Comment>
											<ValidationPattern xsi:type="Currency_Code" Type="Currency Code">
												<Type>Currency Code</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="56a">
								<SwiftFieldDef Name="56">
									<Generic>false</Generic>
									<Description><![CDATA[Intermediary]]></Description>
									<Option Name="A">
										<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
										<Description><![CDATA[Intermediary]]></Description>
									</Option>
									<Option Name="D">
										<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
										<Description><![CDATA[Intermediary]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>A, D</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27, T28, T29, T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
										<Validation>
											<Options>A</Options>
											<ErrorCode>C05</ErrorCode>
											<Comment><![CDATA[Identifier Code must not be a BEI. Please refer to the latest version of the BIC Directory - Corporations for more information about BEIs. This error code applies to all types of BICs referenced in a FIN message including SWIFT BICs, non-SWIFT BICs, Masters, Synonyms, Live destinations and Test & Training destinations . (Error code(s): C05) .]]></Comment>
											<ValidationPattern xsi:type="C05" Type="C05">
												<Type>C05</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="CreditDebit">
										<Validation>
											<Options>A, D</Options>
											<ErrorCode>T51</ErrorCode>
											<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="C">
														<DetailedName>Credit</DetailedName>
													</Code>
													<Code Name="D">
														<DetailedName>Debit</DetailedName>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="57a">
								<SwiftFieldDef Name="57">
									<Generic>false</Generic>
									<Description><![CDATA[Account With Institution]]></Description>
									<Option Name="A">
										<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
										<Description><![CDATA[Account With Institution]]></Description>
									</Option>
									<Option Name="B">
										<Format><![CDATA[/1!a[/34x](CRLF35x) | /1!a[/34x] | [/34xCRLF]35x | /34x]]></Format>
										<Specification><![CDATA[(CreditDebit) (Party Identifier) (Location) | (CreditDebit)(Party Identifier) |(Party Identifier) (Location) | (Party Identifier)]]></Specification>
										<Description><![CDATA[Account With Institution]]></Description>
									</Option>
									<Option Name="D">
										<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
										<Description><![CDATA[Account With Institution]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>A, B, D</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27, T28, T29, T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
										<Validation>
											<Options>A</Options>
											<ErrorCode>C05</ErrorCode>
											<Comment><![CDATA[Identifier Code must not be a BEI. Please refer to the latest version of the BIC Directory - Corporations for more information about BEIs. This error code applies to all types of BICs referenced in a FIN message including SWIFT BICs, non-SWIFT BICs, Masters, Synonyms, Live destinations and Test & Training destinations . (Error code(s): C05) .]]></Comment>
											<ValidationPattern xsi:type="C05" Type="C05">
												<Type>C05</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="CreditDebit">
										<Validation>
											<Options>A, B, D</Options>
											<ErrorCode>T51</ErrorCode>
											<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="C">
														<DetailedName>Credit</DetailedName>
													</Code>
													<Code Name="D">
														<DetailedName>Debit</DetailedName>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="58a">
								<SwiftFieldDef Name="58">
									<Generic>false</Generic>
									<Description><![CDATA[Beneficiary Institution]]></Description>
									<Option Name="A">
										<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
										<Description><![CDATA[Beneficiary Institution]]></Description>
									</Option>
									<Option Name="D">
										<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
										<Description><![CDATA[Beneficiary Institution]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options>A, D</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27, T28, T29, T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
										<Validation>
											<Options>A</Options>
											<ErrorCode>C05</ErrorCode>
											<Comment><![CDATA[Identifier Code must not be a BEI. Please refer to the latest version of the BIC Directory - Corporations for more information about BEIs. This error code applies to all types of BICs referenced in a FIN message including SWIFT BICs, non-SWIFT BICs, Masters, Synonyms, Live destinations and Test & Training destinations . (Error code(s): C05) .]]></Comment>
											<ValidationPattern xsi:type="C05" Type="C05">
												<Type>C05</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="CreditDebit">
										<Validation>
											<Options>A, D</Options>
											<ErrorCode>T51</ErrorCode>
											<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="C">
														<DetailedName>Credit</DetailedName>
													</Code>
													<Code Name="D">
														<DetailedName>Debit</DetailedName>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="72">
								<SwiftFieldDef Name="72">
									<Generic>false</Generic>
									<Description><![CDATA[Sender to Receiver Information]]></Description>
									<Option Name="">
										<Format><![CDATA[6*35x]]></Format>
										<Specification><![CDATA[(Narrative - Structured Format)]]></Specification>
										<Description><![CDATA[Sender to Receiver Information]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options> </Options>
							</SwiftField>
						</Fields>
					</SwiftSequence>
				</Fields>
			</Data>
			<Trailer>
				<fields>
					<field>
						<name>Message Authentication Code</name>
						<description><![CDATA[Allows authentication by the receiving user. It is followed by an authentication result.

This trailer is mandatory for most user-to-user message categories within the FIN application. When the FIN Copy Service is used a PAC trailer, if present, follows the MAC trailer.

Format:

{MAC:<authentication-result>}

where <authentication-result> = 8!h

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>8</length>
						<tag>MAC</tag>
					</field>
					<field>
						<name>Proprietary Authentication Code</name>
						<description><![CDATA[The PAC is used within the FIN Copy service only, when using the double authentication option. The PAC is included in Block 5 of FIN user-to-user messages, immediately after the MAC trailer, if present.

This is calculated on the extracted fields of Block 4 of the message, the value of field 115, if present, and the <authentication-result> of the MAC trailer for Copy Services with double authentication.

Thus, the end-of-block indicator (CrLf-) is included in the PAC calculation, and the fields are defined as follows:

The first three characters are CrLf:

The field and the delimiter are present, that is, 32A:, 20:, and so on.

All subfields and their delimiters are present.

Format:

{PAC:[<authentication-result>]}

where <authentication-result> is mandatory on input messages only and <authentication-result> = 8!h

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>8</length>
						<tag>PAC</tag>
					</field>
					<field>
						<name>Checksum</name>
						<description><![CDATA[The checksum is computed based on the receiver's address (12 characters, with 9th character replaced by X) plus the Text Block. This trailer allows the system and the CBT to check that messages have not been corrupted due to a system malfunction or an undetected transmission error.

Format:

{CHK:<checksum-result>}

where <checksum-result> = 12!h

Note: This trailer is mandatory for FIN and GPA messages (Service Identifier 01).

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>12</length>
						<tag>CHK</tag>
					</field>
					<field>
						<name>System Originated Message</name>
						<description><![CDATA[The system message or service message which is generated by a system PLT has a SYS trailer. All solicited system messages (Service Identifier 01) contain the MIR of the request and may also contain the time.

Format:

{SYS:[<time><mir>]}

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>SYS</tag>
					</field>
					<field>
						<name>Test And Training Message</name>
						<description><![CDATA[Mandatory for FIN and GPA messages (Service Identifier 01) sent by, or delivered to, a Test & Training Logical Terminal (LT). This trailer has a tag only, and no value.

Format:

{TNG:}
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>0</length>
						<tag>TNG</tag>
					</field>
					<field>
						<name>Possible Duplicate Emission</name>
						<description><![CDATA[This trailer is used by the destination of the message. It only applies to FIN user-to-user messages (Service Identifier 01, message categories reserved for banking messages). There can be multiple PDEs. The system does not verify the order nor restrict the number (except for maximum message length).

Correctly formatted PDE trailers applied to user-to-system messages are accepted by the system, but not processed. This means that the system does not check to see if the original message exists. Therefore, a retrieval request sent with a PDE trailer may be processed twice if the original message was received by the system.

Format:

{PDE:[<time><mir>]}

where <time><mir> refers to the emission of the previous possible issue.

Note: It can be added automatically by a CBT or manually by a user. It may be followed by the MIR and the time of its previous possible messages.

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>PDE</tag>
					</field>
					<field>
						<name>Delayed Message</name>
						<description><![CDATA[This trailer is added to all FIN user-to-user output messages that have exceeded their obsolescence period. If this trailer appears in GPA or FIN system messages, it must be ignored. This trailer has a tag only, and no value.

The Obsolescence Period is:

U = 15 minutes

N = 100 minutes

Format:

{DLM:}

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>0</length>
						<tag>DLM</tag>
					</field>
					<field>
						<name>Possible Duplicate Message</name>
						<description><![CDATA[Added by the system to any output message (GPA and FIN Service Identifier 01) being resent because a prior delivery may be invalid. If a system PLT receives a report request with a PDM, the response has a plain PDM (without the optional delivery reference). Other PDMs may be added as a result of unsuccessful delivery attempts to the user. 
Format:
{PDM:[<time><mor>]}
where <time> and the Message Output Reference <mor> are that of the previous attempt.
Note: For messages recovered after a system failure, the optional fields may not be present.
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>PDM</tag>
					</field>
					<field>
						<name>Message Reference</name>
						<description><![CDATA[The MRF trailer is used to specify the message reference of the original user message in MT 096 FIN Copy to Central Institution Messages.
Format:
{MRF:<date><full-time><mir>}
where <mir> is that of the original user message whose fields are copied in the MT 096 FIN Copy to Central Institution Message.
Note: The MRF is specific to FIN Copy. The MRF trailer is automatically generated in the MT 096 FIN Copy to Central Institution Message and can only be reused in field 109 of the MT 096 FIN Copy to Central Institution Message to identify the MT 096 to which the MT 097 is a response. The format of the MRF is subject to change.
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>MRF</tag>
					</field>
				</fields>
			</Trailer>
		</SwiftFields>
		<validationrules name="Default">
			<hdrvalidationrules>
				<fieldvalidations>
					<fieldvalidation>
						<name>U09</name>
						<formula><![CDATA[if($this.Header.GetFieldIndex("User_Header") != -1) {
    def userHeader = $this.Header.GetSection("User_Header");
    if(userHeader.$size > 0 && userHeader[0].IsNotNull("Validation_Flag")) {
        return false;
    }
}
return true;
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U09</error-code>
						<actionmessage><![CDATA["User has used tag 119 in a message that is not a candidate for special processing"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>U03</name>
						<fieldname>User Header</fieldname>
						<formula><![CDATA[Iff(IsNotNull(User_Header.Service_Type_Identifier), 
    IsNotNull(User_Header.Unique_End_To_End_Transaction_Reference))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U03</error-code>
						<actionmessage><![CDATA["When populating an end-to-end reference, both fields 111 and 121 must be populated: a message that contains only one of these two fields will not be accepted by FIN."]]></actionmessage>
					</fieldvalidation>
				</fieldvalidations>
			</hdrvalidationrules>
			<datavalidationrules>
				<fieldvalidations>
					<fieldvalidation>
						<name>C1</name>
						<fieldname>19.Amount</fieldname>
						<comment><![CDATA[C1
The amount in field 19 must equal the sum of the amounts in all occurrences of field 32B (Error code(s): C01).]]></comment>
						<formula><![CDATA[Abs($value - SecSumDouble(A, "F32B.Amount")) < 1.0E-4]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C01</error-code>
						<actionmessage><![CDATA["The amount in field 19 must equal the sum of the amounts in all occurrences of field 32B"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C2</name>
						<fieldname>A.32B.Currency</fieldname>
						<comment><![CDATA[C2
The currency code in the amount field 32B must be the same for all occurrences of this field in the message (Error code(s): C02).
]]></comment>
						<formula><![CDATA[$value==A[0].F32B[0].Currency]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C02</error-code>
						<actionmessage><![CDATA["The currency code in the amount field 32B must be the same for all occurrences of this field in the message"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C4</name>
						<fieldname>A</fieldname>
						<comment><![CDATA[C4
If field 56a is present in a transaction, then field 57a must also be present (Error code(s): C81).  
]]></comment>
						<formula><![CDATA[If(A.F56a.$size>0, A.F57a.$size>0, true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C81</error-code>
						<actionmessage><![CDATA["If field 56a is present in a transaction, then field 57a must also be present."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F-19</name>
						<fieldname>A.32B.Currency</fieldname>
						<comment><![CDATA[F-19
The number of digits following the comma must not exceed the maximum number allowed for the currency specified in field 32B (Error code(s): C03,T40,T43).]]></comment>
						<formula><![CDATA[isValidDecimals($value, F19[0].Amount)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C03</error-code>
						<actionmessage><![CDATA["The number of digits following the comma must not exceed the maximum number allowed for the currency specified in field 32B."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F-72-A</name>
						<fieldname>72.Narrative_-_Structured_Format</fieldname>
						<comment><![CDATA[F-72-A
The first line of field 72 should be of the following format: /8c/[additional information]. The remaining lines (2 - 6) should be of the following format: [//continuation of additional information] or [/8c/[additional information]].]]></comment>
						<formula><![CDATA[VerifyField72NarrativeText($value)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T32</error-code>
						<actionmessage><![CDATA["The first line of field 72 should be of the following format: /8c/[additional information]. The remaining lines (2 - 6) should be of the following format: [//continuation of additional information] or [/8c/[additional information]]."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FA-72-B</name>
						<fieldname>A.72.Narrative_-_Structured_Format</fieldname>
						<comment><![CDATA[The first line of field 72 should be of the following format: /8c/[additional information]. The remaining lines (2 - 6) should be of the following format: [//continuation of additional information] or [/8c/[additional information]].]]></comment>
						<formula><![CDATA[VerifyField72NarrativeText($value)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T32</error-code>
						<actionmessage><![CDATA["The first line of field 72 should be of the following format: /8c/[additional information]. The remaining lines (2 - 6) should be of the following format: [//continuation of additional information] or [/8c/[additional information]]."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>ERI-1</name>
						<fieldname>A</fieldname>
						<comment><![CDATA["For specific message types, an European currency must not be used as the currency of settlement after a cut-off date (Error Code: E76)."]]></comment>
						<formula><![CDATA[applyERIValidation(F30[0], "Date", A.F32B[0], "Currency")]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E76</error-code>
						<actionmessage><![CDATA["For specific message types, an European currency must not be used as the currency of settlement after a cut-off date (Error Code: E76)."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>ERI-2</name>
						<fieldname>72.Narrative_-_Structured_Format</fieldname>
						<formula><![CDATA[ApplyERICodeValidationStructured($value);]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T47</error-code>
						<actionmessage><![CDATA["In an ERI field (i.e. fields 61, 72, 77A, 79, 86) the data part of a code word /OCMT/, or /CHGS/, is being validated, but the ending separator (i.e. third slash) is missing or the code words are duplicated."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>ERI-3</name>
						<fieldname>A.72.Narrative_-_Structured_Format</fieldname>
						<formula><![CDATA[ApplyERICodeValidationStructured($value);]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T47</error-code>
						<actionmessage><![CDATA["In an ERI field (i.e. fields 61, 72, 77A, 79, 86) the data part of a code word /OCMT/, or /CHGS/, is being validated, but the ending separator (i.e. third slash) is missing or the code words are duplicated."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C3-1</name>
						<comment><![CDATA[C3-1
The repetitive sequence must appear at least twice (Error code(s): T11).
]]></comment>
						<formula><![CDATA[A.$size >= 2]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T11</error-code>
						<actionmessage><![CDATA["The repetitive sequence must appear at least twice"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C3-2</name>
						<comment><![CDATA[C3-2
The repetitive sequence must not appear more than ten times (Error code(s): T10).]]></comment>
						<formula><![CDATA[A.$size <= 10]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T10</error-code>
						<actionmessage><![CDATA["The repetitive sequence must not appear more than ten times"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F-72-B</name>
						<fieldname>72.Narrative_-_Structured_Format</fieldname>
						<formula><![CDATA[def Actualvalue = replace($value, "\r\n", "\n");
def lines = Split("\n", Actualvalue);
def str = Left(Actualvalue, 6);
def line1format = false;
def line3format = false;
def TREFformat = true;
def CHGSformat = true;
def TEXTformat = true;
def format = true;
def count = 0;
def TREFcount = 0;
def CHGScount = 0;
def TEXTcount = 0;
def i = lines.Length();
if(In(str, "/REJT/", "/RETN/")) {
    if(i <= 6) {
        //if '/REJT/' or '/RETN/' format of 1st line must be "6!x2!n[1a]['/'2c]" & format of 2nd line must be "('/'2!c 2!n'/')[29x]" or "('/X'1c2!n'/')[29x]"
        //if format of 2nd line is "('/'2!c 2!n'/')" then the 6 characters must be one of the codes given below
        line1format = (VerifyFormat(lines[0], "6!x2!n[1a]['/'2c]"));
        if(line1format && lines.Length() > 2) {
            if(!lines[1].StartsWith("/X")) {
                if(VerifyFormat(lines[1], "('/'2!c 2!n'/')[29x]")) {
                	def startStr = lines[1].Left(6);
                    if((!In(startStr, "/AC01/", "/AC02/", "/AC03/", "/AC04/", "/AC05/", "/AC06/", 
                            "/AM01/", "/AM02/", "/AM03/", "/AM04/", "/AM05/", "/AM06/", "/AM07/", 
                            "/AM08/", "/AG01/", "/AG02/", "/BE01/", "/BE02/", "/BE03/", "/BE04/", 
                            "/BE05/", "/DT01/", "/MS01/", "/PY01/", "/RC01/", "/RC02/", "/RC03/", 
                            "/RC04/", "/RF01/", "/TM01/", "/RR01/", "/RR02/", "/RR03/")))
                        return false;
                }
                else
                    return false;
            }
            else if(lines[1].StartsWith("/X") && !VerifyFormat(lines[1], "('/X'1c2!n'/')[29x]"))
                return false;
        }
        else
            return false;
        //Line3 is mandatory and should have the format "/MREF/16x". Lines 4, 5 and 6 are optional
        //If lines 4, 5 or 6 or any combination exists and if the first 6 characters starts with either '/TREF/' or '/CHGS/' or '/TEXT/' or '//'
        //it should satisfy the format given. Also if line starts with '//' it can appear a max of 2 times
        line3format = Equal(Left(lines[2], 6), "/MREF/") && 
                        VerifyFormat(Substring(lines[2], 6), "16x");
        if(line3format) {
            while(i > 3) {
                def str1 = Left(lines[i - 1], 6);
                def str2 = Substring(lines[i - 1], 6);
                if(In(str1, "/TREF/", "/CHGS/", "/TEXT/") || StartsWith(lines[i - 1], "//")) {
                    if(str1 == "/TREF/") {
                        TREFformat = VerifyFormat(str2, "16x");
                        TREFcount += 1;
                    }
                    else if(str1 == "/CHGS/") {
                        CHGSformat = (VerifyFormat(str2, "3!a15d") && 
                                        IsISOCurrencyCode(Substring(lines[i - 1], 6, 3)));
                        CHGScount += 1;
                    }
                    else if(str1 == "/TEXT/") {
                        TEXTformat = (VerifyFormat(str2, "29x"));
                        TEXTcount += 1;
                    }
                    else if(StartsWith(lines[i - 1], "//")) {
                        def str3 = Substring(lines[i - 1], 2);
                        format = (VerifyFormat(str3, "33x"));
                        count += 1;
                        if(!format || count > 2)
                            break;
                    }
                }
                else
                    return false;
                i = i - 1;
            }
        }
        else
            return false;
        if(!TREFformat || !CHGSformat || !TEXTformat || !format || count > 2 || TREFcount > 1 || 
             CHGScount > 1 || TEXTcount > 1)
            return false;
    }
    else
        return false;
}
return true;
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T80</error-code>
						<actionmessage><![CDATA["Field 72 Reject/Return: code word error, or mandatory code word missing, or code word not in the proper sequence, or format 6*35x not satisfied"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FA-72-B</name>
						<fieldname>A.72.Narrative_-_Structured_Format</fieldname>
						<formula><![CDATA[def Actualvalue = replace($value, "\r\n", "\n");
def lines = Split("\n", Actualvalue);
def str = Left(Actualvalue, 6);
def line1format = false;
def line3format = false;
def TREFformat = true;
def CHGSformat = true;
def TEXTformat = true;
def format = true;
def count = 0;
def TREFcount = 0;
def CHGScount = 0;
def TEXTcount = 0;
def i = lines.Length();
if(In(str, "/REJT/", "/RETN/")) {
    if(i <= 6) {
        //if '/REJT/' or '/RETN/' format of 1st line must be "6!x2!n[1a]['/'2c]" & format of 2nd line must be "('/'2!c 2!n'/')[29x]" or "('/X'1c2!n'/')[29x]"
        //if format of 2nd line is "('/'2!c 2!n'/')" then the 6 characters must be one of the codes given below
        line1format = (VerifyFormat(lines[0], "6!x2!n[1a]['/'2c]"));
        if(line1format && lines.Length() > 2) {
            if(!lines[1].StartsWith("/X")) {
                if(VerifyFormat(lines[1], "('/'2!c 2!n'/')[29x]")) {
                	def startStr = lines[1].Left(6);
                    if((!In(startStr, "/AC01/", "/AC02/", "/AC03/", "/AC04/", "/AC05/", "/AC06/", 
                            "/AM01/", "/AM02/", "/AM03/", "/AM04/", "/AM05/", "/AM06/", "/AM07/", 
                            "/AM08/", "/AG01/", "/AG02/", "/BE01/", "/BE02/", "/BE03/", "/BE04/", 
                            "/BE05/", "/DT01/", "/MS01/", "/PY01/", "/RC01/", "/RC02/", "/RC03/", 
                            "/RC04/", "/RF01/", "/TM01/", "/RR01/", "/RR02/", "/RR03/")))
                    return false;
            }
                else
                    return false;
            }
            else if(lines[1].StartsWith("/X") && !VerifyFormat(lines[1], "('/X'1c2!n'/')[29x]"))
                return false;
        }
        else
            return false;
        //Line3 is mandatory and should have the format "/MREF/16x". Lines 4, 5 and 6 are optional
        //If lines 4, 5 or 6 or any combination exists and if the first 6 characters starts with either '/TREF/' or '/CHGS/' or '/TEXT/' or '//'
        //it should satisfy the format given. Also if line starts with '//' it can appear a max of 2 times
        line3format = Equal(Left(lines[2], 6), "/MREF/") && 
                        VerifyFormat(Substring(lines[2], 6), "16x");
        if(line3format) {
            while(i > 3) {
                def str1 = Left(lines[i - 1], 6);
                def str2 = Substring(lines[i - 1], 6);
                if(In(str1, "/TREF/", "/CHGS/", "/TEXT/") || StartsWith(lines[i - 1], "//")) {
                    if(str1 == "/TREF/") {
                        TREFformat = VerifyFormat(str2, "16x");
                        TREFcount += 1;
                    }
                    else if(str1 == "/CHGS/") {
                        CHGSformat = (VerifyFormat(str2, "3!a15d") && 
                                        IsISOCurrencyCode(Substring(lines[i - 1], 6, 3)));
                        CHGScount += 1;
                    }
                    else if(str1 == "/TEXT/") {
                        TEXTformat = (VerifyFormat(str2, "29x"));
                        TEXTcount += 1;
                    }
                    else if(StartsWith(lines[i - 1], "//")) {
                        def str3 = Substring(lines[i - 1], 2);
                        format = (VerifyFormat(str3, "33x"));
                        count += 1;
                        if(!format || count > 2)
                            break;
                    }
                }
                else
                    return false;
                i = i - 1;
            }
        }
        else
            return false;
        if(!TREFformat || !CHGSformat || !TEXTformat || !format || count > 2 || TREFcount > 1 || 
             CHGScount > 1 || TEXTcount > 1)
            return false;
    }
    else
        return false;
}
return true;
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T80</error-code>
						<actionmessage><![CDATA["Field 72 Reject/Return: code word error, or mandatory code word missing, or code word not in the proper sequence, or format 6*35x not satisfied"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FA-32B</name>
						<fieldname>A.32B.Currency</fieldname>
						<formula><![CDATA[!In($value, "XAU", "XAG", "XPD", "XPT")]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C08</error-code>
						<actionmessage><![CDATA["The codes XAU, XAG, XPD and XPT are not allowed, as these are codes for commodities for which the category 6 commodities messages must be used."]]></actionmessage>
					</fieldvalidation>
				</fieldvalidations>
			</datavalidationrules>
			<tlrvalidationrules>
				<fieldvalidations>
				</fieldvalidations>
			</tlrvalidationrules>
		</validationrules>
		<elementproperties>
			<propertymap>
			</propertymap>
		</elementproperties>
	</externalmessage>
	<externalmessage xsi:type="SwiftFormat" type="SwiftFormat" version="5.1.2" rulename="MT204_2016" formattype="SwiftFormat" >
		<description><![CDATA[This message is sent by an exchange or clearing house, or another financial institution to a SWIFT member or submember, to instruct the Receiver of the message to debit the account(s) of a third party specified in the message and to pay or credit the corresponding amount in favour of the Sender of the message.]]></description>
		<standard>SWIFT</standard>
		<standard-name>MT204</standard-name>
		<standard-version>SRG 2016</standard-version>
		<standard-release-qualifier>20160308</standard-release-qualifier>
		<standard-category>Financial Institution Transfers</standard-category>
		<standard-detailed-name>Financial Markets Direct Debit Message</standard-detailed-name>
		<version>1.0</version>
		<SwiftFields>
			<customizable>true</customizable>
			<modifiable>false</modifiable>
			<SwiftMessageType>User</SwiftMessageType>
			<max-length>2000</max-length>
			<HeaderAndTrailerType>SWIFT_INPUT_OUTPUT_HEADER</HeaderAndTrailerType>
			<Header>
				<fields>
					<field>
						<name>Basic Header</name>
						<description><![CDATA[The Basic Header is given in Block 1 of a SWIFT message and is the only header that appears on all messages. The Basic Header provides the fundamental reference for any particular message and is almost always automatically built by the CBT.
The Basic Header has the same format for both input and output messages. However, the information contained in the Basic Header is relative to the sender when the message is input but relative to the receiver when the same message is output.]]></description>
						<datatype>Section</datatype>
						<required>true</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Application Identifier</name>
								<description><![CDATA[The Application Identifier identifies the application within which the message is being sent or received. The available options are:

F = FIN All user-to-user, FIN system and FIN service messages 
A = GPA Most GPA system and service messages 
L = GPA Certain GPA service messages, for example, LOGIN, LAKs, ABORT 

These values are automatically assigned by the SWIFT system and the user's CBT, but the user should be aware of their existence and significance
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Service Identifier</name>
								<description><![CDATA[The Service Identifier consists of 2 numeric characters. It identifies the type of data that is being sent or received and, in doing so, whether the message which follows is one of the following:

a user-to-user message

a system message

a service message, for example, a session control command, such as SELECT, or a logical acknowledgement, such as ACK/SAK/UAK

Users will be primarily concerned with identifier '01' which applies to all GPA and FIN system and user-to-user messages. Other values include: '21' for message acknowledgements such as ACK/NAK, UAK/UNK, '03' for SELECT commands, and 
so on]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>2</length>
							</field>
							<field>
								<name>LT Identifier</name>
								<description><![CDATA[This 12-character SWIFT address, given in the Basic Header Block, is the address of the sending LT for input messages or of the receiving LT for output messages, and includes the Branch Code.

In the Basic Header, the LT Code within the LT Identifier is specific to the LT that has established the session in which the message is being transmitted, that is the sending LT for input messages or the receiving LT for output messages.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>12</length>
							</field>
							<field>
								<name>Session Number</name>
								<description><![CDATA[The Session Number identifies the session in which the message was transmitted. Within the Basic Header, the 4-digit Session Number is the user's current GPA or FIN Session Number.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Sequence Number</name>
								<description><![CDATA[The sequence number always consists of 6 digits. It is the ISN of the sender's current input session or the OSN of the receiver's current output session.

Note: The sequence number is not present in those messages with an Application Identifier of 'L' (for example LOGIN). The sequence number is, however, a key element in the processing of retrievals. Therefore, LOGINs and attempted LOGINs are not retrievable
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>6</length>
							</field>
						</fields>
					</field>
					<field>
						<name>Application Header Input</name>
						<description><![CDATA[The Application Header of a SWIFT message provides information about the message itself.

The Application Header is given in Block 2 of a SWIFT message. It differs according to whether the message is a GPA or a FIN message and whether the Application Header is part of an input or an output message.

]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Input/Output Identifier</name>
								<description><![CDATA[For an input message, the Input/Output Identifier consists of the single letter 'I'.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Message Type</name>
								<description><![CDATA[The Message Type consists of 3 digits which define the MT number of the message being input. The example used above is for an MT 100 Customer Transfer]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>3</length>
							</field>
							<field>
								<name>Receiver's Address</name>
								<description><![CDATA[This address is the 12-character SWIFT address of the receiver of the message, but with a LT Code of 'X'. It defines the destination to which the message should be sent.

The system will replace the 'X' with a specific LT Code on delivery of the message according to the delivery control exercised by the receiving user.

The Branch Code is mandatory and will be validated. The default of 'XXX' may be used, as in the example above.

Unless otherwise documented, system messages addressed to the SWIFT system itself should be addressed to SWFTXXXXXXXX.

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>12</length>
							</field>
							<field>
								<name>Message Priority</name>
								<description><![CDATA[This character, used within FIN Application Headers only, defines the priority with which a message is delivered. The possible values are:

S = System

U = Urgent

N = Normal

Message Priority 'S' must be used for user-to-system messages; for user-to-user messages either 'U' or 'N' can be used. In the absence of user-specified delivery criteria, system messages are always delivered first, followed by urgent priority messages and then normal priority messages.

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Delivery Monitoring</name>
								<description><![CDATA[Delivery monitoring options apply only to FIN user-to-user messages, and allow the sender of a message to request:

automatic MT 011 Delivery Notification once the message has been delivered

automatic MT 010 Non-Delivery Warning if a message is not delivered within the specified obsolescence period (see below)

both, or neither, options. This may be requested on an individual message basis.

The chosen option is expressed as a single digit:

1 = Non-Delivery Warning

2 = Delivery Notification

3 = Non-Delivery Warning and Delivery Notification. 
If the message has priority 'U' then the user must request delivery monitoring option '1' or '3'. If the message has priority 'N', the user can request delivery monitoring option '2', or, by leaving the option blank, no delivery monitoring.
]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>1</length>
							</field>
							<field>
								<name>Obsolescence Period</name>
								<description><![CDATA[The obsolescence period defines the period of time after which a Delayed Message (DLM) trailer is added to a FIN user-to-user message when the message is delivered. For urgent priority messages, it is also the period of time after which, if the message remains undelivered, a Non-Delivery Warning is generated.

The values for the obsolescence period are 003 (15 minutes) for 'U' priority, and 020 (100 minutes) for 'N' priority. An obsolescence period can only be specified when delivery monitoring has been requested (option 1 or 3 for urgent priority messages, option 2 for normal priority messages). If no delivery monitoring has been requested, and an obsolescence period is specified, the message will be NAKed with error code H25.

GPA input Application Headers are similar to their FIN equivalents except that GPA messages do not specify priority, delivery monitoring, nor obsolescence period.

]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>3</length>
							</field>
						</fields>
					</field>
					<field>
						<name>Application Header Output</name>
						<description><![CDATA[The Application Header of a SWIFT message provides information about the message itself.

The Application Header is given in Block 2 of a SWIFT message. It differs according to whether the message is a GPA or a FIN message and whether the Application Header is part of an input or an output message.

]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Input/Output Identifier</name>
								<description><![CDATA[For an input message, the Input/Output Identifier consists of the single letter 'I'.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Message Type</name>
								<description><![CDATA[Three digits indicating the Message Type.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>3</length>
							</field>
							<field>
								<name>Input Time</name>
								<description><![CDATA[The first occurrence of the time field contains the system time and date. This is the generation time in Greenwich Mean Time (GMT).
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Message Input Reference</name>
								<description><![CDATA[The input MIR.

If the message is generated by the system, the input time is the generation time (in GMT) and the input MIR is the system MIR

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>28</length>
							</field>
							<field>
								<name>Output Date</name>
								<description><![CDATA[The output date, local to the receiver.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>6</length>
							</field>
							<field>
								<name>Output Time</name>
								<description><![CDATA[The second occurrence of the time field contains the output time and date. This is in a time local to the receiver.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Message Priority</name>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
						</fields>
					</field>
					<field>
						<name>User Header</name>
						<description><![CDATA[The User Header is an optional header available within FIN for user-to-user messages only. It appears in Block 3 of a SWIFT message, and allows users to provide their own reference within the headers for a particular message.

A User Header can only be assigned by the sender of a message and, if assigned, will always appear on the output message copy. Relevant parts of the User Header will be repeated in related system messages and acknowledgements.

Block 3 may contain tag 113, defining banking priorities, and tag 108, which is a user reference. The user reference part of the User Header may be used as one of the selection criteria when retrieving a message.

The optional field tags 103 and 115 are also used in Block 3 for the FIN Copy service. The order of tags, when present, is 103, 113, 108 and 115.

An optional field tag 119 can be included in Block 3 of certain messages to specify that different validation rules are to be applied. Agreed code words in field 119 indicate what validation rules SWIFT will apply. If field 119 is present, it should appear after field 108
]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Service Identifier</name>
								<description><![CDATA[For any message which the user submits to a FIN Copy service, Block 3 requires an additional field 103 which contains a three-character Service Identifier unique to a specific FIN Copy service. By using a unique identifier it is possible to support access to multiple services within the same CBT.
]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>3</length>
								<tag>103</tag>
							</field>
							<field>
								<name>Banking Priority</name>
								<description><![CDATA[Assigned by the sender of the message.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>4</length>
								<tag>113</tag>
							</field>
							<field>
								<name>Message User Reference</name>
								<description><![CDATA[Assigned by the sender of the message.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>16</length>
								<tag>108</tag>
							</field>
							<field>
								<name>Validation Flag</name>
								<description><![CDATA[Indicates whether a special validation needs to be performed by FIN. The following are examples of the values this field may take. Please note that this list is subject to change:

ISITC indicates validation of ISITC Standards. Only to be used with MT 521 and MT 523.

REMIT identifies the presence of field 77T. Only to be used in MT 103.

RFDD indicates that the message is a request for direct debit. Only to be used in MT 104.

STP indicates that the message is validated according to straight through processing principles. Only to be used in MT 103.

]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>119</tag>
							</field>
							<field>
								<name>Balance checkpoint date and time</name>
								<description><![CDATA[This field contains the balance checkpoint date and time consisting of a date (YYMMDD) and a time (HHMMSS[ss], where 'ss' indicates hundredths of a second). The MI that is subscribed to MIRS will always copy this reference from field tag 13G of the last MT298/091 that it sent into the related MT 298/093 or MT 097 that it generates. ]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>423</tag>
							</field>
							<field>
								<name>Message Input Reference</name>
								<description><![CDATA[This field contains the MIR of the payment message that is related to the notification messages in which this field is present. The MI that is subscribed to MIRS will copy it from the received payment message. In a FINCopy scenario, this field must contain the MIR of the related MT 096]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>106</tag>
							</field>
							<field>
								<name>Related Reference</name>
								<description><![CDATA[This field contains the reference of the payment that is related to the notification messages in which this field is present. The payment itself was not the result of a FIN message. The value of this field must correspond to the related reference (field 21) in the MT298/093. The format of field 424 is 16x.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>424</tag>
							</field>
							<field>
								<name>Service Type Identifier</name>
								<description><![CDATA[This field identifies the applicable global payment service type. The format of field 111 is 3!n.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>111</tag>
							</field>
							<field>
								<name>Unique End-To-End Transaction Reference</name>
								<description><![CDATA[This field provides an end-to-end reference across a payment transaction. The format of field 121 is 36!x.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>121</tag>
							</field>
							<field>
								<name>Addressee Information</name>
								<description><![CDATA[Tag 115 is only valid for output messages. Information from Central Institution to the receiver of payment message. Information is input in the MT 097 FIN Copy Message Authorisation/Refusal Notification in Y-Copy mode.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>115</tag>
							</field>
							<field>
								<name>Payment Release Information Receiver (FINInform Services)</name>
								<description><![CDATA[Tag 165 is only valid for output messages. This field contains information from the server destination to the receiver of payment message. It is only available for use in FINInform services that operate in Y-copy mode.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>165</tag>
							</field>
							<field>
								<name>Receiver Information</name>
								<description><![CDATA[Tag 433 is only valid for output messages. The screening service inputs information in the MT 097 FINCopy Message Authorisation/Refusal Notification, in Y-Copy mode. FINCopy copies the information to the receiver of the screened message.
				    The following values can be present in this field:
				      AOK: message automatically released by screening service
				      FPO: compliance officer has flagged the screening result as false positive
				      NOK: compliance officer has flagged the screened message as suspect
				    The code word can optionally be followed by additional information (up to 20 characters from the x character set).]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>433</tag>
							</field>
						</fields>
					</field>
				</fields>
			</Header>
			<Data>
				<Fields>
					<SwiftSequence Name="A">
						<Name>A</Name>
						<Description><![CDATA[Common Elements - Reimbursement Details]]></Description>
						<Mandatory>true</Mandatory>
						<Repeating>false</Repeating>
						<Fields>
							<SwiftField Name="20">
								<SwiftFieldDef Name="20">
									<Generic>false</Generic>
									<Description><![CDATA[Reference]]></Description>
									<Option Name="">
										<Format><![CDATA[16x]]></Format>
										<Specification><![CDATA[(Transaction Reference)]]></Specification>
										<Description><![CDATA[Transaction Reference Number]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options> </Options>
								<Validations>
									<SubField Name="Transaction_Reference">
										<Validation>
											<Options> </Options>
											<ErrorCode>T26</ErrorCode>
											<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive slashes '//'(Error code(s): T26).]]></Comment>
											<ValidationPattern xsi:type="T26" Type="T26">
												<Type>T26</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="19">
								<SwiftFieldDef Name="19">
									<Generic>false</Generic>
									<Description><![CDATA[Amount]]></Description>
									<Option Name="">
										<Format><![CDATA[17d]]></Format>
										<Specification><![CDATA[(Amount)]]></Specification>
										<Description><![CDATA[Sum of Amounts]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options> </Options>
							</SwiftField>
							<SwiftField Name="30">
								<SwiftFieldDef Name="30">
									<Generic>false</Generic>
									<Option Name="">
										<Format><![CDATA[6!n]]></Format>
										<Specification><![CDATA[(Date)]]></Specification>
										<Description><![CDATA[Value Date]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options> </Options>
								<Validations>
									<SubField Name="Date">
										<Validation>
											<Options> </Options>
											<ErrorCode>T50</ErrorCode>
											<Comment><![CDATA[Date must be a valid date expressed as YYMMDD (Error code(s): T50).]]></Comment>
											<ValidationPattern xsi:type="DATE" Type="DATE">
												<Type>DATE</Type>
												<Format>yyMMdd</Format>
												<value-date>true</value-date>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="57a">
								<SwiftFieldDef Name="57">
									<Generic>false</Generic>
									<Option Name="A">
										<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
										<Description><![CDATA[Account With Institution]]></Description>
									</Option>
									<Option Name="B">
										<Format><![CDATA[/1!a[/34x](CRLF35x) | /1!a[/34x] | [/34xCRLF]35x | /34x]]></Format>
										<Specification><![CDATA[(CreditDebit) (Party Identifier) (Location) | (CreditDebit)(Party Identifier) |(Party Identifier) (Location) | (Party Identifier)]]></Specification>
										<Description><![CDATA[Account With Institution]]></Description>
									</Option>
									<Option Name="D">
										<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
										<Description><![CDATA[Account With Institution]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>A, B, D</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27, T28, T29, T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
										<Validation>
											<Options>A</Options>
											<ErrorCode>C05</ErrorCode>
											<Comment><![CDATA[Identifier Code must not be a BEI, ie must not be of subtype BEID, MCCO, TESP or TRCO]]></Comment>
											<ValidationPattern xsi:type="C05" Type="C05">
												<Type>C05</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="CreditDebit">
										<Validation>
											<Options>A, B, D</Options>
											<ErrorCode>T51</ErrorCode>
											<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="C">
														<DetailedName>Credit</DetailedName>
													</Code>
													<Code Name="D">
														<DetailedName>Debit</DetailedName>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="58a">
								<SwiftFieldDef Name="58">
									<Generic>false</Generic>
									<Option Name="A">
										<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
										<Description><![CDATA[Beneficiary Institution]]></Description>
									</Option>
									<Option Name="D">
										<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
										<Description><![CDATA[Beneficiary Institution]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>A, D</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27, T28, T29, T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
										<Validation>
											<Options>A</Options>
											<ErrorCode>C05</ErrorCode>
											<Comment><![CDATA[Identifier Code must not be a BEI, ie must not be of subtype BEID, MCCO, TESP or TRCO]]></Comment>
											<ValidationPattern xsi:type="C05" Type="C05">
												<Type>C05</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="CreditDebit">
										<Validation>
											<Options>A, D</Options>
											<ErrorCode>T51</ErrorCode>
											<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="C">
														<DetailedName>Credit</DetailedName>
													</Code>
													<Code Name="D">
														<DetailedName>Debit</DetailedName>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="72">
								<SwiftFieldDef Name="72">
									<Generic>false</Generic>
									<Description><![CDATA[Sender to Receiver Information]]></Description>
									<Option Name="">
										<Format><![CDATA[6*35x]]></Format>
										<Specification><![CDATA[(Narrative - Structured Format)]]></Specification>
										<Description><![CDATA[Sender to Receiver Information]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options> </Options>
							</SwiftField>
						</Fields>
					</SwiftSequence>
					<SwiftSequence Name="B">
						<Name>B</Name>
						<Description><![CDATA[Transaction Details]]></Description>
						<Mandatory>true</Mandatory>
						<Repeating>true</Repeating>
						<Fields>
							<SwiftField Name="20">
								<SwiftFieldDef Name="20">
									<Generic>false</Generic>
									<Description><![CDATA[Reference]]></Description>
									<Option Name="">
										<Format><![CDATA[16x]]></Format>
										<Specification><![CDATA[(Transaction Reference)]]></Specification>
										<Description><![CDATA[Transaction Reference Number]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options> </Options>
								<Validations>
									<SubField Name="Transaction_Reference">
										<Validation>
											<Options> </Options>
											<ErrorCode>T26</ErrorCode>
											<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive slashes '//' (Error code(s): T26).]]></Comment>
											<ValidationPattern xsi:type="T26" Type="T26">
												<Type>T26</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="21">
								<SwiftFieldDef Name="21">
									<Generic>false</Generic>
									<Option Name="">
										<Format><![CDATA[16x]]></Format>
										<Specification><![CDATA[(Related Reference)]]></Specification>
										<Description><![CDATA[Related Reference]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options> </Options>
								<Validations>
									<SubField Name="Related_Reference">
										<Validation>
											<Options> </Options>
											<ErrorCode>T26</ErrorCode>
											<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive slashes '//'(Error code(s): T26).]]></Comment>
											<ValidationPattern xsi:type="T26" Type="T26">
												<Type>T26</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="32B">
								<SwiftFieldDef Name="32">
									<Generic>false</Generic>
									<Description><![CDATA[Amount]]></Description>
									<Option Name="B">
										<Format><![CDATA[3!a15d]]></Format>
										<Specification><![CDATA[(Currency) (Amount)]]></Specification>
										<Description><![CDATA[Transaction Amount]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options>B</Options>
								<Validations>
									<SubField Name="Amount">
										<Validation>
											<Options>B</Options>
											<ErrorCode>C03</ErrorCode>
											<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency.]]></Comment>
											<ValidationPattern xsi:type="Decimal" Type="Decimal">
												<Type>Decimal</Type>
												<currency-field>Currency</currency-field>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="Currency">
										<Validation>
											<Options>B</Options>
											<ErrorCode>T52</ErrorCode>
											<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52).]]></Comment>
											<ValidationPattern xsi:type="Currency_Code" Type="Currency Code">
												<Type>Currency Code</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="53a">
								<SwiftFieldDef Name="53">
									<Generic>false</Generic>
									<Option Name="A">
										<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
										<Description><![CDATA[Debit Institution]]></Description>
									</Option>
									<Option Name="B">
										<Format><![CDATA[/1!a[/34x](CRLF35x) | /1!a[/34x] | [/34xCRLF]35x | /34x]]></Format>
										<Specification><![CDATA[(CreditDebit) (Party Identifier) (Location) | (CreditDebit)(Party Identifier) |(Party Identifier) (Location) | (Party Identifier)]]></Specification>
										<Description><![CDATA[Debit Institution]]></Description>
									</Option>
									<Option Name="D">
										<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
										<Description><![CDATA[Debit Institution]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options>A, B, D</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27, T28, T29, T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
										<Validation>
											<Options>A</Options>
											<ErrorCode>C05</ErrorCode>
											<Comment><![CDATA[Identifier Code must not be a BEI, ie must not be of subtype BEID, MCCO, TESP or TRCO]]></Comment>
											<ValidationPattern xsi:type="C05" Type="C05">
												<Type>C05</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="CreditDebit">
										<Validation>
											<Options>A, B, D</Options>
											<ErrorCode>T51</ErrorCode>
											<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="C">
														<DetailedName>Credit</DetailedName>
													</Code>
													<Code Name="D">
														<DetailedName>Debit</DetailedName>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="72">
								<SwiftFieldDef Name="72">
									<Generic>false</Generic>
									<Description><![CDATA[Sender to Receiver Information]]></Description>
									<Option Name="">
										<Format><![CDATA[6*35x]]></Format>
										<Specification><![CDATA[(Narrative - Structured Format)]]></Specification>
										<Description><![CDATA[Sender to Receiver Information]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options> </Options>
							</SwiftField>
						</Fields>
					</SwiftSequence>
				</Fields>
			</Data>
			<Trailer>
				<fields>
					<field>
						<name>Message Authentication Code</name>
						<description><![CDATA[Allows authentication by the receiving user. It is followed by an authentication result.

This trailer is mandatory for most user-to-user message categories within the FIN application. When the FIN Copy Service is used a PAC trailer, if present, follows the MAC trailer.

Format:

{MAC:<authentication-result>}

where <authentication-result> = 8!h

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>8</length>
						<tag>MAC</tag>
					</field>
					<field>
						<name>Proprietary Authentication Code</name>
						<description><![CDATA[The PAC is used within the FIN Copy service only, when using the double authentication option. The PAC is included in Block 5 of FIN user-to-user messages, immediately after the MAC trailer, if present.

This is calculated on the extracted fields of Block 4 of the message, the value of field 115, if present, and the <authentication-result> of the MAC trailer for Copy Services with double authentication.

Thus, the end-of-block indicator (CrLf-) is included in the PAC calculation, and the fields are defined as follows:

The first three characters are CrLf:

The field and the delimiter are present, that is, 32A:, 20:, and so on.

All subfields and their delimiters are present.

Format:

{PAC:[<authentication-result>]}

where <authentication-result> is mandatory on input messages only and <authentication-result> = 8!h

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>8</length>
						<tag>PAC</tag>
					</field>
					<field>
						<name>Checksum</name>
						<description><![CDATA[The checksum is computed based on the receiver's address (12 characters, with 9th character replaced by X) plus the Text Block. This trailer allows the system and the CBT to check that messages have not been corrupted due to a system malfunction or an undetected transmission error.

Format:

{CHK:<checksum-result>}

where <checksum-result> = 12!h

Note: This trailer is mandatory for FIN and GPA messages (Service Identifier 01).

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>12</length>
						<tag>CHK</tag>
					</field>
					<field>
						<name>System Originated Message</name>
						<description><![CDATA[The system message or service message which is generated by a system PLT has a SYS trailer. All solicited system messages (Service Identifier 01) contain the MIR of the request and may also contain the time.

Format:

{SYS:[<time><mir>]}

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>SYS</tag>
					</field>
					<field>
						<name>Test And Training Message</name>
						<description><![CDATA[Mandatory for FIN and GPA messages (Service Identifier 01) sent by, or delivered to, a Test & Training Logical Terminal (LT). This trailer has a tag only, and no value.

Format:

{TNG:}
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>0</length>
						<tag>TNG</tag>
					</field>
					<field>
						<name>Possible Duplicate Emission</name>
						<description><![CDATA[This trailer is used by the destination of the message. It only applies to FIN user-to-user messages (Service Identifier 01, message categories reserved for banking messages). There can be multiple PDEs. The system does not verify the order nor restrict the number (except for maximum message length).

Correctly formatted PDE trailers applied to user-to-system messages are accepted by the system, but not processed. This means that the system does not check to see if the original message exists. Therefore, a retrieval request sent with a PDE trailer may be processed twice if the original message was received by the system.

Format:

{PDE:[<time><mir>]}

where <time><mir> refers to the emission of the previous possible issue.

Note: It can be added automatically by a CBT or manually by a user. It may be followed by the MIR and the time of its previous possible messages.

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>PDE</tag>
					</field>
					<field>
						<name>Delayed Message</name>
						<description><![CDATA[This trailer is added to all FIN user-to-user output messages that have exceeded their obsolescence period. If this trailer appears in GPA or FIN system messages, it must be ignored. This trailer has a tag only, and no value.

The Obsolescence Period is:

U = 15 minutes

N = 100 minutes

Format:

{DLM:}

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>0</length>
						<tag>DLM</tag>
					</field>
					<field>
						<name>Possible Duplicate Message</name>
						<description><![CDATA[Added by the system to any output message (GPA and FIN Service Identifier 01) being resent because a prior delivery may be invalid. If a system PLT receives a report request with a PDM, the response has a plain PDM (without the optional delivery reference). Other PDMs may be added as a result of unsuccessful delivery attempts to the user. 
Format:
{PDM:[<time><mor>]}
where <time> and the Message Output Reference <mor> are that of the previous attempt.
Note: For messages recovered after a system failure, the optional fields may not be present.
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>PDM</tag>
					</field>
					<field>
						<name>Message Reference</name>
						<description><![CDATA[The MRF trailer is used to specify the message reference of the original user message in MT 096 FIN Copy to Central Institution Messages.
Format:
{MRF:<date><full-time><mir>}
where <mir> is that of the original user message whose fields are copied in the MT 096 FIN Copy to Central Institution Message.
Note: The MRF is specific to FIN Copy. The MRF trailer is automatically generated in the MT 096 FIN Copy to Central Institution Message and can only be reused in field 109 of the MT 096 FIN Copy to Central Institution Message to identify the MT 096 to which the MT 097 is a response. The format of the MRF is subject to change.
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>MRF</tag>
					</field>
				</fields>
			</Trailer>
		</SwiftFields>
		<validationrules name="Default">
			<hdrvalidationrules>
				<fieldvalidations>
					<fieldvalidation>
						<name>U09</name>
						<formula><![CDATA[if($this.Header.GetFieldIndex("User_Header") != -1) {
    def userHeader = $this.Header.GetSection("User_Header");
    if(userHeader.$size > 0 && userHeader[0].IsNotNull("Validation_Flag")) {
        return false;
    }
}
return true;
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U09</error-code>
						<actionmessage><![CDATA["User has used tag 119 in a message that is not a candidate for special processing"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>U03</name>
						<fieldname>User Header</fieldname>
						<formula><![CDATA[Iff(IsNotNull(User_Header.Service_Type_Identifier), 
    IsNotNull(User_Header.Unique_End_To_End_Transaction_Reference))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U03</error-code>
						<actionmessage><![CDATA["When populating an end-to-end reference, both fields 111 and 121 must be populated: a message that contains only one of these two fields will not be accepted by FIN."]]></actionmessage>
					</fieldvalidation>
				</fieldvalidations>
			</hdrvalidationrules>
			<datavalidationrules>
				<fieldvalidations>
					<fieldvalidation>
						<name>F19-A</name>
						<fieldname>A.19.Amount</fieldname>
						<formula><![CDATA[isValidDecimals(B[0].F32B[0].Currency, $value)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C03</error-code>
						<actionmessage><![CDATA["The number of digits following the comma must not exceed the maximum number allowed for the currency specified in field 32B."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C1</name>
						<fieldname>A.19.Amount</fieldname>
						<formula><![CDATA[Abs($value - SecSumDouble(B, "F32B.Amount")) < 1.0E-4]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C01</error-code>
						<actionmessage><![CDATA["The amount in field 19 must equal the sum of the amounts in all occurrences of field 32B."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C2</name>
						<fieldname>B.32B.Currency</fieldname>
						<formula><![CDATA[$value == B[0].F32B[0].Currency]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C02</error-code>
						<actionmessage><![CDATA["The currency code in the amount field 32B must be the same for all occurrences of this field in the message."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C3</name>
						<formula><![CDATA[B.$size <= 10]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T10</error-code>
						<actionmessage><![CDATA["The repetitive sequence must not appear more than ten times."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FA72-A</name>
						<fieldname>A.72.Narrative_-_Structured_Format</fieldname>
						<formula><![CDATA[VerifyField72NarrativeText($value)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T32</error-code>
						<actionmessage><![CDATA["The first line of field 72 should be of the following format: /8c/[additional information]. The remaining lines (2 - 6) should be of the following format: [//continuation of additional information] or [/8c/[additional information]]."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB72-A</name>
						<fieldname>B.72.Narrative_-_Structured_Format</fieldname>
						<formula><![CDATA[VerifyField72NarrativeText($value)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T32</error-code>
						<actionmessage><![CDATA["The first line of field 72 should be of the following format: /8c/[additional information]. The remaining lines (2 - 6) should be of the following format: [//continuation of additional information] or [/8c/[additional information]]."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>ERI-1</name>
						<fieldname>B</fieldname>
						<comment><![CDATA["For specific message types, an European currency must not be used as the currency of settlement after a cut-off date (Error Code: E76)."]]></comment>
						<formula><![CDATA[applyERIValidation(A[0].F30[0], "Date", B.F32B[0], "Currency")]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E76</error-code>
						<actionmessage><![CDATA["For specific message types, an European currency must not be used as the currency of settlement after a cut-off date (Error Code: E76)."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>ERI-2</name>
						<fieldname>A.72.Narrative_-_Structured_Format</fieldname>
						<formula><![CDATA[ApplyERICodeValidationStructured($value);]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T47</error-code>
						<actionmessage><![CDATA["In an ERI field (i.e. fields 61, 72, 77A, 79, 86) the data part of a code word /OCMT/, or /CHGS/, is being validated, but the ending separator (i.e. third slash) is missing or the code words are duplicated."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>ERI-3</name>
						<fieldname>B.72.Narrative_-_Structured_Format</fieldname>
						<formula><![CDATA[ApplyERICodeValidationStructured($value);]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T47</error-code>
						<actionmessage><![CDATA["In an ERI field (i.e. fields 61, 72, 77A, 79, 86) the data part of a code word /OCMT/, or /CHGS/, is being validated, but the ending separator (i.e. third slash) is missing or the code words are duplicated."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FA-57a-A</name>
						<fieldname>A.57a.Party_Identifier</fieldname>
						<comment><![CDATA[FA-57a-A
The value specified for Party Identifier should indicate a national clearing system code.]]></comment>
						<formula><![CDATA[VerifyPartyIdentifier($value, A.F57a.FormatOption, false, true);]]></formula>
						<enabled>false</enabled>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>FA-57a-A</error-code>
						<actionmessage><![CDATA["Party Identifier is not valid. The value following the national clearing system code does not conform to the format specified for that code."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FA-58a-A</name>
						<fieldname>A.58a.Party_Identifier</fieldname>
						<comment><![CDATA[FA-58a-A
The value specified for Party Identifier should indicate a national clearing system code.]]></comment>
						<formula><![CDATA[VerifyPartyIdentifier($value, A.F58a.FormatOption, false, true);]]></formula>
						<enabled>false</enabled>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>FA-58a-A</error-code>
						<actionmessage><![CDATA["Party Identifier is not valid. The value following the national clearing system code does not conform to the format specified for that code."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FA-72-B</name>
						<fieldname>A.72.Narrative_-_Structured_Format</fieldname>
						<formula><![CDATA[def Actualvalue = replace($value, "\r\n", "\n");
def lines = Split("\n", Actualvalue);
def str = Left(Actualvalue, 6);
def line1format = false;
def line3format = false;
def TREFformat = true;
def CHGSformat = true;
def TEXTformat = true;
def format = true;
def count = 0;
def TREFcount = 0;
def CHGScount = 0;
def TEXTcount = 0;
def i = lines.Length();
if(In(str, "/REJT/", "/RETN/")) {
    if(i <= 6) {
        //if '/REJT/' or '/RETN/' format of 1st line must be "6!x2!n[1a]['/'2c]" & format of 2nd line must be "('/'2!c 2!n'/')[29x]" or "('/X'1c2!n'/')[29x]"
        //if format of 2nd line is "('/'2!c 2!n'/')" then the 6 characters must be one of the codes given below
        line1format = (VerifyFormat(lines[0], "6!x2!n[1a]['/'2c]"));
        if(line1format && lines.Length() > 2) {
            if(!lines[1].StartsWith("/X")) {
                if(VerifyFormat(lines[1], "('/'2!c 2!n'/')[29x]")) {
                	def startStr = lines[1].Left(6);
                    if((!In(startStr, "/AC01/", "/AC02/", "/AC03/", "/AC04/", "/AC05/", "/AC06/", 
                            "/AM01/", "/AM02/", "/AM03/", "/AM04/", "/AM05/", "/AM06/", "/AM07/", 
                            "/AM08/", "/AG01/", "/AG02/", "/BE01/", "/BE02/", "/BE03/", "/BE04/", 
                            "/BE05/", "/DT01/", "/MS01/", "/PY01/", "/RC01/", "/RC02/", "/RC03/", 
                            "/RC04/", "/RF01/", "/TM01/", "/RR01/", "/RR02/", "/RR03/")))
                        return false;
                }
                else
                    return false;
            }
            else if(lines[1].StartsWith("/X") && !VerifyFormat(lines[1], "('/X'1c2!n'/')[29x]"))
                return false;
        }
        else
            return false;
        //Line3 is mandatory and should have the format "/MREF/16x". Lines 4, 5 and 6 are optional
        //If lines 4, 5 or 6 or any combination exists and if the first 6 characters starts with either '/TREF/' or '/CHGS/' or '/TEXT/' or '//'
        //it should satisfy the format given. Also if line starts with '//' it can appear a max of 2 times
        line3format = Equal(Left(lines[2], 6), "/MREF/") && 
                        VerifyFormat(Substring(lines[2], 6), "16x");
        if(line3format) {
            while(i > 3) {
                def str1 = Left(lines[i - 1], 6);
                def str2 = Substring(lines[i - 1], 6);
                if(In(str1, "/TREF/", "/CHGS/", "/TEXT/") || StartsWith(lines[i - 1], "//")) {
                    if(str1 == "/TREF/") {
                        TREFformat = VerifyFormat(str2, "16x");
                        TREFcount += 1;
                    }
                    else if(str1 == "/CHGS/") {
                        CHGSformat = (VerifyFormat(str2, "3!a15d") && 
                                        IsISOCurrencyCode(Substring(lines[i - 1], 6, 3)));
                        CHGScount += 1;
                    }
                    else if(str1 == "/TEXT/") {
                        TEXTformat = (VerifyFormat(str2, "29x"));
                        TEXTcount += 1;
                    }
                    else if(StartsWith(lines[i - 1], "//")) {
                        def str3 = Substring(lines[i - 1], 2);
                        format = (VerifyFormat(str3, "33x"));
                        count += 1;
                        if(!format || count > 2)
                            break;
                    }
                }
                else
                    return false;
                i = i - 1;
            }
        }
        else
            return false;
        if(!TREFformat || !CHGSformat || !TEXTformat || !format || count > 2 || TREFcount > 1 || 
             CHGScount > 1 || TEXTcount > 1)
            return false;
    }
    else
        return false;
}
return true;
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T80</error-code>
						<actionmessage><![CDATA["Field 72 Reject/Return: code word error, or mandatory code word missing, or code word not in the proper sequence, or format 6*35x not satisfied"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-72-B</name>
						<fieldname>B.72.Narrative_-_Structured_Format</fieldname>
						<formula><![CDATA[def Actualvalue = replace($value, "\r\n", "\n");
def lines = Split("\n", Actualvalue);
def str = Left(Actualvalue, 6);
def line1format = false;
def line3format = false;
def TREFformat = true;
def CHGSformat = true;
def TEXTformat = true;
def format = true;
def count = 0;
def TREFcount = 0;
def CHGScount = 0;
def TEXTcount = 0;
def i = lines.Length();
if(In(str, "/REJT/", "/RETN/")) {
    if(i <= 6) {
        //if '/REJT/' or '/RETN/' format of 1st line must be "6!x2!n[1a]['/'2c]" & format of 2nd line must be "('/'2!c 2!n'/')[29x]" or "('/X'1c2!n'/')[29x]"
        //if format of 2nd line is "('/'2!c 2!n'/')" then the 6 characters must be one of the codes given below
        line1format = (VerifyFormat(lines[0], "6!x2!n[1a]['/'2c]"));
        if(line1format && lines.Length() > 2) {
            if(!lines[1].StartsWith("/X")) {
                if(VerifyFormat(lines[1], "('/'2!c 2!n'/')[29x]")) {
                	def startStr = lines[1].Left(6);
                    if((!In(startStr, "/AC01/", "/AC02/", "/AC03/", "/AC04/", "/AC05/", "/AC06/", 
                            "/AM01/", "/AM02/", "/AM03/", "/AM04/", "/AM05/", "/AM06/", "/AM07/", 
                            "/AM08/", "/AG01/", "/AG02/", "/BE01/", "/BE02/", "/BE03/", "/BE04/", 
                            "/BE05/", "/DT01/", "/MS01/", "/PY01/", "/RC01/", "/RC02/", "/RC03/", 
                            "/RC04/", "/RF01/", "/TM01/", "/RR01/", "/RR02/", "/RR03/")))
                    return false;
            }
                else
                    return false;
            }
            else if(lines[1].StartsWith("/X") && !VerifyFormat(lines[1], "('/X'1c2!n'/')[29x]"))
                return false;
        }
        else
            return false;
        //Line3 is mandatory and should have the format "/MREF/16x". Lines 4, 5 and 6 are optional
        //If lines 4, 5 or 6 or any combination exists and if the first 6 characters starts with either '/TREF/' or '/CHGS/' or '/TEXT/' or '//'
        //it should satisfy the format given. Also if line starts with '//' it can appear a max of 2 times
        line3format = Equal(Left(lines[2], 6), "/MREF/") && 
                        VerifyFormat(Substring(lines[2], 6), "16x");
        if(line3format) {
            while(i > 3) {
                def str1 = Left(lines[i - 1], 6);
                def str2 = Substring(lines[i - 1], 6);
                if(In(str1, "/TREF/", "/CHGS/", "/TEXT/") || StartsWith(lines[i - 1], "//")) {
                    if(str1 == "/TREF/") {
                        TREFformat = VerifyFormat(str2, "16x");
                        TREFcount += 1;
                    }
                    else if(str1 == "/CHGS/") {
                        CHGSformat = (VerifyFormat(str2, "3!a15d") && 
                                        IsISOCurrencyCode(Substring(lines[i - 1], 6, 3)));
                        CHGScount += 1;
                    }
                    else if(str1 == "/TEXT/") {
                        TEXTformat = (VerifyFormat(str2, "29x"));
                        TEXTcount += 1;
                    }
                    else if(StartsWith(lines[i - 1], "//")) {
                        def str3 = Substring(lines[i - 1], 2);
                        format = (VerifyFormat(str3, "33x"));
                        count += 1;
                        if(!format || count > 2)
                            break;
                    }
                }
                else
                    return false;
                i = i - 1;
            }
        }
        else
            return false;
        if(!TREFformat || !CHGSformat || !TEXTformat || !format || count > 2 || TREFcount > 1 || 
             CHGScount > 1 || TEXTcount > 1)
            return false;
    }
    else
        return false;
}
return true;
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T80</error-code>
						<actionmessage><![CDATA["Field 72 Reject/Return: code word error, or mandatory code word missing, or code word not in the proper sequence, or format 6*35x not satisfied"]]></actionmessage>
					</fieldvalidation>
				</fieldvalidations>
			</datavalidationrules>
			<tlrvalidationrules>
				<fieldvalidations>
				</fieldvalidations>
			</tlrvalidationrules>
		</validationrules>
		<elementproperties>
			<propertymap>
			</propertymap>
		</elementproperties>
	</externalmessage>
	<externalmessage xsi:type="SwiftFormat" type="SwiftFormat" version="5.1.2" rulename="MT205_2016" formattype="SwiftFormat" >
		<description><![CDATA[This message is sent by the Receiver of a category 2 message that is, 200, 201, 202, 203 or 205, or equivalent (for example ISO 20022 Financial Institution Credit Transfer) , directly , or through correspondent(s), to the financial institution of the beneficiary institution.

It is used to further transmit a funds transfer instruction where Sender and Receiver are located in the same country. 

If the funds transfer instruction is related to an underlying customer credit transfer that was sent with the cover method, then the MT 205 must not be used. 
]]></description>
		<standard>SWIFT</standard>
		<standard-name>MT205</standard-name>
		<standard-version>SRG 2016</standard-version>
		<standard-release-qualifier>20160308</standard-release-qualifier>
		<standard-category>Financial Institution Transfers</standard-category>
		<standard-detailed-name>Financial Institution Transfer Execution</standard-detailed-name>
		<version>1.0</version>
		<SwiftFields>
			<customizable>true</customizable>
			<modifiable>false</modifiable>
			<SwiftMessageType>User</SwiftMessageType>
			<max-length>10000</max-length>
			<HeaderAndTrailerType>SWIFT_INPUT_OUTPUT_HEADER</HeaderAndTrailerType>
			<Header>
				<fields>
					<field>
						<name>Basic Header</name>
						<description><![CDATA[The Basic Header is given in Block 1 of a SWIFT message and is the only header that appears on all messages. The Basic Header provides the fundamental reference for any particular message and is almost always automatically built by the CBT.
The Basic Header has the same format for both input and output messages. However, the information contained in the Basic Header is relative to the sender when the message is input but relative to the receiver when the same message is output.]]></description>
						<datatype>Section</datatype>
						<required>true</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Application Identifier</name>
								<description><![CDATA[The Application Identifier identifies the application within which the message is being sent or received. The available options are:

F = FIN All user-to-user, FIN system and FIN service messages 
A = GPA Most GPA system and service messages 
L = GPA Certain GPA service messages, for example, LOGIN, LAKs, ABORT 

These values are automatically assigned by the SWIFT system and the user's CBT, but the user should be aware of their existence and significance
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Service Identifier</name>
								<description><![CDATA[The Service Identifier consists of 2 numeric characters. It identifies the type of data that is being sent or received and, in doing so, whether the message which follows is one of the following:

a user-to-user message

a system message

a service message, for example, a session control command, such as SELECT, or a logical acknowledgement, such as ACK/SAK/UAK

Users will be primarily concerned with identifier '01' which applies to all GPA and FIN system and user-to-user messages. Other values include: '21' for message acknowledgements such as ACK/NAK, UAK/UNK, '03' for SELECT commands, and 
so on]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>2</length>
							</field>
							<field>
								<name>LT Identifier</name>
								<description><![CDATA[This 12-character SWIFT address, given in the Basic Header Block, is the address of the sending LT for input messages or of the receiving LT for output messages, and includes the Branch Code.

In the Basic Header, the LT Code within the LT Identifier is specific to the LT that has established the session in which the message is being transmitted, that is the sending LT for input messages or the receiving LT for output messages.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>12</length>
							</field>
							<field>
								<name>Session Number</name>
								<description><![CDATA[The Session Number identifies the session in which the message was transmitted. Within the Basic Header, the 4-digit Session Number is the user's current GPA or FIN Session Number.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Sequence Number</name>
								<description><![CDATA[The sequence number always consists of 6 digits. It is the ISN of the sender's current input session or the OSN of the receiver's current output session.

Note: The sequence number is not present in those messages with an Application Identifier of 'L' (for example LOGIN). The sequence number is, however, a key element in the processing of retrievals. Therefore, LOGINs and attempted LOGINs are not retrievable
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>6</length>
							</field>
						</fields>
					</field>
					<field>
						<name>Application Header Input</name>
						<description><![CDATA[The Application Header of a SWIFT message provides information about the message itself.

The Application Header is given in Block 2 of a SWIFT message. It differs according to whether the message is a GPA or a FIN message and whether the Application Header is part of an input or an output message.

]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Input/Output Identifier</name>
								<description><![CDATA[For an input message, the Input/Output Identifier consists of the single letter 'I'.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Message Type</name>
								<description><![CDATA[The Message Type consists of 3 digits which define the MT number of the message being input. The example used above is for an MT 100 Customer Transfer]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>3</length>
							</field>
							<field>
								<name>Receiver's Address</name>
								<description><![CDATA[This address is the 12-character SWIFT address of the receiver of the message, but with a LT Code of 'X'. It defines the destination to which the message should be sent.

The system will replace the 'X' with a specific LT Code on delivery of the message according to the delivery control exercised by the receiving user.

The Branch Code is mandatory and will be validated. The default of 'XXX' may be used, as in the example above.

Unless otherwise documented, system messages addressed to the SWIFT system itself should be addressed to SWFTXXXXXXXX.

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>12</length>
							</field>
							<field>
								<name>Message Priority</name>
								<description><![CDATA[This character, used within FIN Application Headers only, defines the priority with which a message is delivered. The possible values are:

S = System

U = Urgent

N = Normal

Message Priority 'S' must be used for user-to-system messages; for user-to-user messages either 'U' or 'N' can be used. In the absence of user-specified delivery criteria, system messages are always delivered first, followed by urgent priority messages and then normal priority messages.

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Delivery Monitoring</name>
								<description><![CDATA[Delivery monitoring options apply only to FIN user-to-user messages, and allow the sender of a message to request:

automatic MT 011 Delivery Notification once the message has been delivered

automatic MT 010 Non-Delivery Warning if a message is not delivered within the specified obsolescence period (see below)

both, or neither, options. This may be requested on an individual message basis.

The chosen option is expressed as a single digit:

1 = Non-Delivery Warning

2 = Delivery Notification

3 = Non-Delivery Warning and Delivery Notification. 
If the message has priority 'U' then the user must request delivery monitoring option '1' or '3'. If the message has priority 'N', the user can request delivery monitoring option '2', or, by leaving the option blank, no delivery monitoring.
]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>1</length>
							</field>
							<field>
								<name>Obsolescence Period</name>
								<description><![CDATA[The obsolescence period defines the period of time after which a Delayed Message (DLM) trailer is added to a FIN user-to-user message when the message is delivered. For urgent priority messages, it is also the period of time after which, if the message remains undelivered, a Non-Delivery Warning is generated.

The values for the obsolescence period are 003 (15 minutes) for 'U' priority, and 020 (100 minutes) for 'N' priority. An obsolescence period can only be specified when delivery monitoring has been requested (option 1 or 3 for urgent priority messages, option 2 for normal priority messages). If no delivery monitoring has been requested, and an obsolescence period is specified, the message will be NAKed with error code H25.

GPA input Application Headers are similar to their FIN equivalents except that GPA messages do not specify priority, delivery monitoring, nor obsolescence period.

]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>3</length>
							</field>
						</fields>
					</field>
					<field>
						<name>Application Header Output</name>
						<description><![CDATA[The Application Header of a SWIFT message provides information about the message itself.

The Application Header is given in Block 2 of a SWIFT message. It differs according to whether the message is a GPA or a FIN message and whether the Application Header is part of an input or an output message.

]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Input/Output Identifier</name>
								<description><![CDATA[For an input message, the Input/Output Identifier consists of the single letter 'I'.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Message Type</name>
								<description><![CDATA[Three digits indicating the Message Type.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>3</length>
							</field>
							<field>
								<name>Input Time</name>
								<description><![CDATA[The first occurrence of the time field contains the system time and date. This is the generation time in Greenwich Mean Time (GMT).
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Message Input Reference</name>
								<description><![CDATA[The input MIR.

If the message is generated by the system, the input time is the generation time (in GMT) and the input MIR is the system MIR

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>28</length>
							</field>
							<field>
								<name>Output Date</name>
								<description><![CDATA[The output date, local to the receiver.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>6</length>
							</field>
							<field>
								<name>Output Time</name>
								<description><![CDATA[The second occurrence of the time field contains the output time and date. This is in a time local to the receiver.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Message Priority</name>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
						</fields>
					</field>
					<field>
						<name>User Header</name>
						<description><![CDATA[The User Header is an optional header available within FIN for user-to-user messages only. It appears in Block 3 of a SWIFT message, and allows users to provide their own reference within the headers for a particular message.

A User Header can only be assigned by the sender of a message and, if assigned, will always appear on the output message copy. Relevant parts of the User Header will be repeated in related system messages and acknowledgements.

Block 3 may contain tag 113, defining banking priorities, and tag 108, which is a user reference. The user reference part of the User Header may be used as one of the selection criteria when retrieving a message.

The optional field tags 103 and 115 are also used in Block 3 for the FIN Copy service. The order of tags, when present, is 103, 113, 108 and 115.

An optional field tag 119 can be included in Block 3 of certain messages to specify that different validation rules are to be applied. Agreed code words in field 119 indicate what validation rules SWIFT will apply. If field 119 is present, it should appear after field 108
]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Service Identifier</name>
								<description><![CDATA[For any message which the user submits to a FIN Copy service, Block 3 requires an additional field 103 which contains a three-character Service Identifier unique to a specific FIN Copy service. By using a unique identifier it is possible to support access to multiple services within the same CBT.
]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>3</length>
								<tag>103</tag>
							</field>
							<field>
								<name>Banking Priority</name>
								<description><![CDATA[Assigned by the sender of the message.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>4</length>
								<tag>113</tag>
							</field>
							<field>
								<name>Message User Reference</name>
								<description><![CDATA[Assigned by the sender of the message.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>16</length>
								<tag>108</tag>
							</field>
							<field>
								<name>Validation Flag</name>
								<description><![CDATA[Indicates whether a special validation needs to be performed by FIN. The following are examples of the values this field may take. Please note that this list is subject to change:

ISITC indicates validation of ISITC Standards. Only to be used with MT 521 and MT 523.

REMIT identifies the presence of field 77T. Only to be used in MT 103.

RFDD indicates that the message is a request for direct debit. Only to be used in MT 104.

STP indicates that the message is validated according to straight through processing principles. Only to be used in MT 103.

]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>119</tag>
							</field>
							<field>
								<name>Balance checkpoint date and time</name>
								<description><![CDATA[This field contains the balance checkpoint date and time consisting of a date (YYMMDD) and a time (HHMMSS[ss], where 'ss' indicates hundredths of a second). The MI that is subscribed to MIRS will always copy this reference from field tag 13G of the last MT298/091 that it sent into the related MT 298/093 or MT 097 that it generates. ]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>423</tag>
							</field>
							<field>
								<name>Message Input Reference</name>
								<description><![CDATA[This field contains the MIR of the payment message that is related to the notification messages in which this field is present. The MI that is subscribed to MIRS will copy it from the received payment message. In a FINCopy scenario, this field must contain the MIR of the related MT 096]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>106</tag>
							</field>
							<field>
								<name>Related Reference</name>
								<description><![CDATA[This field contains the reference of the payment that is related to the notification messages in which this field is present. The payment itself was not the result of a FIN message. The value of this field must correspond to the related reference (field 21) in the MT298/093. The format of field 424 is 16x.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>424</tag>
							</field>
							<field>
								<name>Service Type Identifier</name>
								<description><![CDATA[This field identifies the applicable global payment service type. The format of field 111 is 3!n.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>111</tag>
							</field>
							<field>
								<name>Unique End-To-End Transaction Reference</name>
								<description><![CDATA[This field provides an end-to-end reference across a payment transaction. The format of field 121 is 36!x.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>121</tag>
							</field>
							<field>
								<name>Addressee Information</name>
								<description><![CDATA[Tag 115 is only valid for output messages. Information from Central Institution to the receiver of payment message. Information is input in the MT 097 FIN Copy Message Authorisation/Refusal Notification in Y-Copy mode.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>115</tag>
							</field>
							<field>
								<name>Payment Release Information Receiver (FINInform Services)</name>
								<description><![CDATA[Tag 165 is only valid for output messages. This field contains information from the server destination to the receiver of payment message. It is only available for use in FINInform services that operate in Y-copy mode.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>165</tag>
							</field>
							<field>
								<name>Receiver Information</name>
								<description><![CDATA[Tag 433 is only valid for output messages. The screening service inputs information in the MT 097 FINCopy Message Authorisation/Refusal Notification, in Y-Copy mode. FINCopy copies the information to the receiver of the screened message.
				    The following values can be present in this field:
				      AOK: message automatically released by screening service
				      FPO: compliance officer has flagged the screening result as false positive
				      NOK: compliance officer has flagged the screened message as suspect
				    The code word can optionally be followed by additional information (up to 20 characters from the x character set).]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>433</tag>
							</field>
						</fields>
					</field>
				</fields>
			</Header>
			<Data>
				<Fields>
					<SwiftField Name="20">
						<SwiftFieldDef Name="20">
							<Generic>false</Generic>
							<Description><![CDATA[Transaction Reference Number]]></Description>
							<Option Name="">
								<Format><![CDATA[16x]]></Format>
								<Specification><![CDATA[(Transaction Reference)]]></Specification>
								<Description><![CDATA[Transaction Reference Number]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options> </Options>
						<Validations>
							<SubField Name="Transaction_Reference">
								<Validation>
									<Options> </Options>
									<ErrorCode>T26</ErrorCode>
									<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive slashes '//' (Error code(s): T26).]]></Comment>
									<ValidationPattern xsi:type="T26" Type="T26">
										<Type>T26</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="21">
						<SwiftFieldDef Name="21">
							<Generic>false</Generic>
							<Description><![CDATA[Related Reference]]></Description>
							<Option Name="">
								<Format><![CDATA[16x]]></Format>
								<Specification><![CDATA[(Related Reference)]]></Specification>
								<Description><![CDATA[Related Reference]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options> </Options>
						<Validations>
							<SubField Name="Related_Reference">
								<Validation>
									<Options> </Options>
									<ErrorCode>T26</ErrorCode>
									<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive slashes '//' (Error code(s): T26).]]></Comment>
									<ValidationPattern xsi:type="T26" Type="T26">
										<Type>T26</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="13C">
						<SwiftFieldDef Name="13">
							<Generic>false</Generic>
							<Option Name="C">
								<Format><![CDATA[/8c/4!n1!x4!n]]></Format>
								<Specification><![CDATA[(Code) (Time indication) (Sign) (Time offset) ]]></Specification>
								<Description><![CDATA[Time Indication]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>true</Repeating>
						<Presence>O</Presence>
						<Options>C</Options>
						<Validations>
							<SubField Name="Sign">
								<Validation>
									<Options>C</Options>
									<ErrorCode>T15</ErrorCode>
									<Comment><![CDATA[Sign is either "+" or "-" (Error code(s): T15).]]></Comment>
									<ValidationPattern xsi:type="CODE" Type="CODE">
										<Type>CODE</Type>
										<Codes>
											<Code Name="+">
											</Code>
											<Code Name="-">
											</Code>
										</Codes>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="Time_offset">
								<Validation>
									<Options>C</Options>
									<ErrorCode>T16</ErrorCode>
									<Comment><![CDATA[Time offset is expressed as 'HHMM', where the hour component, ie, 'HH', must be in the range of 00 through 13, and the minute component, ie, 'MM', must be in the range of 00 through 59. Any 'HH' or 'MM' component outside of these range checks will be disallowed (Error code(s): T16).]]></Comment>
									<ValidationPattern xsi:type="Time_Offset" Type="Time Offset">
										<Type>Time Offset</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="Time_indication">
								<Validation>
									<Options>C</Options>
									<ErrorCode>T38</ErrorCode>
									<Comment><![CDATA[Time indication must be a valid time expressed as HHMM (Error code(s): T38).]]></Comment>
									<ValidationPattern xsi:type="DATE" Type="DATE">
										<Type>DATE</Type>
										<Format>HHmm</Format>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="32A">
						<SwiftFieldDef Name="32">
							<Generic>false</Generic>
							<Option Name="A">
								<Format><![CDATA[6!n3!a15d]]></Format>
								<Specification><![CDATA[(Date) (Currency) (Amount)]]></Specification>
								<Description><![CDATA[Value Date, Currency Code, Amount]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options>A</Options>
						<Validations>
							<SubField Name="Date">
								<Validation>
									<Options>A</Options>
									<ErrorCode>T50</ErrorCode>
									<Comment><![CDATA[Date must be a valid date expressed as YYMMDD (Error code(s): T50).]]></Comment>
									<ValidationPattern xsi:type="DATE" Type="DATE">
										<Type>DATE</Type>
										<Format>yyMMdd</Format>
										<value-date>true</value-date>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="Currency">
								<Validation>
									<Options>A</Options>
									<ErrorCode>T52</ErrorCode>
									<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52).]]></Comment>
									<ValidationPattern xsi:type="Currency_Code" Type="Currency Code">
										<Type>Currency Code</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="Amount">
								<Validation>
									<Options>A</Options>
									<ErrorCode>C03</ErrorCode>
									<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency]]></Comment>
									<ValidationPattern xsi:type="Decimal" Type="Decimal">
										<Type>Decimal</Type>
										<currency-field>Currency</currency-field>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="52a">
						<SwiftFieldDef Name="52">
							<Generic>false</Generic>
							<Option Name="A">
								<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
								<Description><![CDATA[Ordering Institution]]></Description>
							</Option>
							<Option Name="D">
								<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
								<Description><![CDATA[Ordering Institution]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options>A, D</Options>
						<Validations>
							<SubField Name="Identifier_Code">
								<Validation>
									<Options>A</Options>
									<ErrorCode>T27, T28, T29, T45</ErrorCode>
									<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
									<ValidationPattern xsi:type="BIC" Type="BIC">
										<Type>BIC</Type>
									</ValidationPattern>
								</Validation>
								<Validation>
									<Options>A</Options>
									<ErrorCode>C05</ErrorCode>
									<Comment><![CDATA[Identifier Code must not be a BEI, ie must not be of subtype BEID, MCCO, TESP or TRCO (Error code(s): C05).]]></Comment>
									<ValidationPattern xsi:type="C05" Type="C05">
										<Type>C05</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="CreditDebit">
								<Validation>
									<Options>A, D</Options>
									<ErrorCode>T51</ErrorCode>
									<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
									<ValidationPattern xsi:type="CODE" Type="CODE">
										<Type>CODE</Type>
										<Codes>
											<Code Name="C">
												<DetailedName>Credit</DetailedName>
											</Code>
											<Code Name="D">
												<DetailedName>Debit</DetailedName>
											</Code>
										</Codes>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="53a">
						<SwiftFieldDef Name="53">
							<Generic>false</Generic>
							<Option Name="A">
								<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
								<Description><![CDATA[Sender's Correspondent]]></Description>
							</Option>
							<Option Name="B">
								<Format><![CDATA[/1!a[/34x](CRLF35x) | /1!a[/34x] | [/34xCRLF]35x | /34x]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Location) | (CreditDebit)(Party Identifier) | (Party Identifier)(Location) | (Party Identifier)]]></Specification>
								<Description><![CDATA[Sender's Correspondent]]></Description>
							</Option>
							<Option Name="D">
								<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
								<Description><![CDATA[Sender's Correspondent]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options>A, B, D</Options>
						<Validations>
							<SubField Name="Identifier_Code">
								<Validation>
									<Options>A</Options>
									<ErrorCode>T27, T28, T29, T45</ErrorCode>
									<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
									<ValidationPattern xsi:type="BIC" Type="BIC">
										<Type>BIC</Type>
									</ValidationPattern>
								</Validation>
								<Validation>
									<Options>A</Options>
									<ErrorCode>C05</ErrorCode>
									<Comment><![CDATA[Identifier Code must not be a BEI, ie must not be of subtype BEID, MCCO, TESP or TRCO (Error code(s): C05).]]></Comment>
									<ValidationPattern xsi:type="C05" Type="C05">
										<Type>C05</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="CreditDebit">
								<Validation>
									<Options>A, B, D</Options>
									<ErrorCode>T51</ErrorCode>
									<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
									<ValidationPattern xsi:type="CODE" Type="CODE">
										<Type>CODE</Type>
										<Codes>
											<Code Name="C">
												<DetailedName>Credit</DetailedName>
											</Code>
											<Code Name="D">
												<DetailedName>Debit</DetailedName>
											</Code>
										</Codes>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="56a">
						<SwiftFieldDef Name="56">
							<Generic>false</Generic>
							<Option Name="A">
								<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
								<Description><![CDATA[Intermediary]]></Description>
							</Option>
							<Option Name="D">
								<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
								<Description><![CDATA[Intermediary]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options>A, D</Options>
						<Validations>
							<SubField Name="Identifier_Code">
								<Validation>
									<Options>A</Options>
									<ErrorCode>T27, T28, T29, T45</ErrorCode>
									<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
									<ValidationPattern xsi:type="BIC" Type="BIC">
										<Type>BIC</Type>
									</ValidationPattern>
								</Validation>
								<Validation>
									<Options>A</Options>
									<ErrorCode>C05</ErrorCode>
									<Comment><![CDATA[Identifier Code must not be a BEI, ie must not be of subtype BEID, MCCO, TESP or TRCO (Error code(s): C05).]]></Comment>
									<ValidationPattern xsi:type="C05" Type="C05">
										<Type>C05</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="CreditDebit">
								<Validation>
									<Options>A, D</Options>
									<ErrorCode>T51</ErrorCode>
									<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
									<ValidationPattern xsi:type="CODE" Type="CODE">
										<Type>CODE</Type>
										<Codes>
											<Code Name="C">
												<DetailedName>Credit</DetailedName>
											</Code>
											<Code Name="D">
												<DetailedName>Debit</DetailedName>
											</Code>
										</Codes>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="57a">
						<SwiftFieldDef Name="57">
							<Generic>false</Generic>
							<Option Name="A">
								<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
								<Description><![CDATA[Account With Institution]]></Description>
							</Option>
							<Option Name="B">
								<Format><![CDATA[/1!a[/34x](CRLF35x) | /1!a[/34x] | [/34xCRLF]35x | /34x]]></Format>
								<Specification><![CDATA[(CreditDebit) (Party Identifier) (Location) | (CreditDebit)(Party Identifier) |(Party Identifier) (Location) | (Party Identifier)]]></Specification>
								<Description><![CDATA[Account With Institution]]></Description>
							</Option>
							<Option Name="D">
								<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
								<Description><![CDATA[Account With Institution]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options>A, B, D</Options>
						<Validations>
							<SubField Name="Identifier_Code">
								<Validation>
									<Options>A</Options>
									<ErrorCode>T27, T28, T29, T45</ErrorCode>
									<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
									<ValidationPattern xsi:type="BIC" Type="BIC">
										<Type>BIC</Type>
									</ValidationPattern>
								</Validation>
								<Validation>
									<Options>A</Options>
									<ErrorCode>C05</ErrorCode>
									<Comment><![CDATA[Identifier Code must not be a BEI, ie must not be of subtype BEID, MCCO, TESP or TRCO (Error code(s): C05).]]></Comment>
									<ValidationPattern xsi:type="C05" Type="C05">
										<Type>C05</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="CreditDebit">
								<Validation>
									<Options>A, B, D</Options>
									<ErrorCode>T51</ErrorCode>
									<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
									<ValidationPattern xsi:type="CODE" Type="CODE">
										<Type>CODE</Type>
										<Codes>
											<Code Name="C">
												<DetailedName>Credit</DetailedName>
											</Code>
											<Code Name="D">
												<DetailedName>Debit</DetailedName>
											</Code>
										</Codes>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="58a">
						<SwiftFieldDef Name="58">
							<Generic>false</Generic>
							<Option Name="A">
								<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
								<Description><![CDATA[Beneficiary Institution]]></Description>
							</Option>
							<Option Name="D">
								<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
								<Description><![CDATA[Beneficiary Institution]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options>A, D</Options>
						<Validations>
							<SubField Name="Identifier_Code">
								<Validation>
									<Options>A</Options>
									<ErrorCode>T27, T28, T29, T45</ErrorCode>
									<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
									<ValidationPattern xsi:type="BIC" Type="BIC">
										<Type>BIC</Type>
									</ValidationPattern>
								</Validation>
								<Validation>
									<Options>A</Options>
									<ErrorCode>C05</ErrorCode>
									<Comment><![CDATA[Identifier Code must not be a BEI, ie must not be of subtype BEID, MCCO, TESP or TRCO (Error code(s): C05).]]></Comment>
									<ValidationPattern xsi:type="C05" Type="C05">
										<Type>C05</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="CreditDebit">
								<Validation>
									<Options>A, D</Options>
									<ErrorCode>T51</ErrorCode>
									<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
									<ValidationPattern xsi:type="CODE" Type="CODE">
										<Type>CODE</Type>
										<Codes>
											<Code Name="C">
												<DetailedName>Credit</DetailedName>
											</Code>
											<Code Name="D">
												<DetailedName>Debit</DetailedName>
											</Code>
										</Codes>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="72">
						<SwiftFieldDef Name="72">
							<Generic>false</Generic>
							<Description><![CDATA[Sender to Receiver Information]]></Description>
							<Option Name="">
								<Format><![CDATA[6*35x]]></Format>
								<Specification><![CDATA[(Narrative - Structured Format)]]></Specification>
								<Description><![CDATA[Sender to Receiver Information]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options> </Options>
					</SwiftField>
				</Fields>
			</Data>
			<Trailer>
				<fields>
					<field>
						<name>Message Authentication Code</name>
						<description><![CDATA[Allows authentication by the receiving user. It is followed by an authentication result.

This trailer is mandatory for most user-to-user message categories within the FIN application. When the FIN Copy Service is used a PAC trailer, if present, follows the MAC trailer.

Format:

{MAC:<authentication-result>}

where <authentication-result> = 8!h

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>8</length>
						<tag>MAC</tag>
					</field>
					<field>
						<name>Proprietary Authentication Code</name>
						<description><![CDATA[The PAC is used within the FIN Copy service only, when using the double authentication option. The PAC is included in Block 5 of FIN user-to-user messages, immediately after the MAC trailer, if present.

This is calculated on the extracted fields of Block 4 of the message, the value of field 115, if present, and the <authentication-result> of the MAC trailer for Copy Services with double authentication.

Thus, the end-of-block indicator (CrLf-) is included in the PAC calculation, and the fields are defined as follows:

The first three characters are CrLf:

The field and the delimiter are present, that is, 32A:, 20:, and so on.

All subfields and their delimiters are present.

Format:

{PAC:[<authentication-result>]}

where <authentication-result> is mandatory on input messages only and <authentication-result> = 8!h

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>8</length>
						<tag>PAC</tag>
					</field>
					<field>
						<name>Checksum</name>
						<description><![CDATA[The checksum is computed based on the receiver's address (12 characters, with 9th character replaced by X) plus the Text Block. This trailer allows the system and the CBT to check that messages have not been corrupted due to a system malfunction or an undetected transmission error.

Format:

{CHK:<checksum-result>}

where <checksum-result> = 12!h

Note: This trailer is mandatory for FIN and GPA messages (Service Identifier 01).

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>12</length>
						<tag>CHK</tag>
					</field>
					<field>
						<name>System Originated Message</name>
						<description><![CDATA[The system message or service message which is generated by a system PLT has a SYS trailer. All solicited system messages (Service Identifier 01) contain the MIR of the request and may also contain the time.

Format:

{SYS:[<time><mir>]}

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>SYS</tag>
					</field>
					<field>
						<name>Test And Training Message</name>
						<description><![CDATA[Mandatory for FIN and GPA messages (Service Identifier 01) sent by, or delivered to, a Test & Training Logical Terminal (LT). This trailer has a tag only, and no value.

Format:

{TNG:}
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>0</length>
						<tag>TNG</tag>
					</field>
					<field>
						<name>Possible Duplicate Emission</name>
						<description><![CDATA[This trailer is used by the destination of the message. It only applies to FIN user-to-user messages (Service Identifier 01, message categories reserved for banking messages). There can be multiple PDEs. The system does not verify the order nor restrict the number (except for maximum message length).

Correctly formatted PDE trailers applied to user-to-system messages are accepted by the system, but not processed. This means that the system does not check to see if the original message exists. Therefore, a retrieval request sent with a PDE trailer may be processed twice if the original message was received by the system.

Format:

{PDE:[<time><mir>]}

where <time><mir> refers to the emission of the previous possible issue.

Note: It can be added automatically by a CBT or manually by a user. It may be followed by the MIR and the time of its previous possible messages.

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>PDE</tag>
					</field>
					<field>
						<name>Delayed Message</name>
						<description><![CDATA[This trailer is added to all FIN user-to-user output messages that have exceeded their obsolescence period. If this trailer appears in GPA or FIN system messages, it must be ignored. This trailer has a tag only, and no value.

The Obsolescence Period is:

U = 15 minutes

N = 100 minutes

Format:

{DLM:}

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>0</length>
						<tag>DLM</tag>
					</field>
					<field>
						<name>Possible Duplicate Message</name>
						<description><![CDATA[Added by the system to any output message (GPA and FIN Service Identifier 01) being resent because a prior delivery may be invalid. If a system PLT receives a report request with a PDM, the response has a plain PDM (without the optional delivery reference). Other PDMs may be added as a result of unsuccessful delivery attempts to the user. 
Format:
{PDM:[<time><mor>]}
where <time> and the Message Output Reference <mor> are that of the previous attempt.
Note: For messages recovered after a system failure, the optional fields may not be present.
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>PDM</tag>
					</field>
					<field>
						<name>Message Reference</name>
						<description><![CDATA[The MRF trailer is used to specify the message reference of the original user message in MT 096 FIN Copy to Central Institution Messages.
Format:
{MRF:<date><full-time><mir>}
where <mir> is that of the original user message whose fields are copied in the MT 096 FIN Copy to Central Institution Message.
Note: The MRF is specific to FIN Copy. The MRF trailer is automatically generated in the MT 096 FIN Copy to Central Institution Message and can only be reused in field 109 of the MT 096 FIN Copy to Central Institution Message to identify the MT 096 to which the MT 097 is a response. The format of the MRF is subject to change.
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>MRF</tag>
					</field>
				</fields>
			</Trailer>
		</SwiftFields>
		<validationrules name="Default">
			<hdrvalidationrules>
				<fieldvalidations>
					<fieldvalidation>
						<name>U09</name>
						<formula><![CDATA[if($this.Header.GetFieldIndex("User_Header") != -1) {
    def userHeader = $this.Header.GetSection("User_Header");
    if(userHeader.$size > 0 && userHeader[0].IsNotNull("Validation_Flag")) {
        return false;
    }
}
return true;
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U09</error-code>
						<actionmessage><![CDATA["User has used tag 119 in a message that is not a candidate for special processing"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>U03</name>
						<fieldname>User Header</fieldname>
						<formula><![CDATA[Iff(IsNotNull(User_Header.Service_Type_Identifier), 
    IsNotNull(User_Header.Unique_End_To_End_Transaction_Reference))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U03</error-code>
						<actionmessage><![CDATA["When populating an end-to-end reference, both fields 111 and 121 must be populated: a message that contains only one of these two fields will not be accepted by FIN."]]></actionmessage>
					</fieldvalidation>
				</fieldvalidations>
			</hdrvalidationrules>
			<datavalidationrules>
				<fieldvalidations>
					<fieldvalidation>
						<name>F72-A</name>
						<fieldname>72.Narrative_-_Structured_Format</fieldname>
						<comment><![CDATA["The first line of field 72 should be of the following format: /8c/[additional information]. The remaining lines (2 - 6) should be of the following format: [//continuation of additional information] or [/8c/[additional information]]."]]></comment>
						<formula><![CDATA[VerifyField72NarrativeText($value)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T32</error-code>
						<actionmessage><![CDATA["The first line of field 72 should be of the following format: /8c/[additional information]. The remaining lines (2 - 6) should be of the following format: [//continuation of additional information] or [/8c/[additional information]]."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C1</name>
						<fieldname>56a</fieldname>
						<comment><![CDATA["If field 56a is present, then field 57a must also be present."]]></comment>
						<formula><![CDATA[F57a.$size > 0]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C81</error-code>
						<actionmessage><![CDATA["If field 56a is present, then field 57a must also be present."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>ERI-1</name>
						<comment><![CDATA["For specific message types, an European currency must not be used as the currency of settlement after a cut-off date (Error Code: E76)."]]></comment>
						<formula><![CDATA[applyERIValidation(F32A[0], "Date", F32A[0], "Currency")]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E76</error-code>
						<actionmessage><![CDATA["For specific message types, an European currency must not be used as the currency of settlement after a cut-off date (Error Code: E76)."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>ERI-2</name>
						<fieldname>72.Narrative_-_Structured_Format</fieldname>
						<formula><![CDATA[ApplyERICodeValidationStructured($value);]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T47</error-code>
						<actionmessage><![CDATA["In an ERI field (i.e. fields 61, 72, 77A, 79, 86) the data part of a code word /OCMT/, or /CHGS/, is being validated, but the ending separator (i.e. third slash) is missing or the code words are duplicated."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F72-B</name>
						<fieldname>72.Narrative_-_Structured_Format</fieldname>
						<formula><![CDATA[def Actualvalue = replace($value, "\r\n", "\n");
def lines = Split("\n", Actualvalue);
def str = Left(Actualvalue, 6);
def line1format = false;
def line3format = false;
def TREFformat = true;
def CHGSformat = true;
def TEXTformat = true;
def format = true;
def count = 0;
def TREFcount = 0;
def CHGScount = 0;
def TEXTcount = 0;
def i = lines.Length();
if(In(str, "/REJT/", "/RETN/")) {
    if(i <= 6) {
        //if '/REJT/' or '/RETN/' format of 1st line must be "6!x2!n[1a]['/'2c]" & format of 2nd line must be "('/'2!c 2!n'/')[29x]" or "('/X'1c2!n'/')[29x]"
        //if format of 2nd line is "('/'2!c 2!n'/')" then the 6 characters must be one of the codes given below
        line1format = (VerifyFormat(lines[0], "6!x2!n[1a]['/'2c]"));
        if(line1format && lines.Length() > 2) {
            if(!lines[1].StartsWith("/X")) {
                if(VerifyFormat(lines[1], "('/'2!c 2!n'/')[29x]")) {
                	def startStr = lines[1].Left(6);
                    if((!In(startStr, "/AC01/", "/AC02/", "/AC03/", "/AC04/", "/AC05/", "/AC06/", 
                            "/AM01/", "/AM02/", "/AM03/", "/AM04/", "/AM05/", "/AM06/", "/AM07/", 
                            "/AM08/", "/AG01/", "/AG02/", "/BE01/", "/BE02/", "/BE03/", "/BE04/", 
                            "/BE05/", "/DT01/", "/MS01/", "/PY01/", "/RC01/", "/RC02/", "/RC03/", 
                            "/RC04/", "/RF01/", "/TM01/", "/RR01/", "/RR02/", "/RR03/")))
                        return false;
                }
                else
                    return false;
            }
            else if(lines[1].StartsWith("/X") && !VerifyFormat(lines[1], "('/X'1c2!n'/')[29x]"))
                return false;
        }
        else
            return false;
        //Line3 is mandatory and should have the format "/MREF/16x". Lines 4, 5 and 6 are optional
        //If lines 4, 5 or 6 or any combination exists and if the first 6 characters starts with either '/TREF/' or '/CHGS/' or '/TEXT/' or '//'
        //it should satisfy the format given. Also if line starts with '//' it can appear a max of 2 times
        line3format = Equal(Left(lines[2], 6), "/MREF/") && 
                        VerifyFormat(Substring(lines[2], 6), "16x");
        if(line3format) {
            while(i > 3) {
                def str1 = Left(lines[i - 1], 6);
                def str2 = Substring(lines[i - 1], 6);
                if(In(str1, "/TREF/", "/CHGS/", "/TEXT/") || StartsWith(lines[i - 1], "//")) {
                    if(str1 == "/TREF/") {
                        TREFformat = VerifyFormat(str2, "16x");
                        TREFcount += 1;
                    }
                    else if(str1 == "/CHGS/") {
                        CHGSformat = (VerifyFormat(str2, "3!a15d") && 
                                        IsISOCurrencyCode(Substring(lines[i - 1], 6, 3)));
                        CHGScount += 1;
                    }
                    else if(str1 == "/TEXT/") {
                        TEXTformat = (VerifyFormat(str2, "29x"));
                        TEXTcount += 1;
                    }
                    else if(StartsWith(lines[i - 1], "//")) {
                        def str3 = Substring(lines[i - 1], 2);
                        format = (VerifyFormat(str3, "33x"));
                        count += 1;
                        if(!format || count > 2)
                            break;
                    }
                }
                else
                    return false;
                i = i - 1;
            }
        }
        else
            return false;
        if(!TREFformat || !CHGSformat || !TEXTformat || !format || count > 2 || TREFcount > 1 || 
             CHGScount > 1 || TEXTcount > 1)
            return false;
    }
    else
        return false;
}
return true;
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T80</error-code>
						<actionmessage><![CDATA["Field 72 Reject/Return: code word error, or mandatory code word missing, or code word not in the proper sequence, or format 6*35x not satisfied"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F-32A</name>
						<fieldname>32A.Currency</fieldname>
						<formula><![CDATA[!In($value, "XAU", "XAG", "XPD", "XPT")]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C08</error-code>
						<actionmessage><![CDATA["The codes XAU, XAG, XPD and XPT are not allowed, as these are codes for commodities for which the category 6 commodities messages must be used."]]></actionmessage>
					</fieldvalidation>
				</fieldvalidations>
			</datavalidationrules>
			<tlrvalidationrules>
				<fieldvalidations>
				</fieldvalidations>
			</tlrvalidationrules>
		</validationrules>
		<elementproperties>
			<propertymap>
			</propertymap>
		</elementproperties>
	</externalmessage>
	<externalmessage xsi:type="SwiftFormat" type="SwiftFormat" version="5.1.2" rulename="MT205COV_2016" formattype="SwiftFormat" >
		<description><![CDATA[This message is sent by the Receiver of an MT 202 COV, MT 205 COV or equivalent (for example ISO 20022 Financial Institution Credit Transfer), directly, or through correspondent(s), to the financial institution of the beneficiary institution. 

It is only used to further transmit a funds transfer instruction related to an underlying customer credit transfer that was sent with the cover method, where Sender and Receiver are located in the same country. 

The MT 205 COV must not be used for any other interbank transfer.]]></description>
		<standard>SWIFT</standard>
		<standard-name>MT205COV</standard-name>
		<standard-version>SRG 2016</standard-version>
		<standard-release-qualifier>20160308</standard-release-qualifier>
		<standard-category>Financial Institution Transfers</standard-category>
		<standard-detailed-name>Financial Institution Transfer Execution</standard-detailed-name>
		<version>1.0</version>
		<SwiftFields>
			<customizable>true</customizable>
			<modifiable>false</modifiable>
			<SwiftMessageType>User</SwiftMessageType>
			<max-length>10000</max-length>
			<HeaderAndTrailerType>SWIFT_INPUT_OUTPUT_HEADER</HeaderAndTrailerType>
			<Header>
				<fields>
					<field>
						<name>Basic Header</name>
						<description><![CDATA[The Basic Header is given in Block 1 of a SWIFT message and is the only header that appears on all messages. The Basic Header provides the fundamental reference for any particular message and is almost always automatically built by the CBT.
The Basic Header has the same format for both input and output messages. However, the information contained in the Basic Header is relative to the sender when the message is input but relative to the receiver when the same message is output.]]></description>
						<datatype>Section</datatype>
						<required>true</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Application Identifier</name>
								<description><![CDATA[The Application Identifier identifies the application within which the message is being sent or received. The available options are:

F = FIN All user-to-user, FIN system and FIN service messages 
A = GPA Most GPA system and service messages 
L = GPA Certain GPA service messages, for example, LOGIN, LAKs, ABORT 

These values are automatically assigned by the SWIFT system and the user's CBT, but the user should be aware of their existence and significance
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Service Identifier</name>
								<description><![CDATA[The Service Identifier consists of 2 numeric characters. It identifies the type of data that is being sent or received and, in doing so, whether the message which follows is one of the following:

a user-to-user message

a system message

a service message, for example, a session control command, such as SELECT, or a logical acknowledgement, such as ACK/SAK/UAK

Users will be primarily concerned with identifier '01' which applies to all GPA and FIN system and user-to-user messages. Other values include: '21' for message acknowledgements such as ACK/NAK, UAK/UNK, '03' for SELECT commands, and 
so on]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>2</length>
							</field>
							<field>
								<name>LT Identifier</name>
								<description><![CDATA[This 12-character SWIFT address, given in the Basic Header Block, is the address of the sending LT for input messages or of the receiving LT for output messages, and includes the Branch Code.

In the Basic Header, the LT Code within the LT Identifier is specific to the LT that has established the session in which the message is being transmitted, that is the sending LT for input messages or the receiving LT for output messages.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>12</length>
							</field>
							<field>
								<name>Session Number</name>
								<description><![CDATA[The Session Number identifies the session in which the message was transmitted. Within the Basic Header, the 4-digit Session Number is the user's current GPA or FIN Session Number.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Sequence Number</name>
								<description><![CDATA[The sequence number always consists of 6 digits. It is the ISN of the sender's current input session or the OSN of the receiver's current output session.

Note: The sequence number is not present in those messages with an Application Identifier of 'L' (for example LOGIN). The sequence number is, however, a key element in the processing of retrievals. Therefore, LOGINs and attempted LOGINs are not retrievable
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>6</length>
							</field>
						</fields>
					</field>
					<field>
						<name>Application Header Input</name>
						<description><![CDATA[The Application Header of a SWIFT message provides information about the message itself.

The Application Header is given in Block 2 of a SWIFT message. It differs according to whether the message is a GPA or a FIN message and whether the Application Header is part of an input or an output message.

]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Input/Output Identifier</name>
								<description><![CDATA[For an input message, the Input/Output Identifier consists of the single letter 'I'.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Message Type</name>
								<description><![CDATA[The Message Type consists of 3 digits which define the MT number of the message being input. The example used above is for an MT 100 Customer Transfer]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>3</length>
							</field>
							<field>
								<name>Receiver's Address</name>
								<description><![CDATA[This address is the 12-character SWIFT address of the receiver of the message, but with a LT Code of 'X'. It defines the destination to which the message should be sent.

The system will replace the 'X' with a specific LT Code on delivery of the message according to the delivery control exercised by the receiving user.

The Branch Code is mandatory and will be validated. The default of 'XXX' may be used, as in the example above.

Unless otherwise documented, system messages addressed to the SWIFT system itself should be addressed to SWFTXXXXXXXX.

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>12</length>
							</field>
							<field>
								<name>Message Priority</name>
								<description><![CDATA[This character, used within FIN Application Headers only, defines the priority with which a message is delivered. The possible values are:

S = System

U = Urgent

N = Normal

Message Priority 'S' must be used for user-to-system messages; for user-to-user messages either 'U' or 'N' can be used. In the absence of user-specified delivery criteria, system messages are always delivered first, followed by urgent priority messages and then normal priority messages.

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Delivery Monitoring</name>
								<description><![CDATA[Delivery monitoring options apply only to FIN user-to-user messages, and allow the sender of a message to request:

automatic MT 011 Delivery Notification once the message has been delivered

automatic MT 010 Non-Delivery Warning if a message is not delivered within the specified obsolescence period (see below)

both, or neither, options. This may be requested on an individual message basis.

The chosen option is expressed as a single digit:

1 = Non-Delivery Warning

2 = Delivery Notification

3 = Non-Delivery Warning and Delivery Notification. 
If the message has priority 'U' then the user must request delivery monitoring option '1' or '3'. If the message has priority 'N', the user can request delivery monitoring option '2', or, by leaving the option blank, no delivery monitoring.
]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>1</length>
							</field>
							<field>
								<name>Obsolescence Period</name>
								<description><![CDATA[The obsolescence period defines the period of time after which a Delayed Message (DLM) trailer is added to a FIN user-to-user message when the message is delivered. For urgent priority messages, it is also the period of time after which, if the message remains undelivered, a Non-Delivery Warning is generated.

The values for the obsolescence period are 003 (15 minutes) for 'U' priority, and 020 (100 minutes) for 'N' priority. An obsolescence period can only be specified when delivery monitoring has been requested (option 1 or 3 for urgent priority messages, option 2 for normal priority messages). If no delivery monitoring has been requested, and an obsolescence period is specified, the message will be NAKed with error code H25.

GPA input Application Headers are similar to their FIN equivalents except that GPA messages do not specify priority, delivery monitoring, nor obsolescence period.

]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>3</length>
							</field>
						</fields>
					</field>
					<field>
						<name>Application Header Output</name>
						<description><![CDATA[The Application Header of a SWIFT message provides information about the message itself.

The Application Header is given in Block 2 of a SWIFT message. It differs according to whether the message is a GPA or a FIN message and whether the Application Header is part of an input or an output message.

]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Input/Output Identifier</name>
								<description><![CDATA[For an input message, the Input/Output Identifier consists of the single letter 'I'.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Message Type</name>
								<description><![CDATA[Three digits indicating the Message Type.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>3</length>
							</field>
							<field>
								<name>Input Time</name>
								<description><![CDATA[The first occurrence of the time field contains the system time and date. This is the generation time in Greenwich Mean Time (GMT).
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Message Input Reference</name>
								<description><![CDATA[The input MIR.

If the message is generated by the system, the input time is the generation time (in GMT) and the input MIR is the system MIR

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>28</length>
							</field>
							<field>
								<name>Output Date</name>
								<description><![CDATA[The output date, local to the receiver.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>6</length>
							</field>
							<field>
								<name>Output Time</name>
								<description><![CDATA[The second occurrence of the time field contains the output time and date. This is in a time local to the receiver.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Message Priority</name>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
						</fields>
					</field>
					<field>
						<name>User Header</name>
						<description><![CDATA[The User Header is an optional header available within FIN for user-to-user messages only. It appears in Block 3 of a SWIFT message, and allows users to provide their own reference within the headers for a particular message.

A User Header can only be assigned by the sender of a message and, if assigned, will always appear on the output message copy. Relevant parts of the User Header will be repeated in related system messages and acknowledgements.

Block 3 may contain tag 113, defining banking priorities, and tag 108, which is a user reference. The user reference part of the User Header may be used as one of the selection criteria when retrieving a message.

The optional field tags 103 and 115 are also used in Block 3 for the FIN Copy service. The order of tags, when present, is 103, 113, 108 and 115.

An optional field tag 119 can be included in Block 3 of certain messages to specify that different validation rules are to be applied. Agreed code words in field 119 indicate what validation rules SWIFT will apply. If field 119 is present, it should appear after field 108
]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Service Identifier</name>
								<description><![CDATA[For any message which the user submits to a FIN Copy service, Block 3 requires an additional field 103 which contains a three-character Service Identifier unique to a specific FIN Copy service. By using a unique identifier it is possible to support access to multiple services within the same CBT.
]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>3</length>
								<tag>103</tag>
							</field>
							<field>
								<name>Banking Priority</name>
								<description><![CDATA[Assigned by the sender of the message.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>4</length>
								<tag>113</tag>
							</field>
							<field>
								<name>Message User Reference</name>
								<description><![CDATA[Assigned by the sender of the message.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>16</length>
								<tag>108</tag>
							</field>
							<field>
								<name>Validation Flag</name>
								<description><![CDATA[Indicates whether a special validation needs to be performed by FIN. The following are examples of the values this field may take. Please note that this list is subject to change:

ISITC indicates validation of ISITC Standards. Only to be used with MT 521 and MT 523.

REMIT identifies the presence of field 77T. Only to be used in MT 103.

RFDD indicates that the message is a request for direct debit. Only to be used in MT 104.

STP indicates that the message is validated according to straight through processing principles. Only to be used in MT 103.

]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>119</tag>
							</field>
							<field>
								<name>Balance checkpoint date and time</name>
								<description><![CDATA[This field contains the balance checkpoint date and time consisting of a date (YYMMDD) and a time (HHMMSS[ss], where 'ss' indicates hundredths of a second). The MI that is subscribed to MIRS will always copy this reference from field tag 13G of the last MT298/091 that it sent into the related MT 298/093 or MT 097 that it generates. ]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>423</tag>
							</field>
							<field>
								<name>Message Input Reference</name>
								<description><![CDATA[This field contains the MIR of the payment message that is related to the notification messages in which this field is present. The MI that is subscribed to MIRS will copy it from the received payment message. In a FINCopy scenario, this field must contain the MIR of the related MT 096]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>106</tag>
							</field>
							<field>
								<name>Related Reference</name>
								<description><![CDATA[This field contains the reference of the payment that is related to the notification messages in which this field is present. The payment itself was not the result of a FIN message. The value of this field must correspond to the related reference (field 21) in the MT298/093. The format of field 424 is 16x.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>424</tag>
							</field>
							<field>
								<name>Service Type Identifier</name>
								<description><![CDATA[This field identifies the applicable global payment service type. The format of field 111 is 3!n.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>111</tag>
							</field>
							<field>
								<name>Unique End-To-End Transaction Reference</name>
								<description><![CDATA[This field provides an end-to-end reference across a payment transaction. The format of field 121 is 36!x.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>121</tag>
							</field>
							<field>
								<name>Addressee Information</name>
								<description><![CDATA[Tag 115 is only valid for output messages. Information from Central Institution to the receiver of payment message. Information is input in the MT 097 FIN Copy Message Authorisation/Refusal Notification in Y-Copy mode.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>115</tag>
							</field>
							<field>
								<name>Payment Release Information Receiver (FINInform Services)</name>
								<description><![CDATA[Tag 165 is only valid for output messages. This field contains information from the server destination to the receiver of payment message. It is only available for use in FINInform services that operate in Y-copy mode.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>165</tag>
							</field>
							<field>
								<name>Receiver Information</name>
								<description><![CDATA[Tag 433 is only valid for output messages. The screening service inputs information in the MT 097 FINCopy Message Authorisation/Refusal Notification, in Y-Copy mode. FINCopy copies the information to the receiver of the screened message.
				    The following values can be present in this field:
				      AOK: message automatically released by screening service
				      FPO: compliance officer has flagged the screening result as false positive
				      NOK: compliance officer has flagged the screened message as suspect
				    The code word can optionally be followed by additional information (up to 20 characters from the x character set).]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>433</tag>
							</field>
						</fields>
					</field>
				</fields>
			</Header>
			<Data>
				<Fields>
					<SwiftSequence Name="A">
						<Name>A</Name>
						<Description><![CDATA[General Information]]></Description>
						<Mandatory>true</Mandatory>
						<Repeating>false</Repeating>
						<Fields>
							<SwiftField Name="20">
								<SwiftFieldDef Name="20">
									<Generic>false</Generic>
									<Description><![CDATA[Transaction Reference Number]]></Description>
									<Option Name="">
										<Format><![CDATA[16x]]></Format>
										<Specification><![CDATA[(Reference)]]></Specification>
										<Description><![CDATA[Transaction Reference Number]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options> </Options>
								<Validations>
									<SubField Name="Reference">
										<Validation>
											<Options> </Options>
											<ErrorCode>T26</ErrorCode>
											<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive slashes '//' (Error code(s): T26).]]></Comment>
											<ValidationPattern xsi:type="T26" Type="T26">
												<Type>T26</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="21">
								<SwiftFieldDef Name="21">
									<Generic>false</Generic>
									<Description><![CDATA[Related Reference]]></Description>
									<Option Name="">
										<Format><![CDATA[16x]]></Format>
										<Specification><![CDATA[(Related Reference)]]></Specification>
										<Description><![CDATA[Related Reference]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options> </Options>
								<Validations>
									<SubField Name="Related_Reference">
										<Validation>
											<Options> </Options>
											<ErrorCode>T26</ErrorCode>
											<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive slashes '//' (Error code(s): T26).]]></Comment>
											<ValidationPattern xsi:type="T26" Type="T26">
												<Type>T26</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="13C">
								<SwiftFieldDef Name="13">
									<Generic>false</Generic>
									<Description><![CDATA[Time Indication]]></Description>
									<Option Name="C">
										<Format><![CDATA[/8c/4!n1!x4!n]]></Format>
										<Specification><![CDATA[(Code) (Time indication) (Sign) (Time offset) ]]></Specification>
										<Description><![CDATA[Time Indication]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>true</Repeating>
								<Presence>O</Presence>
								<Options>C</Options>
								<Validations>
									<SubField Name="Time_indication">
										<Validation>
											<Options>C</Options>
											<ErrorCode>T38</ErrorCode>
											<Comment><![CDATA[Time indication must be a valid time expressed as HHMM (Error code(s): T38).]]></Comment>
											<ValidationPattern xsi:type="DATE" Type="DATE">
												<Type>DATE</Type>
												<Format>HHmm</Format>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="Sign">
										<Validation>
											<Options>C</Options>
											<ErrorCode>T15</ErrorCode>
											<Comment><![CDATA[Sign is either '+' or '-' (Error code(s): T15).]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="+">
													</Code>
													<Code Name="-">
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="Time_offset">
										<Validation>
											<Options>C</Options>
											<ErrorCode>T16</ErrorCode>
											<Comment><![CDATA[Time offset is expressed as 'HHMM', where the hour component, that is, 'HH', must be in the range of 00 through 13, and the minute component, that is, 'MM', must be in the range of 00 through 59. Any 'HH' or 'MM' component outside of these range checks will be disallowed (Error code(s): T16).]]></Comment>
											<ValidationPattern xsi:type="Time_Offset" Type="Time Offset">
												<Type>Time Offset</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="32A">
								<SwiftFieldDef Name="32">
									<Generic>false</Generic>
									<Description><![CDATA[Value Date, Currency Code, Amount]]></Description>
									<Option Name="A">
										<Format><![CDATA[6!n3!a15d]]></Format>
										<Specification><![CDATA[(Date) (Currency) (Amount)]]></Specification>
										<Description><![CDATA[Value Date, Currency Code, Amount]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options>A</Options>
								<Validations>
									<SubField Name="Date">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T50</ErrorCode>
											<Comment><![CDATA[Date must be a valid date expressed as YYMMDD (Error code(s): T50).]]></Comment>
											<ValidationPattern xsi:type="DATE" Type="DATE">
												<Type>DATE</Type>
												<Format>yyMMdd</Format>
												<value-date>true</value-date>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="Currency">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T52</ErrorCode>
											<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52).]]></Comment>
											<ValidationPattern xsi:type="Currency_Code" Type="Currency Code">
												<Type>Currency Code</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="Amount">
										<Validation>
											<Options>A</Options>
											<ErrorCode>C03</ErrorCode>
											<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency.(Error code(s): C03)]]></Comment>
											<ValidationPattern xsi:type="Decimal" Type="Decimal">
												<Type>Decimal</Type>
												<currency-field>Currency</currency-field>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="52a">
								<SwiftFieldDef Name="52">
									<Generic>false</Generic>
									<Description><![CDATA[Ordering Institution]]></Description>
									<Option Name="A">
										<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
										<Description><![CDATA[Ordering Institution]]></Description>
									</Option>
									<Option Name="D">
										<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
										<Description><![CDATA[Ordering Institution]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options>A, D</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27, T28, T29, T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC (Error code(s): T27,T28,T29,T45).]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
										<Validation>
											<Options>A</Options>
											<ErrorCode>C05</ErrorCode>
											<Comment><![CDATA[Identifier Code must not be a BEI. See the latest version of the BIC Directory - Corporations for more information about BEIs. This error code applies to all types of BICs referenced in a FIN message including SWIFT BICs, non-SWIFT BICs, Masters, Synonyms, Live destinations and Test & Training destinations (Error code(s): C05).]]></Comment>
											<ValidationPattern xsi:type="C05" Type="C05">
												<Type>C05</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="CreditDebit">
										<Validation>
											<Options>A, D</Options>
											<ErrorCode>T51</ErrorCode>
											<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="C">
														<DetailedName>Credit</DetailedName>
													</Code>
													<Code Name="D">
														<DetailedName>Debit</DetailedName>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="53a">
								<SwiftFieldDef Name="53">
									<Generic>false</Generic>
									<Description><![CDATA[Sender's Correspondent]]></Description>
									<Option Name="A">
										<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
										<Description><![CDATA[Sender's Correspondent]]></Description>
									</Option>
									<Option Name="B">
										<Format><![CDATA[/1!a[/34x](CRLF35x) | /1!a[/34x] | [/34xCRLF]35x | /34x]]></Format>
										<Specification><![CDATA[(CreditDebit) (Party Identifier) (Location) | (CreditDebit)(Party Identifier) |(Party Identifier) (Location) | (Party Identifier)]]></Specification>
										<Description><![CDATA[Sender's Correspondent]]></Description>
									</Option>
									<Option Name="D">
										<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
										<Description><![CDATA[Sender's Correspondent]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>A, B, D</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27, T28, T29, T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC (Error code(s): T27,T28,T29,T45).]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
										<Validation>
											<Options>A</Options>
											<ErrorCode>C05</ErrorCode>
											<Comment><![CDATA[Identifier Code must not be a BEI. See the latest version of the BIC Directory - Corporations for more information about BEIs. This error code applies to all types of BICs referenced in a FIN message including SWIFT BICs, non-SWIFT BICs, Masters, Synonyms, Live destinations and Test & Training destinations (Error code(s): C05).]]></Comment>
											<ValidationPattern xsi:type="C05" Type="C05">
												<Type>C05</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="CreditDebit">
										<Validation>
											<Options>A, B, D</Options>
											<ErrorCode>T51</ErrorCode>
											<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="C">
														<DetailedName>Credit</DetailedName>
													</Code>
													<Code Name="D">
														<DetailedName>Debit</DetailedName>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="56a">
								<SwiftFieldDef Name="56">
									<Generic>false</Generic>
									<Description><![CDATA[Intermediary]]></Description>
									<Option Name="A">
										<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
										<Description><![CDATA[Intermediary]]></Description>
									</Option>
									<Option Name="D">
										<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
										<Description><![CDATA[Intermediary]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>A, D</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27, T28, T29, T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC (Error code(s): T27,T28,T29,T45).]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
										<Validation>
											<Options>A</Options>
											<ErrorCode>C05</ErrorCode>
											<Comment><![CDATA[Identifier Code must not be a BEI. See the latest version of the BIC Directory - Corporations for more information about BEIs. This error code applies to all types of BICs referenced in a FIN message including SWIFT BICs, non-SWIFT BICs, Masters, Synonyms, Live destinations and Test & Training destinations (Error code(s): C05).]]></Comment>
											<ValidationPattern xsi:type="C05" Type="C05">
												<Type>C05</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="CreditDebit">
										<Validation>
											<Options>A, D</Options>
											<ErrorCode>T51</ErrorCode>
											<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="C">
														<DetailedName>Credit</DetailedName>
													</Code>
													<Code Name="D">
														<DetailedName>Debit</DetailedName>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="57a">
								<SwiftFieldDef Name="57">
									<Generic>false</Generic>
									<Description><![CDATA[Account With Institution]]></Description>
									<Option Name="A">
										<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
										<Description><![CDATA[Account With Institution]]></Description>
									</Option>
									<Option Name="B">
										<Format><![CDATA[/1!a[/34x](CRLF35x) | /1!a[/34x] | [/34xCRLF]35x | /34x]]></Format>
										<Specification><![CDATA[(CreditDebit) (Party Identifier) (Location) | (CreditDebit)(Party Identifier) |(Party Identifier) (Location) | (Party Identifier)]]></Specification>
										<Description><![CDATA[Account With Institution]]></Description>
									</Option>
									<Option Name="D">
										<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
										<Description><![CDATA[Account With Institution]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>A, B, D</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27, T28, T29, T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC (Error code(s): T27,T28,T29,T45).]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
										<Validation>
											<Options>A</Options>
											<ErrorCode>C05</ErrorCode>
											<Comment><![CDATA[Identifier Code must not be a BEI. See the latest version of the BIC Directory - Corporations for more information about BEIs. This error code applies to all types of BICs referenced in a FIN message including SWIFT BICs, non-SWIFT BICs, Masters, Synonyms, Live destinations and Test & Training destinations (Error code(s): C05).]]></Comment>
											<ValidationPattern xsi:type="C05" Type="C05">
												<Type>C05</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="CreditDebit">
										<Validation>
											<Options>A, B, D</Options>
											<ErrorCode>T51</ErrorCode>
											<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="C">
														<DetailedName>Credit</DetailedName>
													</Code>
													<Code Name="D">
														<DetailedName>Debit</DetailedName>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="58a">
								<SwiftFieldDef Name="58">
									<Generic>false</Generic>
									<Description><![CDATA[Beneficiary Institution]]></Description>
									<Option Name="A">
										<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
										<Description><![CDATA[Beneficiary Institution]]></Description>
									</Option>
									<Option Name="D">
										<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
										<Description><![CDATA[Beneficiary Institution]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options>A, D</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27, T28, T29, T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC (Error code(s): T27,T28,T29,T45).]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
										<Validation>
											<Options>A</Options>
											<ErrorCode>C05</ErrorCode>
											<Comment><![CDATA[Identifier Code must not be a BEI. See the latest version of the BIC Directory - Corporations for more information about BEIs. This error code applies to all types of BICs referenced in a FIN message including SWIFT BICs, non-SWIFT BICs, Masters, Synonyms, Live destinations and Test & Training destinations (Error code(s): C05).]]></Comment>
											<ValidationPattern xsi:type="C05" Type="C05">
												<Type>C05</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="CreditDebit">
										<Validation>
											<Options>A, D</Options>
											<ErrorCode>T51</ErrorCode>
											<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="C">
														<DetailedName>Credit</DetailedName>
													</Code>
													<Code Name="D">
														<DetailedName>Debit</DetailedName>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="72">
								<SwiftFieldDef Name="72">
									<Generic>false</Generic>
									<Description><![CDATA[Sender to Receiver Information]]></Description>
									<Option Name="">
										<Format><![CDATA[6*35x]]></Format>
										<Specification><![CDATA[(Narrative - Structured Format)]]></Specification>
										<Description><![CDATA[Sender to Receiver Information]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options> </Options>
							</SwiftField>
						</Fields>
					</SwiftSequence>
					<SwiftSequence Name="B">
						<Name>B</Name>
						<Description><![CDATA[Underlying customer credit transfer details]]></Description>
						<Mandatory>true</Mandatory>
						<Repeating>false</Repeating>
						<Fields>
							<SwiftField Name="50a">
								<SwiftFieldDef Name="50">
									<Generic>false</Generic>
									<Description><![CDATA[Ordering Customer]]></Description>
									<Option Name="A">
										<Format><![CDATA[([/34xCRLF])(4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(Account)(Identifier Code)]]></Specification>
										<Description><![CDATA[Ordering Customer]]></Description>
									</Option>
									<Option Name="F">
										<Format><![CDATA[35x(CRLF4*35x)]]></Format>
										<Specification><![CDATA[(Party Identifier)(Name & Address)]]></Specification>
										<Description><![CDATA[Ordering Customer]]></Description>
									</Option>
									<Option Name="K">
										<Format><![CDATA[([/34xCRLF])(4*35x)]]></Format>
										<Specification><![CDATA[(Account)(Name & Address)]]></Specification>
										<Description><![CDATA[Ordering Customer]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options>A, F, K</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27, T28, T29, T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45).]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="52a">
								<SwiftFieldDef Name="52">
									<Generic>false</Generic>
									<Description><![CDATA[Ordering Institution]]></Description>
									<Option Name="A">
										<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
										<Description><![CDATA[Ordering Institution]]></Description>
									</Option>
									<Option Name="D">
										<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
										<Description><![CDATA[Ordering Institution]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>A, D</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27, T28, T29, T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC (Error code(s): T27,T28,T29,T45).]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
										<Validation>
											<Options>A</Options>
											<ErrorCode>C05</ErrorCode>
											<Comment><![CDATA[Identifier Code must not be a BEI. See the latest version of the BIC Directory - Corporations for more information about BEIs. This error code applies to all types of BICs referenced in a FIN message including SWIFT BICs, non-SWIFT BICs, Masters, Synonyms, Live destinations and Test & Training destinations (Error code(s): C05).]]></Comment>
											<ValidationPattern xsi:type="C05" Type="C05">
												<Type>C05</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="CreditDebit">
										<Validation>
											<Options>A, D</Options>
											<ErrorCode>T51</ErrorCode>
											<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="C">
														<DetailedName>Credit</DetailedName>
													</Code>
													<Code Name="D">
														<DetailedName>Debit</DetailedName>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="56a">
								<SwiftFieldDef Name="56">
									<Generic>false</Generic>
									<Description><![CDATA[Intermediary Institution]]></Description>
									<Option Name="A">
										<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
										<Description><![CDATA[Intermediary Institution]]></Description>
									</Option>
									<Option Name="C">
										<Format><![CDATA[/34x]]></Format>
										<Specification><![CDATA[(Party Identifier)]]></Specification>
										<Description><![CDATA[Intermediary Institution]]></Description>
									</Option>
									<Option Name="D">
										<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
										<Description><![CDATA[Intermediary Institution]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>A, C, D</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27, T28, T29, T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC (Error code(s): T27,T28,T29,T45).]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
										<Validation>
											<Options>A</Options>
											<ErrorCode>C05</ErrorCode>
											<Comment><![CDATA[Identifier Code must not be a BEI. See the latest version of the BIC Directory - Corporations for more information about BEIs. This error code applies to all types of BICs referenced in a FIN message including SWIFT BICs, non-SWIFT BICs, Masters, Synonyms, Live destinations and Test & Training destinations (Error code(s): C05).]]></Comment>
											<ValidationPattern xsi:type="C05" Type="C05">
												<Type>C05</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="CreditDebit">
										<Validation>
											<Options>A, D</Options>
											<ErrorCode>T51</ErrorCode>
											<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="C">
														<DetailedName>Credit</DetailedName>
													</Code>
													<Code Name="D">
														<DetailedName>Debit</DetailedName>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="57a">
								<SwiftFieldDef Name="57">
									<Generic>false</Generic>
									<Description><![CDATA[Account With Institution]]></Description>
									<Option Name="A">
										<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
										<Description><![CDATA[Account With Institution]]></Description>
									</Option>
									<Option Name="B">
										<Format><![CDATA[/1!a[/34x](CRLF35x) | /1!a[/34x] | [/34xCRLF]35x | /34x]]></Format>
										<Specification><![CDATA[(CreditDebit) (Party Identifier) (Location) | (CreditDebit)(Party Identifier) |(Party Identifier) (Location) | (Party Identifier)]]></Specification>
										<Description><![CDATA[Account With Institution]]></Description>
									</Option>
									<Option Name="C">
										<Format><![CDATA[/34x]]></Format>
										<Specification><![CDATA[(Party Identifier)]]></Specification>
										<Description><![CDATA[Account With Institution]]></Description>
									</Option>
									<Option Name="D">
										<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
										<Description><![CDATA[Account With Institution]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>A, B, C, D</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27, T28, T29, T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC (Error code(s): T27,T28,T29,T45).]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
										<Validation>
											<Options>A</Options>
											<ErrorCode>C05</ErrorCode>
											<Comment><![CDATA[Identifier Code must not be a BEI. See the latest version of the BIC Directory - Corporations for more information about BEIs. This error code applies to all types of BICs referenced in a FIN message including SWIFT BICs, non-SWIFT BICs, Masters, Synonyms, Live destinations and Test & Training destinations (Error code(s): C05).]]></Comment>
											<ValidationPattern xsi:type="C05" Type="C05">
												<Type>C05</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="CreditDebit">
										<Validation>
											<Options>A, B, D</Options>
											<ErrorCode>T51</ErrorCode>
											<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="C">
														<DetailedName>Credit</DetailedName>
													</Code>
													<Code Name="D">
														<DetailedName>Debit</DetailedName>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="59a">
								<SwiftFieldDef Name="59">
									<Generic>false</Generic>
									<Description><![CDATA[Beneficiary Customer]]></Description>
									<Option Name="">
										<Format><![CDATA[[/34xCRLF]4*35x]]></Format>
										<Specification><![CDATA[(Account)(Name & Address)]]></Specification>
										<Description><![CDATA[Beneficiary Customer]]></Description>
									</Option>
									<Option Name="A">
										<Format><![CDATA[([/34xCRLF])(4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(Account)(Identifier Code)]]></Specification>
										<Description><![CDATA[Beneficiary Customer]]></Description>
									</Option>
									<Option Name="F">
										<Format><![CDATA[[/34xCRLF]4*35x]]></Format>
										<Specification><![CDATA[(Account)(Name & Address Details)]]></Specification>
										<Description><![CDATA[Beneficiary Customer]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options> , A, F</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27, T28, T29, T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45).]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="70">
								<SwiftFieldDef Name="70">
									<Generic>false</Generic>
									<Description><![CDATA[Remittance Information]]></Description>
									<Option Name="">
										<Format><![CDATA[4*35x]]></Format>
										<Specification><![CDATA[(Narrative)]]></Specification>
										<Description><![CDATA[Remittance Information]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options> </Options>
							</SwiftField>
							<SwiftField Name="72">
								<SwiftFieldDef Name="72">
									<Generic>false</Generic>
									<Description><![CDATA[Sender to Receiver Information]]></Description>
									<Option Name="">
										<Format><![CDATA[6*35x]]></Format>
										<Specification><![CDATA[(Narrative - Structured Format)]]></Specification>
										<Description><![CDATA[Sender to Receiver Information]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options> </Options>
							</SwiftField>
							<SwiftField Name="33B">
								<SwiftFieldDef Name="33">
									<Generic>false</Generic>
									<Description><![CDATA[Currency/Instructed Amount]]></Description>
									<Option Name="B">
										<Format><![CDATA[3!a15d]]></Format>
										<Specification><![CDATA[(Currency) (Amount)]]></Specification>
										<Description><![CDATA[Currency/Instructed Amount]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>B</Options>
								<Validations>
									<SubField Name="Currency">
										<Validation>
											<Options>B</Options>
											<ErrorCode>T52</ErrorCode>
											<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52).]]></Comment>
											<ValidationPattern xsi:type="Currency_Code" Type="Currency Code">
												<Type>Currency Code</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="Amount">
										<Validation>
											<Options>B</Options>
											<ErrorCode>C03</ErrorCode>
											<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency.(Error code(s): C03)]]></Comment>
											<ValidationPattern xsi:type="Decimal" Type="Decimal">
												<Type>Decimal</Type>
												<currency-field>Currency</currency-field>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
						</Fields>
					</SwiftSequence>
				</Fields>
			</Data>
			<Trailer>
				<fields>
					<field>
						<name>Message Authentication Code</name>
						<description><![CDATA[Allows authentication by the receiving user. It is followed by an authentication result.

This trailer is mandatory for most user-to-user message categories within the FIN application. When the FIN Copy Service is used a PAC trailer, if present, follows the MAC trailer.

Format:

{MAC:<authentication-result>}

where <authentication-result> = 8!h

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>8</length>
						<tag>MAC</tag>
					</field>
					<field>
						<name>Proprietary Authentication Code</name>
						<description><![CDATA[The PAC is used within the FIN Copy service only, when using the double authentication option. The PAC is included in Block 5 of FIN user-to-user messages, immediately after the MAC trailer, if present.

This is calculated on the extracted fields of Block 4 of the message, the value of field 115, if present, and the <authentication-result> of the MAC trailer for Copy Services with double authentication.

Thus, the end-of-block indicator (CrLf-) is included in the PAC calculation, and the fields are defined as follows:

The first three characters are CrLf:

The field and the delimiter are present, that is, 32A:, 20:, and so on.

All subfields and their delimiters are present.

Format:

{PAC:[<authentication-result>]}

where <authentication-result> is mandatory on input messages only and <authentication-result> = 8!h

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>8</length>
						<tag>PAC</tag>
					</field>
					<field>
						<name>Checksum</name>
						<description><![CDATA[The checksum is computed based on the receiver's address (12 characters, with 9th character replaced by X) plus the Text Block. This trailer allows the system and the CBT to check that messages have not been corrupted due to a system malfunction or an undetected transmission error.

Format:

{CHK:<checksum-result>}

where <checksum-result> = 12!h

Note: This trailer is mandatory for FIN and GPA messages (Service Identifier 01).

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>12</length>
						<tag>CHK</tag>
					</field>
					<field>
						<name>System Originated Message</name>
						<description><![CDATA[The system message or service message which is generated by a system PLT has a SYS trailer. All solicited system messages (Service Identifier 01) contain the MIR of the request and may also contain the time.

Format:

{SYS:[<time><mir>]}

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>SYS</tag>
					</field>
					<field>
						<name>Test And Training Message</name>
						<description><![CDATA[Mandatory for FIN and GPA messages (Service Identifier 01) sent by, or delivered to, a Test & Training Logical Terminal (LT). This trailer has a tag only, and no value.

Format:

{TNG:}
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>0</length>
						<tag>TNG</tag>
					</field>
					<field>
						<name>Possible Duplicate Emission</name>
						<description><![CDATA[This trailer is used by the destination of the message. It only applies to FIN user-to-user messages (Service Identifier 01, message categories reserved for banking messages). There can be multiple PDEs. The system does not verify the order nor restrict the number (except for maximum message length).

Correctly formatted PDE trailers applied to user-to-system messages are accepted by the system, but not processed. This means that the system does not check to see if the original message exists. Therefore, a retrieval request sent with a PDE trailer may be processed twice if the original message was received by the system.

Format:

{PDE:[<time><mir>]}

where <time><mir> refers to the emission of the previous possible issue.

Note: It can be added automatically by a CBT or manually by a user. It may be followed by the MIR and the time of its previous possible messages.

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>PDE</tag>
					</field>
					<field>
						<name>Delayed Message</name>
						<description><![CDATA[This trailer is added to all FIN user-to-user output messages that have exceeded their obsolescence period. If this trailer appears in GPA or FIN system messages, it must be ignored. This trailer has a tag only, and no value.

The Obsolescence Period is:

U = 15 minutes

N = 100 minutes

Format:

{DLM:}

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>0</length>
						<tag>DLM</tag>
					</field>
					<field>
						<name>Possible Duplicate Message</name>
						<description><![CDATA[Added by the system to any output message (GPA and FIN Service Identifier 01) being resent because a prior delivery may be invalid. If a system PLT receives a report request with a PDM, the response has a plain PDM (without the optional delivery reference). Other PDMs may be added as a result of unsuccessful delivery attempts to the user. 
Format:
{PDM:[<time><mor>]}
where <time> and the Message Output Reference <mor> are that of the previous attempt.
Note: For messages recovered after a system failure, the optional fields may not be present.
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>PDM</tag>
					</field>
					<field>
						<name>Message Reference</name>
						<description><![CDATA[The MRF trailer is used to specify the message reference of the original user message in MT 096 FIN Copy to Central Institution Messages.
Format:
{MRF:<date><full-time><mir>}
where <mir> is that of the original user message whose fields are copied in the MT 096 FIN Copy to Central Institution Message.
Note: The MRF is specific to FIN Copy. The MRF trailer is automatically generated in the MT 096 FIN Copy to Central Institution Message and can only be reused in field 109 of the MT 096 FIN Copy to Central Institution Message to identify the MT 096 to which the MT 097 is a response. The format of the MRF is subject to change.
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>MRF</tag>
					</field>
				</fields>
			</Trailer>
		</SwiftFields>
		<validationrules name="Default">
			<hdrvalidationrules>
				<fieldvalidations>
					<fieldvalidation>
						<name>U08</name>
						<formula><![CDATA[if($this.Header.GetFieldIndex("User_Header") != -1) {
    def userHeader = $this.Header.GetSection("User_Header");
    if(userHeader.$size == 0) {
        return false;
    }
    else
        if(userHeader[0].IsNull("Validation_Flag")) {
            return false;
        }
        else
            if(userHeader[0].GetString("Validation_Flag") != "COV") {
                return false;
            }
}
return true;
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U08</error-code>
						<actionmessage><![CDATA["Invalid syntax, format, code word in tag 119(Validation Flag), or field tag 119 is missing. Allowed value is COV."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>U03</name>
						<fieldname>User Header</fieldname>
						<formula><![CDATA[Iff(IsNotNull(User_Header.Service_Type_Identifier), 
    IsNotNull(User_Header.Unique_End_To_End_Transaction_Reference))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U03</error-code>
						<actionmessage><![CDATA["When populating an end-to-end reference, both fields 111 and 121 must be populated: a message that contains only one of these two fields will not be accepted by FIN."]]></actionmessage>
					</fieldvalidation>
				</fieldvalidations>
			</hdrvalidationrules>
			<datavalidationrules>
				<fieldvalidations>
					<fieldvalidation>
						<name>C1</name>
						<fieldname>A.56a</fieldname>
						<comment><![CDATA[C1
If field 56a is present in sequence A, then field 57a must also be present in sequence A (Error code(s): C81).]]></comment>
						<formula><![CDATA[A.F57a.$size>0]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C81</error-code>
						<actionmessage><![CDATA["If field 56a is present in sequence A, then field 57a must also be present in sequence A"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C2</name>
						<fieldname>B.56a</fieldname>
						<comment><![CDATA[C2
If field 56a is present in sequence B, then field 57a must also be present in sequence B (Error code(s): C68).]]></comment>
						<formula><![CDATA[B.F57a.$size>0]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C68</error-code>
						<actionmessage><![CDATA["If field 56a is present in sequence B, then field 57a must also be present in sequence B"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FA-72</name>
						<fieldname>A.72.Narrative_-_Structured_Format</fieldname>
						<comment><![CDATA[FA-72:
The first line of field 72 should be of the following format: /8c/[additional information]. The remaining lines (2 - 6) should be of the following format: [//continuation of additional information] or [/8c/[additional information]].]]></comment>
						<formula><![CDATA[VerifyField72NarrativeText($value)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T32</error-code>
						<actionmessage><![CDATA["The first line of field 72 should be of the following format: /8c/[additional information]. The remaining lines (2 - 6) should be of the following format: [//continuation of additional information] or [/8c/[additional information]]."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-72</name>
						<fieldname>B.72.Narrative_-_Structured_Format</fieldname>
						<comment><![CDATA[FB-72:
The first line of field 72 should be of the following format: /8c/[additional information]. The remaining lines (2 - 6) should be of the following format: [//continuation of additional information] or [/8c/[additional information]].]]></comment>
						<formula><![CDATA[VerifyField72NarrativeText($value)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T32</error-code>
						<actionmessage><![CDATA["The first line of field 72 should be of the following format: /8c/[additional information]. The remaining lines (2 - 6) should be of the following format: [//continuation of additional information] or [/8c/[additional information]]."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-50a-A</name>
						<fieldname>B.50a.Party_Identifier</fieldname>
						<comment><![CDATA[FB-50a-A
With option F, subfield 1 (Party Identifier), one of the following line formats must be used (Error code(s): T54):
Line format 1 :/34x (Account)
Line format 2 :4!a/2!a/27x (Code)(Country Code)(Identifier)]]></comment>
						<formula><![CDATA[Implies(B.F50a.FormatOption == 'F', Verify50FPartyIdFormat($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T54</error-code>
						<actionmessage><![CDATA["Invalid 'Party Identifier' value. One of the following line formats must be used: /34x (Account) or 4!a/2!a/27x (Code)(Country Code)(Identifier)"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-50a-B</name>
						<fieldname>B.50a.Party_Identifier</fieldname>
						<comment><![CDATA[FB-50a-B
In option F, when subfield 1 Party Identifier is used with the (Code)(Country Code)(Identifier) format, one of the following codes must be used (Error code(s): T55): ARNU, CCPT, CUST, DRLC, EMPL, NIDN, SOSE and TXID."
]]></comment>
						<formula><![CDATA[Implies(B.F50a.FormatOption == 'F', Verify50FPartyIdCode($value))
/* get the code from party identifier if format is 4!a/2!a/27x */   ]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T55</error-code>
						<actionmessage><![CDATA["Invalid 'Party Identifier' value. When 'Party Identifier' is used with the format (Code)(Country Code)(Identifier), one of following codes must be used: ARNU, CCPT, CUST, DRLC, EMPL, NIDN, SOSE and TXID."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-50a-C</name>
						<fieldname>B.50a.Party_Identifier</fieldname>
						<comment><![CDATA[FB-50a-D
In option F, subfield 1 (Party Identifier) used with the (Code)(Country Code)(Identifier) format: Country Code must be a valid ISO country code (Error code(s): T73).
]]></comment>
						<formula><![CDATA[Implies(B.F50a.FormatOption == 'F', Verify50FPartyIdCountryCode($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T73</error-code>
						<actionmessage><![CDATA["Invalid 'Party Identifier' value. In option F, subfield 1 (Party Identifier) used with the (Code)(Country Code)(Identifier) format: Country Code must be a valid ISO country code."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-50a-D</name>
						<fieldname>B.50a.Name_&amp;_Address</fieldname>
						<comment><![CDATA[FB-50a-C
With option F, subfield 2 (Name and Address), the following line format must be used for all lines: 1!n/33x (Number)(Details). (Error code(s): T54).]]></comment>
						<formula><![CDATA[Implies(B.F50a.FormatOption == 'F', Verify50FNmandAdrFormat($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T54</error-code>
						<actionmessage><![CDATA["Invalid 'Name and Address' value. With option F, subfield 2 (Name and Address), the following line format must be used for all lines :1!n/33x (Number)(Details)."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-50a-E</name>
						<fieldname>B.50a.Name_&amp;_Address</fieldname>
						<comment><![CDATA[FB-50a-E
 With option F - subfield 2 (Name and Address), should start with Number 1 to 8 and it should follow the line formatting rules as specified in the SWIFT spec (Error code(s): T56).]]></comment>
						<formula><![CDATA[Implies(B.F50a.FormatOption == 'F', Verify50FNmandAdrLines2($value, B.F50a.Party_Identifier))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T56</error-code>
						<actionmessage><![CDATA["Invalid 'Name and Address' value. With option F - subfield 2 (Name and Address), should start with Number 1 to 8 and it should follow the line formatting rules as specified in the SWIFT spec."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-50a-F</name>
						<fieldname>B.50a.Name_&amp;_Address</fieldname>
						<comment><![CDATA[FB-50a-F
Number 4 must be followed by a valid date in the format YYYYMMDD and this date, local to the sender, must not be later than the date on which the message is successfully sent to SWIFT (Error code(s): T50).
]]></comment>
						<formula><![CDATA[Implies(B.F50a.FormatOption == 'F', Verify50FNmandAdrDate($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T50</error-code>
						<actionmessage><![CDATA["Invalid 'Name and Address' value. Number 4 must be followed by a valid date in the format YYYYMMDD and this date, local to the sender, must not be later than the date on which the message is successfully sent to SWIFT."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-50a-G</name>
						<fieldname>B.50a.Name_&amp;_Address</fieldname>
						<comment><![CDATA[FB-50a-G
Numbers 3, 5, 6 and 7 must be followed by a valid ISO country code
(Error code(s): T73).]]></comment>
						<formula><![CDATA[Implies(B.F50a.FormatOption == 'F',Verify50FNmandAdrCtryCode2($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T73</error-code>
						<actionmessage><![CDATA["Invalid 'Name and Address' value. Numbers 3, 5, 6 and 7 must be followed by a valid ISO country code."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>ERI-1</name>
						<fieldname>A</fieldname>
						<comment><![CDATA["For specific message types, an European currency must not be used as the currency of settlement after a cut-off date (Error Code: E76)."]]></comment>
						<formula><![CDATA[applyERIValidation(A.F32A[0], "Date", A.F32A[0], "Currency")]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E76</error-code>
						<actionmessage><![CDATA["For specific message types, an European currency must not be used as the currency of settlement after a cut-off date (Error Code: E76)."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FA-72B</name>
						<fieldname>A.72.Narrative_-_Structured_Format</fieldname>
						<formula><![CDATA[def Actualvalue = replace($value, "\r\n", "\n");
def lines = Split("\n", Actualvalue);
def str = Left(Actualvalue, 6);
def line1format = false;
def line3format = false;
def TREFformat = true;
def CHGSformat = true;
def TEXTformat = true;
def format = true;
def count = 0;
def TREFcount = 0;
def CHGScount = 0;
def TEXTcount = 0;
def i = lines.Length();
if(In(str, "/REJT/", "/RETN/")) {
    if(i <= 6) {
        //if '/REJT/' or '/RETN/' format of 1st line must be "6!x2!n[1a]['/'2c]" & format of 2nd line must be "('/'2!c 2!n'/')[29x]" or "('/X'1c2!n'/')[29x]"
        //if format of 2nd line is "('/'2!c 2!n'/')" then the 6 characters must be one of the codes given below
        line1format = (VerifyFormat(lines[0], "6!x2!n[1a]['/'2c]"));
        if(line1format && lines.Length() > 2) {
            if(!lines[1].StartsWith("/X")) {
                if(VerifyFormat(lines[1], "('/'2!c 2!n'/')[29x]")) {
                	def startStr = lines[1].Left(6);
                    if((!In(startStr, "/AC01/", "/AC02/", "/AC03/", "/AC04/", "/AC05/", "/AC06/", 
                            "/AM01/", "/AM02/", "/AM03/", "/AM04/", "/AM05/", "/AM06/", "/AM07/", 
                            "/AM08/", "/AG01/", "/AG02/", "/BE01/", "/BE02/", "/BE03/", "/BE04/", 
                            "/BE05/", "/DT01/", "/MS01/", "/PY01/", "/RC01/", "/RC02/", "/RC03/", 
                            "/RC04/", "/RF01/", "/TM01/", "/RR01/", "/RR02/", "/RR03/")))
                        return false;
                }
                else
                    return false;
            }
            else if(lines[1].StartsWith("/X") && !VerifyFormat(lines[1], "('/X'1c2!n'/')[29x]"))
                return false;
        }
        else
            return false;
        //Line3 is mandatory and should have the format "/MREF/16x". Lines 4, 5 and 6 are optional
        //If lines 4, 5 or 6 or any combination exists and if the first 6 characters starts with either '/TREF/' or '/CHGS/' or '/TEXT/' or '//'
        //it should satisfy the format given. Also if line starts with '//' it can appear a max of 2 times
        line3format = Equal(Left(lines[2], 6), "/MREF/") && 
                        VerifyFormat(Substring(lines[2], 6), "16x");
        if(line3format) {
            while(i > 3) {
                def str1 = Left(lines[i - 1], 6);
                def str2 = Substring(lines[i - 1], 6);
                if(In(str1, "/TREF/", "/CHGS/", "/TEXT/") || StartsWith(lines[i - 1], "//")) {
                    if(str1 == "/TREF/") {
                        TREFformat = VerifyFormat(str2, "16x");
                        TREFcount += 1;
                    }
                    else if(str1 == "/CHGS/") {
                        CHGSformat = (VerifyFormat(str2, "3!a15d") && 
                                        IsISOCurrencyCode(Substring(lines[i - 1], 6, 3)));
                        CHGScount += 1;
                    }
                    else if(str1 == "/TEXT/") {
                        TEXTformat = (VerifyFormat(str2, "29x"));
                        TEXTcount += 1;
                    }
                    else if(StartsWith(lines[i - 1], "//")) {
                        def str3 = Substring(lines[i - 1], 2);
                        format = (VerifyFormat(str3, "33x"));
                        count += 1;
                        if(!format || count > 2)
                            break;
                    }
                }
                else
                    return false;
                i = i - 1;
            }
        }
        else
            return false;
        if(!TREFformat || !CHGSformat || !TEXTformat || !format || count > 2 || TREFcount > 1 || 
             CHGScount > 1 || TEXTcount > 1)
            return false;
    }
    else
        return false;
}
return true;
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T80</error-code>
						<actionmessage><![CDATA["Field 72 Reject/Return: code word error, or mandatory code word missing, or code word not in the proper sequence, or format 6*35x not satisfied"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-72B</name>
						<fieldname>B.72.Narrative_-_Structured_Format</fieldname>
						<formula><![CDATA[def Actualvalue = replace($value, "\r\n", "\n");
def lines = Split("\n", Actualvalue);
def str = Left(Actualvalue, 6);
def line1format = false;
def line3format = false;
def TREFformat = true;
def CHGSformat = true;
def TEXTformat = true;
def format = true;
def count = 0;
def TREFcount = 0;
def CHGScount = 0;
def TEXTcount = 0;
def i = lines.Length();
if(In(str, "/REJT/", "/RETN/")) {
    if(i <= 6) {
        //if '/REJT/' or '/RETN/' format of 1st line must be "6!x2!n[1a]['/'2c]" & format of 2nd line must be "('/'2!c 2!n'/')[29x]" or "('/X'1c2!n'/')[29x]"
        //if format of 2nd line is "('/'2!c 2!n'/')" then the 6 characters must be one of the codes given below
        line1format = (VerifyFormat(lines[0], "6!x2!n[1a]['/'2c]"));
        if(line1format && lines.Length() > 2) {
            if(!lines[1].StartsWith("/X")) {
                if(VerifyFormat(lines[1], "('/'2!c 2!n'/')[29x]")) {
                	def startStr = lines[1].Left(6);
                    if((!In(startStr, "/AC01/", "/AC02/", "/AC03/", "/AC04/", "/AC05/", "/AC06/", 
                            "/AM01/", "/AM02/", "/AM03/", "/AM04/", "/AM05/", "/AM06/", "/AM07/", 
                            "/AM08/", "/AG01/", "/AG02/", "/BE01/", "/BE02/", "/BE03/", "/BE04/", 
                            "/BE05/", "/DT01/", "/MS01/", "/PY01/", "/RC01/", "/RC02/", "/RC03/", 
                            "/RC04/", "/RF01/", "/TM01/", "/RR01/", "/RR02/", "/RR03/")))
                    return false;
            }
                else
                    return false;
            }
            else if(lines[1].StartsWith("/X") && !VerifyFormat(lines[1], "('/X'1c2!n'/')[29x]"))
                return false;
        }
        else
            return false;
        //Line3 is mandatory and should have the format "/MREF/16x". Lines 4, 5 and 6 are optional
        //If lines 4, 5 or 6 or any combination exists and if the first 6 characters starts with either '/TREF/' or '/CHGS/' or '/TEXT/' or '//'
        //it should satisfy the format given. Also if line starts with '//' it can appear a max of 2 times
        line3format = Equal(Left(lines[2], 6), "/MREF/") && 
                        VerifyFormat(Substring(lines[2], 6), "16x");
        if(line3format) {
            while(i > 3) {
                def str1 = Left(lines[i - 1], 6);
                def str2 = Substring(lines[i - 1], 6);
                if(In(str1, "/TREF/", "/CHGS/", "/TEXT/") || StartsWith(lines[i - 1], "//")) {
                    if(str1 == "/TREF/") {
                        TREFformat = VerifyFormat(str2, "16x");
                        TREFcount += 1;
                    }
                    else if(str1 == "/CHGS/") {
                        CHGSformat = (VerifyFormat(str2, "3!a15d") && 
                                        IsISOCurrencyCode(Substring(lines[i - 1], 6, 3)));
                        CHGScount += 1;
                    }
                    else if(str1 == "/TEXT/") {
                        TEXTformat = (VerifyFormat(str2, "29x"));
                        TEXTcount += 1;
                    }
                    else if(StartsWith(lines[i - 1], "//")) {
                        def str3 = Substring(lines[i - 1], 2);
                        format = (VerifyFormat(str3, "33x"));
                        count += 1;
                        if(!format || count > 2)
                            break;
                    }
                }
                else
                    return false;
                i = i - 1;
            }
        }
        else
            return false;
        if(!TREFformat || !CHGSformat || !TEXTformat || !format || count > 2 || TREFcount > 1 || 
             CHGScount > 1 || TEXTcount > 1)
            return false;
    }
    else
        return false;
}
return true;
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T80</error-code>
						<actionmessage><![CDATA["Field 72 Reject/Return: code word error, or mandatory code word missing, or code word not in the proper sequence, or format 6*35x not satisfied"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>ERI-1</name>
						<fieldname>A.72.Narrative_-_Structured_Format</fieldname>
						<formula><![CDATA[ApplyERICodeValidationStructured($value);]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T47</error-code>
						<actionmessage><![CDATA["In an ERI field (i.e. fields 61, 72, 77A, 79, 86) the data part of a code word /OCMT/, or /CHGS/, is being validated, but the ending separator (i.e. third slash) is missing or the code words are duplicated."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>ERI-2</name>
						<fieldname>B.72.Narrative_-_Structured_Format</fieldname>
						<formula><![CDATA[ApplyERICodeValidationStructured($value);]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T47</error-code>
						<actionmessage><![CDATA["In an ERI field (i.e. fields 61, 72, 77A, 79, 86) the data part of a code word /OCMT/, or /CHGS/, is being validated, but the ending separator (i.e. third slash) is missing or the code words are duplicated."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FA-32A</name>
						<fieldname>A.32A.Currency</fieldname>
						<formula><![CDATA[!In($value, "XAU", "XAG", "XPD", "XPT")]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C08</error-code>
						<actionmessage><![CDATA["The codes XAU, XAG, XPD and XPT are not allowed, as these are codes for commodities for which the category 6 commodities messages must be used."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-59a-A</name>
						<fieldname>B.59a.Name_&amp;_Address_Details</fieldname>
						<formula><![CDATA[Implies(B.F59a.FormatOption == 'F', Verify59FNmandAdrDtlLines($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T56</error-code>
						<actionmessage><![CDATA["Invalid 'Name_and_Address_Details' value. With option F - subfield 2 (Name_and_Address_Details), should start with Number 1 to 3 and it should follow the line formatting rules as specified in the SWIFT spec for field 59F."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-59a-B</name>
						<fieldname>B.59a.Name_&amp;_Address_Details</fieldname>
						<formula><![CDATA[Implies(B.F59a.FormatOption == 'F', Verify59FNmandAdrDtlFormat($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T56</error-code>
						<actionmessage><![CDATA["Invalid 'Name and Address Details' value. With option F, subfield 2 (Name and Address Details), the following line format must be used for all lines :1!n/33x (Number)(Name and Address Details)."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-59a-C</name>
						<fieldname>B.59a.Name_&amp;_Address_Details</fieldname>
						<formula><![CDATA[Implies(B.F59a.FormatOption == 'F', Verify59FNmandAdrDtlCtryCode($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T73</error-code>
						<actionmessage><![CDATA["Invalid 'Name_and_Address_Details' value. Number 3 must be followed by a valid ISO country code."]]></actionmessage>
					</fieldvalidation>
				</fieldvalidations>
			</datavalidationrules>
			<tlrvalidationrules>
				<fieldvalidations>
				</fieldvalidations>
			</tlrvalidationrules>
		</validationrules>
		<elementproperties>
			<propertymap>
			</propertymap>
		</elementproperties>
	</externalmessage>
	<externalmessage xsi:type="SwiftFormat" type="SwiftFormat" version="5.1.2" rulename="MT207_2016" formattype="SwiftFormat" >
		<description><![CDATA[This message is used to move funds from the ordering financial institution's account, serviced at the receiving financial institution or at the account servicing institution, or from an account(s) owned by the ordering institution for which the initiating institution has explicit authority to debit, eg, a subsidiary account.

It can be used to order the movement of funds:

a)  between the ordering institution's accounts, or

b)  in favour of a third party, either domestically or internationally.

The message is sent by a financial institution on behalf of the ordering financial institution, ie, the account owning financial institution, or on behalf of the initiating financial institution. It is subsequently received by a financial institution and processed by this receiving financial institution or another account servicing financial institution.

The complete chain of parties and the transaction flow is illustrated by the following figure:


The parties mentioned in the chain are not necessarily different entities. The first column of the table below shows the parties that can be omitted in an MT 207. The second column specifies the party which assumes the role of the party in the first column, when it is not present:
If the following party is missing... Its function is assumed by ... Initiating institution Ordering institution Account servicing institution Receiver Intermediary Account with institution Account with institution Receiver]]></description>
		<standard>SWIFT</standard>
		<standard-name>MT207</standard-name>
		<standard-version>SRG 2016</standard-version>
		<standard-release-qualifier>20160308</standard-release-qualifier>
		<standard-category>Financial Institution Transfers</standard-category>
		<standard-detailed-name>Request For Financial Institution Transfer</standard-detailed-name>
		<version>1.0</version>
		<SwiftFields>
			<customizable>true</customizable>
			<modifiable>false</modifiable>
			<SwiftMessageType>User</SwiftMessageType>
			<max-length>10000</max-length>
			<HeaderAndTrailerType>SWIFT_INPUT_OUTPUT_HEADER</HeaderAndTrailerType>
			<Header>
				<fields>
					<field>
						<name>Basic Header</name>
						<description><![CDATA[The Basic Header is given in Block 1 of a SWIFT message and is the only header that appears on all messages. The Basic Header provides the fundamental reference for any particular message and is almost always automatically built by the CBT.
The Basic Header has the same format for both input and output messages. However, the information contained in the Basic Header is relative to the sender when the message is input but relative to the receiver when the same message is output.]]></description>
						<datatype>Section</datatype>
						<required>true</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Application Identifier</name>
								<description><![CDATA[The Application Identifier identifies the application within which the message is being sent or received. The available options are:

F = FIN All user-to-user, FIN system and FIN service messages 
A = GPA Most GPA system and service messages 
L = GPA Certain GPA service messages, for example, LOGIN, LAKs, ABORT 

These values are automatically assigned by the SWIFT system and the user's CBT, but the user should be aware of their existence and significance
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Service Identifier</name>
								<description><![CDATA[The Service Identifier consists of 2 numeric characters. It identifies the type of data that is being sent or received and, in doing so, whether the message which follows is one of the following:

a user-to-user message

a system message

a service message, for example, a session control command, such as SELECT, or a logical acknowledgement, such as ACK/SAK/UAK

Users will be primarily concerned with identifier '01' which applies to all GPA and FIN system and user-to-user messages. Other values include: '21' for message acknowledgements such as ACK/NAK, UAK/UNK, '03' for SELECT commands, and 
so on]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>2</length>
							</field>
							<field>
								<name>LT Identifier</name>
								<description><![CDATA[This 12-character SWIFT address, given in the Basic Header Block, is the address of the sending LT for input messages or of the receiving LT for output messages, and includes the Branch Code.

In the Basic Header, the LT Code within the LT Identifier is specific to the LT that has established the session in which the message is being transmitted, that is the sending LT for input messages or the receiving LT for output messages.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>12</length>
							</field>
							<field>
								<name>Session Number</name>
								<description><![CDATA[The Session Number identifies the session in which the message was transmitted. Within the Basic Header, the 4-digit Session Number is the user's current GPA or FIN Session Number.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Sequence Number</name>
								<description><![CDATA[The sequence number always consists of 6 digits. It is the ISN of the sender's current input session or the OSN of the receiver's current output session.

Note: The sequence number is not present in those messages with an Application Identifier of 'L' (for example LOGIN). The sequence number is, however, a key element in the processing of retrievals. Therefore, LOGINs and attempted LOGINs are not retrievable
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>6</length>
							</field>
						</fields>
					</field>
					<field>
						<name>Application Header Input</name>
						<description><![CDATA[The Application Header of a SWIFT message provides information about the message itself.

The Application Header is given in Block 2 of a SWIFT message. It differs according to whether the message is a GPA or a FIN message and whether the Application Header is part of an input or an output message.

]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Input/Output Identifier</name>
								<description><![CDATA[For an input message, the Input/Output Identifier consists of the single letter 'I'.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Message Type</name>
								<description><![CDATA[The Message Type consists of 3 digits which define the MT number of the message being input. The example used above is for an MT 100 Customer Transfer]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>3</length>
							</field>
							<field>
								<name>Receiver's Address</name>
								<description><![CDATA[This address is the 12-character SWIFT address of the receiver of the message, but with a LT Code of 'X'. It defines the destination to which the message should be sent.

The system will replace the 'X' with a specific LT Code on delivery of the message according to the delivery control exercised by the receiving user.

The Branch Code is mandatory and will be validated. The default of 'XXX' may be used, as in the example above.

Unless otherwise documented, system messages addressed to the SWIFT system itself should be addressed to SWFTXXXXXXXX.

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>12</length>
							</field>
							<field>
								<name>Message Priority</name>
								<description><![CDATA[This character, used within FIN Application Headers only, defines the priority with which a message is delivered. The possible values are:

S = System

U = Urgent

N = Normal

Message Priority 'S' must be used for user-to-system messages; for user-to-user messages either 'U' or 'N' can be used. In the absence of user-specified delivery criteria, system messages are always delivered first, followed by urgent priority messages and then normal priority messages.

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Delivery Monitoring</name>
								<description><![CDATA[Delivery monitoring options apply only to FIN user-to-user messages, and allow the sender of a message to request:

automatic MT 011 Delivery Notification once the message has been delivered

automatic MT 010 Non-Delivery Warning if a message is not delivered within the specified obsolescence period (see below)

both, or neither, options. This may be requested on an individual message basis.

The chosen option is expressed as a single digit:

1 = Non-Delivery Warning

2 = Delivery Notification

3 = Non-Delivery Warning and Delivery Notification. 
If the message has priority 'U' then the user must request delivery monitoring option '1' or '3'. If the message has priority 'N', the user can request delivery monitoring option '2', or, by leaving the option blank, no delivery monitoring.
]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>1</length>
							</field>
							<field>
								<name>Obsolescence Period</name>
								<description><![CDATA[The obsolescence period defines the period of time after which a Delayed Message (DLM) trailer is added to a FIN user-to-user message when the message is delivered. For urgent priority messages, it is also the period of time after which, if the message remains undelivered, a Non-Delivery Warning is generated.

The values for the obsolescence period are 003 (15 minutes) for 'U' priority, and 020 (100 minutes) for 'N' priority. An obsolescence period can only be specified when delivery monitoring has been requested (option 1 or 3 for urgent priority messages, option 2 for normal priority messages). If no delivery monitoring has been requested, and an obsolescence period is specified, the message will be NAKed with error code H25.

GPA input Application Headers are similar to their FIN equivalents except that GPA messages do not specify priority, delivery monitoring, nor obsolescence period.

]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>3</length>
							</field>
						</fields>
					</field>
					<field>
						<name>Application Header Output</name>
						<description><![CDATA[The Application Header of a SWIFT message provides information about the message itself.

The Application Header is given in Block 2 of a SWIFT message. It differs according to whether the message is a GPA or a FIN message and whether the Application Header is part of an input or an output message.

]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Input/Output Identifier</name>
								<description><![CDATA[For an input message, the Input/Output Identifier consists of the single letter 'I'.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Message Type</name>
								<description><![CDATA[Three digits indicating the Message Type.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>3</length>
							</field>
							<field>
								<name>Input Time</name>
								<description><![CDATA[The first occurrence of the time field contains the system time and date. This is the generation time in Greenwich Mean Time (GMT).
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Message Input Reference</name>
								<description><![CDATA[The input MIR.

If the message is generated by the system, the input time is the generation time (in GMT) and the input MIR is the system MIR

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>28</length>
							</field>
							<field>
								<name>Output Date</name>
								<description><![CDATA[The output date, local to the receiver.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>6</length>
							</field>
							<field>
								<name>Output Time</name>
								<description><![CDATA[The second occurrence of the time field contains the output time and date. This is in a time local to the receiver.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Message Priority</name>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
						</fields>
					</field>
					<field>
						<name>User Header</name>
						<description><![CDATA[The User Header is an optional header available within FIN for user-to-user messages only. It appears in Block 3 of a SWIFT message, and allows users to provide their own reference within the headers for a particular message.

A User Header can only be assigned by the sender of a message and, if assigned, will always appear on the output message copy. Relevant parts of the User Header will be repeated in related system messages and acknowledgements.

Block 3 may contain tag 113, defining banking priorities, and tag 108, which is a user reference. The user reference part of the User Header may be used as one of the selection criteria when retrieving a message.

The optional field tags 103 and 115 are also used in Block 3 for the FIN Copy service. The order of tags, when present, is 103, 113, 108 and 115.

An optional field tag 119 can be included in Block 3 of certain messages to specify that different validation rules are to be applied. Agreed code words in field 119 indicate what validation rules SWIFT will apply. If field 119 is present, it should appear after field 108
]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Service Identifier</name>
								<description><![CDATA[For any message which the user submits to a FIN Copy service, Block 3 requires an additional field 103 which contains a three-character Service Identifier unique to a specific FIN Copy service. By using a unique identifier it is possible to support access to multiple services within the same CBT.
]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>3</length>
								<tag>103</tag>
							</field>
							<field>
								<name>Banking Priority</name>
								<description><![CDATA[Assigned by the sender of the message.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>4</length>
								<tag>113</tag>
							</field>
							<field>
								<name>Message User Reference</name>
								<description><![CDATA[Assigned by the sender of the message.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>16</length>
								<tag>108</tag>
							</field>
							<field>
								<name>Validation Flag</name>
								<description><![CDATA[Indicates whether a special validation needs to be performed by FIN. The following are examples of the values this field may take. Please note that this list is subject to change:

ISITC indicates validation of ISITC Standards. Only to be used with MT 521 and MT 523.

REMIT identifies the presence of field 77T. Only to be used in MT 103.

RFDD indicates that the message is a request for direct debit. Only to be used in MT 104.

STP indicates that the message is validated according to straight through processing principles. Only to be used in MT 103.

]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>119</tag>
							</field>
							<field>
								<name>Balance checkpoint date and time</name>
								<description><![CDATA[This field contains the balance checkpoint date and time consisting of a date (YYMMDD) and a time (HHMMSS[ss], where 'ss' indicates hundredths of a second). The MI that is subscribed to MIRS will always copy this reference from field tag 13G of the last MT298/091 that it sent into the related MT 298/093 or MT 097 that it generates. ]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>423</tag>
							</field>
							<field>
								<name>Message Input Reference</name>
								<description><![CDATA[This field contains the MIR of the payment message that is related to the notification messages in which this field is present. The MI that is subscribed to MIRS will copy it from the received payment message. In a FINCopy scenario, this field must contain the MIR of the related MT 096]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>106</tag>
							</field>
							<field>
								<name>Related Reference</name>
								<description><![CDATA[This field contains the reference of the payment that is related to the notification messages in which this field is present. The payment itself was not the result of a FIN message. The value of this field must correspond to the related reference (field 21) in the MT298/093. The format of field 424 is 16x.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>424</tag>
							</field>
							<field>
								<name>Service Type Identifier</name>
								<description><![CDATA[This field identifies the applicable global payment service type. The format of field 111 is 3!n.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>111</tag>
							</field>
							<field>
								<name>Unique End-To-End Transaction Reference</name>
								<description><![CDATA[This field provides an end-to-end reference across a payment transaction. The format of field 121 is 36!x.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>121</tag>
							</field>
							<field>
								<name>Addressee Information</name>
								<description><![CDATA[Tag 115 is only valid for output messages. Information from Central Institution to the receiver of payment message. Information is input in the MT 097 FIN Copy Message Authorisation/Refusal Notification in Y-Copy mode.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>115</tag>
							</field>
							<field>
								<name>Payment Release Information Receiver (FINInform Services)</name>
								<description><![CDATA[Tag 165 is only valid for output messages. This field contains information from the server destination to the receiver of payment message. It is only available for use in FINInform services that operate in Y-copy mode.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>165</tag>
							</field>
							<field>
								<name>Receiver Information</name>
								<description><![CDATA[Tag 433 is only valid for output messages. The screening service inputs information in the MT 097 FINCopy Message Authorisation/Refusal Notification, in Y-Copy mode. FINCopy copies the information to the receiver of the screened message.
				    The following values can be present in this field:
				      AOK: message automatically released by screening service
				      FPO: compliance officer has flagged the screening result as false positive
				      NOK: compliance officer has flagged the screened message as suspect
				    The code word can optionally be followed by additional information (up to 20 characters from the x character set).]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>433</tag>
							</field>
						</fields>
					</field>
				</fields>
			</Header>
			<Data>
				<Fields>
					<SwiftSequence Name="A">
						<Name>A</Name>
						<Description><![CDATA[General Information]]></Description>
						<Mandatory>true</Mandatory>
						<Repeating>false</Repeating>
						<Fields>
							<SwiftField Name="20">
								<SwiftFieldDef Name="20">
									<Generic>false</Generic>
									<Description><![CDATA[Sender's Reference]]></Description>
									<Option Name="">
										<Format><![CDATA[16x]]></Format>
										<Specification><![CDATA[(Reference)]]></Specification>
										<Description><![CDATA[Sender's Reference]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options> </Options>
								<Validations>
									<SubField Name="Reference">
										<Validation>
											<Options> </Options>
											<ErrorCode>T26</ErrorCode>
											<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive slashes '//' (Error code(s): T26) .]]></Comment>
											<ValidationPattern xsi:type="T26" Type="T26">
												<Type>T26</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="21R">
								<SwiftFieldDef Name="21">
									<Generic>false</Generic>
									<Description><![CDATA[Specified Reference of the Ordering Institution]]></Description>
									<Option Name="R">
										<Format><![CDATA[16x]]></Format>
										<Specification><![CDATA[(Reference)]]></Specification>
										<Description><![CDATA[Specified Reference of the Ordering Institution]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>R</Options>
								<Validations>
									<SubField Name="Reference">
										<Validation>
											<Options>R</Options>
											<ErrorCode>T26</ErrorCode>
											<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive slashes '//' (Error code(s): T26) .]]></Comment>
											<ValidationPattern xsi:type="T26" Type="T26">
												<Type>T26</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="28D">
								<SwiftFieldDef Name="28">
									<Generic>false</Generic>
									<Description><![CDATA[Message Index / Total]]></Description>
									<Option Name="D">
										<Format><![CDATA[5n/5n]]></Format>
										<Specification><![CDATA[(Message Index)(Total)]]></Specification>
										<Description><![CDATA[Message Index / Total]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options>D</Options>
							</SwiftField>
							<SwiftField Name="30">
								<SwiftFieldDef Name="30">
									<Generic>false</Generic>
									<Description><![CDATA[Requested Execution Date]]></Description>
									<Option Name="">
										<Format><![CDATA[6!n]]></Format>
										<Specification><![CDATA[(Date)]]></Specification>
										<Description><![CDATA[Requested Execution Date]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options> </Options>
								<Validations>
									<SubField Name="Date">
										<Validation>
											<Options> </Options>
											<ErrorCode>T50</ErrorCode>
											<Comment><![CDATA[Date must be a valid date expressed as YYMMDD (Error code(s): T50) .]]></Comment>
											<ValidationPattern xsi:type="DATE" Type="DATE">
												<Type>DATE</Type>
												<Format>yyMMdd</Format>
												<value-date>true</value-date>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="51A">
								<SwiftFieldDef Name="51">
									<Generic>false</Generic>
									<Description><![CDATA[Initiating Institution]]></Description>
									<Option Name="A">
										<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
										<Description><![CDATA[Initiating Institution]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>A</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27,T28,T29,T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
										<Validation>
											<Options>A</Options>
											<ErrorCode>C05</ErrorCode>
											<Comment><![CDATA[Identifier Code must not be a BEI. Please refer to the latest version of the BIC Directory - Corporations for more information about BEIs. This error code applies to all types of BICs referenced in a FIN message including SWIFT BICs, non-SWIFT BICs, Masters, Synonyms, Live destinations and Test & Training destinations. (Error code(s): C05) .]]></Comment>
											<ValidationPattern xsi:type="C05" Type="C05">
												<Type>C05</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="CreditDebit">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T51</ErrorCode>
											<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="C">
														<DetailedName>Credit</DetailedName>
													</Code>
													<Code Name="D">
														<DetailedName>Debit</DetailedName>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="52G">
								<SwiftFieldDef Name="52">
									<Generic>false</Generic>
									<Description><![CDATA[Ordering Institution]]></Description>
									<Option Name="G">
										<Format><![CDATA[(/34x)(CRLF4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(Account) (Identifier Code)]]></Specification>
										<Description><![CDATA[Ordering Institution]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options>G</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>G</Options>
											<ErrorCode>T27,T28,T29,T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
										<Validation>
											<Options>G</Options>
											<ErrorCode>C05</ErrorCode>
											<Comment><![CDATA[Identifier Code must not be a BEI. Please refer to the latest version of the BIC Directory - Corporations for more information about BEIs. This error code applies to all types of BICs referenced in a FIN message including SWIFT BICs, non-SWIFT BICs, Masters, Synonyms, Live destinations and Test & Training destinations . (Error code(s): C05) .]]></Comment>
											<ValidationPattern xsi:type="C05" Type="C05">
												<Type>C05</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="52a">
								<SwiftFieldDef Name="52">
									<Generic>false</Generic>
									<Description><![CDATA[Account Servicing Institution]]></Description>
									<Option Name="A">
										<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
										<Description><![CDATA[Account Servicing Institution]]></Description>
									</Option>
									<Option Name="C">
										<Format><![CDATA[/34x]]></Format>
										<Specification><![CDATA[(Party Identifier)]]></Specification>
										<Description><![CDATA[Account Servicing Institution]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>A, C</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27,T28,T29,T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
										<Validation>
											<Options>A</Options>
											<ErrorCode>C05</ErrorCode>
											<Comment><![CDATA[Identifier Code must not be a BEI. Please refer to the latest version of the BIC Directory - Corporations for more information about BEIs. This error code applies to all types of BICs referenced in a FIN message including SWIFT BICs, non-SWIFT BICs, Masters, Synonyms, Live destinations and Test & Training destinations . (Error code(s): C05) .]]></Comment>
											<ValidationPattern xsi:type="C05" Type="C05">
												<Type>C05</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="CreditDebit">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T51</ErrorCode>
											<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="C">
														<DetailedName>Credit</DetailedName>
													</Code>
													<Code Name="D">
														<DetailedName>Debit</DetailedName>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="72">
								<SwiftFieldDef Name="72">
									<Generic>false</Generic>
									<Description><![CDATA[Sender to Receiver Information]]></Description>
									<Option Name="">
										<Format><![CDATA[6*35x]]></Format>
										<Specification><![CDATA[(Narrative - Structured Format )]]></Specification>
										<Description><![CDATA[Sender to Receiver Information]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options> </Options>
							</SwiftField>
						</Fields>
					</SwiftSequence>
					<SwiftSequence Name="B">
						<Name>B</Name>
						<Description><![CDATA[Transaction Details]]></Description>
						<Mandatory>true</Mandatory>
						<Repeating>true</Repeating>
						<Fields>
							<SwiftField Name="21">
								<SwiftFieldDef Name="21">
									<Generic>false</Generic>
									<Description><![CDATA[Transaction Reference]]></Description>
									<Option Name="">
										<Format><![CDATA[16x]]></Format>
										<Specification><![CDATA[(Related Reference)]]></Specification>
										<Description><![CDATA[Transaction Reference]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options> </Options>
								<Validations>
									<SubField Name="Related_Reference">
										<Validation>
											<Options> </Options>
											<ErrorCode>T26</ErrorCode>
											<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive slashes '//' (Error code(s): T26) .]]></Comment>
											<ValidationPattern xsi:type="T26" Type="T26">
												<Type>T26</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="23E">
								<SwiftFieldDef Name="23">
									<Generic>false</Generic>
									<Description><![CDATA[Instruction Code]]></Description>
									<Option Name="E">
										<Format><![CDATA[4!c[/30x]]]></Format>
										<Specification><![CDATA[(Instruction Code) (Additional Information)]]></Specification>
										<Description><![CDATA[Instruction Code]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>true</Repeating>
								<Presence>O</Presence>
								<Options>E</Options>
								<Validations>
									<SubField Name="Instruction_Code">
										<Validation>
											<Options>E</Options>
											<ErrorCode>T47</ErrorCode>
											<Comment><![CDATA[One of the following codes must be used (Error code(s): T47) .]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="CMSW">
														<DetailedName>Sweep the account</DetailedName>
														<Description>This transaction contains a cash management instruction, requesting to sweep the account of the ordering institution.</Description>
													</Code>
													<Code Name="CMTO">
														<DetailedName>Top the account</DetailedName>
														<Description>This transaction contains a cash management instruction, requesting to top the account of the ordering institution above a certain floor amount. The floor amount, if not pre-agreed by the parties involved, may be specified after the code.</Description>
													</Code>
													<Code Name="CMZB">
														<DetailedName>Zero balance the account</DetailedName>
														<Description>This transaction contains a cash management instruction, requesting to zero balance the account of the ordering institution.</Description>
													</Code>
													<Code Name="CORT">
														<DetailedName>Corporate trade</DetailedName>
														<Description>This transaction contains a payment that is made in settlement of a trade, eg, foreign exchange deal, securities transaction.</Description>
													</Code>
													<Code Name="NETS">
														<DetailedName>Net Settlement System</DetailedName>
														<Description>This transaction contains a payment that should be settled via a net settlement system, if available.</Description>
													</Code>
													<Code Name="OTHR">
														<DetailedName>Other</DetailedName>
														<Description>Used for bilaterally agreed codes/information. The actual bilateral code/information needs to be specified in Additional Information.</Description>
													</Code>
													<Code Name="PHON">
														<DetailedName>Telephone</DetailedName>
														<Description>This transaction requires the beneficiary to be contacted by telephone and should be followed by the appropriate telephone number.
This code is meant for the institution closest to the beneficiary institution</Description>
													</Code>
													<Code Name="RTGS">
														<DetailedName>RTGS payment</DetailedName>
														<Description>This transaction contains a payment that should be settled via a real time gross settlement system, if available.</Description>
													</Code>
													<Code Name="URGP">
														<DetailedName>Urgent Payment</DetailedName>
														<Description>This transaction contains a time sensitive payment which should be executed in an expeditious manner.</Description>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="32B">
								<SwiftFieldDef Name="32">
									<Generic>false</Generic>
									<Description><![CDATA[Currency/Transaction Amount]]></Description>
									<Option Name="B">
										<Format><![CDATA[3!a15d]]></Format>
										<Specification><![CDATA[(Currency) (Amount)]]></Specification>
										<Description><![CDATA[Currency/Transaction Amount]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options>B</Options>
								<Validations>
									<SubField Name="Currency">
										<Validation>
											<Options>B</Options>
											<ErrorCode>T52</ErrorCode>
											<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52) .]]></Comment>
											<ValidationPattern xsi:type="Currency_Code" Type="Currency Code">
												<Type>Currency Code</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="Amount">
										<Validation>
											<Options>B</Options>
											<ErrorCode>C03</ErrorCode>
											<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency (Error code(s): C03,T40,T43) .]]></Comment>
											<ValidationPattern xsi:type="Decimal" Type="Decimal">
												<Type>Decimal</Type>
												<currency-field>Currency</currency-field>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="56a">
								<SwiftFieldDef Name="56">
									<Generic>false</Generic>
									<Description><![CDATA[Intermediary]]></Description>
									<Option Name="A">
										<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
										<Description><![CDATA[Intermediary]]></Description>
									</Option>
									<Option Name="D">
										<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
										<Description><![CDATA[Intermediary]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>A, D</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27,T28,T29,T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
										<Validation>
											<Options>A</Options>
											<ErrorCode>C05</ErrorCode>
											<Comment><![CDATA[Identifier Code must not be a BEI. Please refer to the latest version of the BIC Directory - Corporations for more information about BEIs. This error code applies to all types of BICs referenced in a FIN message including SWIFT BICs, non-SWIFT BICs, Masters, Synonyms, Live destinations and Test & Training destinations . (Error code(s): C05) .]]></Comment>
											<ValidationPattern xsi:type="C05" Type="C05">
												<Type>C05</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="CreditDebit">
										<Validation>
											<Options>A, D</Options>
											<ErrorCode>T51</ErrorCode>
											<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="C">
														<DetailedName>Credit</DetailedName>
													</Code>
													<Code Name="D">
														<DetailedName>Debit</DetailedName>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="57a">
								<SwiftFieldDef Name="57">
									<Generic>false</Generic>
									<Description><![CDATA[Account With Institution]]></Description>
									<Option Name="A">
										<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
										<Description><![CDATA[Account With Institution]]></Description>
									</Option>
									<Option Name="C">
										<Format><![CDATA[/34x]]></Format>
										<Specification><![CDATA[(Party Identifier)]]></Specification>
										<Description><![CDATA[Account With Institution]]></Description>
									</Option>
									<Option Name="D">
										<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
										<Description><![CDATA[Account With Institution]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>A, C, D</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27,T28,T29,T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
										<Validation>
											<Options>A</Options>
											<ErrorCode>C05</ErrorCode>
											<Comment><![CDATA[Identifier Code must not be a BEI. Please refer to the latest version of the BIC Directory - Corporations for more information about BEIs. This error code applies to all types of BICs referenced in a FIN message including SWIFT BICs, non-SWIFT BICs, Masters, Synonyms, Live destinations and Test & Training destinations . (Error code(s): C05) .]]></Comment>
											<ValidationPattern xsi:type="C05" Type="C05">
												<Type>C05</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="CreditDebit">
										<Validation>
											<Options>A, D</Options>
											<ErrorCode>T51</ErrorCode>
											<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="C">
														<DetailedName>Credit</DetailedName>
													</Code>
													<Code Name="D">
														<DetailedName>Debit</DetailedName>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="58a">
								<SwiftFieldDef Name="58">
									<Generic>false</Generic>
									<Description><![CDATA[Beneficiary Institution]]></Description>
									<Option Name="A">
										<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
										<Description><![CDATA[Beneficiary Institution]]></Description>
									</Option>
									<Option Name="D">
										<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
										<Description><![CDATA[Beneficiary Institution]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options>A, D</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27,T28,T29,T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
										<Validation>
											<Options>A</Options>
											<ErrorCode>C05</ErrorCode>
											<Comment><![CDATA[Identifier Code must not be a BEI. Please refer to the latest version of the BIC Directory - Corporations for more information about BEIs. This error code applies to all types of BICs referenced in a FIN message including SWIFT BICs, non-SWIFT BICs, Masters, Synonyms, Live destinations and Test & Training destinations . (Error code(s): C05) .]]></Comment>
											<ValidationPattern xsi:type="C05" Type="C05">
												<Type>C05</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="CreditDebit">
										<Validation>
											<Options>A, D</Options>
											<ErrorCode>T51</ErrorCode>
											<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="C">
														<DetailedName>Credit</DetailedName>
													</Code>
													<Code Name="D">
														<DetailedName>Debit</DetailedName>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
						</Fields>
					</SwiftSequence>
				</Fields>
			</Data>
			<Trailer>
				<fields>
					<field>
						<name>Message Authentication Code</name>
						<description><![CDATA[Allows authentication by the receiving user. It is followed by an authentication result.

This trailer is mandatory for most user-to-user message categories within the FIN application. When the FIN Copy Service is used a PAC trailer, if present, follows the MAC trailer.

Format:

{MAC:<authentication-result>}

where <authentication-result> = 8!h

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>8</length>
						<tag>MAC</tag>
					</field>
					<field>
						<name>Proprietary Authentication Code</name>
						<description><![CDATA[The PAC is used within the FIN Copy service only, when using the double authentication option. The PAC is included in Block 5 of FIN user-to-user messages, immediately after the MAC trailer, if present.

This is calculated on the extracted fields of Block 4 of the message, the value of field 115, if present, and the <authentication-result> of the MAC trailer for Copy Services with double authentication.

Thus, the end-of-block indicator (CrLf-) is included in the PAC calculation, and the fields are defined as follows:

The first three characters are CrLf:

The field and the delimiter are present, that is, 32A:, 20:, and so on.

All subfields and their delimiters are present.

Format:

{PAC:[<authentication-result>]}

where <authentication-result> is mandatory on input messages only and <authentication-result> = 8!h

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>8</length>
						<tag>PAC</tag>
					</field>
					<field>
						<name>Checksum</name>
						<description><![CDATA[The checksum is computed based on the receiver's address (12 characters, with 9th character replaced by X) plus the Text Block. This trailer allows the system and the CBT to check that messages have not been corrupted due to a system malfunction or an undetected transmission error.

Format:

{CHK:<checksum-result>}

where <checksum-result> = 12!h

Note: This trailer is mandatory for FIN and GPA messages (Service Identifier 01).

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>12</length>
						<tag>CHK</tag>
					</field>
					<field>
						<name>System Originated Message</name>
						<description><![CDATA[The system message or service message which is generated by a system PLT has a SYS trailer. All solicited system messages (Service Identifier 01) contain the MIR of the request and may also contain the time.

Format:

{SYS:[<time><mir>]}

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>SYS</tag>
					</field>
					<field>
						<name>Test And Training Message</name>
						<description><![CDATA[Mandatory for FIN and GPA messages (Service Identifier 01) sent by, or delivered to, a Test & Training Logical Terminal (LT). This trailer has a tag only, and no value.

Format:

{TNG:}
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>0</length>
						<tag>TNG</tag>
					</field>
					<field>
						<name>Possible Duplicate Emission</name>
						<description><![CDATA[This trailer is used by the destination of the message. It only applies to FIN user-to-user messages (Service Identifier 01, message categories reserved for banking messages). There can be multiple PDEs. The system does not verify the order nor restrict the number (except for maximum message length).

Correctly formatted PDE trailers applied to user-to-system messages are accepted by the system, but not processed. This means that the system does not check to see if the original message exists. Therefore, a retrieval request sent with a PDE trailer may be processed twice if the original message was received by the system.

Format:

{PDE:[<time><mir>]}

where <time><mir> refers to the emission of the previous possible issue.

Note: It can be added automatically by a CBT or manually by a user. It may be followed by the MIR and the time of its previous possible messages.

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>PDE</tag>
					</field>
					<field>
						<name>Delayed Message</name>
						<description><![CDATA[This trailer is added to all FIN user-to-user output messages that have exceeded their obsolescence period. If this trailer appears in GPA or FIN system messages, it must be ignored. This trailer has a tag only, and no value.

The Obsolescence Period is:

U = 15 minutes

N = 100 minutes

Format:

{DLM:}

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>0</length>
						<tag>DLM</tag>
					</field>
					<field>
						<name>Possible Duplicate Message</name>
						<description><![CDATA[Added by the system to any output message (GPA and FIN Service Identifier 01) being resent because a prior delivery may be invalid. If a system PLT receives a report request with a PDM, the response has a plain PDM (without the optional delivery reference). Other PDMs may be added as a result of unsuccessful delivery attempts to the user. 
Format:
{PDM:[<time><mor>]}
where <time> and the Message Output Reference <mor> are that of the previous attempt.
Note: For messages recovered after a system failure, the optional fields may not be present.
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>PDM</tag>
					</field>
					<field>
						<name>Message Reference</name>
						<description><![CDATA[The MRF trailer is used to specify the message reference of the original user message in MT 096 FIN Copy to Central Institution Messages.
Format:
{MRF:<date><full-time><mir>}
where <mir> is that of the original user message whose fields are copied in the MT 096 FIN Copy to Central Institution Message.
Note: The MRF is specific to FIN Copy. The MRF trailer is automatically generated in the MT 096 FIN Copy to Central Institution Message and can only be reused in field 109 of the MT 096 FIN Copy to Central Institution Message to identify the MT 096 to which the MT 097 is a response. The format of the MRF is subject to change.
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>MRF</tag>
					</field>
				</fields>
			</Trailer>
		</SwiftFields>
		<validationrules name="Default">
			<hdrvalidationrules>
				<fieldvalidations>
					<fieldvalidation>
						<name>U09</name>
						<formula><![CDATA[if($this.Header.GetFieldIndex("User_Header") != -1) {
    def userHeader = $this.Header.GetSection("User_Header");
    if(userHeader.$size > 0 && userHeader[0].IsNotNull("Validation_Flag")) {
        return false;
    }
}
return true;
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U09</error-code>
						<actionmessage><![CDATA["User has used tag 119 in a message that is not a candidate for special processing"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>U03</name>
						<fieldname>User Header</fieldname>
						<formula><![CDATA[Iff(IsNotNull(User_Header.Service_Type_Identifier), 
    IsNotNull(User_Header.Unique_End_To_End_Transaction_Reference))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U03</error-code>
						<actionmessage><![CDATA["When populating an end-to-end reference, both fields 111 and 121 must be populated: a message that contains only one of these two fields will not be accepted by FIN."]]></actionmessage>
					</fieldvalidation>
				</fieldvalidations>
			</hdrvalidationrules>
			<datavalidationrules>
				<fieldvalidations>
					<fieldvalidation>
						<name>C1</name>
						<fieldname>B.56a</fieldname>
						<comment><![CDATA[C1
In each occurrence of Sequence B: If field 56a is present then field 57a must also be present.
]]></comment>
						<formula><![CDATA[B.F57a.$size > 0]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D65</error-code>
						<actionmessage><![CDATA["In each occurrence of Sequence B: If field 56a is present then field 57a must also be present (Error code(s): D65)."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FA-72-A</name>
						<fieldname>A.72.Narrative_-_Structured_Format</fieldname>
						<comment><![CDATA[FA-72-A
The first line of field 72 should be of the following format: /8c/[additional information]. The remaining lines (2 - 6) should be of the following format: [//continuation of additional information] or [/8c/[additional information]].]]></comment>
						<formula><![CDATA[VerifyField72NarrativeText($value)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T32</error-code>
						<actionmessage><![CDATA["The first line of field 72 should be of the following format: /8c/[additional information]. The remaining lines (2 - 6) should be of the following format: [//continuation of additional information] or [/8c/[additional information]]."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FA-72-B</name>
						<fieldname>A.72.Narrative_-_Structured_Format</fieldname>
						<comment><![CDATA[FA-72-B
"The first element in line 1 must contain either code /RETN/ or /REJT/."]]></comment>
						<formula><![CDATA[StartsWith($value, "/REJT/") || StartsWith($value, "/RETN/")]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D82</error-code>
						<actionmessage><![CDATA["The first element in line 1 must contain either code /RETN/ or /REJT/ (Error code(s): D82)"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-23E-A</name>
						<fieldname>B.23E.Additional_Information</fieldname>
						<comment><![CDATA[FB-23E-A
Additional Information is only allowed when Instruction Code consists of one of the following codes: CMTO, PHON or OTHR]]></comment>
						<formula><![CDATA[In(B.F23E.Instruction_Code, "CMTO", "PHON", "OTHR")]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D66</error-code>
						<actionmessage><![CDATA["Additional Information is only allowed when Instruction Code consists of one of the following codes: CMTO, PHON or OTHR (Error code(s): D66)."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-23E-B1</name>
						<fieldname>B.23E.Instruction_Code</fieldname>
						<comment><![CDATA[FB-23E-B1
In each occurrence of Sequence B: when 23E is used more than once, the following combinations are not allowed
CMSW with CMTO, CMZB]]></comment>
						<formula><![CDATA[If($value == "CMSW", 
   SecFilter(B.F23E, "In($filterObj.Instruction_Code, \"CMTO\", \"CMZB\")").$size == 0, 
   true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D67</error-code>
						<actionmessage><![CDATA["In each occurrence of Sequence B: when 23E is used more than once, the following combinations are not allowed CMSW with CMTO, CMZB"
]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-23E-B2</name>
						<fieldname>B.23E.Instruction_Code</fieldname>
						<comment><![CDATA[FB-23E-B2
In each occurrence of Sequence B: when 23E is used more than once, the following combinations are not allowed
CMTO with CMZB]]></comment>
						<formula><![CDATA[If($value == "CMTO", 
   SecFilter(B.F23E, "In($filterObj.Instruction_Code, \"CMZB\")").$size == 0, 
   true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D67</error-code>
						<actionmessage><![CDATA["In each occurrence of Sequence B: when 23E is used more than once, the following combinations are not allowed CMTO with CMZB"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-23E-B3</name>
						<fieldname>B.23E.Instruction_Code</fieldname>
						<comment><![CDATA[FB-23E-B3
In each occurrence of Sequence B: when 23E is used more than once, the following combinations are not allowed
CORT with CMSW, CMTO, CMZB
]]></comment>
						<formula><![CDATA[If($value == "CORT", 
   SecFilter(B.F23E, "In($filterObj.Instruction_Code, \"CMSW\", \"CMTO\", \"CMZB\")").$size == 0, 
   true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D67</error-code>
						<actionmessage><![CDATA["In each occurrence of Sequence B: when 23E is used more than once, the following combinations are not allowed CORT with CMSW, CMTO, CMZB"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-23E-B4</name>
						<fieldname>B.23E.Instruction_Code</fieldname>
						<comment><![CDATA[FB-23E-B4
In each occurrence of Sequence B: when 23E is used more than once, the following combinations are not allowed
NETS with RTGS]]></comment>
						<formula><![CDATA[If($value == "NETS", 
   SecFilter(B.F23E, "In($filterObj.Instruction_Code, \"RTGS\")").$size == 0, 
   true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D67</error-code>
						<actionmessage><![CDATA["In each occurrence of Sequence B: when 23E is used more than once, the following combinations are not allowed NETS with RTGS"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-23E-C</name>
						<fieldname>B</fieldname>
						<comment><![CDATA[FB-23E-C
In each occurrence of Sequence B: when 23E is repeated, the same code word must not be present more than once with the exception of OTHR. The code word OTHR may be repeated (Error code(s): E46).]]></comment>
						<formula><![CDATA[$sec1 = SecFilter(B.F23E, 
                  "$filterObj.Instruction_Code == \"OTHR\"");
$sec2 = SecFilter(B.F23E, 
                  "$filterObj.Instruction_Code != \"OTHR\"");
$sec3 = SecGroup($sec2, "Instruction_Code");
$sec3.$size == (B.F23E.$size - $sec1.$size);]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E46</error-code>
						<actionmessage><![CDATA["In each occurrence of Sequence B: when 23E is repeated, the same code word must not be present more than once with the exception of OTHR. The code word OTHR may be repeated (Error code(s): E46)."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-32B</name>
						<fieldname>B.32B.Currency</fieldname>
						<comment><![CDATA[FB-32B
Currency must be the same for all occurrences of field 32B (Error code(s): C02).
]]></comment>
						<formula><![CDATA[$value == B[0].F32B[0].Currency;]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C02</error-code>
						<actionmessage><![CDATA["Currency must be the same for all occurrences of field 32B (Error code(s): C02)."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>ERI-1</name>
						<fieldname>B</fieldname>
						<comment><![CDATA[ERI-1
"For specific message types, an European currency must not be used as the currency of settlement after a cut-off date (Error Code: E76)."]]></comment>
						<formula><![CDATA[applyERIValidation(A[0].F30[0], "Date", B.F32B[0], "Currency")]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E76</error-code>
						<actionmessage><![CDATA["For specific message types, an European currency must not be used as the currency of settlement after a cut-off date (Error Code: E76)."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FA-72-C</name>
						<fieldname>A.72.Narrative_-_Structured_Format</fieldname>
						<formula><![CDATA[def Actualvalue = replace($value, "\r\n", "\n");
def lines = Split("\n", Actualvalue);
def str = Left(Actualvalue, 6);
def line1format = false;
def line3format = false;
def TREFformat = true;
def CHGSformat = true;
def TEXTformat = true;
def format = true;
def count = 0;
def TREFcount = 0;
def CHGScount = 0;
def TEXTcount = 0;
def i = lines.Length();
if(In(str, "/REJT/", "/RETN/")) {
    if(i <= 6) {
        //if '/REJT/' or '/RETN/' format of 1st line must be "6!x2!n[1a]['/'2c]" & format of 2nd line must be "('/'2!c 2!n'/')[29x]" or "('/X'1c2!n'/')[29x]"
        //if format of 2nd line is "('/'2!c 2!n'/')" then the 6 characters must be one of the codes given below
        line1format = (VerifyFormat(lines[0], "6!x2!n[1a]['/'2c]"));
        if(line1format && lines.Length() > 2) {
            if(!lines[1].StartsWith("/X")) {
                if(VerifyFormat(lines[1], "('/'2!c 2!n'/')[29x]")) {
                	def startStr = lines[1].Left(6);
                    if((!In(startStr, "/AC01/", "/AC02/", "/AC03/", "/AC04/", "/AC05/", "/AC06/", 
                            "/AM01/", "/AM02/", "/AM03/", "/AM04/", "/AM05/", "/AM06/", "/AM07/", 
                            "/AM08/", "/AG01/", "/AG02/", "/BE01/", "/BE02/", "/BE03/", "/BE04/", 
                            "/BE05/", "/DT01/", "/MS01/", "/PY01/", "/RC01/", "/RC02/", "/RC03/", 
                            "/RC04/", "/RF01/", "/TM01/", "/RR01/", "/RR02/", "/RR03/")))
                        return false;
                }
                else
                    return false;
            }
            else if(lines[1].StartsWith("/X") && !VerifyFormat(lines[1], "('/X'1c2!n'/')[29x]"))
                return false;
        }
        else
            return false;
        //Line3 is mandatory and should have the format "/MREF/16x". Lines 4, 5 and 6 are optional
        //If lines 4, 5 or 6 or any combination exists and if the first 6 characters starts with either '/TREF/' or '/CHGS/' or '/TEXT/' or '//'
        //it should satisfy the format given. Also if line starts with '//' it can appear a max of 2 times
        line3format = Equal(Left(lines[2], 6), "/MREF/") && 
                        VerifyFormat(Substring(lines[2], 6), "16x");
        if(line3format) {
            while(i > 3) {
                def str1 = Left(lines[i - 1], 6);
                def str2 = Substring(lines[i - 1], 6);
                if(In(str1, "/TREF/", "/CHGS/", "/TEXT/") || StartsWith(lines[i - 1], "//")) {
                    if(str1 == "/TREF/") {
                        TREFformat = VerifyFormat(str2, "16x");
                        TREFcount += 1;
                    }
                    else if(str1 == "/CHGS/") {
                        CHGSformat = (VerifyFormat(str2, "3!a15d") && 
                                        IsISOCurrencyCode(Substring(lines[i - 1], 6, 3)));
                        CHGScount += 1;
                    }
                    else if(str1 == "/TEXT/") {
                        TEXTformat = (VerifyFormat(str2, "29x"));
                        TEXTcount += 1;
                    }
                    else if(StartsWith(lines[i - 1], "//")) {
                        def str3 = Substring(lines[i - 1], 2);
                        format = (VerifyFormat(str3, "33x"));
                        count += 1;
                        if(!format || count > 2)
                            break;
                    }
                }
                else
                    return false;
                i = i - 1;
            }
        }
        else
            return false;
        if(!TREFformat || !CHGSformat || !TEXTformat || !format || count > 2 || TREFcount > 1 || 
             CHGScount > 1 || TEXTcount > 1)
            return false;
    }
    else
        return false;
}
return true;
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T80</error-code>
						<actionmessage><![CDATA["Field 72 Reject/Return: code word error, or mandatory code word missing, or code word not in the proper sequence, or format 6*35x not satisfied"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-32B</name>
						<fieldname>B.32B.Currency</fieldname>
						<formula><![CDATA[!In($value, "XAU", "XAG", "XPD", "XPT")]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C08</error-code>
						<actionmessage><![CDATA["The codes XAU, XAG, XPD and XPT are not allowed, as these are codes for commodities for which the category 6 commodities messages must be used."]]></actionmessage>
					</fieldvalidation>
				</fieldvalidations>
			</datavalidationrules>
			<tlrvalidationrules>
				<fieldvalidations>
				</fieldvalidations>
			</tlrvalidationrules>
		</validationrules>
		<elementproperties>
			<propertymap>
			</propertymap>
		</elementproperties>
	</externalmessage>
	<externalmessage xsi:type="SwiftFormat" type="SwiftFormat" version="5.1.2" rulename="MT210_2016" formattype="SwiftFormat" >
		<description><![CDATA[This message type is: 

a) sent by an account owner to one of its account servicing institutions. 

b) sent by a party authorised by the account owner to one of its account servicing institutions. 

It is an advance notice to the account servicing institution that it will receive funds to be credited to the Sender's account. 

]]></description>
		<standard>SWIFT</standard>
		<standard-name>MT210</standard-name>
		<standard-version>SRG 2016</standard-version>
		<standard-release-qualifier>20160308</standard-release-qualifier>
		<standard-category>Financial Institution Transfers</standard-category>
		<standard-detailed-name>Notice to Receive</standard-detailed-name>
		<version>1.0</version>
		<SwiftFields>
			<customizable>true</customizable>
			<modifiable>false</modifiable>
			<SwiftMessageType>User</SwiftMessageType>
			<max-length>2000</max-length>
			<HeaderAndTrailerType>SWIFT_INPUT_OUTPUT_HEADER</HeaderAndTrailerType>
			<Header>
				<fields>
					<field>
						<name>Basic Header</name>
						<description><![CDATA[The Basic Header is given in Block 1 of a SWIFT message and is the only header that appears on all messages. The Basic Header provides the fundamental reference for any particular message and is almost always automatically built by the CBT.
The Basic Header has the same format for both input and output messages. However, the information contained in the Basic Header is relative to the sender when the message is input but relative to the receiver when the same message is output.]]></description>
						<datatype>Section</datatype>
						<required>true</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Application Identifier</name>
								<description><![CDATA[The Application Identifier identifies the application within which the message is being sent or received. The available options are:

F = FIN All user-to-user, FIN system and FIN service messages 
A = GPA Most GPA system and service messages 
L = GPA Certain GPA service messages, for example, LOGIN, LAKs, ABORT 

These values are automatically assigned by the SWIFT system and the user's CBT, but the user should be aware of their existence and significance
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Service Identifier</name>
								<description><![CDATA[The Service Identifier consists of 2 numeric characters. It identifies the type of data that is being sent or received and, in doing so, whether the message which follows is one of the following:

a user-to-user message

a system message

a service message, for example, a session control command, such as SELECT, or a logical acknowledgement, such as ACK/SAK/UAK

Users will be primarily concerned with identifier '01' which applies to all GPA and FIN system and user-to-user messages. Other values include: '21' for message acknowledgements such as ACK/NAK, UAK/UNK, '03' for SELECT commands, and 
so on]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>2</length>
							</field>
							<field>
								<name>LT Identifier</name>
								<description><![CDATA[This 12-character SWIFT address, given in the Basic Header Block, is the address of the sending LT for input messages or of the receiving LT for output messages, and includes the Branch Code.

In the Basic Header, the LT Code within the LT Identifier is specific to the LT that has established the session in which the message is being transmitted, that is the sending LT for input messages or the receiving LT for output messages.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>12</length>
							</field>
							<field>
								<name>Session Number</name>
								<description><![CDATA[The Session Number identifies the session in which the message was transmitted. Within the Basic Header, the 4-digit Session Number is the user's current GPA or FIN Session Number.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Sequence Number</name>
								<description><![CDATA[The sequence number always consists of 6 digits. It is the ISN of the sender's current input session or the OSN of the receiver's current output session.

Note: The sequence number is not present in those messages with an Application Identifier of 'L' (for example LOGIN). The sequence number is, however, a key element in the processing of retrievals. Therefore, LOGINs and attempted LOGINs are not retrievable
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>6</length>
							</field>
						</fields>
					</field>
					<field>
						<name>Application Header Input</name>
						<description><![CDATA[The Application Header of a SWIFT message provides information about the message itself.

The Application Header is given in Block 2 of a SWIFT message. It differs according to whether the message is a GPA or a FIN message and whether the Application Header is part of an input or an output message.

]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Input/Output Identifier</name>
								<description><![CDATA[For an input message, the Input/Output Identifier consists of the single letter 'I'.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Message Type</name>
								<description><![CDATA[The Message Type consists of 3 digits which define the MT number of the message being input. The example used above is for an MT 100 Customer Transfer]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>3</length>
							</field>
							<field>
								<name>Receiver's Address</name>
								<description><![CDATA[This address is the 12-character SWIFT address of the receiver of the message, but with a LT Code of 'X'. It defines the destination to which the message should be sent.

The system will replace the 'X' with a specific LT Code on delivery of the message according to the delivery control exercised by the receiving user.

The Branch Code is mandatory and will be validated. The default of 'XXX' may be used, as in the example above.

Unless otherwise documented, system messages addressed to the SWIFT system itself should be addressed to SWFTXXXXXXXX.

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>12</length>
							</field>
							<field>
								<name>Message Priority</name>
								<description><![CDATA[This character, used within FIN Application Headers only, defines the priority with which a message is delivered. The possible values are:

S = System

U = Urgent

N = Normal

Message Priority 'S' must be used for user-to-system messages; for user-to-user messages either 'U' or 'N' can be used. In the absence of user-specified delivery criteria, system messages are always delivered first, followed by urgent priority messages and then normal priority messages.

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Delivery Monitoring</name>
								<description><![CDATA[Delivery monitoring options apply only to FIN user-to-user messages, and allow the sender of a message to request:

automatic MT 011 Delivery Notification once the message has been delivered

automatic MT 010 Non-Delivery Warning if a message is not delivered within the specified obsolescence period (see below)

both, or neither, options. This may be requested on an individual message basis.

The chosen option is expressed as a single digit:

1 = Non-Delivery Warning

2 = Delivery Notification

3 = Non-Delivery Warning and Delivery Notification. 
If the message has priority 'U' then the user must request delivery monitoring option '1' or '3'. If the message has priority 'N', the user can request delivery monitoring option '2', or, by leaving the option blank, no delivery monitoring.
]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>1</length>
							</field>
							<field>
								<name>Obsolescence Period</name>
								<description><![CDATA[The obsolescence period defines the period of time after which a Delayed Message (DLM) trailer is added to a FIN user-to-user message when the message is delivered. For urgent priority messages, it is also the period of time after which, if the message remains undelivered, a Non-Delivery Warning is generated.

The values for the obsolescence period are 003 (15 minutes) for 'U' priority, and 020 (100 minutes) for 'N' priority. An obsolescence period can only be specified when delivery monitoring has been requested (option 1 or 3 for urgent priority messages, option 2 for normal priority messages). If no delivery monitoring has been requested, and an obsolescence period is specified, the message will be NAKed with error code H25.

GPA input Application Headers are similar to their FIN equivalents except that GPA messages do not specify priority, delivery monitoring, nor obsolescence period.

]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>3</length>
							</field>
						</fields>
					</field>
					<field>
						<name>Application Header Output</name>
						<description><![CDATA[The Application Header of a SWIFT message provides information about the message itself.

The Application Header is given in Block 2 of a SWIFT message. It differs according to whether the message is a GPA or a FIN message and whether the Application Header is part of an input or an output message.

]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Input/Output Identifier</name>
								<description><![CDATA[For an input message, the Input/Output Identifier consists of the single letter 'I'.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Message Type</name>
								<description><![CDATA[Three digits indicating the Message Type.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>3</length>
							</field>
							<field>
								<name>Input Time</name>
								<description><![CDATA[The first occurrence of the time field contains the system time and date. This is the generation time in Greenwich Mean Time (GMT).
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Message Input Reference</name>
								<description><![CDATA[The input MIR.

If the message is generated by the system, the input time is the generation time (in GMT) and the input MIR is the system MIR

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>28</length>
							</field>
							<field>
								<name>Output Date</name>
								<description><![CDATA[The output date, local to the receiver.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>6</length>
							</field>
							<field>
								<name>Output Time</name>
								<description><![CDATA[The second occurrence of the time field contains the output time and date. This is in a time local to the receiver.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Message Priority</name>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
						</fields>
					</field>
					<field>
						<name>User Header</name>
						<description><![CDATA[The User Header is an optional header available within FIN for user-to-user messages only. It appears in Block 3 of a SWIFT message, and allows users to provide their own reference within the headers for a particular message.

A User Header can only be assigned by the sender of a message and, if assigned, will always appear on the output message copy. Relevant parts of the User Header will be repeated in related system messages and acknowledgements.

Block 3 may contain tag 113, defining banking priorities, and tag 108, which is a user reference. The user reference part of the User Header may be used as one of the selection criteria when retrieving a message.

The optional field tags 103 and 115 are also used in Block 3 for the FIN Copy service. The order of tags, when present, is 103, 113, 108 and 115.

An optional field tag 119 can be included in Block 3 of certain messages to specify that different validation rules are to be applied. Agreed code words in field 119 indicate what validation rules SWIFT will apply. If field 119 is present, it should appear after field 108
]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Service Identifier</name>
								<description><![CDATA[For any message which the user submits to a FIN Copy service, Block 3 requires an additional field 103 which contains a three-character Service Identifier unique to a specific FIN Copy service. By using a unique identifier it is possible to support access to multiple services within the same CBT.
]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>3</length>
								<tag>103</tag>
							</field>
							<field>
								<name>Banking Priority</name>
								<description><![CDATA[Assigned by the sender of the message.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>4</length>
								<tag>113</tag>
							</field>
							<field>
								<name>Message User Reference</name>
								<description><![CDATA[Assigned by the sender of the message.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>16</length>
								<tag>108</tag>
							</field>
							<field>
								<name>Validation Flag</name>
								<description><![CDATA[Indicates whether a special validation needs to be performed by FIN. The following are examples of the values this field may take. Please note that this list is subject to change:

ISITC indicates validation of ISITC Standards. Only to be used with MT 521 and MT 523.

REMIT identifies the presence of field 77T. Only to be used in MT 103.

RFDD indicates that the message is a request for direct debit. Only to be used in MT 104.

STP indicates that the message is validated according to straight through processing principles. Only to be used in MT 103.

]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>119</tag>
							</field>
							<field>
								<name>Balance checkpoint date and time</name>
								<description><![CDATA[This field contains the balance checkpoint date and time consisting of a date (YYMMDD) and a time (HHMMSS[ss], where 'ss' indicates hundredths of a second). The MI that is subscribed to MIRS will always copy this reference from field tag 13G of the last MT298/091 that it sent into the related MT 298/093 or MT 097 that it generates. ]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>423</tag>
							</field>
							<field>
								<name>Message Input Reference</name>
								<description><![CDATA[This field contains the MIR of the payment message that is related to the notification messages in which this field is present. The MI that is subscribed to MIRS will copy it from the received payment message. In a FINCopy scenario, this field must contain the MIR of the related MT 096]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>106</tag>
							</field>
							<field>
								<name>Related Reference</name>
								<description><![CDATA[This field contains the reference of the payment that is related to the notification messages in which this field is present. The payment itself was not the result of a FIN message. The value of this field must correspond to the related reference (field 21) in the MT298/093. The format of field 424 is 16x.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>424</tag>
							</field>
							<field>
								<name>Service Type Identifier</name>
								<description><![CDATA[This field identifies the applicable global payment service type. The format of field 111 is 3!n.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>111</tag>
							</field>
							<field>
								<name>Unique End-To-End Transaction Reference</name>
								<description><![CDATA[This field provides an end-to-end reference across a payment transaction. The format of field 121 is 36!x.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>121</tag>
							</field>
							<field>
								<name>Addressee Information</name>
								<description><![CDATA[Tag 115 is only valid for output messages. Information from Central Institution to the receiver of payment message. Information is input in the MT 097 FIN Copy Message Authorisation/Refusal Notification in Y-Copy mode.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>115</tag>
							</field>
							<field>
								<name>Payment Release Information Receiver (FINInform Services)</name>
								<description><![CDATA[Tag 165 is only valid for output messages. This field contains information from the server destination to the receiver of payment message. It is only available for use in FINInform services that operate in Y-copy mode.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>165</tag>
							</field>
							<field>
								<name>Receiver Information</name>
								<description><![CDATA[Tag 433 is only valid for output messages. The screening service inputs information in the MT 097 FINCopy Message Authorisation/Refusal Notification, in Y-Copy mode. FINCopy copies the information to the receiver of the screened message.
				    The following values can be present in this field:
				      AOK: message automatically released by screening service
				      FPO: compliance officer has flagged the screening result as false positive
				      NOK: compliance officer has flagged the screened message as suspect
				    The code word can optionally be followed by additional information (up to 20 characters from the x character set).]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>433</tag>
							</field>
						</fields>
					</field>
				</fields>
			</Header>
			<Data>
				<Fields>
					<SwiftSequence Name="A">
						<Name>A</Name>
						<Description><![CDATA[Sequence A]]></Description>
						<Mandatory>true</Mandatory>
						<Repeating>false</Repeating>
						<Fields>
							<SwiftField Name="20">
								<SwiftFieldDef Name="20">
									<Generic>false</Generic>
									<Description><![CDATA[Reference]]></Description>
									<Option Name="">
										<Format><![CDATA[16x]]></Format>
										<Specification><![CDATA[(Reference)]]></Specification>
										<Description><![CDATA[Transaction Reference Number]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options> </Options>
								<Validations>
									<SubField Name="Reference">
										<Validation>
											<Options> </Options>
											<ErrorCode>T26</ErrorCode>
											<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive  slashes '//' (Error code(s): T26).]]></Comment>
											<ValidationPattern xsi:type="T26" Type="T26">
												<Type>T26</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="25">
								<SwiftFieldDef Name="25">
									<Generic>false</Generic>
									<Description><![CDATA[Status]]></Description>
									<Option Name="">
										<Format><![CDATA[35x]]></Format>
										<Specification><![CDATA[(Account)]]></Specification>
										<Description><![CDATA[Account Identification]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options> </Options>
							</SwiftField>
							<SwiftField Name="30">
								<SwiftFieldDef Name="30">
									<Generic>false</Generic>
									<Option Name="">
										<Format><![CDATA[6!n]]></Format>
										<Specification><![CDATA[(Date)]]></Specification>
										<Description><![CDATA[Value Date]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options> </Options>
								<Validations>
									<SubField Name="Date">
										<Validation>
											<Options> </Options>
											<ErrorCode>T50</ErrorCode>
											<Comment><![CDATA[Date must be a valid date expressed as YYMMDD (Error code(s): T50).]]></Comment>
											<ValidationPattern xsi:type="DATE" Type="DATE">
												<Type>DATE</Type>
												<Format>yyMMdd</Format>
												<value-date>true</value-date>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
						</Fields>
					</SwiftSequence>
					<SwiftSequence Name="B">
						<Name>B</Name>
						<Description><![CDATA[Sequence B]]></Description>
						<Mandatory>true</Mandatory>
						<Repeating>true</Repeating>
						<Fields>
							<SwiftField Name="21">
								<SwiftFieldDef Name="21">
									<Generic>false</Generic>
									<Option Name="">
										<Format><![CDATA[16x]]></Format>
										<Specification><![CDATA[(Related Reference)]]></Specification>
										<Description><![CDATA[Related Reference]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options> </Options>
								<Validations>
									<SubField Name="Related_Reference">
										<Validation>
											<Options> </Options>
											<ErrorCode>T26</ErrorCode>
											<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive  slashes '//' (Error code(s): T26).]]></Comment>
											<ValidationPattern xsi:type="T26" Type="T26">
												<Type>T26</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="32B">
								<SwiftFieldDef Name="32">
									<Generic>false</Generic>
									<Description><![CDATA[Cheque Amount]]></Description>
									<Option Name="B">
										<Format><![CDATA[3!a15d]]></Format>
										<Specification><![CDATA[(Currency) (Amount)]]></Specification>
										<Description><![CDATA[Currency Code, Amount]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options>B</Options>
								<Validations>
									<SubField Name="Currency">
										<Validation>
											<Options>B</Options>
											<ErrorCode>T52</ErrorCode>
											<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52).]]></Comment>
											<ValidationPattern xsi:type="Currency_Code" Type="Currency Code">
												<Type>Currency Code</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="Amount">
										<Validation>
											<Options>B</Options>
											<ErrorCode>C03</ErrorCode>
											<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency.]]></Comment>
											<ValidationPattern xsi:type="Decimal" Type="Decimal">
												<Type>Decimal</Type>
												<currency-field>Currency</currency-field>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="50a">
								<SwiftFieldDef Name="50">
									<Generic>false</Generic>
									<Option Name="">
										<Format><![CDATA[4*35x]]></Format>
										<Specification><![CDATA[(Name & Address)]]></Specification>
										<Description><![CDATA[Ordering Customer]]></Description>
									</Option>
									<Option Name="C">
										<Format><![CDATA[(4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(Identifier Code)]]></Specification>
										<Description><![CDATA[Ordering Customer]]></Description>
									</Option>
									<Option Name="F">
										<Format><![CDATA[35x(CRLF4*35x)]]></Format>
										<Specification><![CDATA[(Party Identifier)(Name & Address)]]></Specification>
										<Description><![CDATA[Ordering Customer]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>C,  , F</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>C</Options>
											<ErrorCode>T27, T28, T29, T45, E57</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="52a">
								<SwiftFieldDef Name="52">
									<Generic>false</Generic>
									<Option Name="A">
										<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
										<Description><![CDATA[Ordering Institution]]></Description>
									</Option>
									<Option Name="D">
										<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
										<Description><![CDATA[Ordering Institution]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>A, D</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27, T28, T29, T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
										<Validation>
											<Options>A</Options>
											<ErrorCode>C05</ErrorCode>
											<Comment><![CDATA[Identifier Code must not be a BEI, ie must not be of subtype BEID, MCCO, TESP or TRCO]]></Comment>
											<ValidationPattern xsi:type="C05" Type="C05">
												<Type>C05</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="CreditDebit">
										<Validation>
											<Options>A, D</Options>
											<ErrorCode>T51</ErrorCode>
											<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="C">
														<DetailedName>Credit</DetailedName>
													</Code>
													<Code Name="D">
														<DetailedName>Debit</DetailedName>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="56a">
								<SwiftFieldDef Name="56">
									<Generic>false</Generic>
									<Option Name="A">
										<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
										<Description><![CDATA[Intermediary]]></Description>
									</Option>
									<Option Name="D">
										<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
										<Description><![CDATA[Intermediary]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>A, D</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27, T28, T29, T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
										<Validation>
											<Options>A</Options>
											<ErrorCode>C05</ErrorCode>
											<Comment><![CDATA[Identifier Code must not be a BEI, ie must not be of subtype BEID, MCCO, TESP or TRCO]]></Comment>
											<ValidationPattern xsi:type="C05" Type="C05">
												<Type>C05</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="CreditDebit">
										<Validation>
											<Options>A, D</Options>
											<ErrorCode>T51</ErrorCode>
											<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="C">
														<DetailedName>Credit</DetailedName>
													</Code>
													<Code Name="D">
														<DetailedName>Debit</DetailedName>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
						</Fields>
					</SwiftSequence>
				</Fields>
			</Data>
			<Trailer>
				<fields>
					<field>
						<name>Message Authentication Code</name>
						<description><![CDATA[Allows authentication by the receiving user. It is followed by an authentication result.

This trailer is mandatory for most user-to-user message categories within the FIN application. When the FIN Copy Service is used a PAC trailer, if present, follows the MAC trailer.

Format:

{MAC:<authentication-result>}

where <authentication-result> = 8!h

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>8</length>
						<tag>MAC</tag>
					</field>
					<field>
						<name>Proprietary Authentication Code</name>
						<description><![CDATA[The PAC is used within the FIN Copy service only, when using the double authentication option. The PAC is included in Block 5 of FIN user-to-user messages, immediately after the MAC trailer, if present.

This is calculated on the extracted fields of Block 4 of the message, the value of field 115, if present, and the <authentication-result> of the MAC trailer for Copy Services with double authentication.

Thus, the end-of-block indicator (CrLf-) is included in the PAC calculation, and the fields are defined as follows:

The first three characters are CrLf:

The field and the delimiter are present, that is, 32A:, 20:, and so on.

All subfields and their delimiters are present.

Format:

{PAC:[<authentication-result>]}

where <authentication-result> is mandatory on input messages only and <authentication-result> = 8!h

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>8</length>
						<tag>PAC</tag>
					</field>
					<field>
						<name>Checksum</name>
						<description><![CDATA[The checksum is computed based on the receiver's address (12 characters, with 9th character replaced by X) plus the Text Block. This trailer allows the system and the CBT to check that messages have not been corrupted due to a system malfunction or an undetected transmission error.

Format:

{CHK:<checksum-result>}

where <checksum-result> = 12!h

Note: This trailer is mandatory for FIN and GPA messages (Service Identifier 01).

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>12</length>
						<tag>CHK</tag>
					</field>
					<field>
						<name>System Originated Message</name>
						<description><![CDATA[The system message or service message which is generated by a system PLT has a SYS trailer. All solicited system messages (Service Identifier 01) contain the MIR of the request and may also contain the time.

Format:

{SYS:[<time><mir>]}

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>SYS</tag>
					</field>
					<field>
						<name>Test And Training Message</name>
						<description><![CDATA[Mandatory for FIN and GPA messages (Service Identifier 01) sent by, or delivered to, a Test & Training Logical Terminal (LT). This trailer has a tag only, and no value.

Format:

{TNG:}
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>0</length>
						<tag>TNG</tag>
					</field>
					<field>
						<name>Possible Duplicate Emission</name>
						<description><![CDATA[This trailer is used by the destination of the message. It only applies to FIN user-to-user messages (Service Identifier 01, message categories reserved for banking messages). There can be multiple PDEs. The system does not verify the order nor restrict the number (except for maximum message length).

Correctly formatted PDE trailers applied to user-to-system messages are accepted by the system, but not processed. This means that the system does not check to see if the original message exists. Therefore, a retrieval request sent with a PDE trailer may be processed twice if the original message was received by the system.

Format:

{PDE:[<time><mir>]}

where <time><mir> refers to the emission of the previous possible issue.

Note: It can be added automatically by a CBT or manually by a user. It may be followed by the MIR and the time of its previous possible messages.

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>PDE</tag>
					</field>
					<field>
						<name>Delayed Message</name>
						<description><![CDATA[This trailer is added to all FIN user-to-user output messages that have exceeded their obsolescence period. If this trailer appears in GPA or FIN system messages, it must be ignored. This trailer has a tag only, and no value.

The Obsolescence Period is:

U = 15 minutes

N = 100 minutes

Format:

{DLM:}

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>0</length>
						<tag>DLM</tag>
					</field>
					<field>
						<name>Possible Duplicate Message</name>
						<description><![CDATA[Added by the system to any output message (GPA and FIN Service Identifier 01) being resent because a prior delivery may be invalid. If a system PLT receives a report request with a PDM, the response has a plain PDM (without the optional delivery reference). Other PDMs may be added as a result of unsuccessful delivery attempts to the user. 
Format:
{PDM:[<time><mor>]}
where <time> and the Message Output Reference <mor> are that of the previous attempt.
Note: For messages recovered after a system failure, the optional fields may not be present.
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>PDM</tag>
					</field>
					<field>
						<name>Message Reference</name>
						<description><![CDATA[The MRF trailer is used to specify the message reference of the original user message in MT 096 FIN Copy to Central Institution Messages.
Format:
{MRF:<date><full-time><mir>}
where <mir> is that of the original user message whose fields are copied in the MT 096 FIN Copy to Central Institution Message.
Note: The MRF is specific to FIN Copy. The MRF trailer is automatically generated in the MT 096 FIN Copy to Central Institution Message and can only be reused in field 109 of the MT 096 FIN Copy to Central Institution Message to identify the MT 096 to which the MT 097 is a response. The format of the MRF is subject to change.
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>MRF</tag>
					</field>
				</fields>
			</Trailer>
		</SwiftFields>
		<validationrules name="Default">
			<hdrvalidationrules>
				<fieldvalidations>
					<fieldvalidation>
						<name>U09</name>
						<formula><![CDATA[if($this.Header.GetFieldIndex("User_Header") != -1) {
    def userHeader = $this.Header.GetSection("User_Header");
    if(userHeader.$size > 0 && userHeader[0].IsNotNull("Validation_Flag")) {
        return false;
    }
}
return true;
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U09</error-code>
						<actionmessage><![CDATA["User has used tag 119 in a message that is not a candidate for special processing"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>U03</name>
						<fieldname>User Header</fieldname>
						<formula><![CDATA[Iff(IsNotNull(User_Header.Service_Type_Identifier), 
    IsNotNull(User_Header.Unique_End_To_End_Transaction_Reference))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U03</error-code>
						<actionmessage><![CDATA["When populating an end-to-end reference, both fields 111 and 121 must be populated: a message that contains only one of these two fields will not be accepted by FIN."]]></actionmessage>
					</fieldvalidation>
				</fieldvalidations>
			</hdrvalidationrules>
			<datavalidationrules>
				<fieldvalidations>
					<fieldvalidation>
						<name>C1</name>
						<comment><![CDATA["The repetitive sequence must not appear more than ten times."]]></comment>
						<formula><![CDATA[B.$size <= 10]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T10</error-code>
						<actionmessage><![CDATA["The repetitive sequence must not appear more than ten times."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C2</name>
						<fieldname>B</fieldname>
						<comment><![CDATA["Either field 50a or field 52a, but not both, must be present in a repetitive sequence."]]></comment>
						<formula><![CDATA[If(B.F50a.$size == 0, B.F52a.$size > 0, B.F52a.$size == 0)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C06</error-code>
						<actionmessage><![CDATA["Either field 50a or field 52a, but not both, must be present in a repetitive sequence."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C3</name>
						<fieldname>B.32B.Currency</fieldname>
						<comment><![CDATA["The currency code must be the same for all occurrences of field 32B in the message."]]></comment>
						<formula><![CDATA[$value == B[0].F32B[0].Currency]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C02</error-code>
						<actionmessage><![CDATA["The currency code must be the same for all occurrences of field 32B in the message."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>ERI</name>
						<fieldname>B</fieldname>
						<comment><![CDATA["For specific message types, an European currency must not be used as the currency of settlement after a cut-off date (Error Code: E76)."]]></comment>
						<formula><![CDATA[applyERIValidation(A[0].F30[0], "Date", B.F32B[0], "Currency")]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E76</error-code>
						<actionmessage><![CDATA["For specific message types, an European currency must not be used as the currency of settlement after a cut-off date (Error Code: E76)."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-50a-A</name>
						<fieldname>B.50a.Party_Identifier</fieldname>
						<comment><![CDATA[FB-50a-A
With option F, subfield 1 (Party Identifier), one of the following line formats must be used (Error code(s): T54):
Line format 1 :/34x (Account)
Line format 2 :4!a/2!a/27x (Code)(Country Code)(Identifier)]]></comment>
						<formula><![CDATA[Implies(B.F50a.FormatOption == 'F', Verify50FPartyIdFormat($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T54</error-code>
						<actionmessage><![CDATA["Invalid 'Party Identifier' value. One of the following line formats must be used: /34x (Account) or 4!a/2!a/27x (Code)(Country Code)(Identifier)"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-50a-B</name>
						<fieldname>B.50a.Party_Identifier</fieldname>
						<comment><![CDATA[FB-50a-B
In option F, when subfield 1 Party Identifier is used with the (Code)(Country Code)(Identifier) format, one of the following codes must be used (Error code(s): T55): ARNU, CCPT, CUST, DRLC, EMPL, NIDN, SOSE and TXID."
]]></comment>
						<formula><![CDATA[Implies(B.F50a.FormatOption == 'F', Verify50FPartyIdCode($value))
/* get the code from party identifier if format is 4!a/2!a/27x */   ]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T55</error-code>
						<actionmessage><![CDATA["Invalid 'Party Identifier' value. When 'Party Identifier' is used with the format (Code)(Country Code)(Identifier), one of following codes must be used: ARNU, CCPT, CUST, DRLC, EMPL, NIDN, SOSE and TXID."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-50a-C</name>
						<fieldname>B.50a.Party_Identifier</fieldname>
						<comment><![CDATA[FB-50a-D
In option F, subfield 1 (Party Identifier) used with the (Code)(Country Code)(Identifier) format: Country Code must be a valid ISO country code (Error code(s): T73).
]]></comment>
						<formula><![CDATA[Implies(B.F50a.FormatOption == 'F', Verify50FPartyIdCountryCode($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T73</error-code>
						<actionmessage><![CDATA["Invalid 'Party Identifier' value. In option F, subfield 1 (Party Identifier) used with the (Code)(Country Code)(Identifier) format: Country Code must be a valid ISO country code."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-50a-D</name>
						<fieldname>B.50a.Name_&amp;_Address</fieldname>
						<comment><![CDATA[FB-50a-C
With option F, subfield 2 (Name and Address), the following line format must be used for all lines: 1!n/33x (Number)(Details). (Error code(s): T54).]]></comment>
						<formula><![CDATA[Implies(B.F50a.FormatOption == 'F', Verify50FNmandAdrFormat($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T54</error-code>
						<actionmessage><![CDATA["Invalid 'Name and Address' value. With option F, subfield 2 (Name and Address), the following line format must be used for all lines :1!n/33x (Number)(Details)."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-50a-E</name>
						<fieldname>B.50a.Name_&amp;_Address</fieldname>
						<comment><![CDATA[FB-50a-E
 With option F - subfield 2 (Name and Address), should start with Number 1 to 8 and it should follow the line formatting rules as specified in the SWIFT spec (Error code(s): T56).]]></comment>
						<formula><![CDATA[Implies(B.F50a.FormatOption == 'F', Verify50FNmandAdrLines2($value, B.F50a.Party_Identifier))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T56</error-code>
						<actionmessage><![CDATA["Invalid 'Name and Address' value. With option F - subfield 2 (Name and Address), should start with Number 1 to 8 and it should follow the line formatting rules as specified in the SWIFT spec."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-50a-F</name>
						<fieldname>B.50a.Name_&amp;_Address</fieldname>
						<comment><![CDATA[FB-50a-F
Number 4 must be followed by a valid date in the format YYYYMMDD and this date, local to the sender, must not be later than the date on which the message is successfully sent to SWIFT (Error code(s): T50).
]]></comment>
						<formula><![CDATA[Implies(B.F50a.FormatOption == 'F', Verify50FNmandAdrDate($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T50</error-code>
						<actionmessage><![CDATA["Invalid 'Name and Address' value. Number 4 must be followed by a valid date in the format YYYYMMDD and this date, local to the sender, must not be later than the date on which the message is successfully sent to SWIFT."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-50a-G</name>
						<fieldname>B.50a.Name_&amp;_Address</fieldname>
						<comment><![CDATA[FB-50a-G
Numbers 3, 5, 6 and 7 must be followed by a valid ISO country code
(Error code(s): T73).]]></comment>
						<formula><![CDATA[Implies(B.F50a.FormatOption == 'F',Verify50FNmandAdrCtryCode2($value))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T73</error-code>
						<actionmessage><![CDATA["Invalid 'Name and Address' value. Numbers 3, 5, 6 and 7 must be followed by a valid ISO country code."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-50a-H</name>
						<fieldname>B.50a.Identifier_Code</fieldname>
						<comment><![CDATA[FB-50a-H
The BIC must be a BEI, i.e. must be of subtype BEID or TRCO or MCCO or SMDP or CORP (Error code E57).
]]></comment>
						<formula><![CDATA[return IsValidBEI($value)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E57</error-code>
						<actionmessage><![CDATA["The BIC must be a BEI, i.e. must be of subtype BEID or TRCO or MCCO or SMDP or CORP (Error code E57)."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-32B</name>
						<fieldname>B.32B.Currency</fieldname>
						<formula><![CDATA[!In($value, "XAU", "XAG", "XPD", "XPT")]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C08</error-code>
						<actionmessage><![CDATA["The codes XAU, XAG, XPD and XPT are not allowed, as these are codes for commodities for which the category 6 commodities messages must be used."]]></actionmessage>
					</fieldvalidation>
				</fieldvalidations>
			</datavalidationrules>
			<tlrvalidationrules>
				<fieldvalidations>
				</fieldvalidations>
			</tlrvalidationrules>
		</validationrules>
		<elementproperties>
			<propertymap>
			</propertymap>
		</elementproperties>
	</externalmessage>
	<externalmessage xsi:type="SwiftFormat" type="SwiftFormat" version="5.1.2" rulename="MT256_2016" formattype="SwiftFormat" >
		<description><![CDATA[This message is sent by the Receiver of one or more MT 206s. It is used to inform the Sender of (a) previously sent MT 206(s) of the non-payment of specified truncated cheques.

This message may only be used to specify dishonoured items that result in reversing a previous payment settlement.]]></description>
		<standard>SWIFT</standard>
		<standard-name>MT256</standard-name>
		<standard-version>SRG 2016</standard-version>
		<standard-release-qualifier>20160308</standard-release-qualifier>
		<standard-category>Financial Institution Transfers</standard-category>
		<standard-detailed-name>Advice of Non-Payment of Cheques</standard-detailed-name>
		<version>1.0</version>
		<SwiftFields>
			<customizable>true</customizable>
			<modifiable>false</modifiable>
			<SwiftMessageType>User</SwiftMessageType>
			<max-length>10000</max-length>
			<HeaderAndTrailerType>SWIFT_INPUT_OUTPUT_HEADER</HeaderAndTrailerType>
			<Header>
				<fields>
					<field>
						<name>Basic Header</name>
						<description><![CDATA[The Basic Header is given in Block 1 of a SWIFT message and is the only header that appears on all messages. The Basic Header provides the fundamental reference for any particular message and is almost always automatically built by the CBT.
The Basic Header has the same format for both input and output messages. However, the information contained in the Basic Header is relative to the sender when the message is input but relative to the receiver when the same message is output.]]></description>
						<datatype>Section</datatype>
						<required>true</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Application Identifier</name>
								<description><![CDATA[The Application Identifier identifies the application within which the message is being sent or received. The available options are:

F = FIN All user-to-user, FIN system and FIN service messages 
A = GPA Most GPA system and service messages 
L = GPA Certain GPA service messages, for example, LOGIN, LAKs, ABORT 

These values are automatically assigned by the SWIFT system and the user's CBT, but the user should be aware of their existence and significance
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Service Identifier</name>
								<description><![CDATA[The Service Identifier consists of 2 numeric characters. It identifies the type of data that is being sent or received and, in doing so, whether the message which follows is one of the following:

a user-to-user message

a system message

a service message, for example, a session control command, such as SELECT, or a logical acknowledgement, such as ACK/SAK/UAK

Users will be primarily concerned with identifier '01' which applies to all GPA and FIN system and user-to-user messages. Other values include: '21' for message acknowledgements such as ACK/NAK, UAK/UNK, '03' for SELECT commands, and 
so on]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>2</length>
							</field>
							<field>
								<name>LT Identifier</name>
								<description><![CDATA[This 12-character SWIFT address, given in the Basic Header Block, is the address of the sending LT for input messages or of the receiving LT for output messages, and includes the Branch Code.

In the Basic Header, the LT Code within the LT Identifier is specific to the LT that has established the session in which the message is being transmitted, that is the sending LT for input messages or the receiving LT for output messages.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>12</length>
							</field>
							<field>
								<name>Session Number</name>
								<description><![CDATA[The Session Number identifies the session in which the message was transmitted. Within the Basic Header, the 4-digit Session Number is the user's current GPA or FIN Session Number.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Sequence Number</name>
								<description><![CDATA[The sequence number always consists of 6 digits. It is the ISN of the sender's current input session or the OSN of the receiver's current output session.

Note: The sequence number is not present in those messages with an Application Identifier of 'L' (for example LOGIN). The sequence number is, however, a key element in the processing of retrievals. Therefore, LOGINs and attempted LOGINs are not retrievable
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>6</length>
							</field>
						</fields>
					</field>
					<field>
						<name>Application Header Input</name>
						<description><![CDATA[The Application Header of a SWIFT message provides information about the message itself.

The Application Header is given in Block 2 of a SWIFT message. It differs according to whether the message is a GPA or a FIN message and whether the Application Header is part of an input or an output message.

]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Input/Output Identifier</name>
								<description><![CDATA[For an input message, the Input/Output Identifier consists of the single letter 'I'.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Message Type</name>
								<description><![CDATA[The Message Type consists of 3 digits which define the MT number of the message being input. The example used above is for an MT 100 Customer Transfer]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>3</length>
							</field>
							<field>
								<name>Receiver's Address</name>
								<description><![CDATA[This address is the 12-character SWIFT address of the receiver of the message, but with a LT Code of 'X'. It defines the destination to which the message should be sent.

The system will replace the 'X' with a specific LT Code on delivery of the message according to the delivery control exercised by the receiving user.

The Branch Code is mandatory and will be validated. The default of 'XXX' may be used, as in the example above.

Unless otherwise documented, system messages addressed to the SWIFT system itself should be addressed to SWFTXXXXXXXX.

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>12</length>
							</field>
							<field>
								<name>Message Priority</name>
								<description><![CDATA[This character, used within FIN Application Headers only, defines the priority with which a message is delivered. The possible values are:

S = System

U = Urgent

N = Normal

Message Priority 'S' must be used for user-to-system messages; for user-to-user messages either 'U' or 'N' can be used. In the absence of user-specified delivery criteria, system messages are always delivered first, followed by urgent priority messages and then normal priority messages.

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Delivery Monitoring</name>
								<description><![CDATA[Delivery monitoring options apply only to FIN user-to-user messages, and allow the sender of a message to request:

automatic MT 011 Delivery Notification once the message has been delivered

automatic MT 010 Non-Delivery Warning if a message is not delivered within the specified obsolescence period (see below)

both, or neither, options. This may be requested on an individual message basis.

The chosen option is expressed as a single digit:

1 = Non-Delivery Warning

2 = Delivery Notification

3 = Non-Delivery Warning and Delivery Notification. 
If the message has priority 'U' then the user must request delivery monitoring option '1' or '3'. If the message has priority 'N', the user can request delivery monitoring option '2', or, by leaving the option blank, no delivery monitoring.
]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>1</length>
							</field>
							<field>
								<name>Obsolescence Period</name>
								<description><![CDATA[The obsolescence period defines the period of time after which a Delayed Message (DLM) trailer is added to a FIN user-to-user message when the message is delivered. For urgent priority messages, it is also the period of time after which, if the message remains undelivered, a Non-Delivery Warning is generated.

The values for the obsolescence period are 003 (15 minutes) for 'U' priority, and 020 (100 minutes) for 'N' priority. An obsolescence period can only be specified when delivery monitoring has been requested (option 1 or 3 for urgent priority messages, option 2 for normal priority messages). If no delivery monitoring has been requested, and an obsolescence period is specified, the message will be NAKed with error code H25.

GPA input Application Headers are similar to their FIN equivalents except that GPA messages do not specify priority, delivery monitoring, nor obsolescence period.

]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>3</length>
							</field>
						</fields>
					</field>
					<field>
						<name>Application Header Output</name>
						<description><![CDATA[The Application Header of a SWIFT message provides information about the message itself.

The Application Header is given in Block 2 of a SWIFT message. It differs according to whether the message is a GPA or a FIN message and whether the Application Header is part of an input or an output message.

]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Input/Output Identifier</name>
								<description><![CDATA[For an input message, the Input/Output Identifier consists of the single letter 'I'.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Message Type</name>
								<description><![CDATA[Three digits indicating the Message Type.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>3</length>
							</field>
							<field>
								<name>Input Time</name>
								<description><![CDATA[The first occurrence of the time field contains the system time and date. This is the generation time in Greenwich Mean Time (GMT).
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Message Input Reference</name>
								<description><![CDATA[The input MIR.

If the message is generated by the system, the input time is the generation time (in GMT) and the input MIR is the system MIR

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>28</length>
							</field>
							<field>
								<name>Output Date</name>
								<description><![CDATA[The output date, local to the receiver.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>6</length>
							</field>
							<field>
								<name>Output Time</name>
								<description><![CDATA[The second occurrence of the time field contains the output time and date. This is in a time local to the receiver.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Message Priority</name>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
						</fields>
					</field>
					<field>
						<name>User Header</name>
						<description><![CDATA[The User Header is an optional header available within FIN for user-to-user messages only. It appears in Block 3 of a SWIFT message, and allows users to provide their own reference within the headers for a particular message.

A User Header can only be assigned by the sender of a message and, if assigned, will always appear on the output message copy. Relevant parts of the User Header will be repeated in related system messages and acknowledgements.

Block 3 may contain tag 113, defining banking priorities, and tag 108, which is a user reference. The user reference part of the User Header may be used as one of the selection criteria when retrieving a message.

The optional field tags 103 and 115 are also used in Block 3 for the FIN Copy service. The order of tags, when present, is 103, 113, 108 and 115.

An optional field tag 119 can be included in Block 3 of certain messages to specify that different validation rules are to be applied. Agreed code words in field 119 indicate what validation rules SWIFT will apply. If field 119 is present, it should appear after field 108
]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Service Identifier</name>
								<description><![CDATA[For any message which the user submits to a FIN Copy service, Block 3 requires an additional field 103 which contains a three-character Service Identifier unique to a specific FIN Copy service. By using a unique identifier it is possible to support access to multiple services within the same CBT.
]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>3</length>
								<tag>103</tag>
							</field>
							<field>
								<name>Banking Priority</name>
								<description><![CDATA[Assigned by the sender of the message.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>4</length>
								<tag>113</tag>
							</field>
							<field>
								<name>Message User Reference</name>
								<description><![CDATA[Assigned by the sender of the message.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>16</length>
								<tag>108</tag>
							</field>
							<field>
								<name>Validation Flag</name>
								<description><![CDATA[Indicates whether a special validation needs to be performed by FIN. The following are examples of the values this field may take. Please note that this list is subject to change:

ISITC indicates validation of ISITC Standards. Only to be used with MT 521 and MT 523.

REMIT identifies the presence of field 77T. Only to be used in MT 103.

RFDD indicates that the message is a request for direct debit. Only to be used in MT 104.

STP indicates that the message is validated according to straight through processing principles. Only to be used in MT 103.

]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>119</tag>
							</field>
							<field>
								<name>Balance checkpoint date and time</name>
								<description><![CDATA[This field contains the balance checkpoint date and time consisting of a date (YYMMDD) and a time (HHMMSS[ss], where 'ss' indicates hundredths of a second). The MI that is subscribed to MIRS will always copy this reference from field tag 13G of the last MT298/091 that it sent into the related MT 298/093 or MT 097 that it generates. ]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>423</tag>
							</field>
							<field>
								<name>Message Input Reference</name>
								<description><![CDATA[This field contains the MIR of the payment message that is related to the notification messages in which this field is present. The MI that is subscribed to MIRS will copy it from the received payment message. In a FINCopy scenario, this field must contain the MIR of the related MT 096]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>106</tag>
							</field>
							<field>
								<name>Related Reference</name>
								<description><![CDATA[This field contains the reference of the payment that is related to the notification messages in which this field is present. The payment itself was not the result of a FIN message. The value of this field must correspond to the related reference (field 21) in the MT298/093. The format of field 424 is 16x.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>424</tag>
							</field>
							<field>
								<name>Service Type Identifier</name>
								<description><![CDATA[This field identifies the applicable global payment service type. The format of field 111 is 3!n.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>111</tag>
							</field>
							<field>
								<name>Unique End-To-End Transaction Reference</name>
								<description><![CDATA[This field provides an end-to-end reference across a payment transaction. The format of field 121 is 36!x.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>121</tag>
							</field>
							<field>
								<name>Addressee Information</name>
								<description><![CDATA[Tag 115 is only valid for output messages. Information from Central Institution to the receiver of payment message. Information is input in the MT 097 FIN Copy Message Authorisation/Refusal Notification in Y-Copy mode.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>115</tag>
							</field>
							<field>
								<name>Payment Release Information Receiver (FINInform Services)</name>
								<description><![CDATA[Tag 165 is only valid for output messages. This field contains information from the server destination to the receiver of payment message. It is only available for use in FINInform services that operate in Y-copy mode.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>165</tag>
							</field>
							<field>
								<name>Receiver Information</name>
								<description><![CDATA[Tag 433 is only valid for output messages. The screening service inputs information in the MT 097 FINCopy Message Authorisation/Refusal Notification, in Y-Copy mode. FINCopy copies the information to the receiver of the screened message.
				    The following values can be present in this field:
				      AOK: message automatically released by screening service
				      FPO: compliance officer has flagged the screening result as false positive
				      NOK: compliance officer has flagged the screened message as suspect
				    The code word can optionally be followed by additional information (up to 20 characters from the x character set).]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>433</tag>
							</field>
						</fields>
					</field>
				</fields>
			</Header>
			<Data>
				<Fields>
					<SwiftSequence Name="A">
						<Name>A</Name>
						<Description><![CDATA[Common Elements]]></Description>
						<Mandatory>true</Mandatory>
						<Repeating>false</Repeating>
						<Fields>
							<SwiftField Name="20">
								<SwiftFieldDef Name="20">
									<Generic>false</Generic>
									<Description><![CDATA[Sender's Reference]]></Description>
									<Option Name="">
										<Format><![CDATA[16x]]></Format>
										<Specification><![CDATA[(Reference)]]></Specification>
										<Description><![CDATA[Sender's Reference]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options> </Options>
								<Validations>
									<SubField Name="Reference">
										<Validation>
											<Options> </Options>
											<ErrorCode>T26</ErrorCode>
											<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive slashes '//' (Error code(s): T26) .]]></Comment>
											<ValidationPattern xsi:type="T26" Type="T26">
												<Type>T26</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="21">
								<SwiftFieldDef Name="21">
									<Generic>false</Generic>
									<Description><![CDATA[Related Message Reference]]></Description>
									<Option Name="">
										<Format><![CDATA[16x]]></Format>
										<Specification><![CDATA[(Reference)]]></Specification>
										<Description><![CDATA[Related Message Reference]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options> </Options>
								<Validations>
									<SubField Name="Reference">
										<Validation>
											<Options> </Options>
											<ErrorCode>T26</ErrorCode>
											<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive slashes '//' (Error code(s): T26) .]]></Comment>
											<ValidationPattern xsi:type="T26" Type="T26">
												<Type>T26</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
						</Fields>
					</SwiftSequence>
					<SwiftSequence Name="B">
						<Name>B</Name>
						<Description><![CDATA[Cheque Details]]></Description>
						<Mandatory>true</Mandatory>
						<Repeating>true</Repeating>
						<Fields>
							<SwiftField Name="44A">
								<SwiftFieldDef Name="44">
									<Generic>false</Generic>
									<Description><![CDATA[Transaction Reference Number]]></Description>
									<Option Name="A">
										<Format><![CDATA[65x]]></Format>
										<Specification><![CDATA[(Reference)]]></Specification>
										<Description><![CDATA[Transaction Reference Number]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options>A</Options>
							</SwiftField>
							<SwiftField Name="21">
								<SwiftFieldDef Name="21">
									<Generic>false</Generic>
									<Description><![CDATA[Related Message Reference]]></Description>
									<Option Name="">
										<Format><![CDATA[16x]]></Format>
										<Specification><![CDATA[(Reference)]]></Specification>
										<Description><![CDATA[Related Message Reference]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options> </Options>
								<Validations>
									<SubField Name="Reference">
										<Validation>
											<Options> </Options>
											<ErrorCode>T26</ErrorCode>
											<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive slashes '//' (Error code(s): T26) .]]></Comment>
											<ValidationPattern xsi:type="T26" Type="T26">
												<Type>T26</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="21D">
								<SwiftFieldDef Name="21">
									<Generic>false</Generic>
									<Description><![CDATA[Cheque Number]]></Description>
									<Option Name="D">
										<Format><![CDATA[35x]]></Format>
										<Specification><![CDATA[(Cheque Number)]]></Specification>
										<Description><![CDATA[Cheque Number]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>D</Options>
							</SwiftField>
							<SwiftField Name="21E">
								<SwiftFieldDef Name="21">
									<Generic>false</Generic>
									<Description><![CDATA[Cheque Reference Number]]></Description>
									<Option Name="E">
										<Format><![CDATA[35x]]></Format>
										<Specification><![CDATA[(Reference)]]></Specification>
										<Description><![CDATA[Cheque Reference Number]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>E</Options>
							</SwiftField>
							<SwiftField Name="23E">
								<SwiftFieldDef Name="23">
									<Generic>false</Generic>
									<Description><![CDATA[Reason for Non-Payment/Dishonour]]></Description>
									<Option Name="E">
										<Format><![CDATA[4!c[/30x]]]></Format>
										<Specification><![CDATA[(Code) (Narrative)]]></Specification>
										<Description><![CDATA[Reason for Non-Payment/Dishonour]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options>E</Options>
								<Validations>
									<SubField Name="Code">
										<Validation>
											<Options>E</Options>
											<ErrorCode>T47</ErrorCode>
											<Comment><![CDATA[Code must contain one of the following codes (Error code(s): T47) :]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="AMAM">
														<Description>Amount exceeds the amount limit allowed for this account.</Description>
													</Code>
													<Code Name="AMTL">
														<Description>Amount exceeds the truncation limit as defined in the bilateral agreement (min. or max. amount).</Description>
													</Code>
													<Code Name="CLOS">
														<Description>Closed account.</Description>
													</Code>
													<Code Name="COLN">
														<Description>Error in code line.</Description>
													</Code>
													<Code Name="DRAW">
														<Description>Refer to drawer.</Description>
													</Code>
													<Code Name="DUPL">
														<Description>Duplicate cheque information.</Description>
													</Code>
													<Code Name="FRAU">
														<Description>Fraudulent cheque.</Description>
													</Code>
													<Code Name="FROZ">
														<Description>(Legally) Frozen account.</Description>
													</Code>
													<Code Name="FRWD">
														<Description>Forward dated cheque.</Description>
													</Code>
													<Code Name="INCH">
														<Description>Cheque number invalid.</Description>
													</Code>
													<Code Name="INSF">
														<Description>Insufficient funds.</Description>
													</Code>
													<Code Name="INSI">
														<Description>Insufficient information.</Description>
													</Code>
													<Code Name="INVA">
														<Description>Account number invalid.</Description>
													</Code>
													<Code Name="NELI">
														<Description>Cheques not eligible for truncation.</Description>
													</Code>
													<Code Name="NMAT">
														<Description>Currency and account do not match.</Description>
													</Code>
													<Code Name="OTHR">
														<Description>Other followed by a bilaterally agreed code to specify a reason which is not covered by the above.</Description>
													</Code>
													<Code Name="REVO">
														<Description>Revocation.</Description>
													</Code>
													<Code Name="STLD">
														<Description>Stale cheque, ie, deposited too late relative to the issue date.</Description>
													</Code>
													<Code Name="STOP">
														<Description>Stop payment of a cheque.</Description>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="32J">
								<SwiftFieldDef Name="32">
									<Generic>false</Generic>
									<Description><![CDATA[Cheque Amount]]></Description>
									<Option Name="J">
										<Format><![CDATA[15d]]></Format>
										<Specification><![CDATA[(Amount)]]></Specification>
										<Description><![CDATA[Cheque Amount]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options>J</Options>
							</SwiftField>
							<SwiftField Name="37J">
								<SwiftFieldDef Name="37">
									<Generic>false</Generic>
									<Description><![CDATA[Interest Rate]]></Description>
									<Option Name="J">
										<Format><![CDATA[12d]]></Format>
										<Specification><![CDATA[(Rate)]]></Specification>
										<Description><![CDATA[Interest Rate]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>J</Options>
							</SwiftField>
							<SwiftField Name="71G">
								<SwiftFieldDef Name="71">
									<Generic>false</Generic>
									<Description><![CDATA[Interest Charges]]></Description>
									<Option Name="G">
										<Format><![CDATA[3!a15d]]></Format>
										<Specification><![CDATA[(Currency) (Amount)]]></Specification>
										<Description><![CDATA[Interest Charges]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>G</Options>
								<Validations>
									<SubField Name="Amount">
										<Validation>
											<Options>G</Options>
											<ErrorCode>C03</ErrorCode>
											<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency (Error code(s): C03,T40,T43) .]]></Comment>
											<ValidationPattern xsi:type="Decimal" Type="Decimal">
												<Type>Decimal</Type>
												<currency-field>Currency</currency-field>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="Currency">
										<Validation>
											<Options>G</Options>
											<ErrorCode>T52</ErrorCode>
											<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52) .]]></Comment>
											<ValidationPattern xsi:type="Currency_Code" Type="Currency Code">
												<Type>Currency Code</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="71F">
								<SwiftFieldDef Name="71">
									<Generic>false</Generic>
									<Description><![CDATA[Sender's Charges]]></Description>
									<Option Name="F">
										<Format><![CDATA[3!a15d]]></Format>
										<Specification><![CDATA[(Currency) (Amount)]]></Specification>
										<Description><![CDATA[Sender's Charges]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>F</Options>
								<Validations>
									<SubField Name="Amount">
										<Validation>
											<Options>F</Options>
											<ErrorCode>C03</ErrorCode>
											<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency (Error code(s): C03,T40,T43) .]]></Comment>
											<ValidationPattern xsi:type="Decimal" Type="Decimal">
												<Type>Decimal</Type>
												<currency-field>Currency</currency-field>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="Currency">
										<Validation>
											<Options>F</Options>
											<ErrorCode>T52</ErrorCode>
											<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52) .]]></Comment>
											<ValidationPattern xsi:type="Currency_Code" Type="Currency Code">
												<Type>Currency Code</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="71H">
								<SwiftFieldDef Name="71">
									<Generic>false</Generic>
									<Description><![CDATA[Issuer's Financial Institution Charges]]></Description>
									<Option Name="H">
										<Format><![CDATA[3!a15d]]></Format>
										<Specification><![CDATA[(Currency) (Amount)]]></Specification>
										<Description><![CDATA[Issuer's Financial Institution Charges]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>H</Options>
								<Validations>
									<SubField Name="Amount">
										<Validation>
											<Options>H</Options>
											<ErrorCode>C03</ErrorCode>
											<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency (Error code(s): C03,T40,T43) .]]></Comment>
											<ValidationPattern xsi:type="Decimal" Type="Decimal">
												<Type>Decimal</Type>
												<currency-field>Currency</currency-field>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="Currency">
										<Validation>
											<Options>H</Options>
											<ErrorCode>T52</ErrorCode>
											<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52) .]]></Comment>
											<ValidationPattern xsi:type="Currency_Code" Type="Currency Code">
												<Type>Currency Code</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
						</Fields>
					</SwiftSequence>
					<SwiftSequence Name="C">
						<Name>C</Name>
						<Description><![CDATA[Settlement Details]]></Description>
						<Mandatory>true</Mandatory>
						<Repeating>false</Repeating>
						<Fields>
							<SwiftField Name="32A">
								<SwiftFieldDef Name="32">
									<Generic>false</Generic>
									<Description><![CDATA[Value Date, Currency Code and Total Amount Claimed]]></Description>
									<Option Name="A">
										<Format><![CDATA[6!n3!a15d]]></Format>
										<Specification><![CDATA[(Date) (Currency) (Amount)]]></Specification>
										<Description><![CDATA[Value Date, Currency Code and Total Amount Claimed]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>M</Presence>
								<Options>A</Options>
								<Validations>
									<SubField Name="Amount">
										<Validation>
											<Options>A</Options>
											<ErrorCode>C03</ErrorCode>
											<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency (Error code(s): C03,T40,T43) .]]></Comment>
											<ValidationPattern xsi:type="Decimal" Type="Decimal">
												<Type>Decimal</Type>
												<currency-field>Currency</currency-field>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="Currency">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T52</ErrorCode>
											<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52) .]]></Comment>
											<ValidationPattern xsi:type="Currency_Code" Type="Currency Code">
												<Type>Currency Code</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="Date">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T50</ErrorCode>
											<Comment><![CDATA[Date must be a valid date expressed as YYMMDD (Error code(s): T50) .]]></Comment>
											<ValidationPattern xsi:type="DATE" Type="DATE">
												<Type>DATE</Type>
												<Format>yyMMdd</Format>
												<value-date>true</value-date>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="30">
								<SwiftFieldDef Name="30">
									<Generic>false</Generic>
									<Description><![CDATA[Original Value Date]]></Description>
									<Option Name="">
										<Format><![CDATA[6!n]]></Format>
										<Specification><![CDATA[(Date)]]></Specification>
										<Description><![CDATA[Original Value Date]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options> </Options>
								<Validations>
									<SubField Name="Date">
										<Validation>
											<Options> </Options>
											<ErrorCode>T50</ErrorCode>
											<Comment><![CDATA[Date must be a valid date expressed as YYMMDD (Error code(s): T50) .]]></Comment>
											<ValidationPattern xsi:type="DATE" Type="DATE">
												<Type>DATE</Type>
												<Format>yyMMdd</Format>
												<value-date>true</value-date>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="19">
								<SwiftFieldDef Name="19">
									<Generic>false</Generic>
									<Description><![CDATA[Total Cheque Amount]]></Description>
									<Option Name="">
										<Format><![CDATA[17d]]></Format>
										<Specification><![CDATA[(Amount)]]></Specification>
										<Description><![CDATA[Total Cheque Amount]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options> </Options>
							</SwiftField>
							<SwiftField Name="71J">
								<SwiftFieldDef Name="71">
									<Generic>false</Generic>
									<Description><![CDATA[Sum of Interest Charges]]></Description>
									<Option Name="J">
										<Format><![CDATA[3!a15d]]></Format>
										<Specification><![CDATA[(Currency) (Amount)]]></Specification>
										<Description><![CDATA[Sum of Interest Charges]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>J</Options>
								<Validations>
									<SubField Name="Amount">
										<Validation>
											<Options>J</Options>
											<ErrorCode>C03</ErrorCode>
											<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency (Error code(s): C03,T40,T43) .]]></Comment>
											<ValidationPattern xsi:type="Decimal" Type="Decimal">
												<Type>Decimal</Type>
												<currency-field>Currency</currency-field>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="Currency">
										<Validation>
											<Options>J</Options>
											<ErrorCode>T52</ErrorCode>
											<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52) .]]></Comment>
											<ValidationPattern xsi:type="Currency_Code" Type="Currency Code">
												<Type>Currency Code</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="71L">
								<SwiftFieldDef Name="71">
									<Generic>false</Generic>
									<Description><![CDATA[Sum of Sender's Charges]]></Description>
									<Option Name="L">
										<Format><![CDATA[3!a15d]]></Format>
										<Specification><![CDATA[(Currency) (Amount)]]></Specification>
										<Description><![CDATA[Sum of Sender's Charges]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>L</Options>
								<Validations>
									<SubField Name="Amount">
										<Validation>
											<Options>L</Options>
											<ErrorCode>C03</ErrorCode>
											<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency (Error code(s): C03,T40,T43) .]]></Comment>
											<ValidationPattern xsi:type="Decimal" Type="Decimal">
												<Type>Decimal</Type>
												<currency-field>Currency</currency-field>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="Currency">
										<Validation>
											<Options>L</Options>
											<ErrorCode>T52</ErrorCode>
											<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52) .]]></Comment>
											<ValidationPattern xsi:type="Currency_Code" Type="Currency Code">
												<Type>Currency Code</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="71K">
								<SwiftFieldDef Name="71">
									<Generic>false</Generic>
									<Description><![CDATA[Sum of Issuer's Financial Institution Charges]]></Description>
									<Option Name="K">
										<Format><![CDATA[3!a15d]]></Format>
										<Specification><![CDATA[(Currency) (Amount)]]></Specification>
										<Description><![CDATA[Sum of Issuer's Financial Institution Charges]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>K</Options>
								<Validations>
									<SubField Name="Amount">
										<Validation>
											<Options>K</Options>
											<ErrorCode>C03</ErrorCode>
											<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency (Error code(s): C03,T40,T43) .]]></Comment>
											<ValidationPattern xsi:type="Decimal" Type="Decimal">
												<Type>Decimal</Type>
												<currency-field>Currency</currency-field>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="Currency">
										<Validation>
											<Options>K</Options>
											<ErrorCode>T52</ErrorCode>
											<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52) .]]></Comment>
											<ValidationPattern xsi:type="Currency_Code" Type="Currency Code">
												<Type>Currency Code</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="57a">
								<SwiftFieldDef Name="57">
									<Generic>false</Generic>
									<Description><![CDATA[Account With Institution (for Settlement)]]></Description>
									<Option Name="A">
										<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
										<Description><![CDATA[Account With Institution (for Settlement)]]></Description>
									</Option>
									<Option Name="C">
										<Format><![CDATA[/34x]]></Format>
										<Specification><![CDATA[(Party Identifier)]]></Specification>
										<Description><![CDATA[Account With Institution (for Settlement)]]></Description>
									</Option>
									<Option Name="D">
										<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
										<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
										<Description><![CDATA[Account With Institution (for Settlement)]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>A, C, D</Options>
								<Validations>
									<SubField Name="Identifier_Code">
										<Validation>
											<Options>A</Options>
											<ErrorCode>T27,T28,T29,T45</ErrorCode>
											<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
											<ValidationPattern xsi:type="BIC" Type="BIC">
												<Type>BIC</Type>
											</ValidationPattern>
										</Validation>
										<Validation>
											<Options>A</Options>
											<ErrorCode>C05</ErrorCode>
											<Comment><![CDATA[Identifier Code must not be a BEI. Please refer to the latest version of the BIC Directory - Corporations for more information about BEIs. This error code applies to all types of BICs referenced in a FIN message including SWIFT BICs, non-SWIFT BICs, Masters, Synonyms, Live destinations and Test & Training destinations . (Error code(s): C05) .]]></Comment>
											<ValidationPattern xsi:type="C05" Type="C05">
												<Type>C05</Type>
											</ValidationPattern>
										</Validation>
									</SubField>
									<SubField Name="CreditDebit">
										<Validation>
											<Options>A, D</Options>
											<ErrorCode>T51</ErrorCode>
											<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="C">
														<DetailedName>Credit</DetailedName>
													</Code>
													<Code Name="D">
														<DetailedName>Debit</DetailedName>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
							<SwiftField Name="58B">
								<SwiftFieldDef Name="58">
									<Generic>false</Generic>
									<Description><![CDATA[Beneficiary Institution's Account (for Settlement)]]></Description>
									<Option Name="B">
										<Format><![CDATA[/1!a[/34x](CRLF35x) | /1!a[/34x] | [/34xCRLF]35x | /34x]]></Format>
										<Specification><![CDATA[(CreditDebit) (Party Identifier) (Location) | (CreditDebit)(Party Identifier) |(Party Identifier) (Location) | (Party Identifier)]]></Specification>
										<Description><![CDATA[Beneficiary Institution's Account (for Settlement)]]></Description>
									</Option>
								</SwiftFieldDef>
								<Repeating>false</Repeating>
								<Presence>O</Presence>
								<Options>B</Options>
								<Validations>
									<SubField Name="CreditDebit">
										<Validation>
											<Options>B</Options>
											<ErrorCode>T51</ErrorCode>
											<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
											<ValidationPattern xsi:type="CODE" Type="CODE">
												<Type>CODE</Type>
												<Codes>
													<Code Name="C">
														<DetailedName>Credit</DetailedName>
													</Code>
													<Code Name="D">
														<DetailedName>Debit</DetailedName>
													</Code>
												</Codes>
											</ValidationPattern>
										</Validation>
									</SubField>
								</Validations>
							</SwiftField>
						</Fields>
					</SwiftSequence>
				</Fields>
			</Data>
			<Trailer>
				<fields>
					<field>
						<name>Message Authentication Code</name>
						<description><![CDATA[Allows authentication by the receiving user. It is followed by an authentication result.

This trailer is mandatory for most user-to-user message categories within the FIN application. When the FIN Copy Service is used a PAC trailer, if present, follows the MAC trailer.

Format:

{MAC:<authentication-result>}

where <authentication-result> = 8!h

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>8</length>
						<tag>MAC</tag>
					</field>
					<field>
						<name>Proprietary Authentication Code</name>
						<description><![CDATA[The PAC is used within the FIN Copy service only, when using the double authentication option. The PAC is included in Block 5 of FIN user-to-user messages, immediately after the MAC trailer, if present.

This is calculated on the extracted fields of Block 4 of the message, the value of field 115, if present, and the <authentication-result> of the MAC trailer for Copy Services with double authentication.

Thus, the end-of-block indicator (CrLf-) is included in the PAC calculation, and the fields are defined as follows:

The first three characters are CrLf:

The field and the delimiter are present, that is, 32A:, 20:, and so on.

All subfields and their delimiters are present.

Format:

{PAC:[<authentication-result>]}

where <authentication-result> is mandatory on input messages only and <authentication-result> = 8!h

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>8</length>
						<tag>PAC</tag>
					</field>
					<field>
						<name>Checksum</name>
						<description><![CDATA[The checksum is computed based on the receiver's address (12 characters, with 9th character replaced by X) plus the Text Block. This trailer allows the system and the CBT to check that messages have not been corrupted due to a system malfunction or an undetected transmission error.

Format:

{CHK:<checksum-result>}

where <checksum-result> = 12!h

Note: This trailer is mandatory for FIN and GPA messages (Service Identifier 01).

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>12</length>
						<tag>CHK</tag>
					</field>
					<field>
						<name>System Originated Message</name>
						<description><![CDATA[The system message or service message which is generated by a system PLT has a SYS trailer. All solicited system messages (Service Identifier 01) contain the MIR of the request and may also contain the time.

Format:

{SYS:[<time><mir>]}

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>SYS</tag>
					</field>
					<field>
						<name>Test And Training Message</name>
						<description><![CDATA[Mandatory for FIN and GPA messages (Service Identifier 01) sent by, or delivered to, a Test & Training Logical Terminal (LT). This trailer has a tag only, and no value.

Format:

{TNG:}
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>0</length>
						<tag>TNG</tag>
					</field>
					<field>
						<name>Possible Duplicate Emission</name>
						<description><![CDATA[This trailer is used by the destination of the message. It only applies to FIN user-to-user messages (Service Identifier 01, message categories reserved for banking messages). There can be multiple PDEs. The system does not verify the order nor restrict the number (except for maximum message length).

Correctly formatted PDE trailers applied to user-to-system messages are accepted by the system, but not processed. This means that the system does not check to see if the original message exists. Therefore, a retrieval request sent with a PDE trailer may be processed twice if the original message was received by the system.

Format:

{PDE:[<time><mir>]}

where <time><mir> refers to the emission of the previous possible issue.

Note: It can be added automatically by a CBT or manually by a user. It may be followed by the MIR and the time of its previous possible messages.

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>PDE</tag>
					</field>
					<field>
						<name>Delayed Message</name>
						<description><![CDATA[This trailer is added to all FIN user-to-user output messages that have exceeded their obsolescence period. If this trailer appears in GPA or FIN system messages, it must be ignored. This trailer has a tag only, and no value.

The Obsolescence Period is:

U = 15 minutes

N = 100 minutes

Format:

{DLM:}

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>0</length>
						<tag>DLM</tag>
					</field>
					<field>
						<name>Possible Duplicate Message</name>
						<description><![CDATA[Added by the system to any output message (GPA and FIN Service Identifier 01) being resent because a prior delivery may be invalid. If a system PLT receives a report request with a PDM, the response has a plain PDM (without the optional delivery reference). Other PDMs may be added as a result of unsuccessful delivery attempts to the user. 
Format:
{PDM:[<time><mor>]}
where <time> and the Message Output Reference <mor> are that of the previous attempt.
Note: For messages recovered after a system failure, the optional fields may not be present.
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>PDM</tag>
					</field>
					<field>
						<name>Message Reference</name>
						<description><![CDATA[The MRF trailer is used to specify the message reference of the original user message in MT 096 FIN Copy to Central Institution Messages.
Format:
{MRF:<date><full-time><mir>}
where <mir> is that of the original user message whose fields are copied in the MT 096 FIN Copy to Central Institution Message.
Note: The MRF is specific to FIN Copy. The MRF trailer is automatically generated in the MT 096 FIN Copy to Central Institution Message and can only be reused in field 109 of the MT 096 FIN Copy to Central Institution Message to identify the MT 096 to which the MT 097 is a response. The format of the MRF is subject to change.
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>MRF</tag>
					</field>
				</fields>
			</Trailer>
		</SwiftFields>
		<validationrules name="Default">
			<hdrvalidationrules>
				<fieldvalidations>
					<fieldvalidation>
						<name>U09</name>
						<formula><![CDATA[if($this.Header.GetFieldIndex("User_Header") != -1) {
    def userHeader = $this.Header.GetSection("User_Header");
    if(userHeader.$size > 0 && userHeader[0].IsNotNull("Validation_Flag")) {
        return false;
    }
}
return true;
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U09</error-code>
						<actionmessage><![CDATA["User has used tag 119 in a message that is not a candidate for special processing"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>U03</name>
						<fieldname>User Header</fieldname>
						<formula><![CDATA[Iff(IsNotNull(User_Header.Service_Type_Identifier), 
    IsNotNull(User_Header.Unique_End_To_End_Transaction_Reference))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U03</error-code>
						<actionmessage><![CDATA["When populating an end-to-end reference, both fields 111 and 121 must be populated: a message that contains only one of these two fields will not be accepted by FIN."]]></actionmessage>
					</fieldvalidation>
				</fieldvalidations>
			</hdrvalidationrules>
			<datavalidationrules>
				<fieldvalidations>
					<fieldvalidation>
						<name>C1</name>
						<fieldname>B</fieldname>
						<comment><![CDATA[C1
If field 37J is present, then field 71G must also be present]]></comment>
						<formula><![CDATA[If($value.F37J.$size>0, $value.F71G.$size>0, true);]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E25</error-code>
						<actionmessage><![CDATA["If field 37J is present, then field 71G must also be present (Error code(s): E25)."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C2</name>
						<fieldname>C.71L.Amount</fieldname>
						<comment><![CDATA[C2
The amount specified in field 71L in sequence C must be equal to the sum of all occurrences of field 71F in sequence B.]]></comment>
						<formula><![CDATA[If(SecExists(B, "F71F"), 
   Abs($value - SecSumDouble(B, "F71F.Amount")) < 1.0E-4, 
   true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E26</error-code>
						<actionmessage><![CDATA["The amount specified in field 71L in sequence C must be equal to the sum of all occurrences of field 71F in sequence B (Error code(s): E26)"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C3</name>
						<fieldname>C.71J.Amount</fieldname>
						<comment><![CDATA[C3
The amount specified in field 71J in sequence C must be equal to the sum of all occurrences of field 71G in sequence B.]]></comment>
						<formula><![CDATA[If(SecExists(B, "F71G"), 
   Abs($value - SecSumDouble(B, "F71G.Amount")) < 1.0E-4, 
   true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E27</error-code>
						<actionmessage><![CDATA["The amount specified in field 71J in sequence C must be equal to the sum of all occurrences of field 71G in sequence B (Error code(s): E27)"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C4</name>
						<comment><![CDATA[C4
The currency code in the amount fields (71F, 71G, 71H, 71J, 71K, 71L, 32A) must be the same for all occurrences of these fields in the message .]]></comment>
						<formula><![CDATA[def currrency = C[0].F32A[0].Currency;
foreach(def b in B) {
    if(b.F71F.$size > 0 && b.F71F[0].Currency != currrency) {
        return false;
    }
    if(b.F71G.$size > 0 && b.F71G[0].Currency != currrency) {
        return false;
    }
    if(b.F71H.$size > 0 && b.F71H[0].Currency != currrency) {
        return false;
    }
}
return (C[0].F71J.$size == 0 || C[0].F71J[0].Currency == currrency) && 
         (C[0].F71K.$size == 0 || C[0].F71K[0].Currency == currrency) && 
         (C[0].F71L.$size == 0 || C[0].F71L[0].Currency == currrency);
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C02</error-code>
						<actionmessage><![CDATA["The currency code in the amount fields (71F, 71G, 71H, 71J, 71K, 71L, 32A) must be the same for all occurrences of these fields in the message (Error code(s): C02)."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C5</name>
						<fieldname>C.32A.Amount</fieldname>
						<comment><![CDATA[C5
If the amount in field 32A of sequence C is equal to the sum of the amounts in the fields 32J of sequence B, then field 19 must not be present; otherwise (that is the amount in field 32A of sequence C is not equal to the sum of the amounts in fields 32J of sequence B), field 19 must be present (Error code(s): D80).]]></comment>
						<formula><![CDATA[If(Abs($value - SecSumDouble(B, "F32J.Amount")) < 1.0E-4, 
   C[0].F19.$size == 0, 
   C[0].F19.$size > 0)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D80</error-code>
						<actionmessage><![CDATA["If the amount in field 32A of sequence C is equal to the sum of the amounts in the fields 32J of sequence B, then field 19 must not be present; otherwise (that is the amount in field 32A of sequence C is not equal to the sum of the amounts in fields 32J of sequence B), field 19 must be present (Error code(s): D80)."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C6</name>
						<fieldname>C.19.Amount</fieldname>
						<comment><![CDATA[C6
If charges are included, field 19 must be present. It must contain the sum of amounts of all fields 32J in sequence B.]]></comment>
						<formula><![CDATA[Abs($value - SecSumDouble(B, "F32J.Amount")) < 1.0E-4]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C01</error-code>
						<actionmessage><![CDATA["If charges are included, field 19 must be present. It must contain the sum of amounts of all fields 32J in sequence B (Error code(s): C01)"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C7</name>
						<comment><![CDATA[C7
Field 21 must be present either in sequence A, or in all occurrences of sequence B.]]></comment>
						<formula><![CDATA[If(A[0].F21.$size > 0, !SecExists(B, "F21"), SecExistsInAll(B, "F21"))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E28</error-code>
						<actionmessage><![CDATA["Field 21 must be present either in sequence A, or in all occurrences of sequence B (Error code(s): E28)."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C8</name>
						<comment><![CDATA[C8
If field 71F is present in any occurrence of sequence B, then field 71L must be present in sequence C. Otherwise, field 71L is not allowed]]></comment>
						<formula><![CDATA[If(SecExists(B, "F71F"), C[0].F71L.$size > 0, C[0].F71L.$size == 0)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E29</error-code>
						<actionmessage><![CDATA["If field 71F is present in any occurrence of sequence B, then field 71L must be present in sequence C. Otherwise, field 71L is not allowed (Error code(s): E29)"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C9</name>
						<comment><![CDATA[C9
If field 71G is present in any occurrence of sequence B, then field 71J must be present in sequence C. Otherwise, field 71J is not allowed.]]></comment>
						<formula><![CDATA[If(SecExists(B, "F71G"), C[0].F71J.$size > 0, C[0].F71J.$size == 0)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E30</error-code>
						<actionmessage><![CDATA["If field 71G is present in any occurrence of sequence B, then field 71J must be present in sequence C. Otherwise, field 71J is not allowed (Error code(s): E30)"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C10</name>
						<comment><![CDATA[C10
If field 71H is present in any occurrence of sequence B, then field 71K must be present in sequence C. Otherwise, field 71K is not allowed.]]></comment>
						<formula><![CDATA[If(SecExists(B, "F71H"), C[0].F71K.$size > 0, C[0].F71K.$size == 0)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E31</error-code>
						<actionmessage><![CDATA["If field 71H is present in any occurrence of sequence B, then field 71K must be present in sequence C. Otherwise, field 71K is not allowed (Error code(s): E31)"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C11</name>
						<fieldname>C.71K.Amount</fieldname>
						<comment><![CDATA[C11
The amount specified in field 71K in sequence C must be equal to the sum of all occurrences of field 71H in sequence B.]]></comment>
						<formula><![CDATA[If(SecExists(B, "F71H"), 
   Abs($value - SecSumDouble(B, "F71H.Amount")) < 1.0E-4, 
   true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>E32</error-code>
						<actionmessage><![CDATA["The amount specified in field 71K in sequence C must be equal to the sum of all occurrences of field 71H in sequence B (Error code(s): E27)"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-23E-A</name>
						<fieldname>B.23E.Narrative</fieldname>
						<comment><![CDATA[FB-23E-A
Narrative may only be used in combination with the code OTHR.
]]></comment>
						<formula><![CDATA[B.F23E.Code == "OTHR"]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>D81</error-code>
						<actionmessage><![CDATA["Narrative may only be used in combination with the code OTHR (Error code(s): D81)."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FB-32J-A</name>
						<fieldname>B.32J.Amount</fieldname>
						<comment><![CDATA[FB-32J-A
The number of digits following the comma must not exceed the maximum number allowed for the currency specified in field 32A
]]></comment>
						<formula><![CDATA[isValidDecimals(C[0].F32A[0].Currency,$value);]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C03</error-code>
						<actionmessage><![CDATA["The number of digits following the comma must not exceed the maximum number allowed for the currency specified in field 32A (Error code(s): C03)"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FC-19</name>
						<fieldname>C.19.Amount</fieldname>
						<comment><![CDATA[FC-19
The number of digits following the comma must not exceed the maximum number allowed for the currency specified in field 32A
]]></comment>
						<formula><![CDATA[isValidDecimals(C[0].F32A[0].Currency,$value);]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C03</error-code>
						<actionmessage><![CDATA["The number of digits following the comma must not exceed the maximum number allowed for the currency specified in field 32A (Error code(s): C03)"]]></actionmessage>
					</fieldvalidation>
				</fieldvalidations>
			</datavalidationrules>
			<tlrvalidationrules>
				<fieldvalidations>
				</fieldvalidations>
			</tlrvalidationrules>
		</validationrules>
		<elementproperties>
			<propertymap>
			</propertymap>
		</elementproperties>
	</externalmessage>
	<externalmessage xsi:type="SwiftFormat" type="SwiftFormat" version="5.1.2" rulename="MT290_2016" formattype="SwiftFormat" >
		<description><![CDATA[This message type is sent by an account servicing institution to the account owner.

It is used to advise charges, interest or other adjustments which have been debited or credited to the account owner's account. It provides details of charges which are previously unknown to the Receiver.]]></description>
		<standard>SWIFT</standard>
		<standard-name>MT290</standard-name>
		<standard-version>SRG 2016</standard-version>
		<standard-release-qualifier>20160308</standard-release-qualifier>
		<standard-category>Financial Institution Transfers</standard-category>
		<standard-detailed-name>Advice of Charges, Interest and Other Adjustments</standard-detailed-name>
		<version>1.0</version>
		<SwiftFields>
			<customizable>true</customizable>
			<modifiable>false</modifiable>
			<SwiftMessageType>User</SwiftMessageType>
			<max-length>2000</max-length>
			<HeaderAndTrailerType>SWIFT_INPUT_OUTPUT_HEADER</HeaderAndTrailerType>
			<Header>
				<fields>
					<field>
						<name>Basic Header</name>
						<description><![CDATA[The Basic Header is given in Block 1 of a SWIFT message and is the only header that appears on all messages. The Basic Header provides the fundamental reference for any particular message and is almost always automatically built by the CBT.
The Basic Header has the same format for both input and output messages. However, the information contained in the Basic Header is relative to the sender when the message is input but relative to the receiver when the same message is output.]]></description>
						<datatype>Section</datatype>
						<required>true</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Application Identifier</name>
								<description><![CDATA[The Application Identifier identifies the application within which the message is being sent or received. The available options are:

F = FIN All user-to-user, FIN system and FIN service messages 
A = GPA Most GPA system and service messages 
L = GPA Certain GPA service messages, for example, LOGIN, LAKs, ABORT 

These values are automatically assigned by the SWIFT system and the user's CBT, but the user should be aware of their existence and significance
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Service Identifier</name>
								<description><![CDATA[The Service Identifier consists of 2 numeric characters. It identifies the type of data that is being sent or received and, in doing so, whether the message which follows is one of the following:

a user-to-user message

a system message

a service message, for example, a session control command, such as SELECT, or a logical acknowledgement, such as ACK/SAK/UAK

Users will be primarily concerned with identifier '01' which applies to all GPA and FIN system and user-to-user messages. Other values include: '21' for message acknowledgements such as ACK/NAK, UAK/UNK, '03' for SELECT commands, and 
so on]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>2</length>
							</field>
							<field>
								<name>LT Identifier</name>
								<description><![CDATA[This 12-character SWIFT address, given in the Basic Header Block, is the address of the sending LT for input messages or of the receiving LT for output messages, and includes the Branch Code.

In the Basic Header, the LT Code within the LT Identifier is specific to the LT that has established the session in which the message is being transmitted, that is the sending LT for input messages or the receiving LT for output messages.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>12</length>
							</field>
							<field>
								<name>Session Number</name>
								<description><![CDATA[The Session Number identifies the session in which the message was transmitted. Within the Basic Header, the 4-digit Session Number is the user's current GPA or FIN Session Number.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Sequence Number</name>
								<description><![CDATA[The sequence number always consists of 6 digits. It is the ISN of the sender's current input session or the OSN of the receiver's current output session.

Note: The sequence number is not present in those messages with an Application Identifier of 'L' (for example LOGIN). The sequence number is, however, a key element in the processing of retrievals. Therefore, LOGINs and attempted LOGINs are not retrievable
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>6</length>
							</field>
						</fields>
					</field>
					<field>
						<name>Application Header Input</name>
						<description><![CDATA[The Application Header of a SWIFT message provides information about the message itself.

The Application Header is given in Block 2 of a SWIFT message. It differs according to whether the message is a GPA or a FIN message and whether the Application Header is part of an input or an output message.

]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Input/Output Identifier</name>
								<description><![CDATA[For an input message, the Input/Output Identifier consists of the single letter 'I'.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Message Type</name>
								<description><![CDATA[The Message Type consists of 3 digits which define the MT number of the message being input. The example used above is for an MT 100 Customer Transfer]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>3</length>
							</field>
							<field>
								<name>Receiver's Address</name>
								<description><![CDATA[This address is the 12-character SWIFT address of the receiver of the message, but with a LT Code of 'X'. It defines the destination to which the message should be sent.

The system will replace the 'X' with a specific LT Code on delivery of the message according to the delivery control exercised by the receiving user.

The Branch Code is mandatory and will be validated. The default of 'XXX' may be used, as in the example above.

Unless otherwise documented, system messages addressed to the SWIFT system itself should be addressed to SWFTXXXXXXXX.

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>12</length>
							</field>
							<field>
								<name>Message Priority</name>
								<description><![CDATA[This character, used within FIN Application Headers only, defines the priority with which a message is delivered. The possible values are:

S = System

U = Urgent

N = Normal

Message Priority 'S' must be used for user-to-system messages; for user-to-user messages either 'U' or 'N' can be used. In the absence of user-specified delivery criteria, system messages are always delivered first, followed by urgent priority messages and then normal priority messages.

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Delivery Monitoring</name>
								<description><![CDATA[Delivery monitoring options apply only to FIN user-to-user messages, and allow the sender of a message to request:

automatic MT 011 Delivery Notification once the message has been delivered

automatic MT 010 Non-Delivery Warning if a message is not delivered within the specified obsolescence period (see below)

both, or neither, options. This may be requested on an individual message basis.

The chosen option is expressed as a single digit:

1 = Non-Delivery Warning

2 = Delivery Notification

3 = Non-Delivery Warning and Delivery Notification. 
If the message has priority 'U' then the user must request delivery monitoring option '1' or '3'. If the message has priority 'N', the user can request delivery monitoring option '2', or, by leaving the option blank, no delivery monitoring.
]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>1</length>
							</field>
							<field>
								<name>Obsolescence Period</name>
								<description><![CDATA[The obsolescence period defines the period of time after which a Delayed Message (DLM) trailer is added to a FIN user-to-user message when the message is delivered. For urgent priority messages, it is also the period of time after which, if the message remains undelivered, a Non-Delivery Warning is generated.

The values for the obsolescence period are 003 (15 minutes) for 'U' priority, and 020 (100 minutes) for 'N' priority. An obsolescence period can only be specified when delivery monitoring has been requested (option 1 or 3 for urgent priority messages, option 2 for normal priority messages). If no delivery monitoring has been requested, and an obsolescence period is specified, the message will be NAKed with error code H25.

GPA input Application Headers are similar to their FIN equivalents except that GPA messages do not specify priority, delivery monitoring, nor obsolescence period.

]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>3</length>
							</field>
						</fields>
					</field>
					<field>
						<name>Application Header Output</name>
						<description><![CDATA[The Application Header of a SWIFT message provides information about the message itself.

The Application Header is given in Block 2 of a SWIFT message. It differs according to whether the message is a GPA or a FIN message and whether the Application Header is part of an input or an output message.

]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Input/Output Identifier</name>
								<description><![CDATA[For an input message, the Input/Output Identifier consists of the single letter 'I'.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Message Type</name>
								<description><![CDATA[Three digits indicating the Message Type.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>3</length>
							</field>
							<field>
								<name>Input Time</name>
								<description><![CDATA[The first occurrence of the time field contains the system time and date. This is the generation time in Greenwich Mean Time (GMT).
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Message Input Reference</name>
								<description><![CDATA[The input MIR.

If the message is generated by the system, the input time is the generation time (in GMT) and the input MIR is the system MIR

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>28</length>
							</field>
							<field>
								<name>Output Date</name>
								<description><![CDATA[The output date, local to the receiver.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>6</length>
							</field>
							<field>
								<name>Output Time</name>
								<description><![CDATA[The second occurrence of the time field contains the output time and date. This is in a time local to the receiver.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Message Priority</name>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
						</fields>
					</field>
					<field>
						<name>User Header</name>
						<description><![CDATA[The User Header is an optional header available within FIN for user-to-user messages only. It appears in Block 3 of a SWIFT message, and allows users to provide their own reference within the headers for a particular message.

A User Header can only be assigned by the sender of a message and, if assigned, will always appear on the output message copy. Relevant parts of the User Header will be repeated in related system messages and acknowledgements.

Block 3 may contain tag 113, defining banking priorities, and tag 108, which is a user reference. The user reference part of the User Header may be used as one of the selection criteria when retrieving a message.

The optional field tags 103 and 115 are also used in Block 3 for the FIN Copy service. The order of tags, when present, is 103, 113, 108 and 115.

An optional field tag 119 can be included in Block 3 of certain messages to specify that different validation rules are to be applied. Agreed code words in field 119 indicate what validation rules SWIFT will apply. If field 119 is present, it should appear after field 108
]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Service Identifier</name>
								<description><![CDATA[For any message which the user submits to a FIN Copy service, Block 3 requires an additional field 103 which contains a three-character Service Identifier unique to a specific FIN Copy service. By using a unique identifier it is possible to support access to multiple services within the same CBT.
]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>3</length>
								<tag>103</tag>
							</field>
							<field>
								<name>Banking Priority</name>
								<description><![CDATA[Assigned by the sender of the message.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>4</length>
								<tag>113</tag>
							</field>
							<field>
								<name>Message User Reference</name>
								<description><![CDATA[Assigned by the sender of the message.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>16</length>
								<tag>108</tag>
							</field>
							<field>
								<name>Validation Flag</name>
								<description><![CDATA[Indicates whether a special validation needs to be performed by FIN. The following are examples of the values this field may take. Please note that this list is subject to change:

ISITC indicates validation of ISITC Standards. Only to be used with MT 521 and MT 523.

REMIT identifies the presence of field 77T. Only to be used in MT 103.

RFDD indicates that the message is a request for direct debit. Only to be used in MT 104.

STP indicates that the message is validated according to straight through processing principles. Only to be used in MT 103.

]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>119</tag>
							</field>
							<field>
								<name>Balance checkpoint date and time</name>
								<description><![CDATA[This field contains the balance checkpoint date and time consisting of a date (YYMMDD) and a time (HHMMSS[ss], where 'ss' indicates hundredths of a second). The MI that is subscribed to MIRS will always copy this reference from field tag 13G of the last MT298/091 that it sent into the related MT 298/093 or MT 097 that it generates. ]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>423</tag>
							</field>
							<field>
								<name>Message Input Reference</name>
								<description><![CDATA[This field contains the MIR of the payment message that is related to the notification messages in which this field is present. The MI that is subscribed to MIRS will copy it from the received payment message. In a FINCopy scenario, this field must contain the MIR of the related MT 096]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>106</tag>
							</field>
							<field>
								<name>Related Reference</name>
								<description><![CDATA[This field contains the reference of the payment that is related to the notification messages in which this field is present. The payment itself was not the result of a FIN message. The value of this field must correspond to the related reference (field 21) in the MT298/093. The format of field 424 is 16x.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>424</tag>
							</field>
							<field>
								<name>Service Type Identifier</name>
								<description><![CDATA[This field identifies the applicable global payment service type. The format of field 111 is 3!n.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>111</tag>
							</field>
							<field>
								<name>Unique End-To-End Transaction Reference</name>
								<description><![CDATA[This field provides an end-to-end reference across a payment transaction. The format of field 121 is 36!x.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>121</tag>
							</field>
							<field>
								<name>Addressee Information</name>
								<description><![CDATA[Tag 115 is only valid for output messages. Information from Central Institution to the receiver of payment message. Information is input in the MT 097 FIN Copy Message Authorisation/Refusal Notification in Y-Copy mode.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>115</tag>
							</field>
							<field>
								<name>Payment Release Information Receiver (FINInform Services)</name>
								<description><![CDATA[Tag 165 is only valid for output messages. This field contains information from the server destination to the receiver of payment message. It is only available for use in FINInform services that operate in Y-copy mode.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>165</tag>
							</field>
							<field>
								<name>Receiver Information</name>
								<description><![CDATA[Tag 433 is only valid for output messages. The screening service inputs information in the MT 097 FINCopy Message Authorisation/Refusal Notification, in Y-Copy mode. FINCopy copies the information to the receiver of the screened message.
				    The following values can be present in this field:
				      AOK: message automatically released by screening service
				      FPO: compliance officer has flagged the screening result as false positive
				      NOK: compliance officer has flagged the screened message as suspect
				    The code word can optionally be followed by additional information (up to 20 characters from the x character set).]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>433</tag>
							</field>
						</fields>
					</field>
				</fields>
			</Header>
			<Data>
				<Fields>
					<SwiftField Name="20">
						<SwiftFieldDef Name="20">
							<Generic>false</Generic>
							<Description><![CDATA[Reference]]></Description>
							<Option Name="">
								<Format><![CDATA[16x]]></Format>
								<Specification><![CDATA[(Reference)]]></Specification>
								<Description><![CDATA[Transaction Reference Number]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options> </Options>
						<Validations>
							<SubField Name="Reference">
								<Validation>
									<Options> </Options>
									<ErrorCode>T26</ErrorCode>
									<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive slashes '//'(Error code(s): T26).]]></Comment>
									<ValidationPattern xsi:type="T26" Type="T26">
										<Type>T26</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="21">
						<SwiftFieldDef Name="21">
							<Generic>false</Generic>
							<Option Name="">
								<Format><![CDATA[16x]]></Format>
								<Specification><![CDATA[(Reference)]]></Specification>
								<Description><![CDATA[Related Reference]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options> </Options>
						<Validations>
							<SubField Name="Reference">
								<Validation>
									<Options> </Options>
									<ErrorCode>T26</ErrorCode>
									<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive slashes '//'(Error code(s): T26).]]></Comment>
									<ValidationPattern xsi:type="T26" Type="T26">
										<Type>T26</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="25">
						<SwiftFieldDef Name="25">
							<Generic>false</Generic>
							<Description><![CDATA[Status]]></Description>
							<Option Name="">
								<Format><![CDATA[35x]]></Format>
								<Specification><![CDATA[(Account)]]></Specification>
								<Description><![CDATA[Account Identification]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options> </Options>
					</SwiftField>
					<SwiftField Name="32a">
						<SwiftFieldDef Name="32">
							<Generic>false</Generic>
							<Option Name="C">
								<Format><![CDATA[6!n3!a15d]]></Format>
								<Specification><![CDATA[(Date) (Currency) (Amount)]]></Specification>
								<Description><![CDATA[Value Date, Currency Code, Amount]]></Description>
							</Option>
							<Option Name="D">
								<Format><![CDATA[6!n3!a15d]]></Format>
								<Specification><![CDATA[(Date) (Currency) (Amount)]]></Specification>
								<Description><![CDATA[Value Date, Currency Code, Amount]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options>C, D</Options>
						<Validations>
							<SubField Name="Date">
								<Validation>
									<Options>C, D</Options>
									<ErrorCode>T50</ErrorCode>
									<Comment><![CDATA[Date must be a valid date expressed as YYMMDD (Error code(s): T50).]]></Comment>
									<ValidationPattern xsi:type="DATE" Type="DATE">
										<Type>DATE</Type>
										<Format>yyMMdd</Format>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="Currency">
								<Validation>
									<Options>C, D</Options>
									<ErrorCode>T52</ErrorCode>
									<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52).]]></Comment>
									<ValidationPattern xsi:type="Currency_Code" Type="Currency Code">
										<Type>Currency Code</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="Amount">
								<Validation>
									<Options>C, D</Options>
									<ErrorCode>C03</ErrorCode>
									<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency.]]></Comment>
									<ValidationPattern xsi:type="Decimal" Type="Decimal">
										<Type>Decimal</Type>
										<currency-field>Currency</currency-field>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="52a">
						<SwiftFieldDef Name="52">
							<Generic>false</Generic>
							<Option Name="A">
								<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
								<Description><![CDATA[Ordering Institution]]></Description>
							</Option>
							<Option Name="D">
								<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
								<Description><![CDATA[Ordering Institution]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options>A, D</Options>
						<Validations>
							<SubField Name="Identifier_Code">
								<Validation>
									<Options>A</Options>
									<ErrorCode>T27, T28, T29, T45</ErrorCode>
									<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
									<ValidationPattern xsi:type="BIC" Type="BIC">
										<Type>BIC</Type>
									</ValidationPattern>
								</Validation>
								<Validation>
									<Options>A</Options>
									<ErrorCode>C05</ErrorCode>
									<Comment><![CDATA[Identifier Code must not be a BEI, ie must not be of subtype BEID, MCCO, TESP or TRCO]]></Comment>
									<ValidationPattern xsi:type="C05" Type="C05">
										<Type>C05</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="CreditDebit">
								<Validation>
									<Options>A, D</Options>
									<ErrorCode>T51</ErrorCode>
									<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
									<ValidationPattern xsi:type="CODE" Type="CODE">
										<Type>CODE</Type>
										<Codes>
											<Code Name="C">
												<DetailedName>Credit</DetailedName>
											</Code>
											<Code Name="D">
												<DetailedName>Debit</DetailedName>
											</Code>
										</Codes>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="71B">
						<SwiftFieldDef Name="71">
							<Generic>false</Generic>
							<Option Name="B">
								<Format><![CDATA[6*35x]]></Format>
								<Specification><![CDATA[(Narrative)]]></Specification>
								<Description><![CDATA[Details of Charges]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options>B</Options>
					</SwiftField>
					<SwiftField Name="72">
						<SwiftFieldDef Name="72">
							<Generic>false</Generic>
							<Option Name="">
								<Format><![CDATA[6*35x]]></Format>
								<Specification><![CDATA[(Narrative)]]></Specification>
								<Description><![CDATA[Sender to Receiver Information]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options> </Options>
					</SwiftField>
				</Fields>
			</Data>
			<Trailer>
				<fields>
					<field>
						<name>Message Authentication Code</name>
						<description><![CDATA[Allows authentication by the receiving user. It is followed by an authentication result.

This trailer is mandatory for most user-to-user message categories within the FIN application. When the FIN Copy Service is used a PAC trailer, if present, follows the MAC trailer.

Format:

{MAC:<authentication-result>}

where <authentication-result> = 8!h

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>8</length>
						<tag>MAC</tag>
					</field>
					<field>
						<name>Proprietary Authentication Code</name>
						<description><![CDATA[The PAC is used within the FIN Copy service only, when using the double authentication option. The PAC is included in Block 5 of FIN user-to-user messages, immediately after the MAC trailer, if present.

This is calculated on the extracted fields of Block 4 of the message, the value of field 115, if present, and the <authentication-result> of the MAC trailer for Copy Services with double authentication.

Thus, the end-of-block indicator (CrLf-) is included in the PAC calculation, and the fields are defined as follows:

The first three characters are CrLf:

The field and the delimiter are present, that is, 32A:, 20:, and so on.

All subfields and their delimiters are present.

Format:

{PAC:[<authentication-result>]}

where <authentication-result> is mandatory on input messages only and <authentication-result> = 8!h

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>8</length>
						<tag>PAC</tag>
					</field>
					<field>
						<name>Checksum</name>
						<description><![CDATA[The checksum is computed based on the receiver's address (12 characters, with 9th character replaced by X) plus the Text Block. This trailer allows the system and the CBT to check that messages have not been corrupted due to a system malfunction or an undetected transmission error.

Format:

{CHK:<checksum-result>}

where <checksum-result> = 12!h

Note: This trailer is mandatory for FIN and GPA messages (Service Identifier 01).

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>12</length>
						<tag>CHK</tag>
					</field>
					<field>
						<name>System Originated Message</name>
						<description><![CDATA[The system message or service message which is generated by a system PLT has a SYS trailer. All solicited system messages (Service Identifier 01) contain the MIR of the request and may also contain the time.

Format:

{SYS:[<time><mir>]}

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>SYS</tag>
					</field>
					<field>
						<name>Test And Training Message</name>
						<description><![CDATA[Mandatory for FIN and GPA messages (Service Identifier 01) sent by, or delivered to, a Test & Training Logical Terminal (LT). This trailer has a tag only, and no value.

Format:

{TNG:}
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>0</length>
						<tag>TNG</tag>
					</field>
					<field>
						<name>Possible Duplicate Emission</name>
						<description><![CDATA[This trailer is used by the destination of the message. It only applies to FIN user-to-user messages (Service Identifier 01, message categories reserved for banking messages). There can be multiple PDEs. The system does not verify the order nor restrict the number (except for maximum message length).

Correctly formatted PDE trailers applied to user-to-system messages are accepted by the system, but not processed. This means that the system does not check to see if the original message exists. Therefore, a retrieval request sent with a PDE trailer may be processed twice if the original message was received by the system.

Format:

{PDE:[<time><mir>]}

where <time><mir> refers to the emission of the previous possible issue.

Note: It can be added automatically by a CBT or manually by a user. It may be followed by the MIR and the time of its previous possible messages.

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>PDE</tag>
					</field>
					<field>
						<name>Delayed Message</name>
						<description><![CDATA[This trailer is added to all FIN user-to-user output messages that have exceeded their obsolescence period. If this trailer appears in GPA or FIN system messages, it must be ignored. This trailer has a tag only, and no value.

The Obsolescence Period is:

U = 15 minutes

N = 100 minutes

Format:

{DLM:}

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>0</length>
						<tag>DLM</tag>
					</field>
					<field>
						<name>Possible Duplicate Message</name>
						<description><![CDATA[Added by the system to any output message (GPA and FIN Service Identifier 01) being resent because a prior delivery may be invalid. If a system PLT receives a report request with a PDM, the response has a plain PDM (without the optional delivery reference). Other PDMs may be added as a result of unsuccessful delivery attempts to the user. 
Format:
{PDM:[<time><mor>]}
where <time> and the Message Output Reference <mor> are that of the previous attempt.
Note: For messages recovered after a system failure, the optional fields may not be present.
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>PDM</tag>
					</field>
					<field>
						<name>Message Reference</name>
						<description><![CDATA[The MRF trailer is used to specify the message reference of the original user message in MT 096 FIN Copy to Central Institution Messages.
Format:
{MRF:<date><full-time><mir>}
where <mir> is that of the original user message whose fields are copied in the MT 096 FIN Copy to Central Institution Message.
Note: The MRF is specific to FIN Copy. The MRF trailer is automatically generated in the MT 096 FIN Copy to Central Institution Message and can only be reused in field 109 of the MT 096 FIN Copy to Central Institution Message to identify the MT 096 to which the MT 097 is a response. The format of the MRF is subject to change.
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>MRF</tag>
					</field>
				</fields>
			</Trailer>
		</SwiftFields>
		<validationrules name="Default">
			<hdrvalidationrules>
				<fieldvalidations>
					<fieldvalidation>
						<name>U09</name>
						<formula><![CDATA[if($this.Header.GetFieldIndex("User_Header") != -1) {
    def userHeader = $this.Header.GetSection("User_Header");
    if(userHeader.$size > 0 && userHeader[0].IsNotNull("Validation_Flag")) {
        return false;
    }
}
return true;
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U09</error-code>
						<actionmessage><![CDATA["User has used tag 119 in a message that is not a candidate for special processing"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>U03</name>
						<fieldname>User Header</fieldname>
						<formula><![CDATA[Iff(IsNotNull(User_Header.Service_Type_Identifier), 
    IsNotNull(User_Header.Unique_End_To_End_Transaction_Reference))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U03</error-code>
						<actionmessage><![CDATA["When populating an end-to-end reference, both fields 111 and 121 must be populated: a message that contains only one of these two fields will not be accepted by FIN."]]></actionmessage>
					</fieldvalidation>
				</fieldvalidations>
			</hdrvalidationrules>
			<datavalidationrules>
				<fieldvalidations>
					<fieldvalidation>
						<name>ERI</name>
						<fieldname>72.Narrative</fieldname>
						<formula><![CDATA[ApplyERICodeValidationStructured($value);]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T47</error-code>
						<actionmessage><![CDATA["In an ERI field (i.e. fields 61, 72, 77A, 79, 86) the data part of a code word /OCMT/, or /CHGS/, is being validated, but the ending separator (i.e. third slash) is missing or the code words are duplicated."]]></actionmessage>
					</fieldvalidation>
				</fieldvalidations>
			</datavalidationrules>
			<tlrvalidationrules>
				<fieldvalidations>
				</fieldvalidations>
			</tlrvalidationrules>
		</validationrules>
		<elementproperties>
			<propertymap>
			</propertymap>
		</elementproperties>
	</externalmessage>
	<externalmessage xsi:type="SwiftFormat" type="SwiftFormat" version="5.1.2" rulename="MT291_2016" formattype="SwiftFormat" >
		<description><![CDATA[This message type is sent by a financial institution to another financial institution.

It is used to request the payment of charges, interest and/or other expenses which are previously unknown to the Receiver.]]></description>
		<standard>SWIFT</standard>
		<standard-name>MT291</standard-name>
		<standard-version>SRG 2016</standard-version>
		<standard-release-qualifier>20160308</standard-release-qualifier>
		<standard-category>Financial Institution Transfers</standard-category>
		<standard-detailed-name>Request for Payment of Charges, Interest and Other Expenses</standard-detailed-name>
		<version>1.0</version>
		<SwiftFields>
			<customizable>true</customizable>
			<modifiable>false</modifiable>
			<SwiftMessageType>User</SwiftMessageType>
			<max-length>2000</max-length>
			<HeaderAndTrailerType>SWIFT_INPUT_OUTPUT_HEADER</HeaderAndTrailerType>
			<Header>
				<fields>
					<field>
						<name>Basic Header</name>
						<description><![CDATA[The Basic Header is given in Block 1 of a SWIFT message and is the only header that appears on all messages. The Basic Header provides the fundamental reference for any particular message and is almost always automatically built by the CBT.
The Basic Header has the same format for both input and output messages. However, the information contained in the Basic Header is relative to the sender when the message is input but relative to the receiver when the same message is output.]]></description>
						<datatype>Section</datatype>
						<required>true</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Application Identifier</name>
								<description><![CDATA[The Application Identifier identifies the application within which the message is being sent or received. The available options are:

F = FIN All user-to-user, FIN system and FIN service messages 
A = GPA Most GPA system and service messages 
L = GPA Certain GPA service messages, for example, LOGIN, LAKs, ABORT 

These values are automatically assigned by the SWIFT system and the user's CBT, but the user should be aware of their existence and significance
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Service Identifier</name>
								<description><![CDATA[The Service Identifier consists of 2 numeric characters. It identifies the type of data that is being sent or received and, in doing so, whether the message which follows is one of the following:

a user-to-user message

a system message

a service message, for example, a session control command, such as SELECT, or a logical acknowledgement, such as ACK/SAK/UAK

Users will be primarily concerned with identifier '01' which applies to all GPA and FIN system and user-to-user messages. Other values include: '21' for message acknowledgements such as ACK/NAK, UAK/UNK, '03' for SELECT commands, and 
so on]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>2</length>
							</field>
							<field>
								<name>LT Identifier</name>
								<description><![CDATA[This 12-character SWIFT address, given in the Basic Header Block, is the address of the sending LT for input messages or of the receiving LT for output messages, and includes the Branch Code.

In the Basic Header, the LT Code within the LT Identifier is specific to the LT that has established the session in which the message is being transmitted, that is the sending LT for input messages or the receiving LT for output messages.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>12</length>
							</field>
							<field>
								<name>Session Number</name>
								<description><![CDATA[The Session Number identifies the session in which the message was transmitted. Within the Basic Header, the 4-digit Session Number is the user's current GPA or FIN Session Number.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Sequence Number</name>
								<description><![CDATA[The sequence number always consists of 6 digits. It is the ISN of the sender's current input session or the OSN of the receiver's current output session.

Note: The sequence number is not present in those messages with an Application Identifier of 'L' (for example LOGIN). The sequence number is, however, a key element in the processing of retrievals. Therefore, LOGINs and attempted LOGINs are not retrievable
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>6</length>
							</field>
						</fields>
					</field>
					<field>
						<name>Application Header Input</name>
						<description><![CDATA[The Application Header of a SWIFT message provides information about the message itself.

The Application Header is given in Block 2 of a SWIFT message. It differs according to whether the message is a GPA or a FIN message and whether the Application Header is part of an input or an output message.

]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Input/Output Identifier</name>
								<description><![CDATA[For an input message, the Input/Output Identifier consists of the single letter 'I'.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Message Type</name>
								<description><![CDATA[The Message Type consists of 3 digits which define the MT number of the message being input. The example used above is for an MT 100 Customer Transfer]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>3</length>
							</field>
							<field>
								<name>Receiver's Address</name>
								<description><![CDATA[This address is the 12-character SWIFT address of the receiver of the message, but with a LT Code of 'X'. It defines the destination to which the message should be sent.

The system will replace the 'X' with a specific LT Code on delivery of the message according to the delivery control exercised by the receiving user.

The Branch Code is mandatory and will be validated. The default of 'XXX' may be used, as in the example above.

Unless otherwise documented, system messages addressed to the SWIFT system itself should be addressed to SWFTXXXXXXXX.

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>12</length>
							</field>
							<field>
								<name>Message Priority</name>
								<description><![CDATA[This character, used within FIN Application Headers only, defines the priority with which a message is delivered. The possible values are:

S = System

U = Urgent

N = Normal

Message Priority 'S' must be used for user-to-system messages; for user-to-user messages either 'U' or 'N' can be used. In the absence of user-specified delivery criteria, system messages are always delivered first, followed by urgent priority messages and then normal priority messages.

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Delivery Monitoring</name>
								<description><![CDATA[Delivery monitoring options apply only to FIN user-to-user messages, and allow the sender of a message to request:

automatic MT 011 Delivery Notification once the message has been delivered

automatic MT 010 Non-Delivery Warning if a message is not delivered within the specified obsolescence period (see below)

both, or neither, options. This may be requested on an individual message basis.

The chosen option is expressed as a single digit:

1 = Non-Delivery Warning

2 = Delivery Notification

3 = Non-Delivery Warning and Delivery Notification. 
If the message has priority 'U' then the user must request delivery monitoring option '1' or '3'. If the message has priority 'N', the user can request delivery monitoring option '2', or, by leaving the option blank, no delivery monitoring.
]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>1</length>
							</field>
							<field>
								<name>Obsolescence Period</name>
								<description><![CDATA[The obsolescence period defines the period of time after which a Delayed Message (DLM) trailer is added to a FIN user-to-user message when the message is delivered. For urgent priority messages, it is also the period of time after which, if the message remains undelivered, a Non-Delivery Warning is generated.

The values for the obsolescence period are 003 (15 minutes) for 'U' priority, and 020 (100 minutes) for 'N' priority. An obsolescence period can only be specified when delivery monitoring has been requested (option 1 or 3 for urgent priority messages, option 2 for normal priority messages). If no delivery monitoring has been requested, and an obsolescence period is specified, the message will be NAKed with error code H25.

GPA input Application Headers are similar to their FIN equivalents except that GPA messages do not specify priority, delivery monitoring, nor obsolescence period.

]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>3</length>
							</field>
						</fields>
					</field>
					<field>
						<name>Application Header Output</name>
						<description><![CDATA[The Application Header of a SWIFT message provides information about the message itself.

The Application Header is given in Block 2 of a SWIFT message. It differs according to whether the message is a GPA or a FIN message and whether the Application Header is part of an input or an output message.

]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Input/Output Identifier</name>
								<description><![CDATA[For an input message, the Input/Output Identifier consists of the single letter 'I'.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Message Type</name>
								<description><![CDATA[Three digits indicating the Message Type.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>3</length>
							</field>
							<field>
								<name>Input Time</name>
								<description><![CDATA[The first occurrence of the time field contains the system time and date. This is the generation time in Greenwich Mean Time (GMT).
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Message Input Reference</name>
								<description><![CDATA[The input MIR.

If the message is generated by the system, the input time is the generation time (in GMT) and the input MIR is the system MIR

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>28</length>
							</field>
							<field>
								<name>Output Date</name>
								<description><![CDATA[The output date, local to the receiver.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>6</length>
							</field>
							<field>
								<name>Output Time</name>
								<description><![CDATA[The second occurrence of the time field contains the output time and date. This is in a time local to the receiver.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Message Priority</name>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
						</fields>
					</field>
					<field>
						<name>User Header</name>
						<description><![CDATA[The User Header is an optional header available within FIN for user-to-user messages only. It appears in Block 3 of a SWIFT message, and allows users to provide their own reference within the headers for a particular message.

A User Header can only be assigned by the sender of a message and, if assigned, will always appear on the output message copy. Relevant parts of the User Header will be repeated in related system messages and acknowledgements.

Block 3 may contain tag 113, defining banking priorities, and tag 108, which is a user reference. The user reference part of the User Header may be used as one of the selection criteria when retrieving a message.

The optional field tags 103 and 115 are also used in Block 3 for the FIN Copy service. The order of tags, when present, is 103, 113, 108 and 115.

An optional field tag 119 can be included in Block 3 of certain messages to specify that different validation rules are to be applied. Agreed code words in field 119 indicate what validation rules SWIFT will apply. If field 119 is present, it should appear after field 108
]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Service Identifier</name>
								<description><![CDATA[For any message which the user submits to a FIN Copy service, Block 3 requires an additional field 103 which contains a three-character Service Identifier unique to a specific FIN Copy service. By using a unique identifier it is possible to support access to multiple services within the same CBT.
]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>3</length>
								<tag>103</tag>
							</field>
							<field>
								<name>Banking Priority</name>
								<description><![CDATA[Assigned by the sender of the message.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>4</length>
								<tag>113</tag>
							</field>
							<field>
								<name>Message User Reference</name>
								<description><![CDATA[Assigned by the sender of the message.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>16</length>
								<tag>108</tag>
							</field>
							<field>
								<name>Validation Flag</name>
								<description><![CDATA[Indicates whether a special validation needs to be performed by FIN. The following are examples of the values this field may take. Please note that this list is subject to change:

ISITC indicates validation of ISITC Standards. Only to be used with MT 521 and MT 523.

REMIT identifies the presence of field 77T. Only to be used in MT 103.

RFDD indicates that the message is a request for direct debit. Only to be used in MT 104.

STP indicates that the message is validated according to straight through processing principles. Only to be used in MT 103.

]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>119</tag>
							</field>
							<field>
								<name>Balance checkpoint date and time</name>
								<description><![CDATA[This field contains the balance checkpoint date and time consisting of a date (YYMMDD) and a time (HHMMSS[ss], where 'ss' indicates hundredths of a second). The MI that is subscribed to MIRS will always copy this reference from field tag 13G of the last MT298/091 that it sent into the related MT 298/093 or MT 097 that it generates. ]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>423</tag>
							</field>
							<field>
								<name>Message Input Reference</name>
								<description><![CDATA[This field contains the MIR of the payment message that is related to the notification messages in which this field is present. The MI that is subscribed to MIRS will copy it from the received payment message. In a FINCopy scenario, this field must contain the MIR of the related MT 096]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>106</tag>
							</field>
							<field>
								<name>Related Reference</name>
								<description><![CDATA[This field contains the reference of the payment that is related to the notification messages in which this field is present. The payment itself was not the result of a FIN message. The value of this field must correspond to the related reference (field 21) in the MT298/093. The format of field 424 is 16x.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>424</tag>
							</field>
							<field>
								<name>Service Type Identifier</name>
								<description><![CDATA[This field identifies the applicable global payment service type. The format of field 111 is 3!n.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>111</tag>
							</field>
							<field>
								<name>Unique End-To-End Transaction Reference</name>
								<description><![CDATA[This field provides an end-to-end reference across a payment transaction. The format of field 121 is 36!x.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>121</tag>
							</field>
							<field>
								<name>Addressee Information</name>
								<description><![CDATA[Tag 115 is only valid for output messages. Information from Central Institution to the receiver of payment message. Information is input in the MT 097 FIN Copy Message Authorisation/Refusal Notification in Y-Copy mode.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>115</tag>
							</field>
							<field>
								<name>Payment Release Information Receiver (FINInform Services)</name>
								<description><![CDATA[Tag 165 is only valid for output messages. This field contains information from the server destination to the receiver of payment message. It is only available for use in FINInform services that operate in Y-copy mode.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>165</tag>
							</field>
							<field>
								<name>Receiver Information</name>
								<description><![CDATA[Tag 433 is only valid for output messages. The screening service inputs information in the MT 097 FINCopy Message Authorisation/Refusal Notification, in Y-Copy mode. FINCopy copies the information to the receiver of the screened message.
				    The following values can be present in this field:
				      AOK: message automatically released by screening service
				      FPO: compliance officer has flagged the screening result as false positive
				      NOK: compliance officer has flagged the screened message as suspect
				    The code word can optionally be followed by additional information (up to 20 characters from the x character set).]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>433</tag>
							</field>
						</fields>
					</field>
				</fields>
			</Header>
			<Data>
				<Fields>
					<SwiftField Name="20">
						<SwiftFieldDef Name="20">
							<Generic>false</Generic>
							<Description><![CDATA[Reference]]></Description>
							<Option Name="">
								<Format><![CDATA[16x]]></Format>
								<Specification><![CDATA[(Reference)]]></Specification>
								<Description><![CDATA[Transaction Reference Number]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options> </Options>
						<Validations>
							<SubField Name="Reference">
								<Validation>
									<Options> </Options>
									<ErrorCode>T26</ErrorCode>
									<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive slashes '//'  (Error code(s): T26).]]></Comment>
									<ValidationPattern xsi:type="T26" Type="T26">
										<Type>T26</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="21">
						<SwiftFieldDef Name="21">
							<Generic>false</Generic>
							<Option Name="">
								<Format><![CDATA[16x]]></Format>
								<Specification><![CDATA[(Reference)]]></Specification>
								<Description><![CDATA[Related Reference]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options> </Options>
						<Validations>
							<SubField Name="Reference">
								<Validation>
									<Options> </Options>
									<ErrorCode>T26</ErrorCode>
									<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive slashes '//'  (Error code(s): T26).]]></Comment>
									<ValidationPattern xsi:type="T26" Type="T26">
										<Type>T26</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="32B">
						<SwiftFieldDef Name="32">
							<Generic>false</Generic>
							<Option Name="B">
								<Format><![CDATA[3!a15d]]></Format>
								<Specification><![CDATA[(Currency)(Amount)]]></Specification>
								<Description><![CDATA[Currency Code, Amount]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options>B</Options>
						<Validations>
							<SubField Name="Currency">
								<Validation>
									<Options>B</Options>
									<ErrorCode>T52</ErrorCode>
									<Comment><![CDATA[Currency must be a valid ISO 4217 currency code (Error code(s): T52).]]></Comment>
									<ValidationPattern xsi:type="Currency_Code" Type="Currency Code">
										<Type>Currency Code</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="Amount">
								<Validation>
									<Options>B</Options>
									<ErrorCode>C03</ErrorCode>
									<Comment><![CDATA[The number of digits following the comma must not exceed the maximum number allowed for the specified currency.]]></Comment>
									<ValidationPattern xsi:type="Decimal" Type="Decimal">
										<Type>Decimal</Type>
										<currency-field>Currency</currency-field>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="52a">
						<SwiftFieldDef Name="52">
							<Generic>false</Generic>
							<Option Name="A">
								<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
								<Description><![CDATA[Ordering Institution]]></Description>
							</Option>
							<Option Name="D">
								<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
								<Description><![CDATA[Ordering Institution]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options>A, D</Options>
						<Validations>
							<SubField Name="Identifier_Code">
								<Validation>
									<Options>A</Options>
									<ErrorCode>T27, T28, T29, T45</ErrorCode>
									<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
									<ValidationPattern xsi:type="BIC" Type="BIC">
										<Type>BIC</Type>
									</ValidationPattern>
								</Validation>
								<Validation>
									<Options>A</Options>
									<ErrorCode>C05</ErrorCode>
									<Comment><![CDATA[Identifier Code must not be a BEI, ie must not be of subtype BEID, MCCO, TESP or TRCO]]></Comment>
									<ValidationPattern xsi:type="C05" Type="C05">
										<Type>C05</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="CreditDebit">
								<Validation>
									<Options>A, D</Options>
									<ErrorCode>T51</ErrorCode>
									<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
									<ValidationPattern xsi:type="CODE" Type="CODE">
										<Type>CODE</Type>
										<Codes>
											<Code Name="C">
												<DetailedName>Credit</DetailedName>
											</Code>
											<Code Name="D">
												<DetailedName>Debit</DetailedName>
											</Code>
										</Codes>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="57a">
						<SwiftFieldDef Name="57">
							<Generic>false</Generic>
							<Option Name="A">
								<Format><![CDATA[/1!a([/34x])(CRLF4!a2!a2!c[3!c]) | [/34xCRLF](4!a2!a2!c[3!c])]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Identifier Code) | (Party Identifier)(Identifier Code)]]></Specification>
								<Description><![CDATA[Account With Institution]]></Description>
							</Option>
							<Option Name="B">
								<Format><![CDATA[/1!a[/34x](CRLF35x) | /1!a[/34x] | [/34xCRLF]35x | /34x]]></Format>
								<Specification><![CDATA[(CreditDebit) (Party Identifier) (Location) | (CreditDebit)(Party Identifier) |(Party Identifier) (Location) | (Party Identifier)]]></Specification>
								<Description><![CDATA[Account With Institution]]></Description>
							</Option>
							<Option Name="D">
								<Format><![CDATA[/1!a([/34x])(CRLF4*35x) | ([/34xCRLF])(4*35x)]]></Format>
								<Specification><![CDATA[(CreditDebit)(Party Identifier)(Name & Address)|(Party Identifier)(Name & Address)]]></Specification>
								<Description><![CDATA[Account With Institution]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options>A, B, D</Options>
						<Validations>
							<SubField Name="Identifier_Code">
								<Validation>
									<Options>A</Options>
									<ErrorCode>T27, T28, T29, T45</ErrorCode>
									<Comment><![CDATA[Identifier Code must be a registered BIC or BEI (Error code(s): T27,T28,T29,T45)]]></Comment>
									<ValidationPattern xsi:type="BIC" Type="BIC">
										<Type>BIC</Type>
									</ValidationPattern>
								</Validation>
								<Validation>
									<Options>A</Options>
									<ErrorCode>C05</ErrorCode>
									<Comment><![CDATA[Identifier Code must not be a BEI, ie must not be of subtype BEID, MCCO, TESP or TRCO]]></Comment>
									<ValidationPattern xsi:type="C05" Type="C05">
										<Type>C05</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
							<SubField Name="CreditDebit">
								<Validation>
									<Options>A, B, D</Options>
									<ErrorCode>T51</ErrorCode>
									<Comment><![CDATA[CreditDebit must contain the following codes (Error Code:T51)]]></Comment>
									<ValidationPattern xsi:type="CODE" Type="CODE">
										<Type>CODE</Type>
										<Codes>
											<Code Name="C">
												<DetailedName>Credit</DetailedName>
											</Code>
											<Code Name="D">
												<DetailedName>Debit</DetailedName>
											</Code>
										</Codes>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="71B">
						<SwiftFieldDef Name="71">
							<Generic>false</Generic>
							<Option Name="B">
								<Format><![CDATA[6*35x]]></Format>
								<Specification><![CDATA[(Narrative)]]></Specification>
								<Description><![CDATA[Details of Charges]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options>B</Options>
					</SwiftField>
					<SwiftField Name="72">
						<SwiftFieldDef Name="72">
							<Generic>false</Generic>
							<Option Name="">
								<Format><![CDATA[6*35x]]></Format>
								<Specification><![CDATA[(Narrative)]]></Specification>
								<Description><![CDATA[Sender to Receiver Information]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options> </Options>
					</SwiftField>
				</Fields>
			</Data>
			<Trailer>
				<fields>
					<field>
						<name>Message Authentication Code</name>
						<description><![CDATA[Allows authentication by the receiving user. It is followed by an authentication result.

This trailer is mandatory for most user-to-user message categories within the FIN application. When the FIN Copy Service is used a PAC trailer, if present, follows the MAC trailer.

Format:

{MAC:<authentication-result>}

where <authentication-result> = 8!h

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>8</length>
						<tag>MAC</tag>
					</field>
					<field>
						<name>Proprietary Authentication Code</name>
						<description><![CDATA[The PAC is used within the FIN Copy service only, when using the double authentication option. The PAC is included in Block 5 of FIN user-to-user messages, immediately after the MAC trailer, if present.

This is calculated on the extracted fields of Block 4 of the message, the value of field 115, if present, and the <authentication-result> of the MAC trailer for Copy Services with double authentication.

Thus, the end-of-block indicator (CrLf-) is included in the PAC calculation, and the fields are defined as follows:

The first three characters are CrLf:

The field and the delimiter are present, that is, 32A:, 20:, and so on.

All subfields and their delimiters are present.

Format:

{PAC:[<authentication-result>]}

where <authentication-result> is mandatory on input messages only and <authentication-result> = 8!h

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>8</length>
						<tag>PAC</tag>
					</field>
					<field>
						<name>Checksum</name>
						<description><![CDATA[The checksum is computed based on the receiver's address (12 characters, with 9th character replaced by X) plus the Text Block. This trailer allows the system and the CBT to check that messages have not been corrupted due to a system malfunction or an undetected transmission error.

Format:

{CHK:<checksum-result>}

where <checksum-result> = 12!h

Note: This trailer is mandatory for FIN and GPA messages (Service Identifier 01).

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>12</length>
						<tag>CHK</tag>
					</field>
					<field>
						<name>System Originated Message</name>
						<description><![CDATA[The system message or service message which is generated by a system PLT has a SYS trailer. All solicited system messages (Service Identifier 01) contain the MIR of the request and may also contain the time.

Format:

{SYS:[<time><mir>]}

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>SYS</tag>
					</field>
					<field>
						<name>Test And Training Message</name>
						<description><![CDATA[Mandatory for FIN and GPA messages (Service Identifier 01) sent by, or delivered to, a Test & Training Logical Terminal (LT). This trailer has a tag only, and no value.

Format:

{TNG:}
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>0</length>
						<tag>TNG</tag>
					</field>
					<field>
						<name>Possible Duplicate Emission</name>
						<description><![CDATA[This trailer is used by the destination of the message. It only applies to FIN user-to-user messages (Service Identifier 01, message categories reserved for banking messages). There can be multiple PDEs. The system does not verify the order nor restrict the number (except for maximum message length).

Correctly formatted PDE trailers applied to user-to-system messages are accepted by the system, but not processed. This means that the system does not check to see if the original message exists. Therefore, a retrieval request sent with a PDE trailer may be processed twice if the original message was received by the system.

Format:

{PDE:[<time><mir>]}

where <time><mir> refers to the emission of the previous possible issue.

Note: It can be added automatically by a CBT or manually by a user. It may be followed by the MIR and the time of its previous possible messages.

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>PDE</tag>
					</field>
					<field>
						<name>Delayed Message</name>
						<description><![CDATA[This trailer is added to all FIN user-to-user output messages that have exceeded their obsolescence period. If this trailer appears in GPA or FIN system messages, it must be ignored. This trailer has a tag only, and no value.

The Obsolescence Period is:

U = 15 minutes

N = 100 minutes

Format:

{DLM:}

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>0</length>
						<tag>DLM</tag>
					</field>
					<field>
						<name>Possible Duplicate Message</name>
						<description><![CDATA[Added by the system to any output message (GPA and FIN Service Identifier 01) being resent because a prior delivery may be invalid. If a system PLT receives a report request with a PDM, the response has a plain PDM (without the optional delivery reference). Other PDMs may be added as a result of unsuccessful delivery attempts to the user. 
Format:
{PDM:[<time><mor>]}
where <time> and the Message Output Reference <mor> are that of the previous attempt.
Note: For messages recovered after a system failure, the optional fields may not be present.
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>PDM</tag>
					</field>
					<field>
						<name>Message Reference</name>
						<description><![CDATA[The MRF trailer is used to specify the message reference of the original user message in MT 096 FIN Copy to Central Institution Messages.
Format:
{MRF:<date><full-time><mir>}
where <mir> is that of the original user message whose fields are copied in the MT 096 FIN Copy to Central Institution Message.
Note: The MRF is specific to FIN Copy. The MRF trailer is automatically generated in the MT 096 FIN Copy to Central Institution Message and can only be reused in field 109 of the MT 096 FIN Copy to Central Institution Message to identify the MT 096 to which the MT 097 is a response. The format of the MRF is subject to change.
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>MRF</tag>
					</field>
				</fields>
			</Trailer>
		</SwiftFields>
		<validationrules name="Default">
			<hdrvalidationrules>
				<fieldvalidations>
					<fieldvalidation>
						<name>U09</name>
						<formula><![CDATA[if($this.Header.GetFieldIndex("User_Header") != -1) {
    def userHeader = $this.Header.GetSection("User_Header");
    if(userHeader.$size > 0 && userHeader[0].IsNotNull("Validation_Flag")) {
        return false;
    }
}
return true;
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U09</error-code>
						<actionmessage><![CDATA["User has used tag 119 in a message that is not a candidate for special processing"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>U03</name>
						<fieldname>User Header</fieldname>
						<formula><![CDATA[Iff(IsNotNull(User_Header.Service_Type_Identifier), 
    IsNotNull(User_Header.Unique_End_To_End_Transaction_Reference))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U03</error-code>
						<actionmessage><![CDATA["When populating an end-to-end reference, both fields 111 and 121 must be populated: a message that contains only one of these two fields will not be accepted by FIN."]]></actionmessage>
					</fieldvalidation>
				</fieldvalidations>
			</hdrvalidationrules>
			<datavalidationrules>
				<fieldvalidations>
					<fieldvalidation>
						<name>ERI</name>
						<fieldname>72.Narrative</fieldname>
						<formula><![CDATA[ApplyERICodeValidationStructured($value);]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T47</error-code>
						<actionmessage><![CDATA["In an ERI field (i.e. fields 61, 72, 77A, 79, 86) the data part of a code word /OCMT/, or /CHGS/, is being validated, but the ending separator (i.e. third slash) is missing or the code words are duplicated."]]></actionmessage>
					</fieldvalidation>
				</fieldvalidations>
			</datavalidationrules>
			<tlrvalidationrules>
				<fieldvalidations>
				</fieldvalidations>
			</tlrvalidationrules>
		</validationrules>
		<elementproperties>
			<propertymap>
			</propertymap>
		</elementproperties>
	</externalmessage>
	<externalmessage xsi:type="SwiftFormat" type="SwiftFormat" version="5.1.2" rulename="MT292_2016" formattype="SwiftFormat" >
		<description><![CDATA[This message is: 

a) sent by a financial institution to request a second financial institution to consider cancellation of the SWIFT message identified in the request. 

b) sent by a corporate customer to request a financial institution to consider cancellation of the SWIFT message identified in the request. 

If the Receiver of the request for cancellation has already acted on the message for which cancellation is requested, the MT n92 asks for a retransfer, that is, reversal, with the beneficiary's consent.

]]></description>
		<standard>SWIFT</standard>
		<standard-name>MT292</standard-name>
		<standard-version>SRG 2016</standard-version>
		<standard-release-qualifier>20160308</standard-release-qualifier>
		<standard-category>Financial Institution Transfers</standard-category>
		<standard-detailed-name>Request for Cancellation</standard-detailed-name>
		<version>1.0</version>
		<SwiftFields>
			<customizable>true</customizable>
			<modifiable>false</modifiable>
			<SwiftMessageType>User</SwiftMessageType>
			<max-length>2000</max-length>
			<HeaderAndTrailerType>SWIFT_INPUT_OUTPUT_HEADER</HeaderAndTrailerType>
			<Header>
				<fields>
					<field>
						<name>Basic Header</name>
						<description><![CDATA[The Basic Header is given in Block 1 of a SWIFT message and is the only header that appears on all messages. The Basic Header provides the fundamental reference for any particular message and is almost always automatically built by the CBT.
The Basic Header has the same format for both input and output messages. However, the information contained in the Basic Header is relative to the sender when the message is input but relative to the receiver when the same message is output.]]></description>
						<datatype>Section</datatype>
						<required>true</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Application Identifier</name>
								<description><![CDATA[The Application Identifier identifies the application within which the message is being sent or received. The available options are:

F = FIN All user-to-user, FIN system and FIN service messages 
A = GPA Most GPA system and service messages 
L = GPA Certain GPA service messages, for example, LOGIN, LAKs, ABORT 

These values are automatically assigned by the SWIFT system and the user's CBT, but the user should be aware of their existence and significance
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Service Identifier</name>
								<description><![CDATA[The Service Identifier consists of 2 numeric characters. It identifies the type of data that is being sent or received and, in doing so, whether the message which follows is one of the following:

a user-to-user message

a system message

a service message, for example, a session control command, such as SELECT, or a logical acknowledgement, such as ACK/SAK/UAK

Users will be primarily concerned with identifier '01' which applies to all GPA and FIN system and user-to-user messages. Other values include: '21' for message acknowledgements such as ACK/NAK, UAK/UNK, '03' for SELECT commands, and 
so on]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>2</length>
							</field>
							<field>
								<name>LT Identifier</name>
								<description><![CDATA[This 12-character SWIFT address, given in the Basic Header Block, is the address of the sending LT for input messages or of the receiving LT for output messages, and includes the Branch Code.

In the Basic Header, the LT Code within the LT Identifier is specific to the LT that has established the session in which the message is being transmitted, that is the sending LT for input messages or the receiving LT for output messages.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>12</length>
							</field>
							<field>
								<name>Session Number</name>
								<description><![CDATA[The Session Number identifies the session in which the message was transmitted. Within the Basic Header, the 4-digit Session Number is the user's current GPA or FIN Session Number.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Sequence Number</name>
								<description><![CDATA[The sequence number always consists of 6 digits. It is the ISN of the sender's current input session or the OSN of the receiver's current output session.

Note: The sequence number is not present in those messages with an Application Identifier of 'L' (for example LOGIN). The sequence number is, however, a key element in the processing of retrievals. Therefore, LOGINs and attempted LOGINs are not retrievable
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>6</length>
							</field>
						</fields>
					</field>
					<field>
						<name>Application Header Input</name>
						<description><![CDATA[The Application Header of a SWIFT message provides information about the message itself.

The Application Header is given in Block 2 of a SWIFT message. It differs according to whether the message is a GPA or a FIN message and whether the Application Header is part of an input or an output message.

]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Input/Output Identifier</name>
								<description><![CDATA[For an input message, the Input/Output Identifier consists of the single letter 'I'.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Message Type</name>
								<description><![CDATA[The Message Type consists of 3 digits which define the MT number of the message being input. The example used above is for an MT 100 Customer Transfer]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>3</length>
							</field>
							<field>
								<name>Receiver's Address</name>
								<description><![CDATA[This address is the 12-character SWIFT address of the receiver of the message, but with a LT Code of 'X'. It defines the destination to which the message should be sent.

The system will replace the 'X' with a specific LT Code on delivery of the message according to the delivery control exercised by the receiving user.

The Branch Code is mandatory and will be validated. The default of 'XXX' may be used, as in the example above.

Unless otherwise documented, system messages addressed to the SWIFT system itself should be addressed to SWFTXXXXXXXX.

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>12</length>
							</field>
							<field>
								<name>Message Priority</name>
								<description><![CDATA[This character, used within FIN Application Headers only, defines the priority with which a message is delivered. The possible values are:

S = System

U = Urgent

N = Normal

Message Priority 'S' must be used for user-to-system messages; for user-to-user messages either 'U' or 'N' can be used. In the absence of user-specified delivery criteria, system messages are always delivered first, followed by urgent priority messages and then normal priority messages.

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Delivery Monitoring</name>
								<description><![CDATA[Delivery monitoring options apply only to FIN user-to-user messages, and allow the sender of a message to request:

automatic MT 011 Delivery Notification once the message has been delivered

automatic MT 010 Non-Delivery Warning if a message is not delivered within the specified obsolescence period (see below)

both, or neither, options. This may be requested on an individual message basis.

The chosen option is expressed as a single digit:

1 = Non-Delivery Warning

2 = Delivery Notification

3 = Non-Delivery Warning and Delivery Notification. 
If the message has priority 'U' then the user must request delivery monitoring option '1' or '3'. If the message has priority 'N', the user can request delivery monitoring option '2', or, by leaving the option blank, no delivery monitoring.
]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>1</length>
							</field>
							<field>
								<name>Obsolescence Period</name>
								<description><![CDATA[The obsolescence period defines the period of time after which a Delayed Message (DLM) trailer is added to a FIN user-to-user message when the message is delivered. For urgent priority messages, it is also the period of time after which, if the message remains undelivered, a Non-Delivery Warning is generated.

The values for the obsolescence period are 003 (15 minutes) for 'U' priority, and 020 (100 minutes) for 'N' priority. An obsolescence period can only be specified when delivery monitoring has been requested (option 1 or 3 for urgent priority messages, option 2 for normal priority messages). If no delivery monitoring has been requested, and an obsolescence period is specified, the message will be NAKed with error code H25.

GPA input Application Headers are similar to their FIN equivalents except that GPA messages do not specify priority, delivery monitoring, nor obsolescence period.

]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>3</length>
							</field>
						</fields>
					</field>
					<field>
						<name>Application Header Output</name>
						<description><![CDATA[The Application Header of a SWIFT message provides information about the message itself.

The Application Header is given in Block 2 of a SWIFT message. It differs according to whether the message is a GPA or a FIN message and whether the Application Header is part of an input or an output message.

]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Input/Output Identifier</name>
								<description><![CDATA[For an input message, the Input/Output Identifier consists of the single letter 'I'.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Message Type</name>
								<description><![CDATA[Three digits indicating the Message Type.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>3</length>
							</field>
							<field>
								<name>Input Time</name>
								<description><![CDATA[The first occurrence of the time field contains the system time and date. This is the generation time in Greenwich Mean Time (GMT).
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Message Input Reference</name>
								<description><![CDATA[The input MIR.

If the message is generated by the system, the input time is the generation time (in GMT) and the input MIR is the system MIR

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>28</length>
							</field>
							<field>
								<name>Output Date</name>
								<description><![CDATA[The output date, local to the receiver.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>6</length>
							</field>
							<field>
								<name>Output Time</name>
								<description><![CDATA[The second occurrence of the time field contains the output time and date. This is in a time local to the receiver.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Message Priority</name>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
						</fields>
					</field>
					<field>
						<name>User Header</name>
						<description><![CDATA[The User Header is an optional header available within FIN for user-to-user messages only. It appears in Block 3 of a SWIFT message, and allows users to provide their own reference within the headers for a particular message.

A User Header can only be assigned by the sender of a message and, if assigned, will always appear on the output message copy. Relevant parts of the User Header will be repeated in related system messages and acknowledgements.

Block 3 may contain tag 113, defining banking priorities, and tag 108, which is a user reference. The user reference part of the User Header may be used as one of the selection criteria when retrieving a message.

The optional field tags 103 and 115 are also used in Block 3 for the FIN Copy service. The order of tags, when present, is 103, 113, 108 and 115.

An optional field tag 119 can be included in Block 3 of certain messages to specify that different validation rules are to be applied. Agreed code words in field 119 indicate what validation rules SWIFT will apply. If field 119 is present, it should appear after field 108
]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Service Identifier</name>
								<description><![CDATA[For any message which the user submits to a FIN Copy service, Block 3 requires an additional field 103 which contains a three-character Service Identifier unique to a specific FIN Copy service. By using a unique identifier it is possible to support access to multiple services within the same CBT.
]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>3</length>
								<tag>103</tag>
							</field>
							<field>
								<name>Banking Priority</name>
								<description><![CDATA[Assigned by the sender of the message.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>4</length>
								<tag>113</tag>
							</field>
							<field>
								<name>Message User Reference</name>
								<description><![CDATA[Assigned by the sender of the message.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>16</length>
								<tag>108</tag>
							</field>
							<field>
								<name>Validation Flag</name>
								<description><![CDATA[Indicates whether a special validation needs to be performed by FIN. The following are examples of the values this field may take. Please note that this list is subject to change:

ISITC indicates validation of ISITC Standards. Only to be used with MT 521 and MT 523.

REMIT identifies the presence of field 77T. Only to be used in MT 103.

RFDD indicates that the message is a request for direct debit. Only to be used in MT 104.

STP indicates that the message is validated according to straight through processing principles. Only to be used in MT 103.

]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>119</tag>
							</field>
							<field>
								<name>Balance checkpoint date and time</name>
								<description><![CDATA[This field contains the balance checkpoint date and time consisting of a date (YYMMDD) and a time (HHMMSS[ss], where 'ss' indicates hundredths of a second). The MI that is subscribed to MIRS will always copy this reference from field tag 13G of the last MT298/091 that it sent into the related MT 298/093 or MT 097 that it generates. ]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>423</tag>
							</field>
							<field>
								<name>Message Input Reference</name>
								<description><![CDATA[This field contains the MIR of the payment message that is related to the notification messages in which this field is present. The MI that is subscribed to MIRS will copy it from the received payment message. In a FINCopy scenario, this field must contain the MIR of the related MT 096]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>106</tag>
							</field>
							<field>
								<name>Related Reference</name>
								<description><![CDATA[This field contains the reference of the payment that is related to the notification messages in which this field is present. The payment itself was not the result of a FIN message. The value of this field must correspond to the related reference (field 21) in the MT298/093. The format of field 424 is 16x.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>424</tag>
							</field>
							<field>
								<name>Service Type Identifier</name>
								<description><![CDATA[This field identifies the applicable global payment service type. The format of field 111 is 3!n.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>111</tag>
							</field>
							<field>
								<name>Unique End-To-End Transaction Reference</name>
								<description><![CDATA[This field provides an end-to-end reference across a payment transaction. The format of field 121 is 36!x.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>121</tag>
							</field>
							<field>
								<name>Addressee Information</name>
								<description><![CDATA[Tag 115 is only valid for output messages. Information from Central Institution to the receiver of payment message. Information is input in the MT 097 FIN Copy Message Authorisation/Refusal Notification in Y-Copy mode.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>115</tag>
							</field>
							<field>
								<name>Payment Release Information Receiver (FINInform Services)</name>
								<description><![CDATA[Tag 165 is only valid for output messages. This field contains information from the server destination to the receiver of payment message. It is only available for use in FINInform services that operate in Y-copy mode.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>165</tag>
							</field>
							<field>
								<name>Receiver Information</name>
								<description><![CDATA[Tag 433 is only valid for output messages. The screening service inputs information in the MT 097 FINCopy Message Authorisation/Refusal Notification, in Y-Copy mode. FINCopy copies the information to the receiver of the screened message.
				    The following values can be present in this field:
				      AOK: message automatically released by screening service
				      FPO: compliance officer has flagged the screening result as false positive
				      NOK: compliance officer has flagged the screened message as suspect
				    The code word can optionally be followed by additional information (up to 20 characters from the x character set).]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>433</tag>
							</field>
						</fields>
					</field>
				</fields>
			</Header>
			<Data>
				<Fields>
					<SwiftField Name="20">
						<SwiftFieldDef Name="20">
							<Generic>false</Generic>
							<Description><![CDATA[Reference]]></Description>
							<Option Name="">
								<Format><![CDATA[16x]]></Format>
								<Specification><![CDATA[(Reference)]]></Specification>
								<Description><![CDATA[Transaction Reference Number]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options> </Options>
						<Validations>
							<SubField Name="Reference">
								<Validation>
									<Options> </Options>
									<ErrorCode>T26</ErrorCode>
									<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive slashes '//'(Error code(s): T26).]]></Comment>
									<ValidationPattern xsi:type="T26" Type="T26">
										<Type>T26</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="21">
						<SwiftFieldDef Name="21">
							<Generic>false</Generic>
							<Option Name="">
								<Format><![CDATA[16x]]></Format>
								<Specification><![CDATA[(Reference)]]></Specification>
								<Description><![CDATA[Related Reference]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options> </Options>
						<Validations>
							<SubField Name="Reference">
								<Validation>
									<Options> </Options>
									<ErrorCode>T26</ErrorCode>
									<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive slashes '//'(Error code(s): T26).]]></Comment>
									<ValidationPattern xsi:type="T26" Type="T26">
										<Type>T26</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="11S">
						<SwiftFieldDef Name="11">
							<Generic>false</Generic>
							<Description><![CDATA[Currency]]></Description>
							<Option Name="S">
								<Format><![CDATA[3!nCRLF6!n[CRLF4!n6!n]]]></Format>
								<Specification><![CDATA[(MT Number)(Date)(Session Number) (ISN)]]></Specification>
								<Description><![CDATA[MT and Date of the Original Message]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options>S</Options>
						<Validations>
							<SubField Name="Date">
								<Validation>
									<Options>S</Options>
									<ErrorCode>T50</ErrorCode>
									<Comment><![CDATA[Date must be a valid date expressed as YYMMDD (Error code(s): T50).]]></Comment>
									<ValidationPattern xsi:type="DATE" Type="DATE">
										<Type>DATE</Type>
										<Format>yyMMdd</Format>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="79">
						<SwiftFieldDef Name="79">
							<Generic>false</Generic>
							<Option Name="">
								<Format><![CDATA[35*50x]]></Format>
								<Specification><![CDATA[(Narrative)]]></Specification>
								<Description><![CDATA[Narrative Description of the Original Message]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options> </Options>
					</SwiftField>
					<CopyOfFields Name="Copy Of Fields">
						<Description><![CDATA[Copy of at least the Mandatory Fields of the Original Message]]></Description>
						<Mandatory>false</Mandatory>
					</CopyOfFields>
				</Fields>
			</Data>
			<Trailer>
				<fields>
					<field>
						<name>Message Authentication Code</name>
						<description><![CDATA[Allows authentication by the receiving user. It is followed by an authentication result.

This trailer is mandatory for most user-to-user message categories within the FIN application. When the FIN Copy Service is used a PAC trailer, if present, follows the MAC trailer.

Format:

{MAC:<authentication-result>}

where <authentication-result> = 8!h

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>8</length>
						<tag>MAC</tag>
					</field>
					<field>
						<name>Proprietary Authentication Code</name>
						<description><![CDATA[The PAC is used within the FIN Copy service only, when using the double authentication option. The PAC is included in Block 5 of FIN user-to-user messages, immediately after the MAC trailer, if present.

This is calculated on the extracted fields of Block 4 of the message, the value of field 115, if present, and the <authentication-result> of the MAC trailer for Copy Services with double authentication.

Thus, the end-of-block indicator (CrLf-) is included in the PAC calculation, and the fields are defined as follows:

The first three characters are CrLf:

The field and the delimiter are present, that is, 32A:, 20:, and so on.

All subfields and their delimiters are present.

Format:

{PAC:[<authentication-result>]}

where <authentication-result> is mandatory on input messages only and <authentication-result> = 8!h

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>8</length>
						<tag>PAC</tag>
					</field>
					<field>
						<name>Checksum</name>
						<description><![CDATA[The checksum is computed based on the receiver's address (12 characters, with 9th character replaced by X) plus the Text Block. This trailer allows the system and the CBT to check that messages have not been corrupted due to a system malfunction or an undetected transmission error.

Format:

{CHK:<checksum-result>}

where <checksum-result> = 12!h

Note: This trailer is mandatory for FIN and GPA messages (Service Identifier 01).

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>12</length>
						<tag>CHK</tag>
					</field>
					<field>
						<name>System Originated Message</name>
						<description><![CDATA[The system message or service message which is generated by a system PLT has a SYS trailer. All solicited system messages (Service Identifier 01) contain the MIR of the request and may also contain the time.

Format:

{SYS:[<time><mir>]}

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>SYS</tag>
					</field>
					<field>
						<name>Test And Training Message</name>
						<description><![CDATA[Mandatory for FIN and GPA messages (Service Identifier 01) sent by, or delivered to, a Test & Training Logical Terminal (LT). This trailer has a tag only, and no value.

Format:

{TNG:}
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>0</length>
						<tag>TNG</tag>
					</field>
					<field>
						<name>Possible Duplicate Emission</name>
						<description><![CDATA[This trailer is used by the destination of the message. It only applies to FIN user-to-user messages (Service Identifier 01, message categories reserved for banking messages). There can be multiple PDEs. The system does not verify the order nor restrict the number (except for maximum message length).

Correctly formatted PDE trailers applied to user-to-system messages are accepted by the system, but not processed. This means that the system does not check to see if the original message exists. Therefore, a retrieval request sent with a PDE trailer may be processed twice if the original message was received by the system.

Format:

{PDE:[<time><mir>]}

where <time><mir> refers to the emission of the previous possible issue.

Note: It can be added automatically by a CBT or manually by a user. It may be followed by the MIR and the time of its previous possible messages.

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>PDE</tag>
					</field>
					<field>
						<name>Delayed Message</name>
						<description><![CDATA[This trailer is added to all FIN user-to-user output messages that have exceeded their obsolescence period. If this trailer appears in GPA or FIN system messages, it must be ignored. This trailer has a tag only, and no value.

The Obsolescence Period is:

U = 15 minutes

N = 100 minutes

Format:

{DLM:}

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>0</length>
						<tag>DLM</tag>
					</field>
					<field>
						<name>Possible Duplicate Message</name>
						<description><![CDATA[Added by the system to any output message (GPA and FIN Service Identifier 01) being resent because a prior delivery may be invalid. If a system PLT receives a report request with a PDM, the response has a plain PDM (without the optional delivery reference). Other PDMs may be added as a result of unsuccessful delivery attempts to the user. 
Format:
{PDM:[<time><mor>]}
where <time> and the Message Output Reference <mor> are that of the previous attempt.
Note: For messages recovered after a system failure, the optional fields may not be present.
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>PDM</tag>
					</field>
					<field>
						<name>Message Reference</name>
						<description><![CDATA[The MRF trailer is used to specify the message reference of the original user message in MT 096 FIN Copy to Central Institution Messages.
Format:
{MRF:<date><full-time><mir>}
where <mir> is that of the original user message whose fields are copied in the MT 096 FIN Copy to Central Institution Message.
Note: The MRF is specific to FIN Copy. The MRF trailer is automatically generated in the MT 096 FIN Copy to Central Institution Message and can only be reused in field 109 of the MT 096 FIN Copy to Central Institution Message to identify the MT 096 to which the MT 097 is a response. The format of the MRF is subject to change.
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>MRF</tag>
					</field>
				</fields>
			</Trailer>
		</SwiftFields>
		<validationrules name="Default">
			<hdrvalidationrules>
				<fieldvalidations>
					<fieldvalidation>
						<name>U09</name>
						<formula><![CDATA[if($this.Header.GetFieldIndex("User_Header") != -1) {
    def userHeader = $this.Header.GetSection("User_Header");
    if(userHeader.$size > 0 && userHeader[0].IsNotNull("Validation_Flag")) {
        return false;
    }
}
return true;
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U09</error-code>
						<actionmessage><![CDATA["User has used tag 119 in a message that is not a candidate for special processing"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>U03</name>
						<fieldname>User Header</fieldname>
						<formula><![CDATA[Iff(IsNotNull(User_Header.Service_Type_Identifier), 
    IsNotNull(User_Header.Unique_End_To_End_Transaction_Reference))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U03</error-code>
						<actionmessage><![CDATA["When populating an end-to-end reference, both fields 111 and 121 must be populated: a message that contains only one of these two fields will not be accepted by FIN."]]></actionmessage>
					</fieldvalidation>
				</fieldvalidations>
			</hdrvalidationrules>
			<datavalidationrules>
				<fieldvalidations>
					<fieldvalidation>
						<name>F11S</name>
						<fieldname>11S.MT_Number</fieldname>
						<formula><![CDATA[Between($value, 100, 999)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T18</error-code>
						<actionmessage><![CDATA["In field 11S, MT Number must be a number in the range 100 - 999."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C1</name>
						<formula><![CDATA[If(F79.$size == 0, IsNotNull(Copy_Of_Fields), true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C25</error-code>
						<actionmessage><![CDATA["Either field 79 or a copy of at least the mandatory fields of the original message must be present."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FCP</name>
						<fieldname>Copy Of Fields</fieldname>
						<formula><![CDATA[def ActualValue = replace($value, "\r\n", "\n");
(FindFirst(ActualValue, "\n:77F:") == -1 && 
   FindFirst(ActualValue, "\n:77G:") == -1 && 
   FindFirst(ActualValue, "\n:77S:") == -1 && 
   FindFirst(ActualValue, "\n:77T:") == -1) && 
  (!StartsWith(ActualValue, ":77F:") && 
     !StartsWith(ActualValue, ":77G:") && 
     !StartsWith(ActualValue, ":77S:") && 
     !StartsWith(ActualValue, ":77T:"))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T13</error-code>
						<actionmessage><![CDATA["Tags 77F, 77G, 77S or 77T cannot appear in Copy Of Fields."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>ERI</name>
						<fieldname>79.Narrative</fieldname>
						<formula><![CDATA[ApplyERICodeValidationUnstructured($value);]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T47</error-code>
						<actionmessage><![CDATA["In an ERI field (i.e. fields 61, 72, 77A, 79, 86) the data part of a code word /OCMT/, or /CHGS/, is being validated, but the ending separator (i.e. third slash) is missing or the code words are duplicated."]]></actionmessage>
					</fieldvalidation>
				</fieldvalidations>
			</datavalidationrules>
			<tlrvalidationrules>
				<fieldvalidations>
				</fieldvalidations>
			</tlrvalidationrules>
		</validationrules>
		<elementproperties>
			<propertymap>
			</propertymap>
		</elementproperties>
	</externalmessage>
	<externalmessage xsi:type="SwiftFormat" type="SwiftFormat" version="5.1.2" rulename="MT295_2016" formattype="SwiftFormat" >
		<description><![CDATA[This message type is: 

a) sent by a financial institution to another financial institution. 

b) sent by a corporate customer to a financial institution. 

c) sent by a financial institution to a corporate customer. 

It is used to request information or clarification relating to a previous SWIFT or non-SWIFT message or to one or more transactions contained therein. 

A query may also be sent to request that an amendment be made to a previous message, except in those cases where a specific message, or facility within a message, has been provided for this purpose in the related category, for example, MT 707, AMEND in field 22 of the MT 300. 

The category digit of the MT n95 Queries must be: 

a) If related to a SWIFT message, the category digit of the related message. 

b) If not related to a SWIFT message, the category digit which best describes the business purpose of the message. 

]]></description>
		<standard>SWIFT</standard>
		<standard-name>MT295</standard-name>
		<standard-version>SRG 2016</standard-version>
		<standard-release-qualifier>20160308</standard-release-qualifier>
		<standard-category>Financial Institution Transfers</standard-category>
		<standard-detailed-name>Queries</standard-detailed-name>
		<version>1.0</version>
		<SwiftFields>
			<customizable>true</customizable>
			<modifiable>false</modifiable>
			<SwiftMessageType>User</SwiftMessageType>
			<max-length>2000</max-length>
			<HeaderAndTrailerType>SWIFT_INPUT_OUTPUT_HEADER</HeaderAndTrailerType>
			<Header>
				<fields>
					<field>
						<name>Basic Header</name>
						<description><![CDATA[The Basic Header is given in Block 1 of a SWIFT message and is the only header that appears on all messages. The Basic Header provides the fundamental reference for any particular message and is almost always automatically built by the CBT.
The Basic Header has the same format for both input and output messages. However, the information contained in the Basic Header is relative to the sender when the message is input but relative to the receiver when the same message is output.]]></description>
						<datatype>Section</datatype>
						<required>true</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Application Identifier</name>
								<description><![CDATA[The Application Identifier identifies the application within which the message is being sent or received. The available options are:

F = FIN All user-to-user, FIN system and FIN service messages 
A = GPA Most GPA system and service messages 
L = GPA Certain GPA service messages, for example, LOGIN, LAKs, ABORT 

These values are automatically assigned by the SWIFT system and the user's CBT, but the user should be aware of their existence and significance
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Service Identifier</name>
								<description><![CDATA[The Service Identifier consists of 2 numeric characters. It identifies the type of data that is being sent or received and, in doing so, whether the message which follows is one of the following:

a user-to-user message

a system message

a service message, for example, a session control command, such as SELECT, or a logical acknowledgement, such as ACK/SAK/UAK

Users will be primarily concerned with identifier '01' which applies to all GPA and FIN system and user-to-user messages. Other values include: '21' for message acknowledgements such as ACK/NAK, UAK/UNK, '03' for SELECT commands, and 
so on]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>2</length>
							</field>
							<field>
								<name>LT Identifier</name>
								<description><![CDATA[This 12-character SWIFT address, given in the Basic Header Block, is the address of the sending LT for input messages or of the receiving LT for output messages, and includes the Branch Code.

In the Basic Header, the LT Code within the LT Identifier is specific to the LT that has established the session in which the message is being transmitted, that is the sending LT for input messages or the receiving LT for output messages.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>12</length>
							</field>
							<field>
								<name>Session Number</name>
								<description><![CDATA[The Session Number identifies the session in which the message was transmitted. Within the Basic Header, the 4-digit Session Number is the user's current GPA or FIN Session Number.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Sequence Number</name>
								<description><![CDATA[The sequence number always consists of 6 digits. It is the ISN of the sender's current input session or the OSN of the receiver's current output session.

Note: The sequence number is not present in those messages with an Application Identifier of 'L' (for example LOGIN). The sequence number is, however, a key element in the processing of retrievals. Therefore, LOGINs and attempted LOGINs are not retrievable
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>6</length>
							</field>
						</fields>
					</field>
					<field>
						<name>Application Header Input</name>
						<description><![CDATA[The Application Header of a SWIFT message provides information about the message itself.

The Application Header is given in Block 2 of a SWIFT message. It differs according to whether the message is a GPA or a FIN message and whether the Application Header is part of an input or an output message.

]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Input/Output Identifier</name>
								<description><![CDATA[For an input message, the Input/Output Identifier consists of the single letter 'I'.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Message Type</name>
								<description><![CDATA[The Message Type consists of 3 digits which define the MT number of the message being input. The example used above is for an MT 100 Customer Transfer]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>3</length>
							</field>
							<field>
								<name>Receiver's Address</name>
								<description><![CDATA[This address is the 12-character SWIFT address of the receiver of the message, but with a LT Code of 'X'. It defines the destination to which the message should be sent.

The system will replace the 'X' with a specific LT Code on delivery of the message according to the delivery control exercised by the receiving user.

The Branch Code is mandatory and will be validated. The default of 'XXX' may be used, as in the example above.

Unless otherwise documented, system messages addressed to the SWIFT system itself should be addressed to SWFTXXXXXXXX.

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>12</length>
							</field>
							<field>
								<name>Message Priority</name>
								<description><![CDATA[This character, used within FIN Application Headers only, defines the priority with which a message is delivered. The possible values are:

S = System

U = Urgent

N = Normal

Message Priority 'S' must be used for user-to-system messages; for user-to-user messages either 'U' or 'N' can be used. In the absence of user-specified delivery criteria, system messages are always delivered first, followed by urgent priority messages and then normal priority messages.

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Delivery Monitoring</name>
								<description><![CDATA[Delivery monitoring options apply only to FIN user-to-user messages, and allow the sender of a message to request:

automatic MT 011 Delivery Notification once the message has been delivered

automatic MT 010 Non-Delivery Warning if a message is not delivered within the specified obsolescence period (see below)

both, or neither, options. This may be requested on an individual message basis.

The chosen option is expressed as a single digit:

1 = Non-Delivery Warning

2 = Delivery Notification

3 = Non-Delivery Warning and Delivery Notification. 
If the message has priority 'U' then the user must request delivery monitoring option '1' or '3'. If the message has priority 'N', the user can request delivery monitoring option '2', or, by leaving the option blank, no delivery monitoring.
]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>1</length>
							</field>
							<field>
								<name>Obsolescence Period</name>
								<description><![CDATA[The obsolescence period defines the period of time after which a Delayed Message (DLM) trailer is added to a FIN user-to-user message when the message is delivered. For urgent priority messages, it is also the period of time after which, if the message remains undelivered, a Non-Delivery Warning is generated.

The values for the obsolescence period are 003 (15 minutes) for 'U' priority, and 020 (100 minutes) for 'N' priority. An obsolescence period can only be specified when delivery monitoring has been requested (option 1 or 3 for urgent priority messages, option 2 for normal priority messages). If no delivery monitoring has been requested, and an obsolescence period is specified, the message will be NAKed with error code H25.

GPA input Application Headers are similar to their FIN equivalents except that GPA messages do not specify priority, delivery monitoring, nor obsolescence period.

]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>3</length>
							</field>
						</fields>
					</field>
					<field>
						<name>Application Header Output</name>
						<description><![CDATA[The Application Header of a SWIFT message provides information about the message itself.

The Application Header is given in Block 2 of a SWIFT message. It differs according to whether the message is a GPA or a FIN message and whether the Application Header is part of an input or an output message.

]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Input/Output Identifier</name>
								<description><![CDATA[For an input message, the Input/Output Identifier consists of the single letter 'I'.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Message Type</name>
								<description><![CDATA[Three digits indicating the Message Type.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>3</length>
							</field>
							<field>
								<name>Input Time</name>
								<description><![CDATA[The first occurrence of the time field contains the system time and date. This is the generation time in Greenwich Mean Time (GMT).
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Message Input Reference</name>
								<description><![CDATA[The input MIR.

If the message is generated by the system, the input time is the generation time (in GMT) and the input MIR is the system MIR

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>28</length>
							</field>
							<field>
								<name>Output Date</name>
								<description><![CDATA[The output date, local to the receiver.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>6</length>
							</field>
							<field>
								<name>Output Time</name>
								<description><![CDATA[The second occurrence of the time field contains the output time and date. This is in a time local to the receiver.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Message Priority</name>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
						</fields>
					</field>
					<field>
						<name>User Header</name>
						<description><![CDATA[The User Header is an optional header available within FIN for user-to-user messages only. It appears in Block 3 of a SWIFT message, and allows users to provide their own reference within the headers for a particular message.

A User Header can only be assigned by the sender of a message and, if assigned, will always appear on the output message copy. Relevant parts of the User Header will be repeated in related system messages and acknowledgements.

Block 3 may contain tag 113, defining banking priorities, and tag 108, which is a user reference. The user reference part of the User Header may be used as one of the selection criteria when retrieving a message.

The optional field tags 103 and 115 are also used in Block 3 for the FIN Copy service. The order of tags, when present, is 103, 113, 108 and 115.

An optional field tag 119 can be included in Block 3 of certain messages to specify that different validation rules are to be applied. Agreed code words in field 119 indicate what validation rules SWIFT will apply. If field 119 is present, it should appear after field 108
]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Service Identifier</name>
								<description><![CDATA[For any message which the user submits to a FIN Copy service, Block 3 requires an additional field 103 which contains a three-character Service Identifier unique to a specific FIN Copy service. By using a unique identifier it is possible to support access to multiple services within the same CBT.
]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>3</length>
								<tag>103</tag>
							</field>
							<field>
								<name>Banking Priority</name>
								<description><![CDATA[Assigned by the sender of the message.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>4</length>
								<tag>113</tag>
							</field>
							<field>
								<name>Message User Reference</name>
								<description><![CDATA[Assigned by the sender of the message.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>16</length>
								<tag>108</tag>
							</field>
							<field>
								<name>Validation Flag</name>
								<description><![CDATA[Indicates whether a special validation needs to be performed by FIN. The following are examples of the values this field may take. Please note that this list is subject to change:

ISITC indicates validation of ISITC Standards. Only to be used with MT 521 and MT 523.

REMIT identifies the presence of field 77T. Only to be used in MT 103.

RFDD indicates that the message is a request for direct debit. Only to be used in MT 104.

STP indicates that the message is validated according to straight through processing principles. Only to be used in MT 103.

]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>119</tag>
							</field>
							<field>
								<name>Balance checkpoint date and time</name>
								<description><![CDATA[This field contains the balance checkpoint date and time consisting of a date (YYMMDD) and a time (HHMMSS[ss], where 'ss' indicates hundredths of a second). The MI that is subscribed to MIRS will always copy this reference from field tag 13G of the last MT298/091 that it sent into the related MT 298/093 or MT 097 that it generates. ]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>423</tag>
							</field>
							<field>
								<name>Message Input Reference</name>
								<description><![CDATA[This field contains the MIR of the payment message that is related to the notification messages in which this field is present. The MI that is subscribed to MIRS will copy it from the received payment message. In a FINCopy scenario, this field must contain the MIR of the related MT 096]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>106</tag>
							</field>
							<field>
								<name>Related Reference</name>
								<description><![CDATA[This field contains the reference of the payment that is related to the notification messages in which this field is present. The payment itself was not the result of a FIN message. The value of this field must correspond to the related reference (field 21) in the MT298/093. The format of field 424 is 16x.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>424</tag>
							</field>
							<field>
								<name>Service Type Identifier</name>
								<description><![CDATA[This field identifies the applicable global payment service type. The format of field 111 is 3!n.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>111</tag>
							</field>
							<field>
								<name>Unique End-To-End Transaction Reference</name>
								<description><![CDATA[This field provides an end-to-end reference across a payment transaction. The format of field 121 is 36!x.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>121</tag>
							</field>
							<field>
								<name>Addressee Information</name>
								<description><![CDATA[Tag 115 is only valid for output messages. Information from Central Institution to the receiver of payment message. Information is input in the MT 097 FIN Copy Message Authorisation/Refusal Notification in Y-Copy mode.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>115</tag>
							</field>
							<field>
								<name>Payment Release Information Receiver (FINInform Services)</name>
								<description><![CDATA[Tag 165 is only valid for output messages. This field contains information from the server destination to the receiver of payment message. It is only available for use in FINInform services that operate in Y-copy mode.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>165</tag>
							</field>
							<field>
								<name>Receiver Information</name>
								<description><![CDATA[Tag 433 is only valid for output messages. The screening service inputs information in the MT 097 FINCopy Message Authorisation/Refusal Notification, in Y-Copy mode. FINCopy copies the information to the receiver of the screened message.
				    The following values can be present in this field:
				      AOK: message automatically released by screening service
				      FPO: compliance officer has flagged the screening result as false positive
				      NOK: compliance officer has flagged the screened message as suspect
				    The code word can optionally be followed by additional information (up to 20 characters from the x character set).]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>433</tag>
							</field>
						</fields>
					</field>
				</fields>
			</Header>
			<Data>
				<Fields>
					<SwiftField Name="20">
						<SwiftFieldDef Name="20">
							<Generic>false</Generic>
							<Description><![CDATA[Reference]]></Description>
							<Option Name="">
								<Format><![CDATA[16x]]></Format>
								<Specification><![CDATA[(Reference)]]></Specification>
								<Description><![CDATA[Transaction Reference Number]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options> </Options>
						<Validations>
							<SubField Name="Reference">
								<Validation>
									<Options> </Options>
									<ErrorCode>T26</ErrorCode>
									<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive slashes '//'  (Error code(s): T26).]]></Comment>
									<ValidationPattern xsi:type="T26" Type="T26">
										<Type>T26</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="21">
						<SwiftFieldDef Name="21">
							<Generic>false</Generic>
							<Option Name="">
								<Format><![CDATA[16x]]></Format>
								<Specification><![CDATA[(Reference)]]></Specification>
								<Description><![CDATA[Related Reference]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options> </Options>
						<Validations>
							<SubField Name="Reference">
								<Validation>
									<Options> </Options>
									<ErrorCode>T26</ErrorCode>
									<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive slashes '//'  (Error code(s): T26).]]></Comment>
									<ValidationPattern xsi:type="T26" Type="T26">
										<Type>T26</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="75">
						<SwiftFieldDef Name="75">
							<Generic>false</Generic>
							<Option Name="">
								<Format><![CDATA[6*35x]]></Format>
								<Specification><![CDATA[(Narrative)]]></Specification>
								<Description><![CDATA[Queries]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options> </Options>
					</SwiftField>
					<SwiftField Name="77A">
						<SwiftFieldDef Name="77">
							<Generic>false</Generic>
							<Option Name="A">
								<Format><![CDATA[20*35x]]></Format>
								<Specification><![CDATA[(Narrative)]]></Specification>
								<Description><![CDATA[Narrative]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options>A</Options>
					</SwiftField>
					<SwiftField Name="11a">
						<SwiftFieldDef Name="11">
							<Generic>false</Generic>
							<Description><![CDATA[Currency]]></Description>
							<Option Name="R">
								<Format><![CDATA[3!nCRLF6!n([CRLF4!n6!n])]]></Format>
								<Specification><![CDATA[(MT Number)(Date)(Session Number and ISN)]]></Specification>
								<Description><![CDATA[MT and Date of Original Message]]></Description>
							</Option>
							<Option Name="S">
								<Format><![CDATA[3!nCRLF6!n([CRLF4!n6!n])]]></Format>
								<Specification><![CDATA[(MT Number)(Date)(Session Number and ISN)]]></Specification>
								<Description><![CDATA[MT and Date of Original Message]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options>R, S</Options>
						<Validations>
							<SubField Name="Date">
								<Validation>
									<Options>R, S</Options>
									<ErrorCode>T50</ErrorCode>
									<Comment><![CDATA[Date must be a valid date expressed as YYMMDD (Error code(s): T50).]]></Comment>
									<ValidationPattern xsi:type="DATE" Type="DATE">
										<Type>DATE</Type>
										<Format>yyMMdd</Format>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="79">
						<SwiftFieldDef Name="79">
							<Generic>false</Generic>
							<Option Name="">
								<Format><![CDATA[35*50x]]></Format>
								<Specification><![CDATA[(Narrative)]]></Specification>
								<Description><![CDATA[Narrative Description of the Message to Which the Query Relates]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options> </Options>
					</SwiftField>
					<CopyOfFields Name="Copy Of Fields">
						<Description><![CDATA[Copy of at least the Mandatory Fields of the Original Message]]></Description>
						<Mandatory>false</Mandatory>
					</CopyOfFields>
				</Fields>
			</Data>
			<Trailer>
				<fields>
					<field>
						<name>Message Authentication Code</name>
						<description><![CDATA[Allows authentication by the receiving user. It is followed by an authentication result.

This trailer is mandatory for most user-to-user message categories within the FIN application. When the FIN Copy Service is used a PAC trailer, if present, follows the MAC trailer.

Format:

{MAC:<authentication-result>}

where <authentication-result> = 8!h

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>8</length>
						<tag>MAC</tag>
					</field>
					<field>
						<name>Proprietary Authentication Code</name>
						<description><![CDATA[The PAC is used within the FIN Copy service only, when using the double authentication option. The PAC is included in Block 5 of FIN user-to-user messages, immediately after the MAC trailer, if present.

This is calculated on the extracted fields of Block 4 of the message, the value of field 115, if present, and the <authentication-result> of the MAC trailer for Copy Services with double authentication.

Thus, the end-of-block indicator (CrLf-) is included in the PAC calculation, and the fields are defined as follows:

The first three characters are CrLf:

The field and the delimiter are present, that is, 32A:, 20:, and so on.

All subfields and their delimiters are present.

Format:

{PAC:[<authentication-result>]}

where <authentication-result> is mandatory on input messages only and <authentication-result> = 8!h

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>8</length>
						<tag>PAC</tag>
					</field>
					<field>
						<name>Checksum</name>
						<description><![CDATA[The checksum is computed based on the receiver's address (12 characters, with 9th character replaced by X) plus the Text Block. This trailer allows the system and the CBT to check that messages have not been corrupted due to a system malfunction or an undetected transmission error.

Format:

{CHK:<checksum-result>}

where <checksum-result> = 12!h

Note: This trailer is mandatory for FIN and GPA messages (Service Identifier 01).

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>12</length>
						<tag>CHK</tag>
					</field>
					<field>
						<name>System Originated Message</name>
						<description><![CDATA[The system message or service message which is generated by a system PLT has a SYS trailer. All solicited system messages (Service Identifier 01) contain the MIR of the request and may also contain the time.

Format:

{SYS:[<time><mir>]}

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>SYS</tag>
					</field>
					<field>
						<name>Test And Training Message</name>
						<description><![CDATA[Mandatory for FIN and GPA messages (Service Identifier 01) sent by, or delivered to, a Test & Training Logical Terminal (LT). This trailer has a tag only, and no value.

Format:

{TNG:}
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>0</length>
						<tag>TNG</tag>
					</field>
					<field>
						<name>Possible Duplicate Emission</name>
						<description><![CDATA[This trailer is used by the destination of the message. It only applies to FIN user-to-user messages (Service Identifier 01, message categories reserved for banking messages). There can be multiple PDEs. The system does not verify the order nor restrict the number (except for maximum message length).

Correctly formatted PDE trailers applied to user-to-system messages are accepted by the system, but not processed. This means that the system does not check to see if the original message exists. Therefore, a retrieval request sent with a PDE trailer may be processed twice if the original message was received by the system.

Format:

{PDE:[<time><mir>]}

where <time><mir> refers to the emission of the previous possible issue.

Note: It can be added automatically by a CBT or manually by a user. It may be followed by the MIR and the time of its previous possible messages.

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>PDE</tag>
					</field>
					<field>
						<name>Delayed Message</name>
						<description><![CDATA[This trailer is added to all FIN user-to-user output messages that have exceeded their obsolescence period. If this trailer appears in GPA or FIN system messages, it must be ignored. This trailer has a tag only, and no value.

The Obsolescence Period is:

U = 15 minutes

N = 100 minutes

Format:

{DLM:}

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>0</length>
						<tag>DLM</tag>
					</field>
					<field>
						<name>Possible Duplicate Message</name>
						<description><![CDATA[Added by the system to any output message (GPA and FIN Service Identifier 01) being resent because a prior delivery may be invalid. If a system PLT receives a report request with a PDM, the response has a plain PDM (without the optional delivery reference). Other PDMs may be added as a result of unsuccessful delivery attempts to the user. 
Format:
{PDM:[<time><mor>]}
where <time> and the Message Output Reference <mor> are that of the previous attempt.
Note: For messages recovered after a system failure, the optional fields may not be present.
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>PDM</tag>
					</field>
					<field>
						<name>Message Reference</name>
						<description><![CDATA[The MRF trailer is used to specify the message reference of the original user message in MT 096 FIN Copy to Central Institution Messages.
Format:
{MRF:<date><full-time><mir>}
where <mir> is that of the original user message whose fields are copied in the MT 096 FIN Copy to Central Institution Message.
Note: The MRF is specific to FIN Copy. The MRF trailer is automatically generated in the MT 096 FIN Copy to Central Institution Message and can only be reused in field 109 of the MT 096 FIN Copy to Central Institution Message to identify the MT 096 to which the MT 097 is a response. The format of the MRF is subject to change.
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>MRF</tag>
					</field>
				</fields>
			</Trailer>
		</SwiftFields>
		<validationrules name="Default">
			<hdrvalidationrules>
				<fieldvalidations>
					<fieldvalidation>
						<name>U09</name>
						<formula><![CDATA[if($this.Header.GetFieldIndex("User_Header") != -1) {
    def userHeader = $this.Header.GetSection("User_Header");
    if(userHeader.$size > 0 && userHeader[0].IsNotNull("Validation_Flag")) {
        return false;
    }
}
return true;
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U09</error-code>
						<actionmessage><![CDATA["User has used tag 119 in a message that is not a candidate for special processing"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>U03</name>
						<fieldname>User Header</fieldname>
						<formula><![CDATA[Iff(IsNotNull(User_Header.Service_Type_Identifier), 
    IsNotNull(User_Header.Unique_End_To_End_Transaction_Reference))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U03</error-code>
						<actionmessage><![CDATA["When populating an end-to-end reference, both fields 111 and 121 must be populated: a message that contains only one of these two fields will not be accepted by FIN."]]></actionmessage>
					</fieldvalidation>
				</fieldvalidations>
			</hdrvalidationrules>
			<datavalidationrules>
				<fieldvalidations>
					<fieldvalidation>
						<name>F11a-A</name>
						<fieldname>11a.MT_Number</fieldname>
						<formula><![CDATA[Between($value, 100, 999)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T18</error-code>
						<actionmessage><![CDATA["In field 11a, MT Number must be a number in the range 100 - 999."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C1</name>
						<formula><![CDATA[If(F79.$size > 0, IsNull(Copy_Of_Fields), true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C31</error-code>
						<actionmessage><![CDATA["Either field 79 or a 'Copy of at least the mandatory fields of the message to which the query relates', but not both, may be present in the message."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FCP</name>
						<fieldname>Copy Of Fields</fieldname>
						<formula><![CDATA[def ActualValue = replace($value, "\r\n", "\n");
(FindFirst(ActualValue, "\n:77F:") == -1 && 
   FindFirst(ActualValue, "\n:77G:") == -1 && 
   FindFirst(ActualValue, "\n:77S:") == -1 && 
   FindFirst(ActualValue, "\n:77T:") == -1) && 
  (!StartsWith(ActualValue, ":77F:") && 
     !StartsWith(ActualValue, ":77G:") && 
     !StartsWith(ActualValue, ":77S:") && 
     !StartsWith(ActualValue, ":77T:"))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T13</error-code>
						<actionmessage><![CDATA["Tags 77F, 77G, 77S or 77T cannot appear in Copy Of Fields."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>F-79</name>
						<fieldname>79.Narrative</fieldname>
						<formula><![CDATA[def Actualvalue = replace($value, "\r\n", "\n");
def lines = Split("\n", Actualvalue);
def str = Left(Actualvalue, 6);
def line1format = false;
def line3format = false;
def TREFformat = true;
def CHGSformat = true;
def TEXTformat = true;
def format = true;
def count = 0;
def TREFcount = 0;
def CHGScount = 0;
def TEXTcount = 0;
def i = lines.Length();
if(In(str, "/REJT/", "/RETN/")) {
        if(i <= 35) {
        //if '/REJT/' or '/RETN/' format of 1st line must be "6!x2!n[1a]['/'2c]" & format of 2nd line must be "('/'2!c 2!n'/')[44x]" or "('/X'1c2!n'/')[44x]"
            //if format of 2nd line is "('/'2!c 2!n'/')" then the 6 characters must be one of the codes given below
            line1format = (VerifyFormat(lines[0], "6!x2!n[1a]['/'2c]"));
            if(line1format && lines.Length() > 2) {
            if(!lines[1].StartsWith("/X")) {
                if(VerifyFormat(lines[1], "('/'2!c 2!n'/')[44x]")) {
                    def startStr = lines[1].Left(6);
                    if((!In(startStr, "/AC01/", "/AC02/", "/AC03/", "/AC04/", "/AC05/", "/AC06/", 
                            "/AM01/", "/AM02/", "/AM03/", "/AM04/", "/AM05/", "/AM06/", "/AM07/", 
                            "/AM08/", "/AG01/", "/AG02/", "/BE01/", "/BE02/", "/BE03/", "/BE04/", 
                            "/BE05/", "/DT01/", "/MS01/", "/PY01/", "/RC01/", "/RC02/", "/RC03/", 
                            "/RC04/", "/RF01/", "/TM01/", "/RR01/", "/RR02/", "/RR03/")))
                        return false;
                }
                else
                        return false;
                }
            else if(lines[1].StartsWith("/X") && !VerifyFormat(lines[1], "('/X'1c2!n'/')[44x]"))
                    return false;
            }
            else
                return false;
            //Line3 is mandatory and should have the format "/MREF/16x". Lines 4, 5 and 6 are optional
            //If lines 4, 5 or 6 or any combination exists and if the first 6 characters starts with either '/TREF/' or '/CHGS/' or '/TEXT/' or '//'
            //it should satisfy the format given. Also if line starts with '//' it can appear a max of 31 times
            line3format = Equal(Left(lines[2], 6), "/MREF/") && 
                            VerifyFormat(Substring(lines[2], 6), "16x");
            if(line3format) {
                while(i > 3) {
                    def str1 = Left(lines[i - 1], 6);
                    def str2 = Substring(lines[i - 1], 6);
                if(In(str1, "/TREF/", "/CHGS/", "/TEXT/") || StartsWith(lines[i - 1], "//")) {
                        if(str1 == "/TREF/") {
                            TREFformat = VerifyFormat(str2, "16x");
                            TREFcount += 1;
                        }
                        else if(str1 == "/CHGS/") {
                            CHGSformat = (VerifyFormat(str2, "3!a15d") && 
                                        IsISOCurrencyCode(Substring(lines[i - 1], 6, 3)));
                            CHGScount += 1;
                        }
                        else if(str1 == "/TEXT/") {
                            TEXTformat = (VerifyFormat(str2, "44x"));
                            TEXTcount += 1;
                        }
                        else if(StartsWith(lines[i - 1], "//")) {
                            def str3 = Substring(lines[i - 1], 2);
                            format = (VerifyFormat(str3, "48x"));
                            count += 1;
                            if(!format || count > 31)
                                break;
                        }
                    }
                    else
                        return false;
                    i = i - 1;
                }
            }
            else
                return false;
        if(!TREFformat || !CHGSformat || !TEXTformat || !format || count > 31 || TREFcount > 1 || 
             CHGScount > 1 || TEXTcount > 1)
                return false;
        }
        else
            return false;
}
return true;
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T80</error-code>
						<actionmessage><![CDATA["Field 79 Reject/Return: code word error, or mandatory code word missing, or code word not in the proper sequence or format 35*50 not satisfied"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>ERI</name>
						<fieldname>79.Narrative</fieldname>
						<formula><![CDATA[ApplyERICodeValidationUnstructured($value);]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T47</error-code>
						<actionmessage><![CDATA["In an ERI field (i.e. fields 61, 72, 77A, 79, 86) the data part of a code word /OCMT/, or /CHGS/, is being validated, but the ending separator (i.e. third slash) is missing or the code words are duplicated."]]></actionmessage>
					</fieldvalidation>
				</fieldvalidations>
			</datavalidationrules>
			<tlrvalidationrules>
				<fieldvalidations>
				</fieldvalidations>
			</tlrvalidationrules>
		</validationrules>
		<elementproperties>
			<propertymap>
			</propertymap>
		</elementproperties>
	</externalmessage>
	<externalmessage xsi:type="SwiftFormat" type="SwiftFormat" version="5.1.2" rulename="MT296_2016" formattype="SwiftFormat" >
		<description><![CDATA[This message type is: 

a) sent by one financial institution to another financial institution . 

b) sent by a corporate customer to a financial institution. 

c) sent by a financial institution to a corporate customer. 

It is used to respond to an MT n95 Queries or MT n92 Request for Cancellation and other messages where no specific message type has been provided for the response. This message should use the same category digit as the related queries message or request for cancellation. 

]]></description>
		<standard>SWIFT</standard>
		<standard-name>MT296</standard-name>
		<standard-version>SRG 2016</standard-version>
		<standard-release-qualifier>20160308</standard-release-qualifier>
		<standard-category>Financial Institution Transfers</standard-category>
		<standard-detailed-name>Answers</standard-detailed-name>
		<version>1.0</version>
		<SwiftFields>
			<customizable>true</customizable>
			<modifiable>false</modifiable>
			<SwiftMessageType>User</SwiftMessageType>
			<max-length>2000</max-length>
			<HeaderAndTrailerType>SWIFT_INPUT_OUTPUT_HEADER</HeaderAndTrailerType>
			<Header>
				<fields>
					<field>
						<name>Basic Header</name>
						<description><![CDATA[The Basic Header is given in Block 1 of a SWIFT message and is the only header that appears on all messages. The Basic Header provides the fundamental reference for any particular message and is almost always automatically built by the CBT.
The Basic Header has the same format for both input and output messages. However, the information contained in the Basic Header is relative to the sender when the message is input but relative to the receiver when the same message is output.]]></description>
						<datatype>Section</datatype>
						<required>true</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Application Identifier</name>
								<description><![CDATA[The Application Identifier identifies the application within which the message is being sent or received. The available options are:

F = FIN All user-to-user, FIN system and FIN service messages 
A = GPA Most GPA system and service messages 
L = GPA Certain GPA service messages, for example, LOGIN, LAKs, ABORT 

These values are automatically assigned by the SWIFT system and the user's CBT, but the user should be aware of their existence and significance
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Service Identifier</name>
								<description><![CDATA[The Service Identifier consists of 2 numeric characters. It identifies the type of data that is being sent or received and, in doing so, whether the message which follows is one of the following:

a user-to-user message

a system message

a service message, for example, a session control command, such as SELECT, or a logical acknowledgement, such as ACK/SAK/UAK

Users will be primarily concerned with identifier '01' which applies to all GPA and FIN system and user-to-user messages. Other values include: '21' for message acknowledgements such as ACK/NAK, UAK/UNK, '03' for SELECT commands, and 
so on]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>2</length>
							</field>
							<field>
								<name>LT Identifier</name>
								<description><![CDATA[This 12-character SWIFT address, given in the Basic Header Block, is the address of the sending LT for input messages or of the receiving LT for output messages, and includes the Branch Code.

In the Basic Header, the LT Code within the LT Identifier is specific to the LT that has established the session in which the message is being transmitted, that is the sending LT for input messages or the receiving LT for output messages.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>12</length>
							</field>
							<field>
								<name>Session Number</name>
								<description><![CDATA[The Session Number identifies the session in which the message was transmitted. Within the Basic Header, the 4-digit Session Number is the user's current GPA or FIN Session Number.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Sequence Number</name>
								<description><![CDATA[The sequence number always consists of 6 digits. It is the ISN of the sender's current input session or the OSN of the receiver's current output session.

Note: The sequence number is not present in those messages with an Application Identifier of 'L' (for example LOGIN). The sequence number is, however, a key element in the processing of retrievals. Therefore, LOGINs and attempted LOGINs are not retrievable
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>6</length>
							</field>
						</fields>
					</field>
					<field>
						<name>Application Header Input</name>
						<description><![CDATA[The Application Header of a SWIFT message provides information about the message itself.

The Application Header is given in Block 2 of a SWIFT message. It differs according to whether the message is a GPA or a FIN message and whether the Application Header is part of an input or an output message.

]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Input/Output Identifier</name>
								<description><![CDATA[For an input message, the Input/Output Identifier consists of the single letter 'I'.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Message Type</name>
								<description><![CDATA[The Message Type consists of 3 digits which define the MT number of the message being input. The example used above is for an MT 100 Customer Transfer]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>3</length>
							</field>
							<field>
								<name>Receiver's Address</name>
								<description><![CDATA[This address is the 12-character SWIFT address of the receiver of the message, but with a LT Code of 'X'. It defines the destination to which the message should be sent.

The system will replace the 'X' with a specific LT Code on delivery of the message according to the delivery control exercised by the receiving user.

The Branch Code is mandatory and will be validated. The default of 'XXX' may be used, as in the example above.

Unless otherwise documented, system messages addressed to the SWIFT system itself should be addressed to SWFTXXXXXXXX.

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>12</length>
							</field>
							<field>
								<name>Message Priority</name>
								<description><![CDATA[This character, used within FIN Application Headers only, defines the priority with which a message is delivered. The possible values are:

S = System

U = Urgent

N = Normal

Message Priority 'S' must be used for user-to-system messages; for user-to-user messages either 'U' or 'N' can be used. In the absence of user-specified delivery criteria, system messages are always delivered first, followed by urgent priority messages and then normal priority messages.

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Delivery Monitoring</name>
								<description><![CDATA[Delivery monitoring options apply only to FIN user-to-user messages, and allow the sender of a message to request:

automatic MT 011 Delivery Notification once the message has been delivered

automatic MT 010 Non-Delivery Warning if a message is not delivered within the specified obsolescence period (see below)

both, or neither, options. This may be requested on an individual message basis.

The chosen option is expressed as a single digit:

1 = Non-Delivery Warning

2 = Delivery Notification

3 = Non-Delivery Warning and Delivery Notification. 
If the message has priority 'U' then the user must request delivery monitoring option '1' or '3'. If the message has priority 'N', the user can request delivery monitoring option '2', or, by leaving the option blank, no delivery monitoring.
]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>1</length>
							</field>
							<field>
								<name>Obsolescence Period</name>
								<description><![CDATA[The obsolescence period defines the period of time after which a Delayed Message (DLM) trailer is added to a FIN user-to-user message when the message is delivered. For urgent priority messages, it is also the period of time after which, if the message remains undelivered, a Non-Delivery Warning is generated.

The values for the obsolescence period are 003 (15 minutes) for 'U' priority, and 020 (100 minutes) for 'N' priority. An obsolescence period can only be specified when delivery monitoring has been requested (option 1 or 3 for urgent priority messages, option 2 for normal priority messages). If no delivery monitoring has been requested, and an obsolescence period is specified, the message will be NAKed with error code H25.

GPA input Application Headers are similar to their FIN equivalents except that GPA messages do not specify priority, delivery monitoring, nor obsolescence period.

]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>3</length>
							</field>
						</fields>
					</field>
					<field>
						<name>Application Header Output</name>
						<description><![CDATA[The Application Header of a SWIFT message provides information about the message itself.

The Application Header is given in Block 2 of a SWIFT message. It differs according to whether the message is a GPA or a FIN message and whether the Application Header is part of an input or an output message.

]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Input/Output Identifier</name>
								<description><![CDATA[For an input message, the Input/Output Identifier consists of the single letter 'I'.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Message Type</name>
								<description><![CDATA[Three digits indicating the Message Type.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>3</length>
							</field>
							<field>
								<name>Input Time</name>
								<description><![CDATA[The first occurrence of the time field contains the system time and date. This is the generation time in Greenwich Mean Time (GMT).
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Message Input Reference</name>
								<description><![CDATA[The input MIR.

If the message is generated by the system, the input time is the generation time (in GMT) and the input MIR is the system MIR

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>28</length>
							</field>
							<field>
								<name>Output Date</name>
								<description><![CDATA[The output date, local to the receiver.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>6</length>
							</field>
							<field>
								<name>Output Time</name>
								<description><![CDATA[The second occurrence of the time field contains the output time and date. This is in a time local to the receiver.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Message Priority</name>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
						</fields>
					</field>
					<field>
						<name>User Header</name>
						<description><![CDATA[The User Header is an optional header available within FIN for user-to-user messages only. It appears in Block 3 of a SWIFT message, and allows users to provide their own reference within the headers for a particular message.

A User Header can only be assigned by the sender of a message and, if assigned, will always appear on the output message copy. Relevant parts of the User Header will be repeated in related system messages and acknowledgements.

Block 3 may contain tag 113, defining banking priorities, and tag 108, which is a user reference. The user reference part of the User Header may be used as one of the selection criteria when retrieving a message.

The optional field tags 103 and 115 are also used in Block 3 for the FIN Copy service. The order of tags, when present, is 103, 113, 108 and 115.

An optional field tag 119 can be included in Block 3 of certain messages to specify that different validation rules are to be applied. Agreed code words in field 119 indicate what validation rules SWIFT will apply. If field 119 is present, it should appear after field 108
]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Service Identifier</name>
								<description><![CDATA[For any message which the user submits to a FIN Copy service, Block 3 requires an additional field 103 which contains a three-character Service Identifier unique to a specific FIN Copy service. By using a unique identifier it is possible to support access to multiple services within the same CBT.
]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>3</length>
								<tag>103</tag>
							</field>
							<field>
								<name>Banking Priority</name>
								<description><![CDATA[Assigned by the sender of the message.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>4</length>
								<tag>113</tag>
							</field>
							<field>
								<name>Message User Reference</name>
								<description><![CDATA[Assigned by the sender of the message.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>16</length>
								<tag>108</tag>
							</field>
							<field>
								<name>Validation Flag</name>
								<description><![CDATA[Indicates whether a special validation needs to be performed by FIN. The following are examples of the values this field may take. Please note that this list is subject to change:

ISITC indicates validation of ISITC Standards. Only to be used with MT 521 and MT 523.

REMIT identifies the presence of field 77T. Only to be used in MT 103.

RFDD indicates that the message is a request for direct debit. Only to be used in MT 104.

STP indicates that the message is validated according to straight through processing principles. Only to be used in MT 103.

]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>119</tag>
							</field>
							<field>
								<name>Balance checkpoint date and time</name>
								<description><![CDATA[This field contains the balance checkpoint date and time consisting of a date (YYMMDD) and a time (HHMMSS[ss], where 'ss' indicates hundredths of a second). The MI that is subscribed to MIRS will always copy this reference from field tag 13G of the last MT298/091 that it sent into the related MT 298/093 or MT 097 that it generates. ]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>423</tag>
							</field>
							<field>
								<name>Message Input Reference</name>
								<description><![CDATA[This field contains the MIR of the payment message that is related to the notification messages in which this field is present. The MI that is subscribed to MIRS will copy it from the received payment message. In a FINCopy scenario, this field must contain the MIR of the related MT 096]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>106</tag>
							</field>
							<field>
								<name>Related Reference</name>
								<description><![CDATA[This field contains the reference of the payment that is related to the notification messages in which this field is present. The payment itself was not the result of a FIN message. The value of this field must correspond to the related reference (field 21) in the MT298/093. The format of field 424 is 16x.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>424</tag>
							</field>
							<field>
								<name>Service Type Identifier</name>
								<description><![CDATA[This field identifies the applicable global payment service type. The format of field 111 is 3!n.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>111</tag>
							</field>
							<field>
								<name>Unique End-To-End Transaction Reference</name>
								<description><![CDATA[This field provides an end-to-end reference across a payment transaction. The format of field 121 is 36!x.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>121</tag>
							</field>
							<field>
								<name>Addressee Information</name>
								<description><![CDATA[Tag 115 is only valid for output messages. Information from Central Institution to the receiver of payment message. Information is input in the MT 097 FIN Copy Message Authorisation/Refusal Notification in Y-Copy mode.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>115</tag>
							</field>
							<field>
								<name>Payment Release Information Receiver (FINInform Services)</name>
								<description><![CDATA[Tag 165 is only valid for output messages. This field contains information from the server destination to the receiver of payment message. It is only available for use in FINInform services that operate in Y-copy mode.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>165</tag>
							</field>
							<field>
								<name>Receiver Information</name>
								<description><![CDATA[Tag 433 is only valid for output messages. The screening service inputs information in the MT 097 FINCopy Message Authorisation/Refusal Notification, in Y-Copy mode. FINCopy copies the information to the receiver of the screened message.
				    The following values can be present in this field:
				      AOK: message automatically released by screening service
				      FPO: compliance officer has flagged the screening result as false positive
				      NOK: compliance officer has flagged the screened message as suspect
				    The code word can optionally be followed by additional information (up to 20 characters from the x character set).]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>433</tag>
							</field>
						</fields>
					</field>
				</fields>
			</Header>
			<Data>
				<Fields>
					<SwiftField Name="20">
						<SwiftFieldDef Name="20">
							<Generic>false</Generic>
							<Description><![CDATA[Reference]]></Description>
							<Option Name="">
								<Format><![CDATA[16x]]></Format>
								<Specification><![CDATA[(Reference)]]></Specification>
								<Description><![CDATA[Transaction Reference Number]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options> </Options>
						<Validations>
							<SubField Name="Reference">
								<Validation>
									<Options> </Options>
									<ErrorCode>T26</ErrorCode>
									<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive slashes '//'(Error code(s): T26).]]></Comment>
									<ValidationPattern xsi:type="T26" Type="T26">
										<Type>T26</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="21">
						<SwiftFieldDef Name="21">
							<Generic>false</Generic>
							<Option Name="">
								<Format><![CDATA[16x]]></Format>
								<Specification><![CDATA[(Reference)]]></Specification>
								<Description><![CDATA[Related Reference]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options> </Options>
						<Validations>
							<SubField Name="Reference">
								<Validation>
									<Options> </Options>
									<ErrorCode>T26</ErrorCode>
									<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive slashes '//'(Error code(s): T26).]]></Comment>
									<ValidationPattern xsi:type="T26" Type="T26">
										<Type>T26</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="76">
						<SwiftFieldDef Name="76">
							<Generic>false</Generic>
							<Option Name="">
								<Format><![CDATA[6*35x]]></Format>
								<Specification><![CDATA[(Narrative)]]></Specification>
								<Description><![CDATA[Answers]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options> </Options>
					</SwiftField>
					<SwiftField Name="77A">
						<SwiftFieldDef Name="77">
							<Generic>false</Generic>
							<Option Name="A">
								<Format><![CDATA[20*35x]]></Format>
								<Specification><![CDATA[(Narrative)]]></Specification>
								<Description><![CDATA[Narrative]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options>A</Options>
					</SwiftField>
					<SwiftField Name="11a">
						<SwiftFieldDef Name="11">
							<Generic>false</Generic>
							<Description><![CDATA[Currency]]></Description>
							<Option Name="R">
								<Format><![CDATA[3!nCRLF6!n([CRLF4!n6!n])]]></Format>
								<Specification><![CDATA[(MT Number) (Date) (Session Number and ISN)]]></Specification>
								<Description><![CDATA[MT and Date of the Original Message]]></Description>
							</Option>
							<Option Name="S">
								<Format><![CDATA[3!nCRLF6!n([CRLF4!n6!n])]]></Format>
								<Specification><![CDATA[(MT Number)(Date)(Session Number and ISN)]]></Specification>
								<Description><![CDATA[MT and Date of the Original Message]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options>R, S</Options>
						<Validations>
							<SubField Name="Date">
								<Validation>
									<Options>R, S</Options>
									<ErrorCode>T50</ErrorCode>
									<Comment><![CDATA[Date must be a valid date expressed as YYMMDD (Error code(s): T50).]]></Comment>
									<ValidationPattern xsi:type="DATE" Type="DATE">
										<Type>DATE</Type>
										<Format>yyMMdd</Format>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="79">
						<SwiftFieldDef Name="79">
							<Generic>false</Generic>
							<Option Name="">
								<Format><![CDATA[35*50x]]></Format>
								<Specification><![CDATA[(Narrative)]]></Specification>
								<Description><![CDATA[Narrative Description of the Original Message to Which the Answer Relates]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options> </Options>
					</SwiftField>
					<CopyOfFields Name="Copy Of Fields">
						<Description><![CDATA[Copy of at least the Mandatory Fields of the Original Message]]></Description>
						<Mandatory>false</Mandatory>
					</CopyOfFields>
				</Fields>
			</Data>
			<Trailer>
				<fields>
					<field>
						<name>Message Authentication Code</name>
						<description><![CDATA[Allows authentication by the receiving user. It is followed by an authentication result.

This trailer is mandatory for most user-to-user message categories within the FIN application. When the FIN Copy Service is used a PAC trailer, if present, follows the MAC trailer.

Format:

{MAC:<authentication-result>}

where <authentication-result> = 8!h

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>8</length>
						<tag>MAC</tag>
					</field>
					<field>
						<name>Proprietary Authentication Code</name>
						<description><![CDATA[The PAC is used within the FIN Copy service only, when using the double authentication option. The PAC is included in Block 5 of FIN user-to-user messages, immediately after the MAC trailer, if present.

This is calculated on the extracted fields of Block 4 of the message, the value of field 115, if present, and the <authentication-result> of the MAC trailer for Copy Services with double authentication.

Thus, the end-of-block indicator (CrLf-) is included in the PAC calculation, and the fields are defined as follows:

The first three characters are CrLf:

The field and the delimiter are present, that is, 32A:, 20:, and so on.

All subfields and their delimiters are present.

Format:

{PAC:[<authentication-result>]}

where <authentication-result> is mandatory on input messages only and <authentication-result> = 8!h

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>8</length>
						<tag>PAC</tag>
					</field>
					<field>
						<name>Checksum</name>
						<description><![CDATA[The checksum is computed based on the receiver's address (12 characters, with 9th character replaced by X) plus the Text Block. This trailer allows the system and the CBT to check that messages have not been corrupted due to a system malfunction or an undetected transmission error.

Format:

{CHK:<checksum-result>}

where <checksum-result> = 12!h

Note: This trailer is mandatory for FIN and GPA messages (Service Identifier 01).

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>12</length>
						<tag>CHK</tag>
					</field>
					<field>
						<name>System Originated Message</name>
						<description><![CDATA[The system message or service message which is generated by a system PLT has a SYS trailer. All solicited system messages (Service Identifier 01) contain the MIR of the request and may also contain the time.

Format:

{SYS:[<time><mir>]}

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>SYS</tag>
					</field>
					<field>
						<name>Test And Training Message</name>
						<description><![CDATA[Mandatory for FIN and GPA messages (Service Identifier 01) sent by, or delivered to, a Test & Training Logical Terminal (LT). This trailer has a tag only, and no value.

Format:

{TNG:}
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>0</length>
						<tag>TNG</tag>
					</field>
					<field>
						<name>Possible Duplicate Emission</name>
						<description><![CDATA[This trailer is used by the destination of the message. It only applies to FIN user-to-user messages (Service Identifier 01, message categories reserved for banking messages). There can be multiple PDEs. The system does not verify the order nor restrict the number (except for maximum message length).

Correctly formatted PDE trailers applied to user-to-system messages are accepted by the system, but not processed. This means that the system does not check to see if the original message exists. Therefore, a retrieval request sent with a PDE trailer may be processed twice if the original message was received by the system.

Format:

{PDE:[<time><mir>]}

where <time><mir> refers to the emission of the previous possible issue.

Note: It can be added automatically by a CBT or manually by a user. It may be followed by the MIR and the time of its previous possible messages.

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>PDE</tag>
					</field>
					<field>
						<name>Delayed Message</name>
						<description><![CDATA[This trailer is added to all FIN user-to-user output messages that have exceeded their obsolescence period. If this trailer appears in GPA or FIN system messages, it must be ignored. This trailer has a tag only, and no value.

The Obsolescence Period is:

U = 15 minutes

N = 100 minutes

Format:

{DLM:}

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>0</length>
						<tag>DLM</tag>
					</field>
					<field>
						<name>Possible Duplicate Message</name>
						<description><![CDATA[Added by the system to any output message (GPA and FIN Service Identifier 01) being resent because a prior delivery may be invalid. If a system PLT receives a report request with a PDM, the response has a plain PDM (without the optional delivery reference). Other PDMs may be added as a result of unsuccessful delivery attempts to the user. 
Format:
{PDM:[<time><mor>]}
where <time> and the Message Output Reference <mor> are that of the previous attempt.
Note: For messages recovered after a system failure, the optional fields may not be present.
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>PDM</tag>
					</field>
					<field>
						<name>Message Reference</name>
						<description><![CDATA[The MRF trailer is used to specify the message reference of the original user message in MT 096 FIN Copy to Central Institution Messages.
Format:
{MRF:<date><full-time><mir>}
where <mir> is that of the original user message whose fields are copied in the MT 096 FIN Copy to Central Institution Message.
Note: The MRF is specific to FIN Copy. The MRF trailer is automatically generated in the MT 096 FIN Copy to Central Institution Message and can only be reused in field 109 of the MT 096 FIN Copy to Central Institution Message to identify the MT 096 to which the MT 097 is a response. The format of the MRF is subject to change.
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>MRF</tag>
					</field>
				</fields>
			</Trailer>
		</SwiftFields>
		<validationrules name="Default">
			<hdrvalidationrules>
				<fieldvalidations>
					<fieldvalidation>
						<name>U09</name>
						<formula><![CDATA[if($this.Header.GetFieldIndex("User_Header") != -1) {
    def userHeader = $this.Header.GetSection("User_Header");
    if(userHeader.$size > 0 && userHeader[0].IsNotNull("Validation_Flag")) {
        return false;
    }
}
return true;
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U09</error-code>
						<actionmessage><![CDATA["User has used tag 119 in a message that is not a candidate for special processing"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>U03</name>
						<fieldname>User Header</fieldname>
						<formula><![CDATA[Iff(IsNotNull(User_Header.Service_Type_Identifier), 
    IsNotNull(User_Header.Unique_End_To_End_Transaction_Reference))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U03</error-code>
						<actionmessage><![CDATA["When populating an end-to-end reference, both fields 111 and 121 must be populated: a message that contains only one of these two fields will not be accepted by FIN."]]></actionmessage>
					</fieldvalidation>
				</fieldvalidations>
			</hdrvalidationrules>
			<datavalidationrules>
				<fieldvalidations>
					<fieldvalidation>
						<name>F11a</name>
						<fieldname>11a.MT_Number</fieldname>
						<formula><![CDATA[Between($value, 100, 999)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T18</error-code>
						<actionmessage><![CDATA["In field 11a, the subfield MT Number must be a number in the range 100 - 999."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>C1</name>
						<formula><![CDATA[If(F79.$size > 0, IsNull(Copy_Of_Fields), true)]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>C31</error-code>
						<actionmessage><![CDATA["Either field 79 or a 'Copy of at least the mandatory fields of the message to which the answer relates', but not both, may be present in the message."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>FCP</name>
						<fieldname>Copy Of Fields</fieldname>
						<formula><![CDATA[def ActualValue = replace($value, "\r\n", "\n");
(FindFirst(ActualValue, "\n:77F:") == -1 && 
   FindFirst(ActualValue, "\n:77G:") == -1 && 
   FindFirst(ActualValue, "\n:77S:") == -1 && 
   FindFirst(ActualValue, "\n:77T:") == -1) && 
  (!StartsWith(ActualValue, ":77F:") && 
     !StartsWith(ActualValue, ":77G:") && 
     !StartsWith(ActualValue, ":77S:") && 
     !StartsWith(ActualValue, ":77T:"))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T13</error-code>
						<actionmessage><![CDATA["Tags 77F, 77G, 77S or 77T cannot appear in Copy Of Fields."]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>ERI</name>
						<fieldname>79.Narrative</fieldname>
						<formula><![CDATA[ApplyERICodeValidationUnstructured($value);]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T47</error-code>
						<actionmessage><![CDATA["In an ERI field (i.e. fields 61, 72, 77A, 79, 86) the data part of a code word /OCMT/, or /CHGS/, is being validated, but the ending separator (i.e. third slash) is missing or the code words are duplicated."]]></actionmessage>
					</fieldvalidation>
				</fieldvalidations>
			</datavalidationrules>
			<tlrvalidationrules>
				<fieldvalidations>
				</fieldvalidations>
			</tlrvalidationrules>
		</validationrules>
		<elementproperties>
			<propertymap>
			</propertymap>
		</elementproperties>
	</externalmessage>
	<externalmessage xsi:type="SwiftFormat" type="SwiftFormat" version="5.1.2" rulename="MT298_2016" formattype="SwiftFormat" >
		<description><![CDATA[This message type is used by financial institutions, with their own offices, and/or with other financial institutions with which they have established bilateral agreements.

It is used as an envelope for a specified message included in it.

It allows for the definition of a unique format for which another message type is not available or applicable.

It also allows financial institutions to use message types which are awaiting live implementation on the SWIFT system.]]></description>
		<standard>SWIFT</standard>
		<standard-name>MT298</standard-name>
		<standard-version>SRG 2016</standard-version>
		<standard-release-qualifier>20160308</standard-release-qualifier>
		<standard-category>Financial Institution Transfers</standard-category>
		<standard-detailed-name>Proprietary Message</standard-detailed-name>
		<version>1.0</version>
		<SwiftFields>
			<customizable>true</customizable>
			<modifiable>false</modifiable>
			<SwiftMessageType>User</SwiftMessageType>
			<max-length>10000</max-length>
			<HeaderAndTrailerType>SWIFT_INPUT_OUTPUT_HEADER</HeaderAndTrailerType>
			<Header>
				<fields>
					<field>
						<name>Basic Header</name>
						<description><![CDATA[The Basic Header is given in Block 1 of a SWIFT message and is the only header that appears on all messages. The Basic Header provides the fundamental reference for any particular message and is almost always automatically built by the CBT.
The Basic Header has the same format for both input and output messages. However, the information contained in the Basic Header is relative to the sender when the message is input but relative to the receiver when the same message is output.]]></description>
						<datatype>Section</datatype>
						<required>true</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Application Identifier</name>
								<description><![CDATA[The Application Identifier identifies the application within which the message is being sent or received. The available options are:

F = FIN All user-to-user, FIN system and FIN service messages 
A = GPA Most GPA system and service messages 
L = GPA Certain GPA service messages, for example, LOGIN, LAKs, ABORT 

These values are automatically assigned by the SWIFT system and the user's CBT, but the user should be aware of their existence and significance
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Service Identifier</name>
								<description><![CDATA[The Service Identifier consists of 2 numeric characters. It identifies the type of data that is being sent or received and, in doing so, whether the message which follows is one of the following:

a user-to-user message

a system message

a service message, for example, a session control command, such as SELECT, or a logical acknowledgement, such as ACK/SAK/UAK

Users will be primarily concerned with identifier '01' which applies to all GPA and FIN system and user-to-user messages. Other values include: '21' for message acknowledgements such as ACK/NAK, UAK/UNK, '03' for SELECT commands, and 
so on]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>2</length>
							</field>
							<field>
								<name>LT Identifier</name>
								<description><![CDATA[This 12-character SWIFT address, given in the Basic Header Block, is the address of the sending LT for input messages or of the receiving LT for output messages, and includes the Branch Code.

In the Basic Header, the LT Code within the LT Identifier is specific to the LT that has established the session in which the message is being transmitted, that is the sending LT for input messages or the receiving LT for output messages.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>12</length>
							</field>
							<field>
								<name>Session Number</name>
								<description><![CDATA[The Session Number identifies the session in which the message was transmitted. Within the Basic Header, the 4-digit Session Number is the user's current GPA or FIN Session Number.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Sequence Number</name>
								<description><![CDATA[The sequence number always consists of 6 digits. It is the ISN of the sender's current input session or the OSN of the receiver's current output session.

Note: The sequence number is not present in those messages with an Application Identifier of 'L' (for example LOGIN). The sequence number is, however, a key element in the processing of retrievals. Therefore, LOGINs and attempted LOGINs are not retrievable
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>6</length>
							</field>
						</fields>
					</field>
					<field>
						<name>Application Header Input</name>
						<description><![CDATA[The Application Header of a SWIFT message provides information about the message itself.

The Application Header is given in Block 2 of a SWIFT message. It differs according to whether the message is a GPA or a FIN message and whether the Application Header is part of an input or an output message.

]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Input/Output Identifier</name>
								<description><![CDATA[For an input message, the Input/Output Identifier consists of the single letter 'I'.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Message Type</name>
								<description><![CDATA[The Message Type consists of 3 digits which define the MT number of the message being input. The example used above is for an MT 100 Customer Transfer]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>3</length>
							</field>
							<field>
								<name>Receiver's Address</name>
								<description><![CDATA[This address is the 12-character SWIFT address of the receiver of the message, but with a LT Code of 'X'. It defines the destination to which the message should be sent.

The system will replace the 'X' with a specific LT Code on delivery of the message according to the delivery control exercised by the receiving user.

The Branch Code is mandatory and will be validated. The default of 'XXX' may be used, as in the example above.

Unless otherwise documented, system messages addressed to the SWIFT system itself should be addressed to SWFTXXXXXXXX.

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>12</length>
							</field>
							<field>
								<name>Message Priority</name>
								<description><![CDATA[This character, used within FIN Application Headers only, defines the priority with which a message is delivered. The possible values are:

S = System

U = Urgent

N = Normal

Message Priority 'S' must be used for user-to-system messages; for user-to-user messages either 'U' or 'N' can be used. In the absence of user-specified delivery criteria, system messages are always delivered first, followed by urgent priority messages and then normal priority messages.

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Delivery Monitoring</name>
								<description><![CDATA[Delivery monitoring options apply only to FIN user-to-user messages, and allow the sender of a message to request:

automatic MT 011 Delivery Notification once the message has been delivered

automatic MT 010 Non-Delivery Warning if a message is not delivered within the specified obsolescence period (see below)

both, or neither, options. This may be requested on an individual message basis.

The chosen option is expressed as a single digit:

1 = Non-Delivery Warning

2 = Delivery Notification

3 = Non-Delivery Warning and Delivery Notification. 
If the message has priority 'U' then the user must request delivery monitoring option '1' or '3'. If the message has priority 'N', the user can request delivery monitoring option '2', or, by leaving the option blank, no delivery monitoring.
]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>1</length>
							</field>
							<field>
								<name>Obsolescence Period</name>
								<description><![CDATA[The obsolescence period defines the period of time after which a Delayed Message (DLM) trailer is added to a FIN user-to-user message when the message is delivered. For urgent priority messages, it is also the period of time after which, if the message remains undelivered, a Non-Delivery Warning is generated.

The values for the obsolescence period are 003 (15 minutes) for 'U' priority, and 020 (100 minutes) for 'N' priority. An obsolescence period can only be specified when delivery monitoring has been requested (option 1 or 3 for urgent priority messages, option 2 for normal priority messages). If no delivery monitoring has been requested, and an obsolescence period is specified, the message will be NAKed with error code H25.

GPA input Application Headers are similar to their FIN equivalents except that GPA messages do not specify priority, delivery monitoring, nor obsolescence period.

]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>3</length>
							</field>
						</fields>
					</field>
					<field>
						<name>Application Header Output</name>
						<description><![CDATA[The Application Header of a SWIFT message provides information about the message itself.

The Application Header is given in Block 2 of a SWIFT message. It differs according to whether the message is a GPA or a FIN message and whether the Application Header is part of an input or an output message.

]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Input/Output Identifier</name>
								<description><![CDATA[For an input message, the Input/Output Identifier consists of the single letter 'I'.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Message Type</name>
								<description><![CDATA[Three digits indicating the Message Type.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>3</length>
							</field>
							<field>
								<name>Input Time</name>
								<description><![CDATA[The first occurrence of the time field contains the system time and date. This is the generation time in Greenwich Mean Time (GMT).
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Message Input Reference</name>
								<description><![CDATA[The input MIR.

If the message is generated by the system, the input time is the generation time (in GMT) and the input MIR is the system MIR

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>28</length>
							</field>
							<field>
								<name>Output Date</name>
								<description><![CDATA[The output date, local to the receiver.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>6</length>
							</field>
							<field>
								<name>Output Time</name>
								<description><![CDATA[The second occurrence of the time field contains the output time and date. This is in a time local to the receiver.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Message Priority</name>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
						</fields>
					</field>
					<field>
						<name>User Header</name>
						<description><![CDATA[The User Header is an optional header available within FIN for user-to-user messages only. It appears in Block 3 of a SWIFT message, and allows users to provide their own reference within the headers for a particular message.

A User Header can only be assigned by the sender of a message and, if assigned, will always appear on the output message copy. Relevant parts of the User Header will be repeated in related system messages and acknowledgements.

Block 3 may contain tag 113, defining banking priorities, and tag 108, which is a user reference. The user reference part of the User Header may be used as one of the selection criteria when retrieving a message.

The optional field tags 103 and 115 are also used in Block 3 for the FIN Copy service. The order of tags, when present, is 103, 113, 108 and 115.

An optional field tag 119 can be included in Block 3 of certain messages to specify that different validation rules are to be applied. Agreed code words in field 119 indicate what validation rules SWIFT will apply. If field 119 is present, it should appear after field 108
]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Service Identifier</name>
								<description><![CDATA[For any message which the user submits to a FIN Copy service, Block 3 requires an additional field 103 which contains a three-character Service Identifier unique to a specific FIN Copy service. By using a unique identifier it is possible to support access to multiple services within the same CBT.
]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>3</length>
								<tag>103</tag>
							</field>
							<field>
								<name>Banking Priority</name>
								<description><![CDATA[Assigned by the sender of the message.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>4</length>
								<tag>113</tag>
							</field>
							<field>
								<name>Message User Reference</name>
								<description><![CDATA[Assigned by the sender of the message.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>16</length>
								<tag>108</tag>
							</field>
							<field>
								<name>Validation Flag</name>
								<description><![CDATA[Indicates whether a special validation needs to be performed by FIN. The following are examples of the values this field may take. Please note that this list is subject to change:

ISITC indicates validation of ISITC Standards. Only to be used with MT 521 and MT 523.

REMIT identifies the presence of field 77T. Only to be used in MT 103.

RFDD indicates that the message is a request for direct debit. Only to be used in MT 104.

STP indicates that the message is validated according to straight through processing principles. Only to be used in MT 103.

]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>119</tag>
							</field>
							<field>
								<name>Balance checkpoint date and time</name>
								<description><![CDATA[This field contains the balance checkpoint date and time consisting of a date (YYMMDD) and a time (HHMMSS[ss], where 'ss' indicates hundredths of a second). The MI that is subscribed to MIRS will always copy this reference from field tag 13G of the last MT298/091 that it sent into the related MT 298/093 or MT 097 that it generates. ]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>423</tag>
							</field>
							<field>
								<name>Message Input Reference</name>
								<description><![CDATA[This field contains the MIR of the payment message that is related to the notification messages in which this field is present. The MI that is subscribed to MIRS will copy it from the received payment message. In a FINCopy scenario, this field must contain the MIR of the related MT 096]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>106</tag>
							</field>
							<field>
								<name>Related Reference</name>
								<description><![CDATA[This field contains the reference of the payment that is related to the notification messages in which this field is present. The payment itself was not the result of a FIN message. The value of this field must correspond to the related reference (field 21) in the MT298/093. The format of field 424 is 16x.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>424</tag>
							</field>
							<field>
								<name>Service Type Identifier</name>
								<description><![CDATA[This field identifies the applicable global payment service type. The format of field 111 is 3!n.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>111</tag>
							</field>
							<field>
								<name>Unique End-To-End Transaction Reference</name>
								<description><![CDATA[This field provides an end-to-end reference across a payment transaction. The format of field 121 is 36!x.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>121</tag>
							</field>
							<field>
								<name>Addressee Information</name>
								<description><![CDATA[Tag 115 is only valid for output messages. Information from Central Institution to the receiver of payment message. Information is input in the MT 097 FIN Copy Message Authorisation/Refusal Notification in Y-Copy mode.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>115</tag>
							</field>
							<field>
								<name>Payment Release Information Receiver (FINInform Services)</name>
								<description><![CDATA[Tag 165 is only valid for output messages. This field contains information from the server destination to the receiver of payment message. It is only available for use in FINInform services that operate in Y-copy mode.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>165</tag>
							</field>
							<field>
								<name>Receiver Information</name>
								<description><![CDATA[Tag 433 is only valid for output messages. The screening service inputs information in the MT 097 FINCopy Message Authorisation/Refusal Notification, in Y-Copy mode. FINCopy copies the information to the receiver of the screened message.
				    The following values can be present in this field:
				      AOK: message automatically released by screening service
				      FPO: compliance officer has flagged the screening result as false positive
				      NOK: compliance officer has flagged the screened message as suspect
				    The code word can optionally be followed by additional information (up to 20 characters from the x character set).]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>433</tag>
							</field>
						</fields>
					</field>
				</fields>
			</Header>
			<Data>
				<Fields>
					<SwiftField Name="20">
						<SwiftFieldDef Name="20">
							<Generic>false</Generic>
							<Description><![CDATA[Reference]]></Description>
							<Option Name="">
								<Format><![CDATA[16x]]></Format>
								<Specification><![CDATA[(Reference)]]></Specification>
								<Description><![CDATA[Transaction Reference Number]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options> </Options>
						<Validations>
							<SubField Name="Reference">
								<Validation>
									<Options> </Options>
									<ErrorCode>T26</ErrorCode>
									<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive slashes '//' (Error code(s): T26).]]></Comment>
									<ValidationPattern xsi:type="T26" Type="T26">
										<Type>T26</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="12">
						<SwiftFieldDef Name="12">
							<Generic>false</Generic>
							<Description><![CDATA[Type of Financial Instrument]]></Description>
							<Option Name="">
								<Format><![CDATA[3!n]]></Format>
								<Specification><![CDATA[(MT Number)]]></Specification>
								<Description><![CDATA[Sub-Message Type]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options> </Options>
					</SwiftField>
					<SwiftField Name="77E">
						<SwiftFieldDef Name="77">
							<Generic>false</Generic>
							<Option Name="E">
								<Format><![CDATA[73x[CRLF1000*78x]]]></Format>
								<Specification><![CDATA[(Text1)(Text2)]]></Specification>
								<Description><![CDATA[Proprietary Message]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options>E</Options>
					</SwiftField>
				</Fields>
			</Data>
			<Trailer>
				<fields>
					<field>
						<name>Message Authentication Code</name>
						<description><![CDATA[Allows authentication by the receiving user. It is followed by an authentication result.

This trailer is mandatory for most user-to-user message categories within the FIN application. When the FIN Copy Service is used a PAC trailer, if present, follows the MAC trailer.

Format:

{MAC:<authentication-result>}

where <authentication-result> = 8!h

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>8</length>
						<tag>MAC</tag>
					</field>
					<field>
						<name>Proprietary Authentication Code</name>
						<description><![CDATA[The PAC is used within the FIN Copy service only, when using the double authentication option. The PAC is included in Block 5 of FIN user-to-user messages, immediately after the MAC trailer, if present.

This is calculated on the extracted fields of Block 4 of the message, the value of field 115, if present, and the <authentication-result> of the MAC trailer for Copy Services with double authentication.

Thus, the end-of-block indicator (CrLf-) is included in the PAC calculation, and the fields are defined as follows:

The first three characters are CrLf:

The field and the delimiter are present, that is, 32A:, 20:, and so on.

All subfields and their delimiters are present.

Format:

{PAC:[<authentication-result>]}

where <authentication-result> is mandatory on input messages only and <authentication-result> = 8!h

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>8</length>
						<tag>PAC</tag>
					</field>
					<field>
						<name>Checksum</name>
						<description><![CDATA[The checksum is computed based on the receiver's address (12 characters, with 9th character replaced by X) plus the Text Block. This trailer allows the system and the CBT to check that messages have not been corrupted due to a system malfunction or an undetected transmission error.

Format:

{CHK:<checksum-result>}

where <checksum-result> = 12!h

Note: This trailer is mandatory for FIN and GPA messages (Service Identifier 01).

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>12</length>
						<tag>CHK</tag>
					</field>
					<field>
						<name>System Originated Message</name>
						<description><![CDATA[The system message or service message which is generated by a system PLT has a SYS trailer. All solicited system messages (Service Identifier 01) contain the MIR of the request and may also contain the time.

Format:

{SYS:[<time><mir>]}

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>SYS</tag>
					</field>
					<field>
						<name>Test And Training Message</name>
						<description><![CDATA[Mandatory for FIN and GPA messages (Service Identifier 01) sent by, or delivered to, a Test & Training Logical Terminal (LT). This trailer has a tag only, and no value.

Format:

{TNG:}
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>0</length>
						<tag>TNG</tag>
					</field>
					<field>
						<name>Possible Duplicate Emission</name>
						<description><![CDATA[This trailer is used by the destination of the message. It only applies to FIN user-to-user messages (Service Identifier 01, message categories reserved for banking messages). There can be multiple PDEs. The system does not verify the order nor restrict the number (except for maximum message length).

Correctly formatted PDE trailers applied to user-to-system messages are accepted by the system, but not processed. This means that the system does not check to see if the original message exists. Therefore, a retrieval request sent with a PDE trailer may be processed twice if the original message was received by the system.

Format:

{PDE:[<time><mir>]}

where <time><mir> refers to the emission of the previous possible issue.

Note: It can be added automatically by a CBT or manually by a user. It may be followed by the MIR and the time of its previous possible messages.

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>PDE</tag>
					</field>
					<field>
						<name>Delayed Message</name>
						<description><![CDATA[This trailer is added to all FIN user-to-user output messages that have exceeded their obsolescence period. If this trailer appears in GPA or FIN system messages, it must be ignored. This trailer has a tag only, and no value.

The Obsolescence Period is:

U = 15 minutes

N = 100 minutes

Format:

{DLM:}

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>0</length>
						<tag>DLM</tag>
					</field>
					<field>
						<name>Possible Duplicate Message</name>
						<description><![CDATA[Added by the system to any output message (GPA and FIN Service Identifier 01) being resent because a prior delivery may be invalid. If a system PLT receives a report request with a PDM, the response has a plain PDM (without the optional delivery reference). Other PDMs may be added as a result of unsuccessful delivery attempts to the user. 
Format:
{PDM:[<time><mor>]}
where <time> and the Message Output Reference <mor> are that of the previous attempt.
Note: For messages recovered after a system failure, the optional fields may not be present.
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>PDM</tag>
					</field>
					<field>
						<name>Message Reference</name>
						<description><![CDATA[The MRF trailer is used to specify the message reference of the original user message in MT 096 FIN Copy to Central Institution Messages.
Format:
{MRF:<date><full-time><mir>}
where <mir> is that of the original user message whose fields are copied in the MT 096 FIN Copy to Central Institution Message.
Note: The MRF is specific to FIN Copy. The MRF trailer is automatically generated in the MT 096 FIN Copy to Central Institution Message and can only be reused in field 109 of the MT 096 FIN Copy to Central Institution Message to identify the MT 096 to which the MT 097 is a response. The format of the MRF is subject to change.
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>MRF</tag>
					</field>
				</fields>
			</Trailer>
		</SwiftFields>
		<validationrules name="Default">
			<hdrvalidationrules>
				<fieldvalidations>
					<fieldvalidation>
						<name>U09</name>
						<formula><![CDATA[if($this.Header.GetFieldIndex("User_Header") != -1) {
    def userHeader = $this.Header.GetSection("User_Header");
    if(userHeader.$size > 0 && userHeader[0].IsNotNull("Validation_Flag")) {
        return false;
    }
}
return true;
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U09</error-code>
						<actionmessage><![CDATA["User has used tag 119 in a message that is not a candidate for special processing"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>U03</name>
						<fieldname>User Header</fieldname>
						<formula><![CDATA[Iff(IsNotNull(User_Header.Service_Type_Identifier), 
    IsNotNull(User_Header.Unique_End_To_End_Transaction_Reference))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U03</error-code>
						<actionmessage><![CDATA["When populating an end-to-end reference, both fields 111 and 121 must be populated: a message that contains only one of these two fields will not be accepted by FIN."]]></actionmessage>
					</fieldvalidation>
				</fieldvalidations>
			</hdrvalidationrules>
			<datavalidationrules>
				<fieldvalidations>
					<fieldvalidation>
						<name>F77E-A</name>
						<fieldname>77E</fieldname>
						<formula><![CDATA[def fullText = F77E.Text1 + "\r\n" + Val(F77E.Text2);
def fieldLength = fullText.Length();
return fieldLength <= 9800;]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T33</error-code>
						<actionmessage><![CDATA["The maximum size of this field is limited to 9800 characters."]]></actionmessage>
					</fieldvalidation>
				</fieldvalidations>
			</datavalidationrules>
			<tlrvalidationrules>
				<fieldvalidations>
				</fieldvalidations>
			</tlrvalidationrules>
		</validationrules>
		<elementproperties>
			<propertymap>
			</propertymap>
		</elementproperties>
	</externalmessage>
	<externalmessage xsi:type="SwiftFormat" type="SwiftFormat" version="5.1.2" rulename="MT299_2016" formattype="SwiftFormat" >
		<description><![CDATA[This message type is: 

a) used by financial institutions to send or receive information for which another message type is not applicable. 

b) used between a corporate and its financial institution for which another message type is not applicable. 

The category digit should be chosen so the message will be routed to the unit of the Receiver which is most capable of acting on the information. 

This format does not apply to category 4 and 7. For more details, see the relevant category Message Reference Guide for MT 499 and MT 799. 

]]></description>
		<standard>SWIFT</standard>
		<standard-name>MT299</standard-name>
		<standard-version>SRG 2016</standard-version>
		<standard-release-qualifier>20160308</standard-release-qualifier>
		<standard-category>Financial Institution Transfers</standard-category>
		<standard-detailed-name>Free Format Message</standard-detailed-name>
		<version>1.0</version>
		<SwiftFields>
			<customizable>true</customizable>
			<modifiable>false</modifiable>
			<SwiftMessageType>User</SwiftMessageType>
			<max-length>2000</max-length>
			<HeaderAndTrailerType>SWIFT_INPUT_OUTPUT_HEADER</HeaderAndTrailerType>
			<Header>
				<fields>
					<field>
						<name>Basic Header</name>
						<description><![CDATA[The Basic Header is given in Block 1 of a SWIFT message and is the only header that appears on all messages. The Basic Header provides the fundamental reference for any particular message and is almost always automatically built by the CBT.
The Basic Header has the same format for both input and output messages. However, the information contained in the Basic Header is relative to the sender when the message is input but relative to the receiver when the same message is output.]]></description>
						<datatype>Section</datatype>
						<required>true</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Application Identifier</name>
								<description><![CDATA[The Application Identifier identifies the application within which the message is being sent or received. The available options are:

F = FIN All user-to-user, FIN system and FIN service messages 
A = GPA Most GPA system and service messages 
L = GPA Certain GPA service messages, for example, LOGIN, LAKs, ABORT 

These values are automatically assigned by the SWIFT system and the user's CBT, but the user should be aware of their existence and significance
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Service Identifier</name>
								<description><![CDATA[The Service Identifier consists of 2 numeric characters. It identifies the type of data that is being sent or received and, in doing so, whether the message which follows is one of the following:

a user-to-user message

a system message

a service message, for example, a session control command, such as SELECT, or a logical acknowledgement, such as ACK/SAK/UAK

Users will be primarily concerned with identifier '01' which applies to all GPA and FIN system and user-to-user messages. Other values include: '21' for message acknowledgements such as ACK/NAK, UAK/UNK, '03' for SELECT commands, and 
so on]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>2</length>
							</field>
							<field>
								<name>LT Identifier</name>
								<description><![CDATA[This 12-character SWIFT address, given in the Basic Header Block, is the address of the sending LT for input messages or of the receiving LT for output messages, and includes the Branch Code.

In the Basic Header, the LT Code within the LT Identifier is specific to the LT that has established the session in which the message is being transmitted, that is the sending LT for input messages or the receiving LT for output messages.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>12</length>
							</field>
							<field>
								<name>Session Number</name>
								<description><![CDATA[The Session Number identifies the session in which the message was transmitted. Within the Basic Header, the 4-digit Session Number is the user's current GPA or FIN Session Number.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Sequence Number</name>
								<description><![CDATA[The sequence number always consists of 6 digits. It is the ISN of the sender's current input session or the OSN of the receiver's current output session.

Note: The sequence number is not present in those messages with an Application Identifier of 'L' (for example LOGIN). The sequence number is, however, a key element in the processing of retrievals. Therefore, LOGINs and attempted LOGINs are not retrievable
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>6</length>
							</field>
						</fields>
					</field>
					<field>
						<name>Application Header Input</name>
						<description><![CDATA[The Application Header of a SWIFT message provides information about the message itself.

The Application Header is given in Block 2 of a SWIFT message. It differs according to whether the message is a GPA or a FIN message and whether the Application Header is part of an input or an output message.

]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Input/Output Identifier</name>
								<description><![CDATA[For an input message, the Input/Output Identifier consists of the single letter 'I'.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Message Type</name>
								<description><![CDATA[The Message Type consists of 3 digits which define the MT number of the message being input. The example used above is for an MT 100 Customer Transfer]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>3</length>
							</field>
							<field>
								<name>Receiver's Address</name>
								<description><![CDATA[This address is the 12-character SWIFT address of the receiver of the message, but with a LT Code of 'X'. It defines the destination to which the message should be sent.

The system will replace the 'X' with a specific LT Code on delivery of the message according to the delivery control exercised by the receiving user.

The Branch Code is mandatory and will be validated. The default of 'XXX' may be used, as in the example above.

Unless otherwise documented, system messages addressed to the SWIFT system itself should be addressed to SWFTXXXXXXXX.

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>12</length>
							</field>
							<field>
								<name>Message Priority</name>
								<description><![CDATA[This character, used within FIN Application Headers only, defines the priority with which a message is delivered. The possible values are:

S = System

U = Urgent

N = Normal

Message Priority 'S' must be used for user-to-system messages; for user-to-user messages either 'U' or 'N' can be used. In the absence of user-specified delivery criteria, system messages are always delivered first, followed by urgent priority messages and then normal priority messages.

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Delivery Monitoring</name>
								<description><![CDATA[Delivery monitoring options apply only to FIN user-to-user messages, and allow the sender of a message to request:

automatic MT 011 Delivery Notification once the message has been delivered

automatic MT 010 Non-Delivery Warning if a message is not delivered within the specified obsolescence period (see below)

both, or neither, options. This may be requested on an individual message basis.

The chosen option is expressed as a single digit:

1 = Non-Delivery Warning

2 = Delivery Notification

3 = Non-Delivery Warning and Delivery Notification. 
If the message has priority 'U' then the user must request delivery monitoring option '1' or '3'. If the message has priority 'N', the user can request delivery monitoring option '2', or, by leaving the option blank, no delivery monitoring.
]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>1</length>
							</field>
							<field>
								<name>Obsolescence Period</name>
								<description><![CDATA[The obsolescence period defines the period of time after which a Delayed Message (DLM) trailer is added to a FIN user-to-user message when the message is delivered. For urgent priority messages, it is also the period of time after which, if the message remains undelivered, a Non-Delivery Warning is generated.

The values for the obsolescence period are 003 (15 minutes) for 'U' priority, and 020 (100 minutes) for 'N' priority. An obsolescence period can only be specified when delivery monitoring has been requested (option 1 or 3 for urgent priority messages, option 2 for normal priority messages). If no delivery monitoring has been requested, and an obsolescence period is specified, the message will be NAKed with error code H25.

GPA input Application Headers are similar to their FIN equivalents except that GPA messages do not specify priority, delivery monitoring, nor obsolescence period.

]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>3</length>
							</field>
						</fields>
					</field>
					<field>
						<name>Application Header Output</name>
						<description><![CDATA[The Application Header of a SWIFT message provides information about the message itself.

The Application Header is given in Block 2 of a SWIFT message. It differs according to whether the message is a GPA or a FIN message and whether the Application Header is part of an input or an output message.

]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Input/Output Identifier</name>
								<description><![CDATA[For an input message, the Input/Output Identifier consists of the single letter 'I'.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
							<field>
								<name>Message Type</name>
								<description><![CDATA[Three digits indicating the Message Type.]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>3</length>
							</field>
							<field>
								<name>Input Time</name>
								<description><![CDATA[The first occurrence of the time field contains the system time and date. This is the generation time in Greenwich Mean Time (GMT).
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Message Input Reference</name>
								<description><![CDATA[The input MIR.

If the message is generated by the system, the input time is the generation time (in GMT) and the input MIR is the system MIR

]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>28</length>
							</field>
							<field>
								<name>Output Date</name>
								<description><![CDATA[The output date, local to the receiver.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>6</length>
							</field>
							<field>
								<name>Output Time</name>
								<description><![CDATA[The second occurrence of the time field contains the output time and date. This is in a time local to the receiver.
]]></description>
								<datatype>String</datatype>
								<required>true</required>
								<length>4</length>
							</field>
							<field>
								<name>Message Priority</name>
								<datatype>String</datatype>
								<required>true</required>
								<length>1</length>
							</field>
						</fields>
					</field>
					<field>
						<name>User Header</name>
						<description><![CDATA[The User Header is an optional header available within FIN for user-to-user messages only. It appears in Block 3 of a SWIFT message, and allows users to provide their own reference within the headers for a particular message.

A User Header can only be assigned by the sender of a message and, if assigned, will always appear on the output message copy. Relevant parts of the User Header will be repeated in related system messages and acknowledgements.

Block 3 may contain tag 113, defining banking priorities, and tag 108, which is a user reference. The user reference part of the User Header may be used as one of the selection criteria when retrieving a message.

The optional field tags 103 and 115 are also used in Block 3 for the FIN Copy service. The order of tags, when present, is 103, 113, 108 and 115.

An optional field tag 119 can be included in Block 3 of certain messages to specify that different validation rules are to be applied. Agreed code words in field 119 indicate what validation rules SWIFT will apply. If field 119 is present, it should appear after field 108
]]></description>
						<datatype>Section</datatype>
						<required>false</required>
						<repeating>false</repeating>
						<fields>
							<field>
								<name>Service Identifier</name>
								<description><![CDATA[For any message which the user submits to a FIN Copy service, Block 3 requires an additional field 103 which contains a three-character Service Identifier unique to a specific FIN Copy service. By using a unique identifier it is possible to support access to multiple services within the same CBT.
]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>3</length>
								<tag>103</tag>
							</field>
							<field>
								<name>Banking Priority</name>
								<description><![CDATA[Assigned by the sender of the message.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>4</length>
								<tag>113</tag>
							</field>
							<field>
								<name>Message User Reference</name>
								<description><![CDATA[Assigned by the sender of the message.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>16</length>
								<tag>108</tag>
							</field>
							<field>
								<name>Validation Flag</name>
								<description><![CDATA[Indicates whether a special validation needs to be performed by FIN. The following are examples of the values this field may take. Please note that this list is subject to change:

ISITC indicates validation of ISITC Standards. Only to be used with MT 521 and MT 523.

REMIT identifies the presence of field 77T. Only to be used in MT 103.

RFDD indicates that the message is a request for direct debit. Only to be used in MT 104.

STP indicates that the message is validated according to straight through processing principles. Only to be used in MT 103.

]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>119</tag>
							</field>
							<field>
								<name>Balance checkpoint date and time</name>
								<description><![CDATA[This field contains the balance checkpoint date and time consisting of a date (YYMMDD) and a time (HHMMSS[ss], where 'ss' indicates hundredths of a second). The MI that is subscribed to MIRS will always copy this reference from field tag 13G of the last MT298/091 that it sent into the related MT 298/093 or MT 097 that it generates. ]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>423</tag>
							</field>
							<field>
								<name>Message Input Reference</name>
								<description><![CDATA[This field contains the MIR of the payment message that is related to the notification messages in which this field is present. The MI that is subscribed to MIRS will copy it from the received payment message. In a FINCopy scenario, this field must contain the MIR of the related MT 096]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>106</tag>
							</field>
							<field>
								<name>Related Reference</name>
								<description><![CDATA[This field contains the reference of the payment that is related to the notification messages in which this field is present. The payment itself was not the result of a FIN message. The value of this field must correspond to the related reference (field 21) in the MT298/093. The format of field 424 is 16x.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>424</tag>
							</field>
							<field>
								<name>Service Type Identifier</name>
								<description><![CDATA[This field identifies the applicable global payment service type. The format of field 111 is 3!n.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>111</tag>
							</field>
							<field>
								<name>Unique End-To-End Transaction Reference</name>
								<description><![CDATA[This field provides an end-to-end reference across a payment transaction. The format of field 121 is 36!x.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>121</tag>
							</field>
							<field>
								<name>Addressee Information</name>
								<description><![CDATA[Tag 115 is only valid for output messages. Information from Central Institution to the receiver of payment message. Information is input in the MT 097 FIN Copy Message Authorisation/Refusal Notification in Y-Copy mode.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>115</tag>
							</field>
							<field>
								<name>Payment Release Information Receiver (FINInform Services)</name>
								<description><![CDATA[Tag 165 is only valid for output messages. This field contains information from the server destination to the receiver of payment message. It is only available for use in FINInform services that operate in Y-copy mode.]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>165</tag>
							</field>
							<field>
								<name>Receiver Information</name>
								<description><![CDATA[Tag 433 is only valid for output messages. The screening service inputs information in the MT 097 FINCopy Message Authorisation/Refusal Notification, in Y-Copy mode. FINCopy copies the information to the receiver of the screened message.
				    The following values can be present in this field:
				      AOK: message automatically released by screening service
				      FPO: compliance officer has flagged the screening result as false positive
				      NOK: compliance officer has flagged the screened message as suspect
				    The code word can optionally be followed by additional information (up to 20 characters from the x character set).]]></description>
								<datatype>String</datatype>
								<required>false</required>
								<length>-1</length>
								<tag>433</tag>
							</field>
						</fields>
					</field>
				</fields>
			</Header>
			<Data>
				<Fields>
					<SwiftField Name="20">
						<SwiftFieldDef Name="20">
							<Generic>false</Generic>
							<Description><![CDATA[Reference]]></Description>
							<Option Name="">
								<Format><![CDATA[16x]]></Format>
								<Specification><![CDATA[(Reference)]]></Specification>
								<Description><![CDATA[Transaction Reference Number]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options> </Options>
						<Validations>
							<SubField Name="Reference">
								<Validation>
									<Options> </Options>
									<ErrorCode>T26</ErrorCode>
									<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive slashes '//' (Error code(s): T26).]]></Comment>
									<ValidationPattern xsi:type="T26" Type="T26">
										<Type>T26</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="21">
						<SwiftFieldDef Name="21">
							<Generic>false</Generic>
							<Option Name="">
								<Format><![CDATA[16x]]></Format>
								<Specification><![CDATA[(Reference)]]></Specification>
								<Description><![CDATA[Related Reference]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>O</Presence>
						<Options> </Options>
						<Validations>
							<SubField Name="Reference">
								<Validation>
									<Options> </Options>
									<ErrorCode>T26</ErrorCode>
									<Comment><![CDATA[This field must not start or end with a slash '/' and must not contain two consecutive slashes '//' (Error code(s): T26).]]></Comment>
									<ValidationPattern xsi:type="T26" Type="T26">
										<Type>T26</Type>
									</ValidationPattern>
								</Validation>
							</SubField>
						</Validations>
					</SwiftField>
					<SwiftField Name="79">
						<SwiftFieldDef Name="79">
							<Generic>false</Generic>
							<Option Name="">
								<Format><![CDATA[35*50x]]></Format>
								<Specification><![CDATA[(Narrative)]]></Specification>
								<Description><![CDATA[Narrative]]></Description>
							</Option>
						</SwiftFieldDef>
						<Repeating>false</Repeating>
						<Presence>M</Presence>
						<Options> </Options>
					</SwiftField>
				</Fields>
			</Data>
			<Trailer>
				<fields>
					<field>
						<name>Message Authentication Code</name>
						<description><![CDATA[Allows authentication by the receiving user. It is followed by an authentication result.

This trailer is mandatory for most user-to-user message categories within the FIN application. When the FIN Copy Service is used a PAC trailer, if present, follows the MAC trailer.

Format:

{MAC:<authentication-result>}

where <authentication-result> = 8!h

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>8</length>
						<tag>MAC</tag>
					</field>
					<field>
						<name>Proprietary Authentication Code</name>
						<description><![CDATA[The PAC is used within the FIN Copy service only, when using the double authentication option. The PAC is included in Block 5 of FIN user-to-user messages, immediately after the MAC trailer, if present.

This is calculated on the extracted fields of Block 4 of the message, the value of field 115, if present, and the <authentication-result> of the MAC trailer for Copy Services with double authentication.

Thus, the end-of-block indicator (CrLf-) is included in the PAC calculation, and the fields are defined as follows:

The first three characters are CrLf:

The field and the delimiter are present, that is, 32A:, 20:, and so on.

All subfields and their delimiters are present.

Format:

{PAC:[<authentication-result>]}

where <authentication-result> is mandatory on input messages only and <authentication-result> = 8!h

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>8</length>
						<tag>PAC</tag>
					</field>
					<field>
						<name>Checksum</name>
						<description><![CDATA[The checksum is computed based on the receiver's address (12 characters, with 9th character replaced by X) plus the Text Block. This trailer allows the system and the CBT to check that messages have not been corrupted due to a system malfunction or an undetected transmission error.

Format:

{CHK:<checksum-result>}

where <checksum-result> = 12!h

Note: This trailer is mandatory for FIN and GPA messages (Service Identifier 01).

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>12</length>
						<tag>CHK</tag>
					</field>
					<field>
						<name>System Originated Message</name>
						<description><![CDATA[The system message or service message which is generated by a system PLT has a SYS trailer. All solicited system messages (Service Identifier 01) contain the MIR of the request and may also contain the time.

Format:

{SYS:[<time><mir>]}

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>SYS</tag>
					</field>
					<field>
						<name>Test And Training Message</name>
						<description><![CDATA[Mandatory for FIN and GPA messages (Service Identifier 01) sent by, or delivered to, a Test & Training Logical Terminal (LT). This trailer has a tag only, and no value.

Format:

{TNG:}
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>0</length>
						<tag>TNG</tag>
					</field>
					<field>
						<name>Possible Duplicate Emission</name>
						<description><![CDATA[This trailer is used by the destination of the message. It only applies to FIN user-to-user messages (Service Identifier 01, message categories reserved for banking messages). There can be multiple PDEs. The system does not verify the order nor restrict the number (except for maximum message length).

Correctly formatted PDE trailers applied to user-to-system messages are accepted by the system, but not processed. This means that the system does not check to see if the original message exists. Therefore, a retrieval request sent with a PDE trailer may be processed twice if the original message was received by the system.

Format:

{PDE:[<time><mir>]}

where <time><mir> refers to the emission of the previous possible issue.

Note: It can be added automatically by a CBT or manually by a user. It may be followed by the MIR and the time of its previous possible messages.

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>PDE</tag>
					</field>
					<field>
						<name>Delayed Message</name>
						<description><![CDATA[This trailer is added to all FIN user-to-user output messages that have exceeded their obsolescence period. If this trailer appears in GPA or FIN system messages, it must be ignored. This trailer has a tag only, and no value.

The Obsolescence Period is:

U = 15 minutes

N = 100 minutes

Format:

{DLM:}

]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>0</length>
						<tag>DLM</tag>
					</field>
					<field>
						<name>Possible Duplicate Message</name>
						<description><![CDATA[Added by the system to any output message (GPA and FIN Service Identifier 01) being resent because a prior delivery may be invalid. If a system PLT receives a report request with a PDM, the response has a plain PDM (without the optional delivery reference). Other PDMs may be added as a result of unsuccessful delivery attempts to the user. 
Format:
{PDM:[<time><mor>]}
where <time> and the Message Output Reference <mor> are that of the previous attempt.
Note: For messages recovered after a system failure, the optional fields may not be present.
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>PDM</tag>
					</field>
					<field>
						<name>Message Reference</name>
						<description><![CDATA[The MRF trailer is used to specify the message reference of the original user message in MT 096 FIN Copy to Central Institution Messages.
Format:
{MRF:<date><full-time><mir>}
where <mir> is that of the original user message whose fields are copied in the MT 096 FIN Copy to Central Institution Message.
Note: The MRF is specific to FIN Copy. The MRF trailer is automatically generated in the MT 096 FIN Copy to Central Institution Message and can only be reused in field 109 of the MT 096 FIN Copy to Central Institution Message to identify the MT 096 to which the MT 097 is a response. The format of the MRF is subject to change.
]]></description>
						<datatype>String</datatype>
						<required>false</required>
						<length>-1</length>
						<tag>MRF</tag>
					</field>
				</fields>
			</Trailer>
		</SwiftFields>
		<validationrules name="Default">
			<hdrvalidationrules>
				<fieldvalidations>
					<fieldvalidation>
						<name>U09</name>
						<formula><![CDATA[if($this.Header.GetFieldIndex("User_Header") != -1) {
    def userHeader = $this.Header.GetSection("User_Header");
    if(userHeader.$size > 0 && userHeader[0].IsNotNull("Validation_Flag")) {
        return false;
    }
}
return true;
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U09</error-code>
						<actionmessage><![CDATA["User has used tag 119 in a message that is not a candidate for special processing"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>U03</name>
						<fieldname>User Header</fieldname>
						<formula><![CDATA[Iff(IsNotNull(User_Header.Service_Type_Identifier), 
    IsNotNull(User_Header.Unique_End_To_End_Transaction_Reference))]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>U03</error-code>
						<actionmessage><![CDATA["When populating an end-to-end reference, both fields 111 and 121 must be populated: a message that contains only one of these two fields will not be accepted by FIN."]]></actionmessage>
					</fieldvalidation>
				</fieldvalidations>
			</hdrvalidationrules>
			<datavalidationrules>
				<fieldvalidations>
					<fieldvalidation>
						<name>F-79</name>
						<fieldname>79.Narrative</fieldname>
						<formula><![CDATA[def Actualvalue = replace($value, "\r\n", "\n");
def lines = Split("\n", Actualvalue);
def str = Left(Actualvalue, 6);
def line1format = false;
def line3format = false;
def TREFformat = true;
def CHGSformat = true;
def TEXTformat = true;
def format = true;
def count = 0;
def TREFcount = 0;
def CHGScount = 0;
def TEXTcount = 0;
def i = lines.Length();
if(In(str, "/REJT/", "/RETN/")) {
        if(i <= 35) {
        //if '/REJT/' or '/RETN/' format of 1st line must be "6!x2!n[1a]['/'2c]" & format of 2nd line must be "('/'2!c 2!n'/')[44x]" or "('/X'1c2!n'/')[44x]"
            //if format of 2nd line is "('/'2!c 2!n'/')" then the 6 characters must be one of the codes given below
            line1format = (VerifyFormat(lines[0], "6!x2!n[1a]['/'2c]"));
            if(line1format && lines.Length() > 2) {
            if(!lines[1].StartsWith("/X")) {
                if(VerifyFormat(lines[1], "('/'2!c 2!n'/')[44x]")) {
                    def startStr = lines[1].Left(6);
                    if((!In(startStr, "/AC01/", "/AC02/", "/AC03/", "/AC04/", "/AC05/", "/AC06/", 
                            "/AM01/", "/AM02/", "/AM03/", "/AM04/", "/AM05/", "/AM06/", "/AM07/", 
                            "/AM08/", "/AG01/", "/AG02/", "/BE01/", "/BE02/", "/BE03/", "/BE04/", 
                            "/BE05/", "/DT01/", "/MS01/", "/PY01/", "/RC01/", "/RC02/", "/RC03/", 
                            "/RC04/", "/RF01/", "/TM01/", "/RR01/", "/RR02/", "/RR03/")))
                        return false;
                }
                else
                        return false;
                }
            else if(lines[1].StartsWith("/X") && !VerifyFormat(lines[1], "('/X'1c2!n'/')[44x]"))
                    return false;
            }
            else
                return false;
            //Line3 is mandatory and should have the format "/MREF/16x". Lines 4, 5 and 6 are optional
            //If lines 4, 5 or 6 or any combination exists and if the first 6 characters starts with either '/TREF/' or '/CHGS/' or '/TEXT/' or '//'
            //it should satisfy the format given. Also if line starts with '//' it can appear a max of 31 times
            line3format = Equal(Left(lines[2], 6), "/MREF/") && 
                            VerifyFormat(Substring(lines[2], 6), "16x");
            if(line3format) {
                while(i > 3) {
                    def str1 = Left(lines[i - 1], 6);
                    def str2 = Substring(lines[i - 1], 6);
                if(In(str1, "/TREF/", "/CHGS/", "/TEXT/") || StartsWith(lines[i - 1], "//")) {
                        if(str1 == "/TREF/") {
                            TREFformat = VerifyFormat(str2, "16x");
                            TREFcount += 1;
                        }
                        else if(str1 == "/CHGS/") {
                            CHGSformat = (VerifyFormat(str2, "3!a15d") && 
                                        IsISOCurrencyCode(Substring(lines[i - 1], 6, 3)));
                            CHGScount += 1;
                        }
                        else if(str1 == "/TEXT/") {
                            TEXTformat = (VerifyFormat(str2, "44x"));
                            TEXTcount += 1;
                        }
                        else if(StartsWith(lines[i - 1], "//")) {
                            def str3 = Substring(lines[i - 1], 2);
                            format = (VerifyFormat(str3, "48x"));
                            count += 1;
                            if(!format || count > 31)
                                break;
                        }
                    }
                    else
                        return false;
                    i = i - 1;
                }
            }
            else
                return false;
        if(!TREFformat || !CHGSformat || !TEXTformat || !format || count > 31 || TREFcount > 1 || 
             CHGScount > 1 || TEXTcount > 1)
                return false;
        }
        else
            return false;
}
return true;
]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T80</error-code>
						<actionmessage><![CDATA["Field 79 Reject/Return: code word error, or mandatory code word missing, or code word not in the proper sequence or format 35*50 not satisfied"]]></actionmessage>
					</fieldvalidation>
					<fieldvalidation>
						<name>ERI</name>
						<fieldname>79.Narrative</fieldname>
						<formula><![CDATA[ApplyERICodeValidationUnstructured($value);]]></formula>
						<severity>error</severity>
						<cascade>true</cascade>
						<error-code>T47</error-code>
						<actionmessage><![CDATA["In an ERI field (i.e. fields 61, 72, 77A, 79, 86) the data part of a code word /OCMT/, or /CHGS/, is being validated, but the ending separator (i.e. third slash) is missing or the code words are duplicated."]]></actionmessage>
					</fieldvalidation>
				</fieldvalidations>
			</datavalidationrules>
			<tlrvalidationrules>
				<fieldvalidations>
				</fieldvalidations>
			</tlrvalidationrules>
		</validationrules>
		<elementproperties>
			<propertymap>
			</propertymap>
		</elementproperties>
	</externalmessage>
	<elementproperties>
		<propertymap>
			<property name="DOCUMENT_PROPERTIES">
				<value>
					<propertymap>
						<property name="Creation Time" value="Tue Jul 12 17:49:04 IST 2016"/>
						<property name="Author" value="xbbkn0m"/>
						<property name="Title" value="MT1-2_2016"/>
						<property name="Client Id" value="amrkumar@inautix.co.in"/>
						<property name="Last Author" value="xbbkn0m"/>
						<property name="Last Save Time" value="Wed Jul 13 15:09:31 IST 2016"/>
						<property name="Designer Build" value="1612"/>
						<property name="Revision Number" value="19"/>
					</propertymap>
				</value>
			</property>
			<property name="CARTRIDGE_INFO">
				<value>
					<propertymap type="com.tplus.transform.design.CartridgeInfo">
						<property name="GeneratedFiles">
							<value>
								<propertymap>
									<property name="Java/EJB">
										<value>
											<propertymap>
												<property name="assembly">
													<value>
														<propertylist>
															<value>
																<propertymap type="com.tplus.transform.design.AssemblyInfo">
																	<property name="groupId" value="com.volantetech.volante.cartridge"/>
																	<property name="name" value="C:\Harvest-Checkout\SR2016 with Volante 5.1.2 fix\FMTSwiftEdit\volante\MT1-2_2016\java\MT1-2_2016.jar"/>
																	<property name="artifactId" value="cartridge-MT1-2_2016"/>
																	<property name="type" value="assembly"/>
																	<property name="version" value="1.0"/>
																</propertymap>
															</value>
														</propertylist>
													</value>
												</property>
												<property name="DEPENDENCY">
													<value>
														<propertylist>
															<value>
																<propertymap type="com.tplus.transform.design.ModuleInfo">
																	<property name="groupId" value="com.volantetech.volante"/>
																	<property name="name" value="C:\Volante 5.1.2\Volante\lib\runtime\swiftresources.jar"/>
																	<property name="artifactId" value="volante-swift-resources"/>
																	<property name="type" value="DEPENDENCY"/>
																	<property name="version" value="5.1.2"/>
																</propertymap>
															</value>
															<value>
																<propertymap type="com.tplus.transform.design.ModuleInfo">
																	<property name="groupId" value="com.volantetech.volante"/>
																	<property name="name" value="C:\Volante 5.1.2\Volante\lib\runtime\transformrt.jar"/>
																	<property name="artifactId" value="volante-core"/>
																	<property name="type" value="DEPENDENCY"/>
																	<property name="version" value="5.1.2"/>
																</propertymap>
															</value>
															<value>
																<propertymap type="com.tplus.transform.design.ModuleInfo">
																	<property name="groupId" value="com.volantetech.volante"/>
																	<property name="name" value="C:\Volante 5.1.2\Volante\lib\runtime\swiftrt.jar"/>
																	<property name="artifactId" value="volante-swift"/>
																	<property name="type" value="DEPENDENCY"/>
																	<property name="version" value="5.1.2"/>
																</propertymap>
															</value>
															<value>
																<propertymap type="com.tplus.transform.design.ModuleInfo">
																	<property name="groupId" value="com.volantetech.volante"/>
																	<property name="name" value="C:\Volante 5.1.2\Volante\lib\runtime\generalutils.jar"/>
																	<property name="artifactId" value="volante-utils"/>
																	<property name="type" value="DEPENDENCY"/>
																	<property name="version" value="5.1.2"/>
																</propertymap>
															</value>
														</propertylist>
													</value>
												</property>
											</propertymap>
										</value>
									</property>
								</propertymap>
							</value>
						</property>
						<property name="cartridgefilename" value="C:\Harvest-Checkout\SR2016 with Volante 5.1.2 fix\FMTSwiftEdit\volante\MT1-2_2016\MT1-2_2016.car"/>
					</propertymap>
				</value>
			</property>
			<property name="codegen.java.options">
				<value>
					<propertymap type="com.tplus.transform.design.codegen.java.JavaCodeGeneratorOptions">
						<property name="isJBoss" value="true"/>
						<property name="resource-references">
							<value>
								<propertylist>
								</propertylist>
							</value>
						</property>
						<property name="isWAR" value="false"/>
						<property name="isOSGI" value="true"/>
						<property name="isGenerateALSB" value="false"/>
						<property name="isEJB" value="true"/>
						<property name="osgi-options">
							<value>
								<propertymap>
									<property name="include-dependencies" value="false"/>
								</propertymap>
							</value>
						</property>
						<property name="isOrion" value="true"/>
						<property name="isWebSphere" value="true"/>
						<property name="isVolante" value="true"/>
						<property name="isRemote" value="true"/>
						<property name="isLocal" value="true"/>
						<property name="isWebLogic" value="true"/>
						<property name="isGeronimo" value="true"/>
						<property name="isGenerateJNDILinks" value="true"/>
						<property name="isWLEVS" value="false"/>
						<property name="isGenerateEAR" value="false"/>
					</propertymap>
				</value>
			</property>
			<property name="codegen.java.properties">
				<value>
					<propertymap type="com.tplus.transform.design.PropertiesDef">
						<property name="Java Package Name" value="com.transform.cartridge.%c"/>
						<property name="Max Class Length" value="150"/>
					</propertymap>
				</value>
			</property>
			<property name="codegen.java.bindings">
				<value>
					<propertymap type="com.tplus.transform.design.codegen.DefaultLanguageMapping">
					</propertymap>
				</value>
			</property>
			<property name="codegen.java.general">
				<value>
					<propertymap>
					</propertymap>
				</value>
			</property>
		</propertymap>
	</elementproperties>
	<workspace>
		<selected-element root="C:\Harvest-Checkout\SR2016 with Volante 5.1.2 fix\FMTSwiftEdit\volante\MT1-2_2016\MT1-2_2016.car">MT1-2_2016/MT299_2016</selected-element>
	</workspace>
</cartridge>

